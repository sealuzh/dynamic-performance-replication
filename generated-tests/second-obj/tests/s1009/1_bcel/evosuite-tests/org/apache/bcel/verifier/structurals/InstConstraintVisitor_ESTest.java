/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 22:19:22 GMT 2018
 */

package org.apache.bcel.verifier.structurals;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.lang.reflect.Array;
import java.lang.reflect.Member;
import java.util.regex.Pattern;
import org.apache.bcel.Constants;
import org.apache.bcel.classfile.Constant;
import org.apache.bcel.classfile.ConstantClass;
import org.apache.bcel.classfile.ConstantDouble;
import org.apache.bcel.classfile.ConstantFloat;
import org.apache.bcel.classfile.ConstantInteger;
import org.apache.bcel.classfile.ConstantInterfaceMethodref;
import org.apache.bcel.classfile.ConstantLong;
import org.apache.bcel.classfile.ConstantNameAndType;
import org.apache.bcel.classfile.ConstantPool;
import org.apache.bcel.classfile.ConstantString;
import org.apache.bcel.generic.AALOAD;
import org.apache.bcel.generic.AASTORE;
import org.apache.bcel.generic.ACONST_NULL;
import org.apache.bcel.generic.ALOAD;
import org.apache.bcel.generic.ANEWARRAY;
import org.apache.bcel.generic.ARETURN;
import org.apache.bcel.generic.ARRAYLENGTH;
import org.apache.bcel.generic.ASTORE;
import org.apache.bcel.generic.ATHROW;
import org.apache.bcel.generic.BALOAD;
import org.apache.bcel.generic.BASTORE;
import org.apache.bcel.generic.BIPUSH;
import org.apache.bcel.generic.BREAKPOINT;
import org.apache.bcel.generic.BasicType;
import org.apache.bcel.generic.CALOAD;
import org.apache.bcel.generic.CASTORE;
import org.apache.bcel.generic.CHECKCAST;
import org.apache.bcel.generic.CompoundInstruction;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.D2F;
import org.apache.bcel.generic.D2I;
import org.apache.bcel.generic.D2L;
import org.apache.bcel.generic.DADD;
import org.apache.bcel.generic.DALOAD;
import org.apache.bcel.generic.DASTORE;
import org.apache.bcel.generic.DCMPG;
import org.apache.bcel.generic.DCMPL;
import org.apache.bcel.generic.DCONST;
import org.apache.bcel.generic.DDIV;
import org.apache.bcel.generic.DLOAD;
import org.apache.bcel.generic.DMUL;
import org.apache.bcel.generic.DNEG;
import org.apache.bcel.generic.DREM;
import org.apache.bcel.generic.DRETURN;
import org.apache.bcel.generic.DSTORE;
import org.apache.bcel.generic.DSUB;
import org.apache.bcel.generic.DUP;
import org.apache.bcel.generic.DUP2;
import org.apache.bcel.generic.DUP2_X1;
import org.apache.bcel.generic.DUP2_X2;
import org.apache.bcel.generic.DUP_X1;
import org.apache.bcel.generic.DUP_X2;
import org.apache.bcel.generic.F2D;
import org.apache.bcel.generic.F2I;
import org.apache.bcel.generic.F2L;
import org.apache.bcel.generic.FADD;
import org.apache.bcel.generic.FALOAD;
import org.apache.bcel.generic.FASTORE;
import org.apache.bcel.generic.FCMPG;
import org.apache.bcel.generic.FCMPL;
import org.apache.bcel.generic.FCONST;
import org.apache.bcel.generic.FDIV;
import org.apache.bcel.generic.FLOAD;
import org.apache.bcel.generic.FMUL;
import org.apache.bcel.generic.FNEG;
import org.apache.bcel.generic.FREM;
import org.apache.bcel.generic.FRETURN;
import org.apache.bcel.generic.FSTORE;
import org.apache.bcel.generic.FSUB;
import org.apache.bcel.generic.GETFIELD;
import org.apache.bcel.generic.GETSTATIC;
import org.apache.bcel.generic.GOTO;
import org.apache.bcel.generic.GOTO_W;
import org.apache.bcel.generic.I2B;
import org.apache.bcel.generic.I2C;
import org.apache.bcel.generic.I2D;
import org.apache.bcel.generic.I2F;
import org.apache.bcel.generic.I2L;
import org.apache.bcel.generic.I2S;
import org.apache.bcel.generic.IADD;
import org.apache.bcel.generic.IAND;
import org.apache.bcel.generic.IASTORE;
import org.apache.bcel.generic.ICONST;
import org.apache.bcel.generic.IDIV;
import org.apache.bcel.generic.IFEQ;
import org.apache.bcel.generic.IFGE;
import org.apache.bcel.generic.IFGT;
import org.apache.bcel.generic.IFLE;
import org.apache.bcel.generic.IFLT;
import org.apache.bcel.generic.IFNE;
import org.apache.bcel.generic.IFNONNULL;
import org.apache.bcel.generic.IFNULL;
import org.apache.bcel.generic.IF_ACMPEQ;
import org.apache.bcel.generic.IF_ACMPNE;
import org.apache.bcel.generic.IF_ICMPEQ;
import org.apache.bcel.generic.IF_ICMPGE;
import org.apache.bcel.generic.IF_ICMPGT;
import org.apache.bcel.generic.IF_ICMPLE;
import org.apache.bcel.generic.IF_ICMPLT;
import org.apache.bcel.generic.IF_ICMPNE;
import org.apache.bcel.generic.IINC;
import org.apache.bcel.generic.ILOAD;
import org.apache.bcel.generic.IMPDEP1;
import org.apache.bcel.generic.IMPDEP2;
import org.apache.bcel.generic.IMUL;
import org.apache.bcel.generic.INEG;
import org.apache.bcel.generic.INSTANCEOF;
import org.apache.bcel.generic.INVOKEDYNAMIC;
import org.apache.bcel.generic.INVOKEINTERFACE;
import org.apache.bcel.generic.INVOKESPECIAL;
import org.apache.bcel.generic.INVOKESTATIC;
import org.apache.bcel.generic.INVOKEVIRTUAL;
import org.apache.bcel.generic.IOR;
import org.apache.bcel.generic.IREM;
import org.apache.bcel.generic.IRETURN;
import org.apache.bcel.generic.ISHL;
import org.apache.bcel.generic.ISHR;
import org.apache.bcel.generic.ISTORE;
import org.apache.bcel.generic.ISUB;
import org.apache.bcel.generic.IUSHR;
import org.apache.bcel.generic.IXOR;
import org.apache.bcel.generic.Instruction;
import org.apache.bcel.generic.InstructionConstants;
import org.apache.bcel.generic.InstructionHandle;
import org.apache.bcel.generic.InstructionList;
import org.apache.bcel.generic.JSR;
import org.apache.bcel.generic.JSR_W;
import org.apache.bcel.generic.L2D;
import org.apache.bcel.generic.L2F;
import org.apache.bcel.generic.L2I;
import org.apache.bcel.generic.LADD;
import org.apache.bcel.generic.LALOAD;
import org.apache.bcel.generic.LAND;
import org.apache.bcel.generic.LASTORE;
import org.apache.bcel.generic.LCMP;
import org.apache.bcel.generic.LCONST;
import org.apache.bcel.generic.LDC2_W;
import org.apache.bcel.generic.LDC_W;
import org.apache.bcel.generic.LDIV;
import org.apache.bcel.generic.LLOAD;
import org.apache.bcel.generic.LMUL;
import org.apache.bcel.generic.LNEG;
import org.apache.bcel.generic.LOOKUPSWITCH;
import org.apache.bcel.generic.LOR;
import org.apache.bcel.generic.LREM;
import org.apache.bcel.generic.LRETURN;
import org.apache.bcel.generic.LSHL;
import org.apache.bcel.generic.LSHR;
import org.apache.bcel.generic.LSTORE;
import org.apache.bcel.generic.LSUB;
import org.apache.bcel.generic.LUSHR;
import org.apache.bcel.generic.LXOR;
import org.apache.bcel.generic.MONITORENTER;
import org.apache.bcel.generic.MONITOREXIT;
import org.apache.bcel.generic.MULTIANEWARRAY;
import org.apache.bcel.generic.MethodGen;
import org.apache.bcel.generic.NEW;
import org.apache.bcel.generic.NEWARRAY;
import org.apache.bcel.generic.NOP;
import org.apache.bcel.generic.ObjectType;
import org.apache.bcel.generic.POP;
import org.apache.bcel.generic.POP2;
import org.apache.bcel.generic.PUSH;
import org.apache.bcel.generic.PUTFIELD;
import org.apache.bcel.generic.PUTSTATIC;
import org.apache.bcel.generic.RET;
import org.apache.bcel.generic.RETURN;
import org.apache.bcel.generic.SALOAD;
import org.apache.bcel.generic.SASTORE;
import org.apache.bcel.generic.SIPUSH;
import org.apache.bcel.generic.SWAP;
import org.apache.bcel.generic.TABLESWITCH;
import org.apache.bcel.generic.Type;
import org.apache.bcel.util.ByteSequence;
import org.apache.bcel.util.SyntheticRepository;
import org.apache.bcel.verifier.structurals.Frame;
import org.apache.bcel.verifier.structurals.InstConstraintVisitor;
import org.apache.bcel.verifier.structurals.LocalVariables;
import org.apache.bcel.verifier.structurals.OperandStack;
import org.apache.bcel.verifier.structurals.UninitializedObjectType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InstConstraintVisitor_ESTest extends InstConstraintVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IMPDEP1 iMPDEP1_0 = new IMPDEP1();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMPDEP1(iMPDEP1_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as IMPDEP1.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEDYNAMIC iNVOKEDYNAMIC0 = new INVOKEDYNAMIC(1263);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEDYNAMIC(iNVOKEDYNAMIC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INVOKEDYNAMIC instruction is not supported at this time
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEDYNAMIC iNVOKEDYNAMIC0 = new INVOKEDYNAMIC(85);
      instConstraintVisitor0.visitInvokeInstruction(iNVOKEDYNAMIC0);
      assertEquals("invokedynamic", iNVOKEDYNAMIC0.getName());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LRETURN lRETURN0 = (LRETURN)InstructionConstants.LRETURN;
      // Undeclared exception!
      try { 
        lRETURN0.accept(instConstraintVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitILOAD((ILOAD) null);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IMPDEP2 iMPDEP2_0 = new IMPDEP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMPDEP2(iMPDEP2_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as IMPDEP2.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(110, 802);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEINTERFACE(iNVOKEINTERFACE0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LASTORE lASTORE0 = new LASTORE();
      LNEG lNEG0 = new LNEG();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitBREAKPOINT(bREAKPOINT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as BREAKPOINT.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BIPUSH bIPUSH0 = new BIPUSH((byte)33);
      instConstraintVisitor0.visitBIPUSH(bIPUSH0);
      assertEquals((short)16, bIPUSH0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LLOAD lLOAD0 = new LLOAD(1);
      instConstraintVisitor0.visitLLOAD(lLOAD0);
      DUP dUP0 = new DUP();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP(dUP0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DSTORE dSTORE0 = new DSTORE(2318);
      FileSystemHandling.shouldAllThrowIOExceptions();
      instConstraintVisitor0.visitDSTORE(dSTORE0);
      LSTORE lSTORE0 = null;
      try {
        lSTORE0 = new LSTORE((-1323));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal value: -1323
         //
         verifyException("org.apache.bcel.generic.LocalVariableInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      I2L i2L0 = new I2L();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(0, 0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      DUP2_X2 dUP2_X2_0 = new DUP2_X2();
      // Undeclared exception!
      try { 
        dUP2_X2_0.accept(instConstraintVisitor0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DUP2_X2 constraint violated: Cannot consume 4 stack slots: only 0 slot(s) left on stack!
         // Stack:
         // Slots used: 0 MaxStack: 0.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      CALOAD cALOAD0 = new CALOAD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCALOAD(cALOAD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FSTORE fSTORE0 = new FSTORE(5);
      instConstraintVisitor0.visitFSTORE(fSTORE0);
      LALOAD lALOAD0 = new LALOAD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLALOAD(lALOAD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FLOAD fLOAD0 = new FLOAD(17);
      instConstraintVisitor0.visitFLOAD(fLOAD0);
      assertEquals(17, fLOAD0.getIndex());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSTORE lSTORE0 = new LSTORE(215);
      instConstraintVisitor0.visitLSTORE(lSTORE0);
      assertEquals(215, lSTORE0.getIndex());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FCONST fCONST0 = new FCONST(2.0F);
      instConstraintVisitor0.visitFCONST(fCONST0);
      assertEquals((short)13, fCONST0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DNEG dNEG0 = new DNEG();
      GETSTATIC gETSTATIC0 = new GETSTATIC(726);
      instConstraintVisitor0.visitGETSTATIC(gETSTATIC0);
      assertEquals(3, gETSTATIC0.getLength());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DCONST dCONST0 = new DCONST(0.0);
      instConstraintVisitor0.visitDCONST(dCONST0);
      FLOAD fLOAD0 = null;
      try {
        fLOAD0 = new FLOAD((-741));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal value: -741
         //
         verifyException("org.apache.bcel.generic.LocalVariableInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      CASTORE cASTORE1 = new CASTORE();
      FSUB fSUB0 = new FSUB();
      I2L i2L0 = new I2L();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      bREAKPOINT0.consumeStack(constantPoolGen0);
      ObjectType objectType0 = new ObjectType("Branch target of ");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      LocalVariables localVariables0 = new LocalVariables(245);
      fSUB0.consumeStack(constantPoolGen0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(3);
      LRETURN lRETURN0 = new LRETURN();
      RET rET0 = new RET(169);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitRET(rET0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction RET constraint violated: Expecting a ReturnaddressType in local variable 169.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      DLOAD dLOAD0 = new DLOAD(673);
      instConstraintVisitor0.visitDLOAD(dLOAD0);
      BASTORE bASTORE0 = new BASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitBASTORE(bASTORE0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FASTORE fASTORE0 = new FASTORE();
      IRETURN iRETURN0 = new IRETURN();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      instConstraintVisitor1.visitICONST((ICONST) null);
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      assertNotNull(syntheticRepository0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitTABLESWITCH((TABLESWITCH) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      CASTORE cASTORE1 = new CASTORE();
      FSUB fSUB0 = new FSUB();
      I2L i2L0 = new I2L();
      FSTORE fSTORE0 = new FSTORE(3);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ObjectType objectType0 = new ObjectType("Branch target of ");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      LocalVariables localVariables0 = new LocalVariables(245);
      int int0 = Pattern.CANON_EQ;
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      IRETURN iRETURN0 = new IRETURN();
      iRETURN0.copy();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIRETURN(iRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IRETURN constraint violated: The value at the stack top is not of type 'int', but of type 'Branch target of '.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FALOAD fALOAD0 = new FALOAD();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      int int0 = Pattern.UNIX_LINES;
      ObjectType objectType0 = new ObjectType("l");
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      OperandStack operandStack0 = new OperandStack(640, objectType0);
      operandStack0.toString();
      LocalVariables localVariables0 = new LocalVariables(640);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(640);
      IRETURN iRETURN0 = new IRETURN();
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      instConstraintVisitor0.visitMONITOREXIT(mONITOREXIT0);
      BASTORE bASTORE0 = new BASTORE();
      assertEquals((short)84, bASTORE0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      CASTORE cASTORE1 = new CASTORE();
      I2L i2L0 = new I2L();
      FSTORE fSTORE0 = new FSTORE(3);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      bREAKPOINT0.copy();
      ObjectType objectType0 = new ObjectType("Branch target of ");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      LocalVariables localVariables0 = new LocalVariables(245);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(3);
      DREM dREM0 = new DREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDREM(dREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DREM constraint violated: The value at the stack top is not of type 'double', but of type 'Branch target of '.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      CASTORE cASTORE1 = new CASTORE();
      FSUB fSUB0 = new FSUB();
      I2L i2L0 = new I2L();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      ObjectType objectType0 = new ObjectType("BrKnch target of ");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      LocalVariables localVariables0 = new LocalVariables(245);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(3);
      DSTORE dSTORE1 = new DSTORE(0);
      IRETURN iRETURN0 = new IRETURN();
      LRETURN lRETURN0 = new LRETURN();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      GETFIELD gETFIELD0 = new GETFIELD(163);
      GETFIELD gETFIELD1 = new GETFIELD(3);
      gETFIELD1.setIndex(245);
      GETFIELD gETFIELD2 = new GETFIELD(245);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitGETFIELD(gETFIELD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      LocalVariables localVariables0 = new LocalVariables(110);
      ObjectType objectType0 = new ObjectType("}k]>eLrC;^h$r!4C");
      OperandStack operandStack0 = new OperandStack(110, objectType0);
      localVariables0.toString();
      String string0 = Constants.ILLEGAL_OPCODE;
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      frame0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&MRtL=u0$J5gups|");
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(110);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitANEWARRAY(aNEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ANEWARRAY constraint violated: The 'count' at the stack top is not of type 'int' but of type '}k]>eLrC'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(1107);
      localVariables0.getClone();
      int int0 = Member.DECLARED;
      ObjectType objectType0 = ObjectType.getInstance("y1");
      LocalVariables localVariables1 = localVariables0.getClone();
      OperandStack operandStack0 = new OperandStack(1107, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Boolean boolean0 = new Boolean("y1");
      localVariables0.set(195, objectType0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2F((D2F) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(1107);
      localVariables0.getClone();
      int int0 = Member.DECLARED;
      ObjectType objectType0 = ObjectType.getInstance("y1");
      LocalVariables localVariables1 = localVariables0.getClone();
      OperandStack operandStack0 = new OperandStack(1107, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      Boolean boolean0 = new Boolean("y1");
      Boolean boolean1 = new Boolean("y1");
      localVariables0.set(195, objectType0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ISHR iSHR0 = new ISHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISHR(iSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISHR constraint violated: The value at the stack top is not of type 'int', but of type 'y1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      FSUB fSUB0 = new FSUB();
      FCMPG fCMPG0 = new FCMPG();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Branch targwt of'");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      LocalVariables localVariables0 = new LocalVariables(254);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LUSHR lUSHR0 = new LUSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLUSHR(lUSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LUSHR constraint violated: The value at the stack top is not of type 'int', but of type 'Branch targwt of''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      int int0 = Character.SIZE;
      ObjectType objectType0 = new ObjectType(":>5M@a@-C=(sA<");
      OperandStack operandStack0 = new OperandStack(16, objectType0);
      LocalVariables localVariables0 = new LocalVariables(191);
      FSUB fSUB0 = new FSUB();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(16);
      FileSystemHandling.shouldAllThrowIOExceptions();
      localVariables0.getClone();
      OperandStack operandStack1 = new OperandStack(2720);
      L2D l2D0 = new L2D();
      L2D l2D1 = new L2D();
      F2L f2L0 = new F2L();
      D2F d2F0 = new D2F();
      DUP_X2 dUP_X2_0 = new DUP_X2();
      F2I f2I0 = new F2I();
      F2I f2I1 = new F2I();
      NOP nOP0 = new NOP();
      instConstraintVisitor0.visitNOP(nOP0);
      IF_ICMPLE iF_ICMPLE0 = new IF_ICMPLE((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPLE(iF_ICMPLE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L:>5M@a@-C=(sA<;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FCMPG fCMPG0 = new FCMPG();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Branch target of ");
      OperandStack operandStack0 = new OperandStack(230, objectType0);
      LocalVariables localVariables0 = new LocalVariables(261);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2L((F2L) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(85);
      ObjectType objectType0 = ObjectType.getInstance("('yHXC&\"6]4");
      OperandStack operandStack0 = new OperandStack(1107, objectType0);
      objectType0.toString();
      operandStack0.push(objectType0);
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      InstructionList instructionList0 = new InstructionList();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DMUL dMUL0 = new DMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDMUL(dMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DMUL constraint violated: The value at the stack top is not of type 'double', but of type '('yHXC&\"6]4'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FSUB fSUB0 = new FSUB();
      FSTORE fSTORE0 = new FSTORE(1773);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FMUL fMUL0 = new FMUL();
      LocalVariables localVariables0 = new LocalVariables(1773);
      int int0 = Member.DECLARED;
      ObjectType objectType0 = new ObjectType("The '");
      OperandStack operandStack0 = new OperandStack(1773, objectType0);
      LocalVariables localVariables1 = new LocalVariables(1773);
      fSUB0.consumeStack((ConstantPoolGen) null);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      POP2 pOP2_0 = new POP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitPOP2(pOP2_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction POP2 constraint violated: Stack top size should be 2 but stack top is 'The '' of size '1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      CASTORE cASTORE1 = new CASTORE();
      FSUB fSUB0 = new FSUB();
      I2L i2L0 = new I2L();
      FSTORE fSTORE0 = new FSTORE(3);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      bREAKPOINT0.consumeStack(constantPoolGen0);
      ObjectType objectType0 = new ObjectType("Branch target of ");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      LocalVariables localVariables0 = new LocalVariables(245);
      fSUB0.consumeStack(constantPoolGen0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(3);
      LRETURN lRETURN0 = new LRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLRETURN(lRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LRETURN constraint violated: The value at the stack top is not of type 'long', but of type 'Branch target of '.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      FCMPG fCMPG0 = new FCMPG();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Branch target of ");
      OperandStack operandStack0 = new OperandStack(230, objectType0);
      LocalVariables localVariables0 = new LocalVariables(230);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      int int0 = Long.BYTES;
      ObjectType objectType1 = new ObjectType("Branch target of ");
      OperandStack operandStack1 = new OperandStack(8, objectType0);
      localVariables0.toString();
      LocalVariables localVariables1 = localVariables0.getClone();
      operandStack1.clone();
      localVariables0.clone();
      Frame frame1 = new Frame(localVariables1, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      LRETURN lRETURN0 = new LRETURN();
      LAND lAND0 = new LAND();
      I2B i2B0 = new I2B();
      I2B i2B1 = new I2B();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2B(i2B1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2B constraint violated: The value at the stack top is not of type 'int', but of type 'Branch target of '.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(1107);
      LocalVariables localVariables1 = (LocalVariables)localVariables0.clone();
      int int0 = Member.DECLARED;
      ObjectType objectType0 = ObjectType.getInstance("y1");
      OperandStack operandStack0 = new OperandStack(1107, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      frame0.clone();
      GETFIELD gETFIELD0 = new GETFIELD(1);
      int int1 = Pattern.MULTILINE;
      L2D l2D0 = new L2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2D(l2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2D constraint violated: The value at the stack top is not of type 'long', but of type 'y1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      CASTORE cASTORE1 = new CASTORE();
      FSTORE fSTORE0 = new FSTORE(3);
      FCMPG fCMPG0 = new FCMPG();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      NEWARRAY nEWARRAY0 = new NEWARRAY(objectType0.BYTE);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitNEWARRAY(nEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction NEWARRAY constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FSUB fSUB0 = new FSUB();
      FSTORE fSTORE0 = new FSTORE(1773);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FMUL fMUL0 = new FMUL();
      LocalVariables localVariables0 = new LocalVariables(3);
      int int0 = Member.DECLARED;
      ObjectType objectType0 = new ObjectType("The '");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      fSUB0.consumeStack((ConstantPoolGen) null);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ARRAYLENGTH aRRAYLENGTH0 = new ARRAYLENGTH();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitARRAYLENGTH(aRRAYLENGTH0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ARRAYLENGTH constraint violated: The 'arrayref' does not refer to an array but is of type The '.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FSUB fSUB0 = new FSUB();
      I2L i2L0 = new I2L();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance(":%'");
      OperandStack operandStack0 = new OperandStack(38, objectType0);
      LocalVariables localVariables0 = new LocalVariables(2452);
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      objectType0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(2452);
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      Frame.getThis();
      ObjectType.getInstance(":%'");
      FileSystemHandling.shouldAllThrowIOExceptions();
      operandStack0.initializeObject((UninitializedObjectType) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      localVariables0.getClone();
      Frame frame2 = new Frame(localVariables0, operandStack0);
      IAND iAND0 = (IAND)InstructionConstants.IAND;
      instConstraintVisitor0.visitStackProducer(i2L0);
      assertEquals("i2l", i2L0.getName());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      CASTORE cASTORE1 = new CASTORE();
      FSUB fSUB0 = new FSUB();
      I2L i2L0 = new I2L();
      FSTORE fSTORE0 = new FSTORE(3);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ObjectType objectType0 = ObjectType.getInstance("Branch arget of");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      int int0 = 4684;
      LocalVariables localVariables0 = new LocalVariables(4684);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame.getThis();
      operandStack0.equals("Branch arget of");
      operandStack0.initializeObject((UninitializedObjectType) null);
      FSUB fSUB1 = new FSUB();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      DCMPL dCMPL0 = new DCMPL();
      DCMPL dCMPL1 = new DCMPL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDCMPL(dCMPL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DCMPL constraint violated: The value at the stack top is not of type 'double', but of type 'Branch arget of'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      LocalVariables localVariables0 = new LocalVariables(106);
      ObjectType objectType0 = new ObjectType("('yH\u0005XC&\"6]4");
      localVariables0.toString();
      OperandStack operandStack0 = new OperandStack(4242, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      Boolean boolean0 = new Boolean((String) null);
      LNEG lNEG0 = new LNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLNEG(lNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LNEG constraint violated: The value at the stack top is not of type 'long', but of type '('yH\u0005XC&\"6]4'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FSUB fSUB0 = new FSUB();
      FSTORE fSTORE0 = new FSTORE(3);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      bREAKPOINT0.consumeStack(constantPoolGen0);
      ObjectType objectType0 = new ObjectType("Branch target of ");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      LocalVariables localVariables0 = new LocalVariables(0);
      fSUB0.consumeStack(constantPoolGen0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(3);
      LRETURN lRETURN0 = new LRETURN();
      FSUB fSUB1 = new FSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFSUB(fSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FSUB constraint violated: The value at the stack top is not of type 'float', but of type 'Branch target of '.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(1107);
      localVariables0.getClone();
      int int0 = Member.DECLARED;
      ObjectType objectType0 = ObjectType.getInstance("y1");
      LocalVariables localVariables1 = localVariables0.getClone();
      OperandStack operandStack0 = new OperandStack(1107, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      Boolean boolean0 = new Boolean("y1");
      Boolean boolean1 = new Boolean("y1");
      localVariables0.set(195, objectType0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2C((I2C) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      CASTORE cASTORE1 = new CASTORE();
      I2L i2L0 = new I2L();
      FSTORE fSTORE0 = new FSTORE(3);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      bREAKPOINT0.consumeStack((ConstantPoolGen) null);
      bREAKPOINT0.consumeStack((ConstantPoolGen) null);
      ObjectType objectType0 = new ObjectType("NEW.getType() returning a non-reference type?!");
      OperandStack operandStack0 = new OperandStack(142, objectType0);
      operandStack0.push(objectType0);
      LocalVariables localVariables0 = new LocalVariables(3);
      localVariables0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LOR lOR0 = new LOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLOR(lOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LOR constraint violated: The value at the stack top is not of type 'long', but of type 'NEW.getType() returning a non-reference type?!'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(1107);
      int int0 = Member.DECLARED;
      ObjectType objectType0 = ObjectType.getInstance("y1");
      Class<IINC>[] classArray0 = (Class<IINC>[]) Array.newInstance(Class.class, 3);
      Class<IINC> class0 = IINC.class;
      classArray0[0] = class0;
      Class<IINC> class1 = IINC.class;
      classArray0[1] = class1;
      Class<IINC> class2 = IINC.class;
      classArray0[2] = class2;
      localVariables0.getClone();
      OperandStack operandStack0 = new OperandStack(203, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      frame0.equals(class0);
      LSTORE lSTORE0 = new LSTORE(894);
      FREM fREM0 = new FREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFREM(fREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FREM constraint violated: The value at the stack top is not of type 'float', but of type 'y1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(1605);
      ObjectType objectType0 = ObjectType.getInstance(" Ko' ,");
      ObjectType objectType1 = ObjectType.getInstance(" Ko' ,");
      LocalVariables localVariables1 = new LocalVariables(1605);
      OperandStack operandStack0 = new OperandStack(1605, objectType1);
      OperandStack operandStack1 = new OperandStack(1605, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      Boolean boolean0 = new Boolean("E0^1yk,wJk3E'");
      LSHR lSHR0 = new LSHR();
      FRETURN fRETURN0 = new FRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFRETURN(fRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FRETURN constraint violated: The value at the stack top is not of type 'float', but of type ' Ko' ,'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FCMPG fCMPG0 = new FCMPG();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Branch target of ");
      OperandStack operandStack0 = new OperandStack(228, objectType0);
      LocalVariables localVariables0 = new LocalVariables(261);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      F2L f2L0 = null;
      FNEG fNEG0 = new FNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFNEG(fNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FNEG constraint violated: The value at the stack top is not of type 'float', but of type 'Branch target of '.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      Constant[] constantArray0 = new Constant[9];
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LocalVariables localVariables0 = new LocalVariables(24);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(522, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables1.toString();
      localVariables0.toString();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      ConstantDouble constantDouble0 = new ConstantDouble(1097);
      frame0.equals(constantDouble0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      mONITOREXIT0.consumeStack(constantPoolGen0);
      instConstraintVisitor0.setConstantPoolGen(constantPoolGen0);
      FRETURN fRETURN0 = new FRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFNE((IFNE) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      I2L i2L0 = new I2L();
      FSTORE fSTORE0 = new FSTORE(1);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(1, objectType0);
      LocalVariables localVariables0 = new LocalVariables(2452);
      LocalVariables localVariables1 = localVariables0.getClone();
      objectType0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.merge(localVariables1);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(256);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Frame.setThis(uninitializedObjectType0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "In this JustIce verification pass there should not occur an illegal instruction such as BREAKPOINT.");
      DCMPG dCMPG0 = new DCMPG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDCMPG(dCMPG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DCMPG constraint violated: The value at the stack top is not of type 'double', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FSUB fSUB0 = new FSUB();
      FSTORE fSTORE0 = new FSTORE(1773);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(28);
      int int0 = Member.DECLARED;
      ObjectType objectType0 = ObjectType.getInstance("H]wD9c_E\"");
      OperandStack operandStack0 = new OperandStack(28, objectType0);
      operandStack0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSUB((LSUB) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      I2L i2L0 = new I2L();
      FSTORE fSTORE0 = new FSTORE(1);
      ObjectType objectType0 = ObjectType.getInstance("]E&fNIO/SG).M@KFRi");
      OperandStack operandStack0 = new OperandStack(1, objectType0);
      LocalVariables localVariables0 = new LocalVariables(1);
      Boolean boolean0 = Boolean.TRUE;
      DSTORE dSTORE0 = new DSTORE(1);
      localVariables0.getClone();
      OperandStack operandStack1 = (OperandStack)operandStack0.clone();
      Frame frame0 = new Frame(1, 1);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame1);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      FDIV fDIV0 = new FDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFDIV(fDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FDIV constraint violated: The value at the stack top is not of type 'float', but of type ']E&fNIO.SG).M@KFRi'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FSUB fSUB0 = new FSUB();
      FSTORE fSTORE0 = new FSTORE(1745);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FMUL fMUL0 = new FMUL();
      LocalVariables localVariables0 = new LocalVariables(3);
      int int0 = Member.DECLARED;
      ObjectType objectType0 = new ObjectType("The '");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      LocalVariables localVariables1 = new LocalVariables(3);
      fSUB0.consumeStack((ConstantPoolGen) null);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ARRAYLENGTH aRRAYLENGTH0 = new ARRAYLENGTH();
      SASTORE sASTORE0 = new SASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitSASTORE(sASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction SASTORE constraint violated: The value at the stack top is not of type 'int', but of type 'The ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      LocalVariables localVariables0 = new LocalVariables(1605);
      ObjectType objectType0 = ObjectType.getInstance("&>i%c;m8a");
      OperandStack operandStack0 = new OperandStack(8192, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables1.toString();
      OperandStack operandStack1 = new OperandStack(117, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      NOP nOP0 = new NOP();
      instConstraintVisitor0.visitNOP(nOP0);
      DUP dUP0 = new DUP();
      instConstraintVisitor0.visitDUP((DUP) null);
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(1949, 1949);
      assertEquals(1949, iNVOKEINTERFACE0.getCount());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      int int0 = 1107;
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(1107);
      LocalVariables localVariables1 = (LocalVariables)localVariables0.clone();
      int int1 = Member.DECLARED;
      ObjectType objectType0 = ObjectType.getInstance("y1");
      OperandStack operandStack0 = new OperandStack(1107, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      instConstraintVisitor0.setFrame(frame0);
      frame0.clone();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      LAND lAND0 = new LAND();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLAND(lAND0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LAND constraint violated: The value at the stack top is not of type 'long', but of type 'y1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      FSUB fSUB0 = new FSUB();
      I2L i2L0 = new I2L();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ObjectType objectType0 = new ObjectType("Branch target of ");
      OperandStack operandStack0 = new OperandStack(673, objectType0);
      LocalVariables localVariables0 = new LocalVariables(15);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      DSTORE dSTORE0 = new DSTORE(673);
      LASTORE lASTORE0 = new LASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLASTORE(lASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LASTORE constraint violated: The value at the stack top is not of type 'long', but of type 'Branch target of '.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      LocalVariables localVariables0 = new LocalVariables(119);
      ObjectType objectType0 = new ObjectType("('yH\u0005XC&\"6]4");
      OperandStack operandStack0 = new OperandStack(119, objectType0);
      Class<IFEQ>[] classArray0 = (Class<IFEQ>[]) Array.newInstance(Class.class, 1);
      Class<IFEQ> class0 = IFEQ.class;
      classArray0[0] = class0;
      Type.getTypes(classArray0);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables1.merge(localVariables0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      FileSystemHandling.shouldAllThrowIOExceptions();
      L2I l2I0 = new L2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2I(l2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2I constraint violated: The value at the stack top is not of type 'long', but of type '('yH\u0005XC&\"6]4'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LocalVariables localVariables0 = new LocalVariables(24);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(24, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables1.toString();
      localVariables0.toString();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      frame0.clone();
      IASTORE iASTORE0 = new IASTORE();
      I2S i2S0 = new I2S();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2S(i2S0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2S constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(1107);
      ObjectType objectType0 = new ObjectType("y1");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      OperandStack operandStack0 = new OperandStack(1107, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.clone();
      int int0 = Constants.MAX_CP_ENTRIES;
      ObjectType objectType1 = new ObjectType("");
      ISUB iSUB0 = new ISUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISUB(iSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISUB constraint violated: The value at the stack top is not of type 'int', but of type 'y1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      CASTORE cASTORE1 = new CASTORE();
      I2L i2L0 = new I2L();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(14, objectType0);
      Frame frame0 = new Frame((LocalVariables) null, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LXOR lXOR0 = new LXOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLXOR(lXOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LXOR constraint violated: The value at the stack top is not of type 'long', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      int int0 = Double.MAX_EXPONENT;
      ObjectType objectType0 = new ObjectType(":>5M@a@-C=(sA<");
      OperandStack operandStack0 = new OperandStack(1023, objectType0);
      LocalVariables localVariables0 = new LocalVariables(203);
      FSUB fSUB0 = new FSUB();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      operandStack0.initializeObject(uninitializedObjectType0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FRETURN fRETURN0 = new FRETURN();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      localVariables0.clone();
      DSTORE dSTORE0 = new DSTORE(1520);
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSR_W jSR_W0 = new JSR_W((InstructionHandle) null);
      IMUL iMUL0 = new IMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMUL(iMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L:>5M@a@-C=(sA<;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      I2L i2L0 = new I2L();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      bREAKPOINT0.consumeStack((ConstantPoolGen) null);
      ObjectType objectType0 = new ObjectType("NEW.getType() returning a non-reference type?!");
      OperandStack operandStack0 = new OperandStack(142, objectType0);
      LocalVariables localVariables0 = new LocalVariables(1854);
      operandStack0.toString();
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(0);
      LSHL lSHL0 = new LSHL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHL(lSHL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSHL constraint violated: The value at the stack top is not of type 'int', but of type 'NEW.getType() returning a non-reference type?!'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      int int0 = Character.SIZE;
      ObjectType objectType0 = new ObjectType(":>5M@a@-C=(sA<");
      OperandStack operandStack0 = new OperandStack(16, objectType0);
      LocalVariables localVariables0 = new LocalVariables(203);
      FSUB fSUB0 = new FSUB();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables1.merge(localVariables0);
      int int1 = Byte.SIZE;
      I2F i2F0 = new I2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2F(i2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L:>5M@a@-C=(sA<;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      I2L i2L0 = new I2L();
      SIPUSH sIPUSH0 = new SIPUSH((short)2);
      instConstraintVisitor0.visitSIPUSH(sIPUSH0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      PUSH pUSH0 = new PUSH(constantPoolGen0, (int) (short)2);
      InstructionList instructionList0 = new InstructionList(pUSH0);
      InstructionHandle instructionHandle0 = instructionList0.append((CompoundInstruction) pUSH0);
      JSR jSR0 = new JSR(instructionHandle0);
      instConstraintVisitor0.visitJSR(jSR0);
      ATHROW aTHROW0 = new ATHROW();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitATHROW(aTHROW0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FSTORE fSTORE0 = new FSTORE(3);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Branch target of ");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      LocalVariables localVariables0 = new LocalVariables(245);
      LocalVariables localVariables1 = localVariables0.getClone();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables1.getClone();
      localVariables1.merge(localVariables0);
      int int0 = Byte.SIZE;
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      ARETURN aRETURN0 = new ARETURN();
      instConstraintVisitor0.visitARETURN(aRETURN0);
      ConstantInteger constantInteger0 = new ConstantInteger(8);
      InstructionList instructionList0 = new InstructionList(aRETURN0);
      AASTORE aASTORE0 = new AASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitAASTORE(aASTORE0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      CASTORE cASTORE1 = new CASTORE();
      I2L i2L0 = new I2L();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ObjectType objectType0 = ObjectType.getInstance("");
      LocalVariables localVariables0 = new LocalVariables(49);
      OperandStack operandStack0 = new OperandStack(640, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack1.toString();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      DASTORE dASTORE0 = new DASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDASTORE(dASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DASTORE constraint violated: The value at the stack top is not of type 'double', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(1107);
      localVariables0.getClone();
      int int0 = Member.DECLARED;
      ObjectType objectType0 = ObjectType.getInstance("y1");
      LocalVariables localVariables1 = localVariables0.getClone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      OperandStack operandStack0 = new OperandStack(1107, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.clone();
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Boolean boolean0 = new Boolean("y1");
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
      IUSHR iUSHR0 = new IUSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIUSHR(iUSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IUSHR constraint violated: The value at the stack top is not of type 'int', but of type 'y1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      FCMPG fCMPG0 = new FCMPG();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Branch target of ");
      OperandStack operandStack0 = new OperandStack(230, objectType0);
      LocalVariables localVariables0 = new LocalVariables(230);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack1 = new OperandStack(230, objectType0);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(230);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINSTANCEOF(iNSTANCEOF0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      BASTORE bASTORE0 = new BASTORE();
      ObjectType objectType0 = new ObjectType("org.apache.bcel.classfile.Constant");
      OperandStack operandStack0 = new OperandStack(107, objectType0);
      LocalVariables localVariables0 = new LocalVariables(107);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      frame0.toString();
      DUP_X1 dUP_X1_0 = new DUP_X1();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP_X1(dUP_X1_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      FSTORE fSTORE0 = new FSTORE(4);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      ObjectType objectType0 = new ObjectType("2sI}a3SW'mSJc5wkRv^");
      OperandStack operandStack0 = new OperandStack(4, objectType0);
      LocalVariables localVariables0 = new LocalVariables(4);
      operandStack0.clone();
      localVariables0.clone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LRETURN lRETURN0 = new LRETURN();
      LAND lAND0 = new LAND();
      Frame frame1 = new Frame(4, 4);
      frame1.getClone();
      I2D i2D0 = new I2D();
      I2D i2D1 = null;
      IFEQ iFEQ0 = new IFEQ((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFEQ(iFEQ0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFEQ constraint violated: The value at the stack top is not of type 'int', but of type '2sI}a3SW'mSJc5wkRv^'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      int int0 = Double.MAX_EXPONENT;
      ObjectType objectType0 = new ObjectType(":>5M@a@-C=(sA<");
      OperandStack operandStack0 = new OperandStack(1023, objectType0);
      LocalVariables localVariables0 = new LocalVariables(203);
      FSUB fSUB0 = new FSUB();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ObjectType objectType1 = new ObjectType("0'");
      OperandStack operandStack1 = new OperandStack(203, objectType0);
      LocalVariables localVariables1 = new LocalVariables(5);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      DSTORE dSTORE0 = new DSTORE(2);
      INVOKEVIRTUAL iNVOKEVIRTUAL0 = new INVOKEVIRTUAL(221);
      DUP_X1 dUP_X1_0 = new DUP_X1();
      ISHL iSHL0 = new ISHL();
      ISHL iSHL1 = new ISHL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISHL(iSHL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L:>5M@a@-C=(sA<;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      CASTORE cASTORE1 = new CASTORE();
      I2L i2L0 = new I2L();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      int int0 = Constants.MAX_CODE_SIZE;
      ObjectType objectType0 = new ObjectType("b");
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      LocalVariables localVariables0 = new LocalVariables(49);
      OperandStack operandStack0 = new OperandStack(640, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(411);
      IRETURN iRETURN0 = new IRETURN();
      L2F l2F0 = new L2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2F(l2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2F constraint violated: The value at the stack top is not of type 'long', but of type 'b'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(1107);
      localVariables0.getClone();
      int int0 = Member.DECLARED;
      ObjectType objectType0 = ObjectType.getInstance("y1");
      LocalVariables localVariables1 = localVariables0.getClone();
      OperandStack operandStack0 = new OperandStack(1107, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Boolean boolean0 = new Boolean("y1");
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
      IOR iOR0 = new IOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIOR(iOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IOR constraint violated: The value at the stack top is not of type 'int', but of type 'y1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)5;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      instConstraintVisitor0.visitLCONST((LCONST) null);
      LMUL lMUL0 = new LMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLMUL(lMUL0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LocalVariables localVariables0 = new LocalVariables(24);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(24, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables1.toString();
      localVariables0.toString();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      frame0.clone();
      IASTORE iASTORE0 = new IASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIASTORE(iASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IASTORE constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      LocalVariables localVariables0 = new LocalVariables(110);
      ObjectType objectType0 = new ObjectType("('yH\u0005XC&\"6]4");
      OperandStack operandStack0 = new OperandStack(513, objectType0);
      Frame.getThis();
      String string0 = Constants.ILLEGAL_OPCODE;
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.clone();
      operandStack0.getClone();
      frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(1895);
      LocalVariables localVariables1 = new LocalVariables(513);
      DSUB dSUB0 = new DSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDSUB(dSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DSUB constraint violated: The value at the stack top is not of type 'double', but of type '('yH\u0005XC&\"6]4'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(1107);
      int int0 = Member.DECLARED;
      ObjectType objectType0 = new ObjectType("y1");
      LocalVariables localVariables1 = localVariables0.getClone();
      String string0 = localVariables1.toString();
      OperandStack operandStack0 = new OperandStack(1107, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      localVariables0.set(195, objectType0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "y1");
      LSHR lSHR0 = new LSHR();
      MockFile mockFile0 = new MockFile(string0, string0);
      MULTIANEWARRAY mULTIANEWARRAY0 = new MULTIANEWARRAY(1, (short)1949);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitMULTIANEWARRAY(mULTIANEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction MULTIANEWARRAY constraint violated: The '1949' upper stack types should be 'int' but aren't.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(1107);
      localVariables0.getClone();
      ObjectType objectType0 = new ObjectType("y1");
      LocalVariables localVariables1 = localVariables0.getClone();
      String string0 = Constants.ILLEGAL_TYPE;
      OperandStack operandStack0 = new OperandStack(1107, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2L((I2L) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      LocalVariables localVariables0 = new LocalVariables(110);
      ObjectType objectType0 = new ObjectType("('yH\u0005XC&\"6]4");
      OperandStack operandStack0 = new OperandStack(1775, objectType0);
      OperandStack operandStack1 = new OperandStack(1775, objectType0);
      Frame.getThis();
      operandStack1.initializeObject((UninitializedObjectType) null);
      operandStack1.push(objectType0);
      Frame.getThis();
      operandStack1.initializeObject((UninitializedObjectType) null);
      operandStack0.toString();
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Slots used: 1 MaxStack: 1775.\n('yH\u0005XC&\"6]4 (Size: 1)\n");
      Frame frame1 = new Frame(2827, 1775);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "('yH\u0005XC&\"6]4");
      IXOR iXOR0 = new IXOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIXOR(iXOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IXOR constraint violated: The value at the stack top is not of type 'int', but of type '('yH\u0005XC&\"6]4'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LocalVariables localVariables0 = new LocalVariables(24);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(24, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables1.toString();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      FMUL fMUL0 = new FMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFMUL(fMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FMUL constraint violated: The value at the stack top is not of type 'float', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      int int0 = Character.SIZE;
      ObjectType objectType0 = new ObjectType(":>5M@a@-C=(sA<");
      OperandStack operandStack0 = new OperandStack(16, objectType0);
      LocalVariables localVariables0 = new LocalVariables(203);
      FSUB fSUB0 = new FSUB();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(16);
      ASTORE aSTORE0 = new ASTORE(203);
      instConstraintVisitor0.visitASTORE(aSTORE0);
      INVOKEVIRTUAL iNVOKEVIRTUAL0 = new INVOKEVIRTUAL(3478);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      short short0 = Constants.MINOR;
      IINC iINC0 = new IINC(16, 3478);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIINC(iINC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IINC constraint violated: The 'index' is not of type int but of type <unknown object>.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      int int0 = Character.SIZE;
      ObjectType objectType0 = new ObjectType(":>5M@a@-C=(sA<");
      OperandStack operandStack0 = new OperandStack(16, objectType0);
      LocalVariables localVariables0 = new LocalVariables(16);
      FSUB fSUB0 = new FSUB();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(16);
      ASTORE aSTORE0 = new ASTORE(2745);
      instConstraintVisitor0.visitASTORE(aSTORE0);
      INVOKEVIRTUAL iNVOKEVIRTUAL0 = new INVOKEVIRTUAL(3475);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      short short0 = Constants.MINOR;
      Constant[] constantArray0 = new Constant[1];
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      operandStack0.push(objectType0);
      IINC iINC0 = new IINC(16, 4);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIINC(iINC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IINC constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      I2L i2L0 = new I2L();
      FSTORE fSTORE0 = new FSTORE(4);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      ObjectType objectType0 = new ObjectType("2sI}a3SW'mSJc5wkRv^");
      OperandStack operandStack0 = new OperandStack(4, objectType0);
      LocalVariables localVariables0 = new LocalVariables(4);
      Frame.getThis();
      operandStack0.initializeObject((UninitializedObjectType) null);
      operandStack0.clone();
      localVariables0.clone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LRETURN lRETURN0 = new LRETURN();
      LAND lAND0 = new LAND();
      I2B i2B0 = new I2B();
      LREM lREM0 = new LREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLREM(lREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LREM constraint violated: The value at the stack top is not of type 'long', but of type '2sI}a3SW'mSJc5wkRv^'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      FCMPG fCMPG0 = new FCMPG();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Branch target of ");
      OperandStack operandStack0 = new OperandStack(230, objectType0);
      LocalVariables localVariables0 = new LocalVariables(230);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      int int0 = Long.BYTES;
      ObjectType objectType1 = new ObjectType("Branch target of ");
      OperandStack operandStack1 = new OperandStack(8, objectType0);
      localVariables0.toString();
      localVariables0.getClone();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "o ( ");
      instConstraintVisitor0.setFrame(frame0);
      FNEG fNEG0 = new FNEG();
      DSTORE dSTORE0 = new DSTORE(230);
      INVOKEVIRTUAL iNVOKEVIRTUAL0 = new INVOKEVIRTUAL(8);
      F2L f2L0 = new F2L();
      IAND iAND0 = new IAND();
      IAND iAND1 = new IAND();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIAND(iAND1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IAND constraint violated: The value at the stack top is not of type 'int', but of type 'Branch target of '.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      CASTORE cASTORE1 = new CASTORE();
      I2L i2L0 = new I2L();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ObjectType objectType0 = ObjectType.getInstance("x");
      OperandStack operandStack0 = new OperandStack(430, objectType0);
      operandStack0.toString();
      Frame frame0 = new Frame((LocalVariables) null, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ARRAYLENGTH aRRAYLENGTH0 = new ARRAYLENGTH();
      LocalVariables localVariables0 = new LocalVariables(430);
      localVariables0.toString();
      FCMPL fCMPL0 = new FCMPL();
      Constant[] constantArray0 = new Constant[0];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPL(fCMPL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FCMPL constraint violated: The value at the stack top is not of type 'float', but of type 'x'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(1605);
      ObjectType.getInstance("&>i%c;m8a");
      ObjectType objectType0 = ObjectType.getInstance("&>i%c;m8a");
      LocalVariables localVariables1 = new LocalVariables(1605);
      OperandStack operandStack0 = new OperandStack(1605, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      Boolean boolean0 = new Boolean("E0^1yk,CJk3E'");
      LSHR lSHR0 = new LSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHR(lSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSHR constraint violated: The value at the stack top is not of type 'int', but of type '&>i%c'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(1107);
      localVariables0.getClone();
      int int0 = Member.DECLARED;
      ObjectType objectType0 = ObjectType.getInstance("y1");
      LocalVariables localVariables1 = localVariables0.getClone();
      OperandStack operandStack0 = new OperandStack(1107, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      Boolean boolean0 = new Boolean("y1");
      Boolean boolean1 = new Boolean("y1");
      ATHROW aTHROW0 = new ATHROW();
      ISTORE iSTORE0 = new ISTORE(236);
      instConstraintVisitor0.visitISTORE(iSTORE0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFLE((IFLE) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ALOAD aLOAD0 = new ALOAD(172);
      Constant[] constantArray0 = new Constant[1];
      ConstantString constantString0 = new ConstantString(172);
      constantArray0[0] = (Constant) constantString0;
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      aLOAD0.getType(constantPoolGen0);
      instConstraintVisitor0.visitALOAD(aLOAD0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "{]sLOQ7CR");
      LCMP lCMP0 = new LCMP();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLCMP(lCMP0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FSUB fSUB0 = new FSUB();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      L2D l2D0 = new L2D();
      LALOAD lALOAD0 = new LALOAD();
      I2F i2F0 = new I2F();
      JSR_W jSR_W0 = new JSR_W((InstructionHandle) null);
      instConstraintVisitor0.visitJSR_W(jSR_W0);
      I2L i2L0 = new I2L();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2L(i2L0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      int int0 = Double.MAX_EXPONENT;
      ObjectType objectType0 = new ObjectType(":>5M@a@-C=(sA<");
      OperandStack operandStack0 = new OperandStack(1023, objectType0);
      LocalVariables localVariables0 = new LocalVariables(203);
      FSUB fSUB0 = new FSUB();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(1023);
      ASTORE aSTORE0 = new ASTORE(2745);
      instConstraintVisitor0.visitASTORE(aSTORE0);
      localVariables0.clone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FNEG fNEG0 = new FNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPGE((IF_ICMPGE) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L:>5M@a@-C=(sA<;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      FSUB fSUB0 = new FSUB();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance(":%f");
      OperandStack operandStack0 = new OperandStack(37, objectType0);
      LocalVariables localVariables0 = new LocalVariables(2452);
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      InstructionList instructionList0 = new InstructionList();
      InstructionList instructionList1 = instructionList0.copy();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ObjectType objectType1 = ObjectType.getInstance("}Bv}!J,UB4d6DzU2-");
      PUSH pUSH0 = new PUSH(constantPoolGen0, objectType1);
      InstructionHandle instructionHandle0 = instructionList1.append((CompoundInstruction) pUSH0);
      IFLT iFLT0 = new IFLT(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFLT(iFLT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFLT constraint violated: The value at the stack top is not of type 'int', but of type ':%f'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FSUB fSUB0 = new FSUB();
      FCMPG fCMPG0 = new FCMPG();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Branch target of ");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      LocalVariables localVariables0 = new LocalVariables(254);
      localVariables0.clone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(254);
      Frame.getThis();
      DSTORE dSTORE1 = new DSTORE(254);
      POP pOP0 = new POP();
      instConstraintVisitor0.visitPOP(pOP0);
      SASTORE sASTORE0 = new SASTORE();
      F2I f2I0 = new F2I();
      int int0 = Pattern.MULTILINE;
      INSTANCEOF iNSTANCEOF0 = null;
      try {
        iNSTANCEOF0 = new INSTANCEOF((-1));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Negative index value: -1
         //
         verifyException("org.apache.bcel.generic.CPInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(1107);
      localVariables0.getClone();
      int int0 = Member.DECLARED;
      ObjectType objectType0 = ObjectType.getInstance("y1");
      LocalVariables localVariables1 = localVariables0.getClone();
      OperandStack operandStack0 = new OperandStack(1107, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      GOTO_W gOTO_W0 = new GOTO_W((InstructionHandle) null);
      GOTO_W gOTO_W1 = new GOTO_W((InstructionHandle) null);
      instConstraintVisitor0.visitGOTO_W(gOTO_W1);
      LMUL lMUL0 = new LMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLMUL(lMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LMUL constraint violated: The value at the stack top is not of type 'long', but of type 'y1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FCMPG fCMPG0 = new FCMPG();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Branch target of ");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      Class<JSR_W> class0 = JSR_W.class;
      Type.getType(class0);
      LocalVariables localVariables0 = new LocalVariables(254);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      IAND iAND0 = new IAND();
      ConstantInterfaceMethodref constantInterfaceMethodref0 = new ConstantInterfaceMethodref((-398), 65);
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      OperandStack operandStack1 = new OperandStack(3091);
      operandStack1.clone();
      FileSystemHandling.shouldAllThrowIOExceptions();
      instConstraintVisitor0.setFrame(frame0);
      POP2 pOP2_0 = new POP2();
      SWAP sWAP0 = new SWAP();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitSWAP(sWAP0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      LocalVariables localVariables0 = new LocalVariables(110);
      ObjectType objectType0 = new ObjectType("('yH\u0005XC&\"6]4");
      localVariables0.toString();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "('yH\u0005XC&\"6]4");
      OperandStack operandStack0 = new OperandStack(4242, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      INEG iNEG0 = new INEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINEG(iNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction INEG constraint violated: The value at the stack top is not of type 'int', but of type '('yH\u0005XC&\"6]4'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      I2L i2L0 = new I2L();
      FSTORE fSTORE0 = new FSTORE(4);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      ObjectType objectType0 = new ObjectType("2sI}a3SW'mSJc5wkRv^");
      OperandStack operandStack0 = new OperandStack(4, objectType0);
      LocalVariables localVariables0 = new LocalVariables(4);
      operandStack0.clone();
      localVariables0.clone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LRETURN lRETURN0 = new LRETURN();
      LAND lAND0 = new LAND();
      Frame frame1 = new Frame(4, 4);
      frame1.getClone();
      I2D i2D0 = new I2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2D((I2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FSUB fSUB0 = new FSUB();
      I2L i2L0 = new I2L();
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance(":%'");
      OperandStack operandStack0 = new OperandStack(49, objectType0);
      LocalVariables localVariables0 = new LocalVariables(2452);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "UV");
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      DSTORE dSTORE0 = new DSTORE(49);
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE1 = new DSTORE(3);
      DSTORE dSTORE2 = new DSTORE(243);
      LRETURN lRETURN0 = new LRETURN();
      L2I l2I0 = new L2I();
      DRETURN dRETURN0 = new DRETURN();
      DRETURN dRETURN1 = new DRETURN();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      dRETURN1.getType(constantPoolGen0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDRETURN(dRETURN1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DRETURN constraint violated: The value at the stack top is not of type 'double', but of type ':%''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setMethodGen((MethodGen) null);
      int int0 = 38;
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitBALOAD((BALOAD) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      ObjectType objectType0 = ObjectType.getInstance(")AgX(b(.xF");
      String string0 = Constants.ILLEGAL_OPCODE;
      LocalVariables localVariables0 = new LocalVariables(134);
      OperandStack operandStack0 = new OperandStack(134, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(134, 134);
      operandStack0.clone();
      ObjectType.getInstance("<illegal opcode>");
      OperandStack operandStack2 = new OperandStack(161, objectType0);
      LocalVariables localVariables1 = new LocalVariables(134);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      frame1.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      F2I f2I0 = new F2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2I(f2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2I constraint violated: The value at the stack top is not of type 'float', but of type ')AgX(b(.xF'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LocalVariables localVariables0 = new LocalVariables(209);
      ObjectType objectType0 = new ObjectType("('yH\u0005XC&\"6]4");
      OperandStack operandStack0 = new OperandStack(513, objectType0);
      Frame.getThis();
      localVariables0.clone();
      String string0 = Constants.ILLEGAL_OPCODE;
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.clone();
      operandStack0.getClone();
      frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(1895);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDNEG((DNEG) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FSUB fSUB0 = new FSUB();
      I2L i2L0 = new I2L();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance("g");
      OperandStack operandStack0 = new OperandStack(38, objectType0);
      LocalVariables localVariables0 = new LocalVariables(38);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      operandStack0.initializeObject(uninitializedObjectType0);
      Character.getName(38);
      Character.getName(38);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(38);
      ConstantLong constantLong0 = new ConstantLong((-1L));
      ConstantLong constantLong1 = new ConstantLong(constantLong0);
      ConstantLong constantLong2 = new ConstantLong(constantLong1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      short short0 = Constants.IFLE;
      CHECKCAST cHECKCAST0 = new CHECKCAST(142);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCHECKCAST(cHECKCAST0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FSUB fSUB0 = new FSUB();
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ObjectType objectType0 = ObjectType.getInstance(":%'");
      OperandStack operandStack0 = new OperandStack(49, objectType0);
      LocalVariables localVariables0 = new LocalVariables(2452);
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      FASTORE fASTORE0 = new FASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFASTORE(fASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FASTORE constraint violated: The value at the stack top is not of type 'float', but of type ':%''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(1107);
      LocalVariables localVariables1 = new LocalVariables(1107);
      ObjectType objectType0 = new ObjectType("y1");
      LocalVariables localVariables2 = localVariables0.getClone();
      OperandStack operandStack0 = new OperandStack(1107, objectType0);
      Frame frame0 = new Frame(localVariables2, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.set(195, objectType0);
      ISHR iSHR0 = new ISHR();
      Constant[] constantArray0 = new Constant[4];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConstantInteger constantInteger0 = new ConstantInteger(46);
      constantInteger0.copy();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      I2C i2C0 = new I2C();
      D2L d2L0 = new D2L();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2L(d2L0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction D2L constraint violated: The value at the stack top is not of type 'double', but of type 'y1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      LocalVariables localVariables0 = new LocalVariables(119);
      ObjectType objectType0 = new ObjectType("('yH\u0005XC&\"6]4");
      OperandStack operandStack0 = new OperandStack(119, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      OperandStack operandStack2 = operandStack1.getClone();
      UninitializedObjectType uninitializedObjectType0 = Frame.getThis();
      operandStack0.initializeObject((UninitializedObjectType) null);
      localVariables0.clone();
      UninitializedObjectType uninitializedObjectType1 = new UninitializedObjectType(uninitializedObjectType0.STRING);
      Frame.setThis(uninitializedObjectType1);
      Frame frame0 = new Frame(localVariables0, operandStack2);
      String string0 = frame0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.clone();
      int int0 = Constants.MAX_CP_ENTRIES;
      ObjectType objectType1 = new ObjectType(string0);
      INVOKEVIRTUAL iNVOKEVIRTUAL0 = new INVOKEVIRTUAL(119);
      F2L f2L0 = new F2L();
      D2F d2F0 = new D2F();
      DUP_X2 dUP_X2_0 = new DUP_X2();
      LDIV lDIV0 = new LDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLDIV(lDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LDIV constraint violated: The value at the stack top is not of type 'long', but of type '('yH\u0005XC&\"6]4'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Constant[] constantArray0 = new Constant[3];
      ConstantDouble constantDouble0 = new ConstantDouble(1);
      ConstantDouble constantDouble1 = new ConstantDouble(constantDouble0);
      constantArray0[0] = (Constant) constantDouble1;
      ConstantFloat constantFloat0 = new ConstantFloat(1);
      ConstantFloat constantFloat1 = new ConstantFloat(constantFloat0);
      constantArray0[2] = (Constant) constantFloat1;
      ConstantInteger constantInteger0 = new ConstantInteger(40);
      LocalVariables localVariables0 = new LocalVariables(40);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables1.getClone();
      FileSystemHandling.shouldAllThrowIOExceptions();
      LocalVariables localVariables2 = new LocalVariables(1);
      ObjectType objectType0 = ObjectType.getInstance("o ( ");
      OperandStack operandStack0 = new OperandStack(1, objectType0);
      Frame frame0 = new Frame(localVariables2, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(225);
      LMUL lMUL0 = new LMUL();
      ATHROW aTHROW0 = new ATHROW();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitATHROW(aTHROW0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: Missing class: java.lang.ClassNotFoundException: Exception while looking for class o ( : org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: o ( .class
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      CASTORE cASTORE1 = new CASTORE();
      FSTORE fSTORE0 = new FSTORE(3);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      bREAKPOINT0.toString();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      bREAKPOINT0.consumeStack(constantPoolGen0);
      constantPoolGen0.getFinalConstantPool();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)89;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte) (-103);
      byteArray0[3] = (byte)3;
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      Instruction.readInstruction(byteSequence0);
      LocalVariables localVariables0 = new LocalVariables(300);
      localVariables0.getClone();
      Frame frame0 = new Frame(0, 0);
      fSTORE0.toString(true);
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLocalVariableInstruction(fSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FSTORE constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      CASTORE cASTORE1 = new CASTORE();
      FSTORE fSTORE0 = new FSTORE(3);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      bREAKPOINT0.toString();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      bREAKPOINT0.consumeStack(constantPoolGen0);
      constantPoolGen0.getFinalConstantPool();
      ObjectType objectType0 = new ObjectType("Branch target of ");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-63);
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte) (-103);
      byteArray0[3] = (byte)3;
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      Instruction.readInstruction(byteSequence0);
      LocalVariables localVariables0 = new LocalVariables(300);
      localVariables0.getClone();
      Frame frame0 = new Frame(0, 0);
      instConstraintVisitor0.setFrame(frame0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame1 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame1);
      DLOAD dLOAD0 = new DLOAD(4270);
      instConstraintVisitor0.visitLocalVariableInstruction(fSTORE0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FSUB fSUB0 = new FSUB();
      I2L i2L0 = new I2L();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Branch target of ");
      OperandStack operandStack0 = new OperandStack(90, objectType0);
      Type.getType("Branch target of ");
      operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(90);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(90);
      Frame.getThis();
      LADD lADD0 = new LADD();
      lADD0.toString(true);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLADD(lADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LADD constraint violated: The value at the stack top is not of type 'long', but of type 'Branch target of '.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      LocalVariables localVariables0 = new LocalVariables(110);
      ObjectType objectType0 = new ObjectType("('yH\u0005XC&\"6]4");
      OperandStack operandStack0 = new OperandStack(513, objectType0);
      localVariables0.toString();
      String string0 = Constants.ILLEGAL_OPCODE;
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(1901);
      L2D l2D0 = new L2D();
      L2D l2D1 = new L2D();
      F2L f2L0 = new F2L();
      D2F d2F0 = new D2F();
      DUP_X2 dUP_X2_0 = new DUP_X2();
      F2I f2I0 = new F2I();
      F2I f2I1 = new F2I();
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2D((F2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      CASTORE cASTORE1 = new CASTORE();
      I2L i2L0 = new I2L();
      FSTORE fSTORE0 = new FSTORE(24);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      bREAKPOINT0.toString(false);
      ObjectType objectType0 = new ObjectType("breakpoint");
      OperandStack operandStack0 = new OperandStack(24, objectType0);
      LocalVariables localVariables0 = new LocalVariables(24);
      Frame.getThis();
      Class<DUP> class0 = DUP.class;
      Type.getType(class0);
      operandStack0.clone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "breakpoint");
      localVariables0.clone();
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      MULTIANEWARRAY mULTIANEWARRAY0 = new MULTIANEWARRAY((short)56, (short)56);
      mULTIANEWARRAY0.getExceptions();
      frame0.toString();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor1.setFrame(frame0);
      operandStack0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      DLOAD dLOAD0 = new DLOAD(710);
      // Undeclared exception!
      try { 
        instConstraintVisitor1.visitLocalVariableInstruction(dLOAD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DLOAD constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FSUB fSUB0 = new FSUB();
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance(":%'");
      OperandStack operandStack0 = new OperandStack(49, objectType0);
      LocalVariables localVariables0 = new LocalVariables(2452);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      DSTORE dSTORE0 = new DSTORE(617);
      IREM iREM0 = new IREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIREM(iREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IREM constraint violated: The value at the stack top is not of type 'int', but of type ':%''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      int int0 = Character.SIZE;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ":>5M@a@-C=(sA<");
      ObjectType objectType0 = new ObjectType(":>5M@a@-C=(sA<");
      OperandStack operandStack0 = new OperandStack(16, objectType0);
      LocalVariables localVariables0 = new LocalVariables(203);
      FSUB fSUB0 = new FSUB();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(16);
      D2I d2I0 = new D2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2I(d2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L:>5M@a@-C=(sA<;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FSTORE fSTORE0 = new FSTORE(1773);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FMUL fMUL0 = new FMUL();
      LocalVariables localVariables0 = new LocalVariables(1773);
      ObjectType objectType0 = new ObjectType("The '");
      OperandStack operandStack0 = new OperandStack(1773, objectType0);
      LocalVariables localVariables1 = new LocalVariables(1773);
      ConstantClass constantClass0 = new ConstantClass((-649));
      Constant[] constantArray0 = new Constant[0];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      ConstantPool constantPool1 = constantPool0.copy();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "EO}n!i!N");
      constantPool1.copy();
      IMUL iMUL0 = new IMUL();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      frame0.equals(mockThaiBuddhistDate0);
      instConstraintVisitor0.setFrame(frame0);
      InstructionList instructionList0 = new InstructionList();
      instructionList0.append(instructionList0);
      IF_ICMPEQ iF_ICMPEQ0 = new IF_ICMPEQ((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPEQ(iF_ICMPEQ0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPEQ constraint violated: The value at the stack top is not of type 'int', but of type 'The ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      FSUB fSUB0 = new FSUB();
      I2L i2L0 = new I2L();
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      ObjectType objectType0 = new ObjectType(":%'");
      OperandStack operandStack0 = new OperandStack(37, objectType0);
      LocalVariables localVariables0 = new LocalVariables(2452);
      operandStack0.toString();
      ObjectType.getInstance(":%'");
      operandStack0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(240);
      IRETURN iRETURN0 = new IRETURN();
      IRETURN iRETURN1 = new IRETURN();
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      I2B i2B0 = new I2B();
      ConstantFloat constantFloat0 = new ConstantFloat(20);
      ConstantFloat constantFloat1 = new ConstantFloat(constantFloat0);
      ConstantNameAndType constantNameAndType0 = new ConstantNameAndType((-3301), 240);
      FNEG fNEG0 = new FNEG();
      IFEQ iFEQ0 = new IFEQ((InstructionHandle) null);
      GOTO gOTO0 = new GOTO((InstructionHandle) null);
      instConstraintVisitor0.visitGOTO(gOTO0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      OperandStack operandStack0 = new OperandStack(1107);
      LocalVariables localVariables0 = new LocalVariables(85);
      ObjectType objectType0 = new ObjectType("('yHXC&\"6]4");
      OperandStack operandStack1 = new OperandStack(1107, objectType0);
      objectType0.toString();
      operandStack1.push(objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(59);
      LRETURN lRETURN0 = new LRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLOOKUPSWITCH((LOOKUPSWITCH) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      LocalVariables localVariables0 = new LocalVariables(134);
      ObjectType objectType0 = ObjectType.getInstance(")AgX(b(.xF");
      String string0 = Constants.ILLEGAL_OPCODE;
      LocalVariables localVariables1 = new LocalVariables(814);
      OperandStack operandStack0 = new OperandStack(186, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack1);
      frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(814);
      String string1 = Constants.STATIC_INITIALIZER_NAME;
      LocalVariables localVariables2 = new LocalVariables(134);
      LASTORE lASTORE0 = new LASTORE();
      operandStack0.equals(lASTORE0);
      DSTORE dSTORE1 = new DSTORE((byte)9);
      int int0 = Constants.MAX_CP_ENTRIES;
      LXOR lXOR0 = new LXOR();
      DDIV dDIV0 = new DDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDDIV(dDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DDIV constraint violated: The value at the stack top is not of type 'double', but of type ')AgX(b(.xF'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FSUB fSUB0 = new FSUB();
      I2L i2L0 = new I2L();
      FileSystemHandling.shouldAllThrowIOExceptions();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = ObjectType.getInstance(":%'");
      OperandStack operandStack0 = new OperandStack(49, objectType0);
      LocalVariables localVariables0 = new LocalVariables(2452);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "UV");
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      DSTORE dSTORE0 = new DSTORE(49);
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE1 = new DSTORE(15);
      DSTORE dSTORE2 = new DSTORE(243);
      LRETURN lRETURN0 = new LRETURN();
      L2I l2I0 = new L2I();
      byte[] byteArray0 = new byte[2];
      IFGT iFGT0 = new IFGT((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFGT(iFGT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFGT constraint violated: The value at the stack top is not of type 'int', but of type ':%''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      LocalVariables localVariables0 = new LocalVariables(110);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ObjectType objectType0 = new ObjectType("('yH\u0005XC&0\"6]4");
      OperandStack operandStack0 = new OperandStack(3684, objectType0);
      localVariables0.toString();
      String string0 = Constants.ILLEGAL_OPCODE;
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      LocalVariables localVariables1 = new LocalVariables(3);
      localVariables0.toString();
      operandStack0.push(objectType0);
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      Frame frame2 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame3 = frame1.getClone();
      instConstraintVisitor0.setFrame(frame3);
      InstructionList instructionList0 = new InstructionList();
      IDIV iDIV0 = new IDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIDIV(iDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IDIV constraint violated: The value at the stack top is not of type 'int', but of type '('yH\u0005XC&0\"6]4'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      CASTORE cASTORE0 = new CASTORE();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      int int0 = Double.MAX_EXPONENT;
      ObjectType objectType0 = ObjectType.getInstance(":>5M@a@-C=(sA<");
      OperandStack operandStack0 = new OperandStack(1023, objectType0);
      LocalVariables localVariables0 = new LocalVariables(203);
      FSUB fSUB0 = new FSUB();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(203);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      ASTORE aSTORE0 = new ASTORE(2745);
      instConstraintVisitor0.visitASTORE(aSTORE0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      INVOKEVIRTUAL iNVOKEVIRTUAL0 = new INVOKEVIRTUAL(3475);
      localVariables0.clone();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FNEG fNEG0 = new FNEG();
      LCMP lCMP0 = new LCMP();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLCMP(lCMP0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L:>5M@a@-C=(sA<;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      FSUB fSUB0 = new FSUB();
      I2L i2L0 = new I2L();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Branch target of ");
      OperandStack operandStack0 = new OperandStack(90, objectType0);
      Type.getType("Branch target of ");
      operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(1206);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(90);
      IADD iADD0 = new IADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIADD(iADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IADD constraint violated: The value at the stack top is not of type 'int', but of type 'Branch target of '.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "_ Nvv5/=JLC");
      FSUB fSUB0 = new FSUB();
      FCMPG fCMPG0 = new FCMPG();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("Branch target of ");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      LocalVariables localVariables0 = new LocalVariables(254);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(254);
      DADD dADD0 = new DADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDADD(dADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DADD constraint violated: The value at the stack top is not of type 'double', but of type 'Branch target of '.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      FSUB fSUB0 = new FSUB();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType(":%f");
      OperandStack operandStack0 = new OperandStack(37);
      OperandStack operandStack1 = new OperandStack(193, objectType0);
      LocalVariables localVariables0 = new LocalVariables(2);
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      operandStack1.clone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      DSTORE dSTORE0 = new DSTORE(37);
      operandStack1.toString();
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE1 = new DSTORE(2);
      DSTORE dSTORE2 = new DSTORE(59);
      LRETURN lRETURN0 = new LRETURN();
      FADD fADD0 = new FADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFADD(fADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FADD constraint violated: The value at the stack top is not of type 'float', but of type ':%f'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LocalVariables localVariables0 = new LocalVariables(24);
      ObjectType objectType0 = new ObjectType("");
      objectType0.toString();
      OperandStack operandStack0 = new OperandStack(2048, objectType0);
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      LocalVariables localVariables1 = localVariables0.getClone();
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      Class<FDIV>[] classArray0 = (Class<FDIV>[]) Array.newInstance(Class.class, 7);
      Class<FDIV> class0 = FDIV.class;
      classArray0[0] = class0;
      Class<FDIV> class1 = FDIV.class;
      classArray0[2] = class1;
      Class<FDIV> class2 = FDIV.class;
      classArray0[3] = class2;
      DSTORE dSTORE0 = new DSTORE(2048);
      Frame frame1 = new Frame(localVariables1, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IFGE iFGE0 = new IFGE((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFGE(iFGE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFGE constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ObjectType objectType0 = new ObjectType("");
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      LocalVariables localVariables0 = new LocalVariables(49);
      OperandStack operandStack0 = new OperandStack(49);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "()L;");
      OperandStack operandStack1 = new OperandStack(49, objectType0);
      operandStack1.toString();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(49);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "()L;");
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables1.getClone();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ASTORE aSTORE0 = new ASTORE(49);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStoreInstruction(dSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DSTORE constraint violated: Stack top type and STOREing Instruction type mismatch: Stack top: ''; Instruction type: 'double'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      I2L i2L0 = new I2L();
      FSTORE fSTORE0 = new FSTORE(1);
      ObjectType objectType0 = ObjectType.getInstance("]E&fNIO/SG).M@KFRi");
      OperandStack operandStack0 = new OperandStack(1, objectType0);
      LocalVariables localVariables0 = new LocalVariables(1);
      Boolean boolean0 = Boolean.TRUE;
      DSTORE dSTORE0 = new DSTORE(1);
      LocalVariables localVariables1 = localVariables0.getClone();
      OperandStack operandStack1 = (OperandStack)operandStack0.clone();
      Frame frame0 = new Frame(1, 1);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame1);
      DSTORE dSTORE1 = new DSTORE(1547);
      localVariables1.getClone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      ASTORE aSTORE0 = new ASTORE(300);
      aSTORE0.dump(dataOutputStream0);
      instConstraintVisitor0.visitStoreInstruction(aSTORE0);
      L2D l2D0 = new L2D();
      frame0.getClone();
      I2D i2D0 = new I2D();
      RET rET0 = new RET(300);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitRET(rET0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 300
         //
         verifyException("org.apache.bcel.verifier.structurals.LocalVariables", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      FSUB fSUB0 = new FSUB();
      FSTORE fSTORE0 = new FSTORE(6);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      bREAKPOINT0.consumeStack(constantPoolGen0);
      ObjectType objectType0 = new ObjectType("Branch target of ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      OperandStack operandStack0 = new OperandStack(6);
      LocalVariables localVariables0 = new LocalVariables(0);
      fSUB0.consumeStack(constantPoolGen0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(6);
      LRETURN lRETURN0 = new LRETURN();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      aCONST_NULL0.copy();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStoreInstruction(dSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DSTORE constraint violated: Cannot STORE: Stack to read from is empty.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)2;
      byteArray0[3] = (byte)2;
      byteArray0[3] = (byte)2;
      FileSystemHandling.shouldAllThrowIOExceptions();
      CASTORE cASTORE1 = new CASTORE();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      int int0 = Character.MIN_RADIX;
      String string0 = Constants.ILLEGAL_TYPE;
      Type.getType("Stack next-to-next-to-top must be of type long[] but is '");
      DSTORE dSTORE0 = new DSTORE(132);
      instConstraintVisitor0.setConstantPoolGen(constantPoolGen0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE((byte)2, 60);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCPInstruction(iNVOKEINTERFACE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: Huh?! Constant pool index of instruction 'invokeinterface[185](5) 2' illegal? Pass 3a should have checked this!
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      I2L i2L0 = new I2L();
      ObjectType objectType0 = ObjectType.getInstance("]E&fNIO/SG).M@KFRi");
      OperandStack operandStack0 = new OperandStack(1, objectType0);
      LocalVariables localVariables0 = new LocalVariables(1);
      LLOAD lLOAD0 = new LLOAD(209);
      lLOAD0.toString(true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Boolean boolean0 = new Boolean("");
      DSTORE dSTORE0 = new DSTORE(4);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor1.setFrame(frame0);
      DSTORE dSTORE1 = new DSTORE(1);
      DSTORE dSTORE2 = new DSTORE(2763);
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      localVariables0.getClone();
      frame0.getClone();
      // Undeclared exception!
      try { 
        instConstraintVisitor1.visitStackProducer(lLOAD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LLOAD constraint violated: Cannot produce 2 stack slots: only 0 free stack slot(s) left.
         // Stack:
         // Slots used: 1 MaxStack: 1.
         // ]E&fNIO.SG).M@KFRi (Size: 1)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(110);
      IINC iINC0 = new IINC(513, 513);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      ObjectType objectType0 = ObjectType.getInstance("F264#");
      OperandStack operandStack0 = new OperandStack(110, objectType0);
      LocalVariables localVariables1 = new LocalVariables(110);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LRETURN lRETURN0 = new LRETURN();
      LAND lAND0 = new LAND();
      Frame frame1 = new Frame(1, 143);
      frame1.getClone();
      I2D i2D0 = new I2D();
      IF_ACMPNE iF_ACMPNE0 = new IF_ACMPNE((InstructionHandle) null);
      iF_ACMPNE0.toString(true);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ACMPNE(iF_ACMPNE0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ObjectType objectType0 = new ObjectType("");
      LocalVariables localVariables0 = new LocalVariables(49);
      OperandStack operandStack0 = new OperandStack(49, objectType0);
      Boolean boolean0 = new Boolean("");
      String string0 = Constants.ILLEGAL_OPCODE;
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.clone();
      Frame frame1 = frame0.getClone();
      OperandStack operandStack2 = new OperandStack(1216);
      Frame.getThis();
      operandStack2.initializeObject((UninitializedObjectType) null);
      instConstraintVisitor0.setFrame(frame1);
      ConstantLong constantLong0 = new ConstantLong(49);
      localVariables0.toString();
      IF_ICMPNE iF_ICMPNE0 = new IF_ICMPNE((InstructionHandle) null);
      iF_ICMPNE0.setTarget((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPNE(iF_ICMPNE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPNE constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      OperandStack operandStack0 = new OperandStack(1107);
      LocalVariables localVariables0 = new LocalVariables(87);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables0.merge(localVariables1);
      ObjectType objectType0 = ObjectType.getInstance("('yHXC&\"6]4");
      objectType0.toString();
      operandStack0.push(objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.toString();
      Class<DALOAD>[] classArray0 = (Class<DALOAD>[]) Array.newInstance(Class.class, 6);
      Class<DALOAD> class0 = DALOAD.class;
      classArray0[0] = class0;
      localVariables0.toString();
      byte byte0 = (byte)90;
      classArray0[1] = class0;
      Frame frame1 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      InstructionList instructionList0 = new InstructionList();
      InstructionList instructionList1 = instructionList0.copy();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      instructionList1.append(instructionList0);
      Character.getName((byte)90);
      F2D f2D0 = new F2D();
      InstructionList instructionList2 = new InstructionList(f2D0);
      instructionList1.copy();
      instructionList0.append((Instruction) f2D0);
      IF_ICMPGT iF_ICMPGT0 = new IF_ICMPGT((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPGT(iF_ICMPGT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPGT constraint violated: The value at the stack top is not of type 'int', but of type '('yHXC&\"6]4'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      OperandStack operandStack0 = new OperandStack(1129);
      LocalVariables localVariables0 = new LocalVariables(1129);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "('yHXC&\"6]4");
      ObjectType objectType0 = new ObjectType("('yHXC&\"6]4");
      OperandStack operandStack1 = new OperandStack(1129, objectType0);
      operandStack1.push(objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(1129);
      Frame.getThis();
      Class<FSUB>[] classArray0 = (Class<FSUB>[]) Array.newInstance(Class.class, 7);
      classArray0[2] = classArray0[0];
      Class<FSUB> class0 = FSUB.class;
      classArray0[3] = class0;
      Class<FSUB> class1 = FSUB.class;
      classArray0[4] = class1;
      Class<FSUB> class2 = FSUB.class;
      classArray0[5] = class2;
      operandStack0.getClone();
      classArray0[6] = class0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Boolean boolean0 = new Boolean("('yHXC&\"6]4");
      Frame.setThis((UninitializedObjectType) null);
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      localVariables0.getClone();
      OperandStack operandStack2 = new OperandStack(1129);
      operandStack2.merge(operandStack0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      localVariables0.getClone();
      FMUL fMUL0 = new FMUL();
      DUP2 dUP2_0 = new DUP2();
      instConstraintVisitor0.visitDUP2(dUP2_0);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      CASTORE cASTORE0 = new CASTORE();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)2;
      byteArray0[3] = (byte)2;
      byteArray0[3] = (byte)2;
      FileSystemHandling.shouldAllThrowIOExceptions();
      CASTORE cASTORE1 = new CASTORE();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      int int0 = Character.MIN_RADIX;
      constantPoolGen0.addFieldref("Invalid byte tag in constant pool: ", "Indexing a constant that's not a CONSTANT_Fieldref but a '", "Indexing a constant that's not a CONSTANT_Fieldref but a '");
      String string0 = Constants.ILLEGAL_TYPE;
      Type.getType("Stack nex-tonext-to-top must be f type long] but is '");
      DSTORE dSTORE0 = new DSTORE(132);
      instConstraintVisitor0.setConstantPoolGen(constantPoolGen0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE((byte)2, 60);
      instConstraintVisitor0.visitCPInstruction(iNVOKEINTERFACE0);
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(85);
      ObjectType objectType0 = ObjectType.getInstance("('yHXC&\"6]4");
      OperandStack operandStack0 = new OperandStack(1107, objectType0);
      objectType0.toString();
      operandStack0.push(objectType0);
      operandStack0.toString();
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ObjectType objectType1 = new ObjectType("The 'count' argument should probably read '");
      I2D i2D0 = new I2D();
      DUP2_X2 dUP2_X2_0 = new DUP2_X2();
      SIPUSH sIPUSH0 = new SIPUSH((short)140);
      Constant[] constantArray0 = new Constant[1];
      ConstantNameAndType constantNameAndType0 = new ConstantNameAndType(85, 1107);
      constantArray0[0] = (Constant) constantNameAndType0;
      instConstraintVisitor0.visitSIPUSH(sIPUSH0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2_X2(dUP2_X2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(1107);
      LocalVariables localVariables1 = (LocalVariables)localVariables0.clone();
      int int0 = Member.DECLARED;
      ObjectType objectType0 = ObjectType.getInstance("y1");
      OperandStack operandStack0 = new OperandStack(1107, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      frame0.clone();
      FileSystemHandling.shouldAllThrowIOExceptions();
      L2F l2F0 = new L2F();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-68);
      byteArray0[1] = (byte) (-51);
      byteArray0[2] = (byte)84;
      InstructionList instructionList0 = new InstructionList(byteArray0);
      NEW nEW0 = new NEW((byte)84);
      InstructionHandle instructionHandle0 = instructionList0.insert((Instruction) nEW0);
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      Instruction.readInstruction(byteSequence0);
      IFNONNULL iFNONNULL0 = new IFNONNULL(instructionHandle0);
      instConstraintVisitor0.visitIFNONNULL(iFNONNULL0);
      IF_ICMPLT iF_ICMPLT0 = new IF_ICMPLT(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPLT(iF_ICMPLT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPLT constraint violated: The value at the stack top is not of type 'int', but of type 'y1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(1979, objectType0);
      LocalVariables localVariables0 = new LocalVariables(1979);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      int int0 = Character.SIZE;
      FCMPG fCMPG0 = new FCMPG();
      FCMPG fCMPG1 = new FCMPG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPG(fCMPG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FCMPG constraint violated: The value at the stack top is not of type 'float', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(85);
      ObjectType objectType0 = ObjectType.getInstance("('yHXC&\"6]4");
      OperandStack operandStack0 = new OperandStack(1107, objectType0);
      objectType0.toString();
      operandStack0.push(objectType0);
      operandStack0.toString();
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      InstructionList instructionList0 = new InstructionList();
      instructionList0.copy();
      frame0.clone();
      ObjectType objectType1 = new ObjectType("The 'count' argument should probably read '");
      I2D i2D0 = new I2D();
      DUP2_X2 dUP2_X2_0 = new DUP2_X2();
      SIPUSH sIPUSH0 = new SIPUSH((short)140);
      ConstantNameAndType constantNameAndType0 = new ConstantNameAndType(85, 1107);
      LSTORE lSTORE0 = new LSTORE(85);
      LSTORE lSTORE1 = new LSTORE((short)140);
      DUP_X2 dUP_X2_0 = new DUP_X2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP_X2(dUP_X2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(1107);
      localVariables0.getClone();
      int int0 = Float.MIN_EXPONENT;
      localVariables0.getClone();
      ObjectType objectType0 = ObjectType.getInstance("y1");
      LocalVariables localVariables1 = localVariables0.getClone();
      OperandStack operandStack0 = new OperandStack(1107, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Boolean boolean0 = new Boolean("y1");
      Boolean boolean1 = Boolean.FALSE;
      localVariables0.set(195, objectType0);
      Boolean boolean2 = new Boolean("y1");
      ISHR iSHR0 = new ISHR();
      ConstantDouble constantDouble0 = new ConstantDouble(195);
      constantDouble0.clone();
      ConstantDouble constantDouble1 = new ConstantDouble(constantDouble0);
      I2D i2D0 = new I2D();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)126;
      byteArray0[1] = (byte)120;
      byteArray0[2] = (byte)2;
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      IFNULL iFNULL0 = new IFNULL((InstructionHandle) null);
      IFNULL iFNULL1 = new IFNULL((InstructionHandle) null);
      iFNULL1.updateTarget((InstructionHandle) null, (InstructionHandle) null);
      instConstraintVisitor0.visitIFNULL(iFNULL1);
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      LocalVariables localVariables0 = new LocalVariables(110);
      ObjectType objectType0 = new ObjectType("('yH\u0005XC&\"6]4");
      OperandStack operandStack0 = new OperandStack(1765, objectType0);
      OperandStack operandStack1 = new OperandStack(1765, objectType0);
      operandStack1.push(objectType0);
      Frame.getThis();
      operandStack1.initializeObject((UninitializedObjectType) null);
      operandStack0.toString();
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      InstructionList instructionList0 = new InstructionList();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor1.setFrame(frame0);
      Frame.setThis((UninitializedObjectType) null);
      BasicType basicType0 = Type.SHORT;
      localVariables0.getClone();
      frame1.getClone();
      instConstraintVisitor0.setFrame(frame1);
      L2D l2D0 = new L2D();
      ARETURN aRETURN0 = new ARETURN();
      DUP2_X1 dUP2_X1_0 = new DUP2_X1();
      // Undeclared exception!
      try { 
        instConstraintVisitor1.visitDUP2_X1(dUP2_X1_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(85);
      ObjectType objectType0 = ObjectType.getInstance("('FHXC&6]4");
      OperandStack operandStack0 = new OperandStack(1107, objectType0);
      objectType0.toString();
      operandStack0.push(objectType0);
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      SALOAD sALOAD0 = new SALOAD();
      operandStack0.equals(sALOAD0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      LocalVariables localVariables1 = new LocalVariables(1107);
      Frame frame1 = new Frame(localVariables1, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
      FALOAD fALOAD0 = new FALOAD();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
      FALOAD fALOAD1 = new FALOAD();
      LRETURN lRETURN0 = new LRETURN();
      DSUB dSUB0 = new DSUB();
      DUP2 dUP2_0 = new DUP2();
      InstructionList instructionList0 = new InstructionList();
      InstructionList instructionList1 = new InstructionList(mONITORENTER0);
      InstructionHandle instructionHandle0 = instructionList0.insert(instructionList1);
      IF_ACMPEQ iF_ACMPEQ0 = new IF_ACMPEQ(instructionHandle0);
      instConstraintVisitor0.visitIF_ACMPEQ(iF_ACMPEQ0);
      PUTFIELD pUTFIELD0 = new PUTFIELD(1107);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitPUTFIELD(pUTFIELD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(1107);
      LocalVariables localVariables1 = localVariables0.getClone();
      ObjectType objectType0 = ObjectType.getInstance("\"g@");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      objectType0.toString();
      operandStack0.push(objectType0);
      BasicType basicType0 = Type.FLOAT;
      Type.getMethodSignature(basicType0, basicType0.NO_ARGS);
      basicType0.toString();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      operandStack0.push(basicType0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(basicType0.THROWABLE);
      LocalVariables localVariables2 = new LocalVariables(2885);
      LocalVariables localVariables3 = new LocalVariables(1107);
      Frame frame1 = new Frame(localVariables3, operandStack0);
      Frame frame2 = frame1.getClone();
      frame2.toString();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ".hT>IAR}>bJd8:Yw6");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "tg{]~`7CRKJ+8U-!");
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(25);
      iNSTANCEOF0.toString(false);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINSTANCEOF(iNSTANCEOF0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction INSTANCEOF constraint violated: The 'objectref' is not of a ReferenceType but of type float.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      FSUB fSUB0 = new FSUB();
      FSTORE fSTORE0 = new FSTORE(3);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      bREAKPOINT0.consumeStack(constantPoolGen0);
      ObjectType objectType0 = new ObjectType("Branch target of ");
      OperandStack operandStack0 = new OperandStack(3, objectType0);
      LocalVariables localVariables0 = new LocalVariables(0);
      D2F d2F0 = new D2F();
      Type type0 = d2F0.getType(constantPoolGen0);
      operandStack0.push(type0);
      constantPoolGen0.addInterfaceMethodref("FfDij~Gee>", "strictfp", "b/]3SybV`F_!X");
      fSUB0.consumeStack(constantPoolGen0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      DSTORE dSTORE0 = new DSTORE(3);
      LRETURN lRETURN0 = new LRETURN();
      FSUB fSUB1 = new FSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFSUB(fSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FSUB constraint violated: The value at the stack next-to-top is not of type 'float', but of type 'Branch target of '.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      LocalVariables localVariables0 = new LocalVariables(110);
      ObjectType objectType0 = new ObjectType("The value at the stack top is not of a ReferenceType, but of type '");
      OperandStack operandStack0 = new OperandStack(1765, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame.getThis();
      operandStack1.initializeObject((UninitializedObjectType) null);
      LocalVariables localVariables1 = new LocalVariables(1792);
      localVariables1.clone();
      operandStack1.toString();
      LocalVariables localVariables2 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables2, operandStack1);
      RET rET0 = new RET(1792);
      Constant[] constantArray0 = new Constant[1];
      ConstantNameAndType constantNameAndType0 = new ConstantNameAndType(356, 356);
      ConstantNameAndType constantNameAndType1 = new ConstantNameAndType(constantNameAndType0);
      constantArray0[0] = (Constant) constantNameAndType1;
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      Type type0 = rET0.getType(constantPoolGen0);
      operandStack1.push(type0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor1.setFrame(frame0);
      L2D l2D0 = new L2D();
      ARETURN aRETURN0 = new ARETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitARETURN(aRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ARETURN constraint violated: The 'objectref' at the stack top is not of a ReferenceType but of type '<return address>'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }
}
