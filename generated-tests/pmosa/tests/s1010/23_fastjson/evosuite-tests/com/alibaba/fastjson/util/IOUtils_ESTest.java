/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 18:21:39 GMT 2018
 */

package com.alibaba.fastjson.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.util.IOUtils;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.CharArrayReader;
import java.io.Closeable;
import java.io.File;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.io.ObjectStreamConstants;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PrintWriter;
import java.io.Reader;
import java.io.StringWriter;
import java.net.URI;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.nio.charset.IllegalCharsetNameException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IOUtils_ESTest extends IOUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("~^");
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      IOUtils.decodeBase64("z +-wnl]P4Oh");
      byte[] byteArray0 = IOUtils.decodeBase64("z +-wnl]P4Oh");
      IOUtils iOUtils0 = new IOUtils();
      int int0 = IOUtils.encodeUTF8(iOUtils0.ASCII_CHARS, (-2590), 0, byteArray0);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte)63, (byte) (-125), (byte) (-95)}, byteArray0);
      
      byte[] byteArray1 = IOUtils.decodeBase64(iOUtils0.replaceChars, 0, 0);
      assertArrayEquals(new byte[] {}, byteArray1);
      
      IOUtils.loadPropertiesFromFile();
      int int1 = IOUtils.decodeUTF8(iOUtils0.specicalFlags_singleQuotes, 23, (-2278), iOUtils0.CA);
      assertTrue(int1 == int0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IOUtils.firstIdentifier('\u009A');
      byte[] byteArray0 = new byte[0];
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 251, 251, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 251
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      byte[] byteArray0 = new byte[9];
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8((char[]) null, (-4855), 55296, byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = IOUtils.isIdent(',');
      assertFalse(boolean0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("dY}Jg#");
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-55)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      IOUtils.isIdent('');
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-75), (int) (byte) (-75), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -76
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "";
      IOUtils.decodeBase64("");
      char[] charArray0 = new char[0];
      byte[] byteArray0 = IOUtils.decodeBase64(charArray0, 0, 0);
      IOUtils.decodeUTF8(byteArray0, 18, 0, charArray0);
      IOUtils.firstIdentifier('R');
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)0, (int) (byte)0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = IOUtils.firstIdentifier('\u0087');
      boolean boolean1 = IOUtils.isValidJsonpQueryParam("`iW=-+9i&Vg2z");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "encodeUTF8 error";
      IOUtils.isValidJsonpQueryParam("encodeUTF8 error");
      int int0 = 0;
      IOUtils.stringSize(0);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      // Undeclared exception!
      try { 
        Charset.forName("encodeUTF8 error");
        fail("Expecting exception: IllegalCharsetNameException");
      
      } catch(IllegalCharsetNameException e) {
         //
         // encodeUTF8 error
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      int int0 = IOUtils.stringSize((-2245));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      IOUtils.getStringProperty("com.alibaba.fastjson.JSONException");
      char[] charArray0 = new char[9];
      charArray0[0] = ';';
      charArray0[1] = 'q';
      charArray0[2] = '(';
      charArray0[3] = 'y';
      charArray0[4] = 'x';
      charArray0[5] = 'G';
      charArray0[6] = 'A';
      charArray0[7] = 'L';
      charArray0[8] = '}';
      // Undeclared exception!
      try { 
        IOUtils.getChars(1290L, 965, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 964
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IOUtils.stringSize((-2L));
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      // Undeclared exception!
      try { 
        IOUtils.getChars((-2L), 1, iOUtils0.ASCII_CHARS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      IOUtils.close(stringWriter0);
      String string0 = IOUtils.getStringProperty("[EOq&.P%3K}J=A-o");
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      IOUtils.isIdent('');
      char[] charArray0 = new char[7];
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.getChars(32, 999999, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 999998
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "com.alibaba.fastjson.JSONException";
      IOUtils.isValidJsonpQueryParam("com.alibaba.fastjson.JSONException");
      IOUtils.stringSize(0);
      IOUtils.firstIdentifier('Z');
      IOUtils.firstIdentifier('<');
      IOUtils.stringSize(35);
      IOUtils.isIdent('V');
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      char[] charArray0 = new char[2];
      charArray0[0] = 'Z';
      charArray0[1] = 'Z';
      IOUtils.decodeUTF8(byteArray0, 0, (-702), charArray0);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      uTF8Decoder0.reset();
      // Undeclared exception!
      try { 
        uTF8Decoder0.detectedCharset();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      char[] charArray0 = new char[6];
      charArray0[1] = 'A';
      byte[] byteArray0 = IOUtils.decodeBase64(charArray0, 1, 1);
      assertArrayEquals(new byte[] {}, byteArray0);
      
      boolean boolean0 = IOUtils.isIdent('A');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      IOUtils.isIdent('');
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("5b|RH zs<E}3Js`#<", (-187), (-3616));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[1];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.read(charArray0);
      String string0 = IOUtils.readAll(charArrayReader0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter();
      stringWriter0.close();
      IOUtils.close(stringWriter0);
      char[] charArray0 = new char[7];
      charArray0[0] = 'C';
      charArray0[1] = '%';
      charArray0[2] = 'V';
      charArray0[3] = '(';
      charArray0[4] = 'J';
      charArray0[5] = 'e';
      charArray0[6] = 'D';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      String string0 = IOUtils.readAll(charArrayReader0);
      assertEquals("C%V(JeD", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IOUtils.stringSize(100L);
      char[] charArray0 = new char[7];
      charArray0[0] = 'n';
      char char0 = 't';
      charArray0[1] = 't';
      charArray0[2] = '3';
      charArray0[3] = 'Y';
      char char1 = ';';
      charArray0[4] = ';';
      charArray0[5] = 'v';
      char char2 = 'U';
      charArray0[6] = 'U';
      byte[] byteArray0 = IOUtils.decodeBase64(charArray0, 3, 3);
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 3, 127, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeBase64(iOUtils0.DIGITS, 2, 2);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      String string0 = "sJJQ/UDf9F";
      IOUtils.decodeBase64("sJJQ/UDf9F");
      IOUtils.isValidJsonpQueryParam("utf8 decode error, ");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)0;
      char[] charArray0 = new char[0];
      IOUtils.decodeUTF8(byteArray0, (byte)0, (byte)0, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, (byte)0, 426, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64(":S${,BJ");
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-1), (byte)4}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = IOUtils.specicalFlags_singleQuotes;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 114, 114, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = 6;
      char[] charArray0 = new char[10];
      charArray0[0] = '|';
      IOUtils.getChars(0, 6, charArray0);
      IOUtils.firstIdentifier('|');
      IOUtils.getChars(0L, 6, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("p", 0, 6);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IOUtils.isIdent('F');
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.getChars(76, 6, iOUtils0.ASCII_CHARS);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      IOUtils.decodeBase64("fastjson.compatibleWithFieldName", 16, 5);
      boolean boolean0 = IOUtils.isIdent('=');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-119);
      byteArray0[1] = (byte)90;
      char[] charArray0 = new char[6];
      charArray0[0] = 'q';
      charArray0[1] = '.';
      charArray0[2] = 'N';
      charArray0[3] = 'D';
      charArray0[4] = 'N';
      charArray0[5] = '.';
      int int0 = IOUtils.decodeUTF8(byteArray0, 0, 3678080, charArray0);
      assertArrayEquals(new char[] {'q', '.', 'N', 'D', 'N', '.'}, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[6];
      charArray0[1] = 'A';
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)20;
      byteArray0[1] = (byte) (-11);
      byteArray0[2] = (byte)95;
      byteArray0[3] = (byte) (-76);
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 0, (byte)95, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      IOUtils.stringSize(0L);
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeBase64("e,l");
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 1, 1);
      int int0 = 128;
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.replaceChars, 128, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 128
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = 'i';
      charArray0[1] = 'n';
      charArray0[2] = '~';
      charArray0[3] = '1';
      charArray0[4] = 'N';
      IOUtils.getChars((byte)2, (int) (byte)5, charArray0);
      assertArrayEquals(new char[] {'i', 'n', '~', '1', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.getChars((byte)30, 17, iOUtils0.CA);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = 'i';
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset charset0 = IOUtils.UTF8;
      ByteBuffer byteBuffer0 = charset0.encode("Tua");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      IOUtils.decode(uTF8Decoder0, byteBuffer0, charBuffer0);
      assertEquals(3, charBuffer0.remaining());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      byte[] byteArray0 = IOUtils.decodeBase64("sJJQ/UDf9F");
      char[] charArray0 = new char[4];
      charArray0[0] = 's';
      charArray0[1] = 'C';
      charArray0[2] = 's';
      charArray0[3] = '2';
      IOUtils.encodeUTF8(charArray0, (-3887), (-3887), byteArray0);
      IOUtils.firstIdentifier('s');
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.getChars((-3887), 32, iOUtils0.replaceChars);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      boolean boolean0 = IOUtils.isIdent('h');
      boolean boolean1 = IOUtils.isValidJsonpQueryParam("");
      assertFalse(boolean1 == boolean0);
      
      char[] charArray0 = new char[9];
      charArray0[0] = 'h';
      charArray0[1] = 'h';
      charArray0[2] = 'h';
      charArray0[3] = 'h';
      charArray0[4] = 'h';
      charArray0[5] = 'h';
      charArray0[6] = '6';
      charArray0[7] = 'h';
      charArray0[8] = 'h';
      IOUtils.getChars((byte)28, 7, charArray0);
      assertArrayEquals(new char[] {'h', 'h', 'h', 'h', 'h', '2', '8', 'h', 'h'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-44);
      char[] charArray0 = new char[5];
      charArray0[0] = 'X';
      charArray0[1] = 's';
      charArray0[2] = '`';
      charArray0[3] = '?';
      charArray0[4] = 'Q';
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 0, 3968, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int int0 = IOUtils.stringSize(1L);
      assertEquals(1, int0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("ldB_|chbP@rs;{[");
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[5];
      int int1 = IOUtils.decodeUTF8(byteArray0, (byte)4, (byte)4, charArray0);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-1), (byte) (-3), (byte) (-56), (byte)91, (byte) (-1), (byte) (-6), (byte) (-20)}, byteArray0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IOUtils.stringSize(100L);
      char[] charArray0 = new char[7];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[0] = 'n';
      charArray0[1] = 't';
      charArray0[2] = '3';
      charArray0[3] = 'Y';
      charArray0[4] = ';';
      IOUtils.decodeBase64("XT=M;zQb8v<hSU7`", 3, 3);
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)7, 0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      byte[] byteArray0 = IOUtils.decodeBase64("fastjson.compatibleWithFieldName", 2, 2);
      assertArrayEquals(new byte[] {(byte) (-78)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = IOUtils.stringSize(0L);
      IOUtils iOUtils0 = new IOUtils();
      int int1 = IOUtils.encodeUTF8(iOUtils0.ASCII_CHARS, 61, 1, iOUtils0.specicalFlags_singleQuotes);
      assertTrue(int1 == int0);
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      IOUtils.stringSize(100L);
      IOUtils.decodeBase64("ldB_|cbP@rs;{[");
      IOUtils.isValidJsonpQueryParam("utf8 decode error, ");
      char[] charArray0 = new char[9];
      charArray0[0] = '|';
      charArray0[1] = '|';
      charArray0[2] = '|';
      charArray0[3] = '|';
      charArray0[4] = '|';
      charArray0[5] = 'm';
      charArray0[6] = '|';
      charArray0[7] = '|';
      charArray0[8] = '|';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-1712L), (int) (byte)4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      IOUtils.stringSize(100L);
      char[] charArray0 = new char[7];
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-64);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      IOUtils.decodeUTF8(byteArray0, (byte)0, 807, charArray0);
      IOUtils.decodeUTF8(byteArray0, 3506, (byte)0, charArray0);
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)37, 3506, iOUtils0.DIGITS);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3505
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[2] = '\u00BE';
      charArray0[3] = '\u00BE';
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)52;
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 2, (byte)52, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      IOUtils.stringSize((-2L));
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeBase64("fastjson.compatibleWithJavaBean", 1, 1);
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 1, 1);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.replaceChars, 128, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 128
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      IOUtils.close((Closeable) null);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize(1000L);
      IOUtils iOUtils1 = new IOUtils();
      IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", 4, 4);
      IOUtils.getChars(1000L, 4, iOUtils0.replaceChars);
      IOUtils.decodeBase64("");
      IOUtils.loadPropertiesFromFile();
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      IOUtils.stringSize(0L);
      IOUtils iOUtils0 = new IOUtils();
      char[] charArray0 = new char[9];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charArray0[2] = 'H';
      charArray0[3] = 'k';
      charArray0[4] = 'M';
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 1, 63);
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int int0 = IOUtils.stringSize(3427L);
      assertEquals(4, int0);
      
      char[] charArray0 = new char[8];
      charArray0[0] = 'A';
      charArray0[1] = 'A';
      charArray0[2] = 'A';
      charArray0[3] = 'A';
      charArray0[0] = 'A';
      charArray0[5] = 'A';
      charArray0[6] = 'A';
      charArray0[7] = 'A';
      byte[] byteArray0 = IOUtils.decodeBase64(charArray0, 0, 4);
      int int1 = IOUtils.encodeUTF8(charArray0, 'A', 0, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      IOUtils.firstIdentifier('N');
      byte[] byteArray0 = IOUtils.decodeBase64("0*=");
      char[] charArray0 = new char[2];
      charArray0[0] = 'N';
      charArray0[1] = 'N';
      IOUtils.encodeUTF8(charArray0, 1, 1, byteArray0);
      assertArrayEquals(new byte[] {(byte)78}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      IOUtils.firstIdentifier('N');
      byte[] byteArray0 = IOUtils.decodeBase64("0*=");
      char[] charArray0 = new char[2];
      charArray0[0] = 'w';
      charArray0[1] = 'N';
      IOUtils.encodeUTF8(charArray0, 1, 1, byteArray0);
      assertArrayEquals(new byte[] {(byte)78}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      IOUtils.getStringProperty("HI`f:H");
      IOUtils.isValidJsonpQueryParam((String) null);
      char[] charArray0 = new char[9];
      charArray0[0] = '\\';
      charArray0[1] = 'q';
      charArray0[2] = 'K';
      charArray0[3] = '^';
      charArray0[4] = '!';
      charArray0[5] = 'W';
      charArray0[6] = '@';
      charArray0[7] = '1';
      charArray0[8] = '@';
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 318, (-1164));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -847
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("com.alibaba.fastjson.util.UTF8Decoder");
      char[] charArray0 = new char[2];
      charArray0[0] = 'd';
      charArray0[1] = 'J';
      IOUtils.decodeUTF8(byteArray0, 19, 5057, charArray0);
      IOUtils iOUtils0 = new IOUtils();
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("com.alibaba.fastjson.util.UTF8Decoder");
      char[] charArray0 = new char[4];
      int int0 = IOUtils.decodeUTF8(byteArray0, 19, 30, charArray0);
      assertArrayEquals(new char[] {'\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
      assertEquals((-1), int0);
      
      int int1 = IOUtils.stringSize((long) 19);
      assertEquals(2, int1);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      IOUtils iOUtils1 = new IOUtils();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(")=W", 1, 1);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      IOUtils.stringSize(1L);
      byte[] byteArray0 = IOUtils.decodeBase64("i I>B\"Y9g9o");
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[9];
      charArray0[0] = '';
      charArray0[1] = ')';
      charArray0[2] = '';
      charArray0[3] = 'u';
      charArray0[4] = 'u';
      charArray0[5] = ')';
      charArray0[6] = '';
      charArray0[7] = 'C';
      charArray0[8] = 'u';
      int int0 = IOUtils.decodeUTF8(byteArray0, (byte)4, 1, charArray0);
      assertEquals((-1), int0);
      
      boolean boolean0 = IOUtils.isIdent('u');
      assertTrue(boolean0);
      
      int int1 = IOUtils.stringSize(1L);
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("com.alibabafastjson.til.UTF8Decoder");
      char[] charArray0 = new char[4];
      int int0 = IOUtils.decodeUTF8(byteArray0, 19, 30, charArray0);
      assertArrayEquals(new char[] {'1', '|', '\r', '\u0000'}, charArray0);
      assertEquals((-1), int0);
      
      int int1 = IOUtils.stringSize((-609L));
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("com.alibaba.fastjson.util.UTFDecder");
      char[] charArray0 = new char[1];
      int int0 = IOUtils.decodeUTF8(byteArray0, 16, 19, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      int int0 = IOUtils.stringSize(0L);
      assertEquals(1, int0);
      
      IOUtils iOUtils0 = new IOUtils();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("v");
      PrintWriter printWriter0 = mockPrintWriter0.append('\\');
      IOUtils.close(printWriter0);
      IOUtils.loadPropertiesFromFile();
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 1, (int) '\\');
      boolean boolean0 = IOUtils.isIdent('a');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      IOUtils.firstIdentifier('\u009F');
      char[] charArray0 = new char[5];
      charArray0[0] = '\u009F';
      charArray0[1] = '\u009F';
      charArray0[2] = '\u009F';
      charArray0[3] = '\u009F';
      charArray0[4] = '\u009F';
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-49);
      byteArray0[1] = (byte)52;
      byteArray0[2] = (byte)45;
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 2, 1574, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      IOUtils.isIdent('\u010B');
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[7];
      charArray0[0] = '\u010B';
      charArray0[1] = '\u010B';
      charArray0[2] = '\u010B';
      charArray0[3] = '\u010B';
      charArray0[4] = '\u010B';
      charArray0[5] = '\u010B';
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      charArray0[6] = '=';
      // Undeclared exception!
      try { 
        IOUtils.getChars(1001, 1001, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1000
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      int int0 = IOUtils.stringSize(1L);
      assertEquals(1, int0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("ldB_|chbP@rs;{[");
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[1];
      charArray0[0] = 'a';
      int int1 = IOUtils.decodeUTF8(byteArray0, (byte)4, 1, charArray0);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-1), (byte) (-3), (byte) (-56), (byte)91, (byte) (-1), (byte) (-6), (byte) (-20)}, byteArray0);
      assertEquals((-1), int1);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      boolean boolean0 = IOUtils.firstIdentifier('\u0107');
      assertFalse(boolean0);
      
      int int0 = IOUtils.stringSize(2194);
      assertEquals(4, int0);
  }
}
