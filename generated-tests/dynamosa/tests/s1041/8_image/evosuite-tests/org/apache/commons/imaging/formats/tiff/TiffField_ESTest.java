/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 05 19:23:36 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-45);
      byteArray0[4] = (byte)11;
      TiffField tiffField0 = new TiffField(1307, 1307, fieldTypeShort0.SRATIONAL, 1307, 4096, byteArray0, byteOrder0, (byte)104);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(19, int0);
      assertEquals(1307, tiffField0.getTag());
      assertEquals(104, tiffField0.getSortHint());
      assertEquals(4096, tiffField0.getOffset());
      assertEquals(1307, tiffField0.getDirectoryType());
      assertEquals(10456, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)11;
      TiffField tiffField0 = new TiffField(1307, 1307, fieldTypeShort0.SRATIONAL, 1307, 4096, byteArray0, byteOrder0, (byte)104);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(10456, tiffField0.getBytesLength());
      assertEquals(1307, tiffField0.getTag());
      assertEquals(104, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(4096, tiffField0.getOffset());
      assertEquals(1307, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(3328, "MD PrepTime");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(647, 0, fieldTypeDouble0.SLONG, 1L, 1L, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(647, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[59];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(28, (-4904), fieldTypeLong0, 4294967315L, 1L, byteArray0, byteOrder0, 3510);
      StringWriter stringWriter0 = new StringWriter(28);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "GPSAreaInformation");
      assertEquals("GPSAreaInformation: 28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (4294967315 SLong)\n", stringWriter0.toString());
      assertEquals(3510, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, 2767, fieldTypeShort0, (byte)0, 3083L, byteArray0, byteOrder0, (byte)73);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3083, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(73, tiffField0.getSortHint());
      assertEquals("", string0);
      assertEquals(2767, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[41];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((byte)92, (byte)92, fieldTypeShort0, (byte)92, (byte)92, byteArray0, byteOrder0, (byte)92);
      tiffField0.getValue();
      assertEquals(92, tiffField0.getSortHint());
      assertEquals(92, tiffField0.getTag());
      assertEquals(92, tiffField0.getOffset());
      assertEquals(184, tiffField0.getBytesLength());
      assertEquals(92, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[59];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(28, (-4904), fieldTypeLong0, 4294967315L, 1L, byteArray0, byteOrder0, 3510);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(3510, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-4904), tiffField0.getDirectoryType());
      assertEquals(28, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(2132673415, 4, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, 2132673415);
      int int0 = tiffField0.getTag();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2132673415, tiffField0.getSortHint());
      assertEquals(2132673415, int0);
      assertEquals(4, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1165), (-743), fieldTypeShort0, (byte)107, 2540L, byteArray0, byteOrder0, 2146837788);
      int int0 = tiffField0.getTag();
      assertEquals((-1165), int0);
      assertEquals(2146837788, tiffField0.getSortHint());
      assertEquals((-743), tiffField0.getDirectoryType());
      assertEquals(2540, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-890), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-14);
      byteArray0[1] = (byte)1;
      TiffField tiffField0 = new TiffField(2147258662, (-3778), fieldTypeAscii0, 4L, 16L, byteArray0, byteOrder0, (byte)19);
      String string0 = tiffField0.getStringValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(2147258662, tiffField0.getTag());
      assertEquals((-3778), tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(379, 517, fieldTypeByte0, 517, (-417L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(517, tiffField0.getDirectoryType());
      assertEquals((-417), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(379, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0L, 0L, byteArray0, byteOrder0, (byte) (-4));
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-4), int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1165), (-743), fieldTypeShort0, (byte)107, 2540L, byteArray0, byteOrder0, 2146837788);
      int int0 = tiffField0.getOffset();
      assertEquals((-1165), tiffField0.getTag());
      assertEquals(2146837788, tiffField0.getSortHint());
      assertEquals((-743), tiffField0.getDirectoryType());
      assertEquals(2540, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1123, "'dG");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1123, fieldTypeRational0, 999L, (-1L), byteArray0, byteOrder0, (-179));
      int int0 = tiffField0.getOffset();
      assertEquals(1123, tiffField0.getDirectoryType());
      assertEquals((-1), int0);
      assertEquals((-179), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)109;
      TiffField tiffField0 = new TiffField((byte)109, (byte)73, fieldTypeShort0, 1L, 4942L, byteArray0, byteOrder0, (byte)108);
      tiffField0.getIntValueOrArraySum();
      assertEquals(109, tiffField0.getTag());
      assertEquals(108, tiffField0.getSortHint());
      assertEquals(73, tiffField0.getDirectoryType());
      assertEquals(4942, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[12];
      byteArray0[0] = (byte) (-36);
      TiffField tiffField0 = new TiffField((-2146723475), (-2146723475), fieldTypeShort0, 2118L, 1L, byteArray0, byteOrder0, (-2146723475));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(4236, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-2146723475), tiffField0.getTag());
      assertEquals((-9216), int0);
      assertEquals((-2146723475), tiffField0.getSortHint());
      assertEquals((-2146723475), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, "Lb?");
      TiffField tiffField0 = new TiffField((byte)50, (-1096), fieldTypeByte0, 1, (-603L), byteArray0, byteOrder0, 1);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-603), tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1096), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      char[] charArray0 = new char[17];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)65;
      TiffField tiffField0 = new TiffField(19, (-2795), fieldTypeShort0, 1L, 2893L, byteArray0, byteOrder0, (-2795));
      tiffField0.getIntValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(19, tiffField0.getTag());
      assertEquals((-2795), tiffField0.getSortHint());
      assertEquals(2893, tiffField0.getOffset());
      assertEquals((-2795), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-108);
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0.LONG, 1, 1, byteArray0, byteOrder0, 1328);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1328, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(16, (String) null);
      TiffField tiffField0 = new TiffField((-389), 16, fieldTypeRational0, 255L, (-389), byteArray0, byteOrder0, (-52));
      tiffField0.getFieldTypeName();
      assertEquals((-389), tiffField0.getTag());
      assertEquals(16, tiffField0.getDirectoryType());
      assertEquals((-389), tiffField0.getOffset());
      assertEquals((-52), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, (-1320));
      tiffField0.getFieldTypeName();
      assertEquals((-1320), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-890), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2147258662, (-3778), fieldTypeAscii0, 4L, 16L, byteArray0, byteOrder0, (byte)19);
      tiffField0.getFieldTypeName();
      assertEquals(2147258662, tiffField0.getTag());
      assertEquals((-3778), tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getOffset());
      assertEquals(19, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-55), 6, (FieldType) null, 6, (-2162L), byteArray0, byteOrder0, 6);
      tiffField0.getFieldType();
      assertEquals((-2162), tiffField0.getOffset());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals((-55), tiffField0.getTag());
      assertEquals(6, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[12];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((byte)0, "ImageColorValue");
      TiffField tiffField0 = new TiffField((byte)0, 2690, fieldTypeFloat0, 62L, (-1L), byteArray0, byteOrder0, 34853);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2690, tiffField0.getDirectoryType());
      assertEquals(34853, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33434, 33434, fieldTypeRational0, (-1839L), 33434, byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(33434, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(33434, tiffField0.getOffset());
      assertEquals(33434, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[21];
      TiffField tiffField0 = new TiffField(1, 3644, fieldTypeShort0, 1L, 255L, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals(3644, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)95;
      TiffField tiffField0 = new TiffField(11, 2141847207, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, (-1717986917));
      tiffField0.getDoubleValue();
      assertEquals(11, tiffField0.getTag());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(2141847207, tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-1);
      TiffField tiffField0 = new TiffField(254, 1230, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1230, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(254, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, (-2449));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(50, int0);
      assertEquals((-2449), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte) (-39), (FieldType) null, (-848L), (-278L), byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-39), int0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-278), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 50, fieldTypeByte0, 3681L, 3681L, byteArray0, byteOrder0, 50);
      tiffField0.getCount();
      assertEquals(1, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(3681, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(5, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5, 1, fieldTypeShort0, (-906L), (-906L), byteArray0, byteOrder0, (byte)58);
      tiffField0.getCount();
      assertEquals((-906), tiffField0.getOffset());
      assertEquals(58, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-489), (-489), fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, (byte)86);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, int0);
      assertEquals((-489), tiffField0.getTag());
      assertEquals((-489), tiffField0.getDirectoryType());
      assertEquals(86, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(50936, "");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1562), (-1562), fieldTypeLong0, (-1L), (-1L), byteArray0, (ByteOrder) null, (-3282));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1562), tiffField0.getTag());
      assertEquals((-4), int0);
      assertEquals((-3282), tiffField0.getSortHint());
      assertEquals((-1562), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1856), "ModelTransformationTag");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-965), (-1848), fieldTypeAscii0.DOUBLE, 962L, (-1848), byteArray0, byteOrder0, (-1856));
      tiffField0.getByteOrder();
      assertEquals((-1848), tiffField0.getDirectoryType());
      assertEquals((-965), tiffField0.getTag());
      assertEquals((-1856), tiffField0.getSortHint());
      assertEquals((-1848), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 41993, fieldTypeAscii0, (byte)86, 1311L, byteArray0, byteOrder0, 2274);
      tiffField0.getByteArrayValue();
      assertEquals(41993, tiffField0.getDirectoryType());
      assertEquals(2274, tiffField0.getSortHint());
      assertEquals(86, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1311, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-2147337728), (byte)86, fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, byteArray1.length);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2147337728), tiffField0.getTag());
      assertEquals(86, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)113, 50, fieldTypeShort0, (byte)0, (byte) (-96), byteArray0, byteOrder0, (byte)109);
      File file0 = MockFile.createTempFile("c|TK!V g", "ZnB)C1*uem^");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(39L, file0.length());
      assertEquals((-96), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(4722, "1e3VBh5<*Yk++(lk");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4722, 4722, fieldTypeRational0, (-1L), (-1130L), byteArray0, byteOrder0, 6);
      File file0 = MockFile.createTempFile("The magic number cannot be null", "");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)19, (byte)19, fieldTypeRational0, (byte)19, (byte)19, (byte[]) null, byteOrder0, (byte)19);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte) (-6), (byte) (-6), fieldTypeRational0, (byte) (-6), (byte) (-6), byteArray0, byteOrder0, (byte) (-6));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1623, 1623, fieldTypeShort0, 1623, (-2306L), (byte[]) null, byteOrder0, 1623);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte) (-53), (byte) (-53), fieldTypeRational0, (byte) (-53), (byte) (-53), byteArray0, byteOrder0, (byte) (-53));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)19, 1, fieldTypeRational0, 1, (byte)19, byteArray0, byteOrder0, (byte)19);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(40091, 40091, fieldTypeRational0, 40091, 40091, byteArray0, byteOrder0, 40091);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField((-2143), (-2143), fieldTypeShort0, (-2143), (-2143), byteArray0, byteOrder0, 4116);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(134, 134, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 134);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-874), (-874), (FieldType) null, (-874), (-874), byteArray0, byteOrder0, (-874));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-63), (-63), fieldTypeShort0, (-63), (-63), byteArray0, byteOrder0, (-63));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), (FieldType) null, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)43, (byte)43, fieldTypeRational0, (byte)43, (byte)43, (byte[]) null, byteOrder0, (byte)43);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField((-1320), (-1320), fieldTypeByte0, (-1320), (-1320), byteArray0, byteOrder0, (-1320));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(40091, 40091, fieldTypeRational0, 2576L, 40091, byteArray0, byteOrder0, 40091);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), (FieldType) null, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte) (-7), (byte) (-7), fieldTypeRational0, (byte) (-7), (byte) (-7), byteArray0, byteOrder0, (byte) (-7));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)20, 1, fieldTypeRational0, 1, (byte)20, byteArray0, byteOrder0, (byte)20);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[346];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(41990, 41990, (FieldType) null, 41990, 41990, byteArray0, byteOrder0, 41990);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3018), (-3018), fieldTypeRational0, (-3018), (-3018), byteArray0, byteOrder0, (-3018));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(28, (-2167), fieldTypeShort0, (-2167), (-8589934592L), byteArray0, byteOrder0, 28);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)11, (byte)11, fieldTypeRational0, (byte)11, (byte)11, (byte[]) null, byteOrder0, (byte)11);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte) (-32), (byte) (-32), fieldTypeRational0, (byte) (-32), (byte) (-32), byteArray0, byteOrder0, (byte) (-32));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(33953, 33953, fieldTypeShort0, 1L, 33953, byteArray0, byteOrder0, 33953);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-8), (-8), (FieldType) null, (-8), (-8), byteArray0, byteOrder0, (-8));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-7), (-7), fieldTypeShort0, (-7), (-7), byteArray0, byteOrder0, (-7));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(43, 43, fieldTypeRational0, 1L, 43, byteArray0, byteOrder0, 43);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0L, 0L, byteArray0, byteOrder0, (byte) (-4));
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-283), (-283), fieldTypeRational0, (-283), (-283), byteArray0, byteOrder0, (-283));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(Integer.MAX_VALUE, Integer.MAX_VALUE, fieldTypeRational0, (-642L), (-2629L), byteArray0, byteOrder0, (-3202));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.commons.io.filefilter.WildcardFileFilter");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "org.apache.commons.io.filefilter.WildcardFileFilter");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-1479), 3778, fieldTypeRational0, 1L, 3778, byteArray0, byteOrder0, (-1479));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("LocalizedCameraModel");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "LocalizedCameraModel");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-2569), (-2569), fieldTypeRational0, (-2569), (-2569), byteArray0, byteOrder0, (-2569));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(65535, (byte)103, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 17);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[41];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-542), (-542), fieldTypeAscii0, (-542), (-542), byteArray0, byteOrder0, (-542));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)39, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-3385), (byte)63, fieldTypeRational0, 804L, (-2146387432), byteArray0, byteOrder0, (-3385));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("oj8#9?m>R");
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals((-2146387432), tiffField0.getOffset());
      assertEquals(6432, tiffField0.getBytesLength());
      assertEquals((-3385), tiffField0.getTag());
      assertEquals((-3385), tiffField0.getSortHint());
      assertEquals(63, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-12), 37396, fieldTypeAscii0, (byte)0, (-1996L), byteArray0, byteOrder0, 379);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-12), tiffField0.getTag());
      assertEquals((-1996), tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(37396, tiffField0.getDirectoryType());
      assertEquals(379, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0, (byte)86, (-686), byteArray0, byteOrder0, (-686));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-686), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(0, tiffField0.getTag());
      assertEquals((-686), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(641, (byte)63, fieldTypeRational0, (byte)63, (byte)63, byteArray0, (ByteOrder) null, 641);
      tiffField0.getByteOrder();
      assertEquals(63, tiffField0.getDirectoryType());
      assertEquals(641, tiffField0.getTag());
      assertEquals(641, tiffField0.getSortHint());
      assertEquals(63, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)43, (byte)43, fieldTypeRational0, (byte)43, (byte)43, (byte[]) null, byteOrder0, (byte)43);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-526), "GPSDestLongitudeRef");
      TiffField tiffField0 = new TiffField(64, 34853, fieldTypeAscii0, 2046L, 0L, byteArray0, byteOrder0, (-3288));
      tiffField0.getFieldType();
      assertEquals((-3288), tiffField0.getSortHint());
      assertEquals(34853, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(64, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, (byte)0, 2147483647L, byteArray0, byteOrder0, (-1301));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals((-1301), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33445, 33445, fieldTypeShort0.DOUBLE, 33445, 33445, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "vW|Z");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1190), (-1190), fieldTypeFloat0, 0L, 0L, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(3328, 1, fieldTypeByte0, 3328, 0, byteArray0, byteOrder0, (byte)50);
      int int0 = tiffField0.getOffset();
      assertEquals(0, int0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(3328, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-214), "$Apltf");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(330, 2014, fieldTypeRational0, 4L, 330, byteArray0, byteOrder0, (-2126));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-2126), tiffField0.getSortHint());
      assertEquals(2014, tiffField0.getDirectoryType());
      assertEquals(330, tiffField0.getOffset());
      assertEquals(330, tagInfo0.tag);
      assertEquals(330, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 4641L, (-2250L), byteArray0, byteOrder0, (byte) (-108));
      int int0 = tiffField0.getTag();
      assertEquals((-108), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-2250), tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(32897, 32897, fieldTypeShort0, 0L, 4L, (byte[]) null, byteOrder0, 2145372061);
      tiffField0.getCount();
      assertEquals(2145372061, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(32897, tiffField0.getDirectoryType());
      assertEquals(32897, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 2479L, (-1291L), (byte[]) null, byteOrder0, 2170);
      int int0 = tiffField0.getBytesLength();
      assertEquals(9916, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1291), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2170, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[21];
      TiffField tiffField0 = new TiffField((byte)0, 2641, fieldTypeShort0.FLOAT, 2641, 2641, byteArray0, byteOrder0, 2641);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(2641, tiffField0.getOffset());
      assertEquals(2641, tiffField0.getSortHint());
      assertEquals(2641, tiffField0.getDirectoryType());
      assertEquals("0 (0x0: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)63, (byte)63, fieldTypeRational0, (byte)63, (byte)63, byteArray0, byteOrder0, (byte)63);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)63, (byte)63, fieldTypeRational0, (byte)63, (byte)63, byteArray0, byteOrder0, (byte)63);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[41];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(746, 746, fieldTypeLong0, 746, 746, byteArray0, byteOrder0, 746);
      tiffField0.getIntValueOrArraySum();
      assertEquals(746, tiffField0.getOffset());
      assertEquals(746, tiffField0.getSortHint());
      assertEquals(746, tiffField0.getDirectoryType());
      assertEquals(746, tiffField0.getTag());
      assertEquals(2984, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[21];
      TiffField tiffField0 = new TiffField((byte)0, 2690, fieldTypeShort0.FLOAT, 2690, 2690, byteArray0, byteOrder0, 2690);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@3925a338 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)63, (byte)63, fieldTypeRational0, (byte)63, (byte)63, byteArray0, byteOrder0, (byte)63);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33993, 33993, fieldTypeByte0, 33993, 33993, byteArray0, byteOrder0, 33993);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@90c98ef for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33457, 33457, fieldTypeShort0.DOUBLE, 33457, 33457, byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(33457, tiffField0.getOffset());
      assertEquals(267656, tiffField0.getBytesLength());
      assertEquals(33457, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(33457, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37397, 37397, fieldTypeShort0.IFD, 37397, 37397, byteArray0, byteOrder0, 37397);
      tiffField0.getDoubleArrayValue();
      assertEquals(37397, tiffField0.getDirectoryType());
      assertEquals(37397, tiffField0.getSortHint());
      assertEquals(149588, tiffField0.getBytesLength());
      assertEquals(37397, tiffField0.getTag());
      assertEquals(37397, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[21];
      TiffField tiffField0 = new TiffField((byte)0, 630, fieldTypeShort0.FLOAT, 630, 630, byteArray0, byteOrder0, 630);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(630, tiffField0.getDirectoryType());
      assertEquals(630, tiffField0.getSortHint());
      assertEquals(2520, tiffField0.getBytesLength());
      assertEquals(630, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)15, (byte)15, fieldTypeRational0, (byte)15, (byte)15, byteArray0, byteOrder0, (byte)15);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(15, tiffField0.getTag());
      assertEquals(15, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(120, tiffField0.getBytesLength());
      assertEquals(15, tiffField0.getOffset());
      assertEquals(15, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)63, (byte)63, fieldTypeRational0, (byte)63, (byte)63, byteArray0, byteOrder0, (byte)63);
      tiffField0.getDoubleArrayValue();
      assertEquals(504, tiffField0.getBytesLength());
      assertEquals(63, tiffField0.getOffset());
      assertEquals(63, tiffField0.getDirectoryType());
      assertEquals(63, tiffField0.getTag());
      assertEquals(63, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[31];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeShort0, 4, 4, byteArray0, byteOrder0, 4);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(4, doubleArray0.length);
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[115];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34, 34, fieldTypeLong0, 34, 34, byteArray0, byteOrder0, 34);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(34, tiffField0.getOffset());
      assertEquals(34, tiffField0.getDirectoryType());
      assertEquals(34, tiffField0.getTag());
      assertEquals(34, tiffField0.getSortHint());
      assertEquals(28, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0.UNDEFINED, 2495L, (byte)0, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@2b2b3502 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)63, (byte)63, fieldTypeRational0, (byte)63, (byte)63, byteArray0, byteOrder0, (byte)63);
      tiffField0.getIntArrayValue();
      assertEquals(63, tiffField0.getOffset());
      assertEquals(63, tiffField0.getDirectoryType());
      assertEquals(63, tiffField0.getSortHint());
      assertEquals(63, tiffField0.getTag());
      assertEquals(504, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)63, (byte)63, fieldTypeRational0, (byte)63, (byte)63, byteArray0, byteOrder0, (byte)63);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[314];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 104L, byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(104, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeShort0, 9, 9, byteArray0, byteOrder0, 9);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(9, tiffField0.getOffset());
      assertEquals(9L, tiffField0.getCount());
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0, 0}, intArray0);
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getTag());
      assertEquals(9, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)63, (byte)63, fieldTypeRational0, (byte)63, (byte)63, byteArray0, byteOrder0, (byte)63);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@368a418b
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(34732, 34732, fieldTypeAscii0, 33953, 34732, byteArray0, byteOrder0, 42);
      String string0 = tiffField0.getStringValue();
      assertEquals(34732, tiffField0.getTag());
      assertEquals(34732, tiffField0.getOffset());
      assertEquals(42, tiffField0.getSortHint());
      assertEquals(33953, tiffField0.getBytesLength());
      assertEquals(34732, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[21];
      TiffField tiffField0 = new TiffField((byte)0, 2641, fieldTypeShort0.FLOAT, 2641, 2641, byteArray0, byteOrder0, 2641);
      String string0 = tiffField0.getTagName();
      assertEquals(2641, tiffField0.getSortHint());
      assertEquals(2641, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x0)", string0);
      assertEquals(2641, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(50780, 3328, fieldTypeByte0, 0L, (-30224L), (byte[]) null, byteOrder0, 50780);
      String string0 = tiffField0.getTagName();
      assertEquals(3328, tiffField0.getDirectoryType());
      assertEquals(50780, tiffField0.getSortHint());
      assertEquals("BestQualityScale", string0);
      assertEquals(50780, tiffField0.getTag());
      assertEquals((-30224), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(134, 134, fieldTypeRational0, 134, 134, byteArray0, byteOrder0, 134);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "z0}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[211];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-282), (-282), fieldTypeFloat0, 255L, (-282), byteArray0, byteOrder0, (-282));
      String string0 = tiffField0.toString();
      assertEquals((-282), tiffField0.getOffset());
      assertEquals(1020, tiffField0.getBytesLength());
      assertEquals("-282 (0xfffffee6: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (255 Float)", string0);
      assertEquals((-282), tiffField0.getSortHint());
      assertEquals((-282), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[297];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(44, 44, fieldTypeByte0, 376L, 376L, byteArray0, byteOrder0, 44);
      String string0 = tiffField0.toString();
      assertEquals("44 (0x2c: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (297) (376 SByte)", string0);
      assertEquals(44, tiffField0.getDirectoryType());
      assertEquals(44, tiffField0.getSortHint());
      assertEquals(376, tiffField0.getOffset());
      assertEquals(376, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[21];
      TiffField tiffField0 = new TiffField((byte)0, 2641, fieldTypeShort0.FLOAT, 2641, 2641, byteArray0, byteOrder0, 2641);
      tiffField0.dump();
      assertEquals(2641, tiffField0.getSortHint());
      assertEquals(2641, tiffField0.getDirectoryType());
      assertEquals(2641L, tiffField0.getCount());
      assertEquals(10564, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2641, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[217];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((-910), (-910), fieldTypeLong0, 1394L, 766L, byteArray0, byteOrder0, (-6656));
      String string0 = tiffField0.toString();
      assertEquals((-910), tiffField0.getDirectoryType());
      assertEquals(766, tiffField0.getOffset());
      assertEquals("-910 (0xfffffc72: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (1394 Long)", string0);
      assertEquals(5576, tiffField0.getBytesLength());
      assertEquals((-6656), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0.UNDEFINED, 2495L, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.dump();
      assertEquals(0, tiffField0.getTag());
      assertEquals(2495, tiffField0.getBytesLength());
      assertEquals(2495L, tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[114];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(41490, 41490, fieldTypeShort0, 41490, 41490, byteArray0, byteOrder0, 41490);
      String string0 = tiffField0.toString();
      assertEquals(41490, tiffField0.getDirectoryType());
      assertEquals(41490, tiffField0.getSortHint());
      assertEquals("41490 (0xa212: SecurityClassification): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (57) (41490 Short)", string0);
      assertEquals(82980, tiffField0.getBytesLength());
      assertEquals(41490, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37397, 37397, fieldTypeShort0.IFD, 37397, 37397, byteArray0, byteOrder0, 37397);
      tiffField0.dump();
      assertEquals(37397, tiffField0.getTag());
      assertEquals(37397, tiffField0.getOffset());
      assertEquals(37397, tiffField0.getSortHint());
      assertEquals(149588, tiffField0.getBytesLength());
      assertEquals(37397, tiffField0.getDirectoryType());
      assertEquals(37397L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[429];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)101, 1596, fieldTypeRational0, (byte)101, (byte)101, byteArray0, byteOrder0, 1596);
      String string0 = tiffField0.getValueDescription();
      assertEquals(101L, tiffField0.getCount());
      assertEquals(1596, tiffField0.getSortHint());
      assertEquals(1596, tiffField0.getDirectoryType());
      assertEquals(808, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(101, tiffField0.getTag());
      assertEquals(101, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(92, 92, fieldTypeAscii0, 92, 92, byteArray0, byteOrder0, 92);
      String string0 = tiffField0.getValueDescription();
      assertEquals(92, tiffField0.getTag());
      assertEquals(92, tiffField0.getBytesLength());
      assertEquals(92, tiffField0.getDirectoryType());
      assertEquals(92, tiffField0.getSortHint());
      assertEquals(92, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[24];
      TiffField tiffField0 = new TiffField((byte)0, 1, fieldTypeShort0.FLOAT, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((byte)98, (byte)98, fieldTypeShort0, (byte)98, 24L, byteArray0, (ByteOrder) null, (-5240));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-5240), (-5240));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(98, tiffField0.getTag());
      assertEquals(24, tiffField0.getOffset());
      assertEquals(196, tiffField0.getBytesLength());
      assertEquals((-5240), tiffField0.getSortHint());
      assertEquals(98, tiffField0.getDirectoryType());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[41];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((byte)92, (byte)92, fieldTypeShort0, (byte)92, (byte)92, byteArray0, byteOrder0, (byte)92);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)92, (byte)92);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(92, tiffField0.getTag());
      assertEquals(92L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(92, tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Short", string0);
      assertEquals(92, tiffField0.getSortHint());
      assertEquals(92, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)79, (byte)79, (FieldType) null, 114L, 114L, byteArray0, byteOrder0, (byte)79);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(265, 265, (FieldType) null, 265, 265, byteArray0, byteOrder0, 265);
      int int0 = tiffField0.getSortHint();
      assertEquals(265, tiffField0.getDirectoryType());
      assertEquals(265, int0);
      assertEquals(265L, tiffField0.getCount());
      assertEquals(265, tiffField0.getTag());
      assertEquals(265, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37397, 29, fieldTypeShort0, 37397, 37397, (byte[]) null, byteOrder0, 37397);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, "?l[hX");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)48, (byte)48, fieldTypeRational0, (byte)48, (byte)48, byteArray0, byteOrder0, (byte)48);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(48, tiffField0.getTag());
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(48, tiffField0.getDirectoryType());
      assertEquals(48L, tiffElement0.offset);
      assertNotNull(tiffElement0);
  }
}
