/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 05:34:15 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.time.chrono.ChronoLocalDate;
import java.util.regex.Pattern;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.classfile.Signature;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.ClassPathRepository;
import org.apache.bcel.util.MemorySensitiveClassPathRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "A;|BQVL~\"Q}#]u";
      Pattern.quote("\r");
      ClassPath classPath0 = new ClassPath("A;|BQVL~\"Q}#]u");
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      Class<MockHijrahDate> class0 = MockHijrahDate.class;
      memorySensitiveClassPathRepository0.loadClass(class0);
      ClassPathRepository classPathRepository0 = new ClassPathRepository(classPath0);
      JavaClass javaClass0 = classPathRepository0.loadClass("java.lang.reflect.AnnotatedType");
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "java.lang.reflect.AnnotatedType");
      // Undeclared exception!
      try { 
        Signature.translate("Q\rE");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal signature: Q\rE read Q
         //
         verifyException("org.apache.bcel.classfile.Signature", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Class2HTML.referenceType("A;|BQVL~\"Q}#]u");
      java.lang.ClassLoader.getSystemClassLoader();
      String string0 = "W{'";
      String string1 = "xv)Myl";
      ClassPath classPath0 = new ClassPath("xv)Myl");
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository(classPath0);
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository1 = new MemorySensitiveClassPathRepository(classPath0);
      Class<MockThaiBuddhistDate> class0 = MockThaiBuddhistDate.class;
      JavaClass javaClass0 = memorySensitiveClassPathRepository1.loadClass(class0);
      JavaClass javaClass1 = javaClass0.copy();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/1_bcel");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, false);
      Class2HTML class2HTML0 = null;
      try {
        class2HTML0 = new Class2HTML(javaClass1, "a,wU)k/W,");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = Class2HTML.toHTML("</TITLE></HEAD>\n<FRAMESET BORDER=1 cols=\"30%,*\">\n<FRAMESET BORDER=1 rows=\"80%,*\">\n<FRAME NAME=\"ConstantPool\" SRC=\"");
      assertEquals("&lt;/TITLE&gt;&lt;/HEAD&gt;\\n&lt;FRAMESET BORDER=1 cols=\"30%,*\"&gt;\\n&lt;FRAMESET BORDER=1 rows=\"80%,*\"&gt;\\n&lt;FRAME NAME=\"ConstantPool\" SRC=\"", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = Class2HTML.referenceType("@{'0LRTsfX$[l}S'");
      assertEquals("<A HREF=\"@{'0LRTsfX$.html\" TARGET=_top>@{'0LRTsfX$[l}S'</A>", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "&l$xPAGl";
      stringArray0[1] = "&l$xPAGl";
      stringArray0[2] = "-ip";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Class2HTML.referenceType("A;|BQVL~\"Q}#]u");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-dimensional";
      stringArray0[1] = "A;|BQVL~\"Q}#]u";
      stringArray0[2] = "-dimensional";
      java.lang.ClassLoader.getSystemClassLoader();
      ClassPath classPath0 = new ClassPath("java.lang.Object");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MemorySensitiveClassPathRepository memorySensitiveClassPathRepository0 = new MemorySensitiveClassPathRepository((ClassPath) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-3);
      ClassPathRepository classPathRepository0 = new ClassPathRepository((ClassPath) null);
      Class<MockJapaneseDate> class0 = MockJapaneseDate.class;
      JavaClass javaClass0 = classPathRepository0.loadClass(class0);
      classPathRepository0.removeClass(javaClass0);
      javaClass0.isSynthetic(false);
      javaClass0.isAbstract(false);
      javaClass0.setRepository(classPathRepository0);
      javaClass0.setClassName("A;|BQVL~\"Q}#]u");
      Class<ChronoLocalDate> class1 = ChronoLocalDate.class;
      classPathRepository0.loadClass(class1);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "A;|BQVL~\"Q}#]u");
      try { 
        classPath0.getBytes("java.nio.charset.Charset");
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Couldn't find: java.nio.charset.Charset.class
         //
         verifyException("org.apache.bcel.util.ClassPath", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "3Z~-L)0jO>";
      String string0 = "<A HREF=\"A;|BQVL~}#u.html\" TARGET=_top>A;|BQVL~}#u</A>";
      stringArray0[1] = "<A HREF=\"A;|BQVL~}#u.html\" TARGET=_top>A;|BQVL~}#u</A>";
      String string1 = "-zip";
      stringArray0[2] = "-zip";
      String string2 = "En ^l6y,Zso";
      stringArray0[3] = "En ^l6y,Zso";
      stringArray0[4] = "\" TARGET=ConstantPool>";
      String string3 = ")+q[e:$.;";
      stringArray0[5] = ")+q[e:$.;";
      String string4 = "<A HREF=\"";
      stringArray0[6] = "<A HREF=\"";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // En ^l6y,Zso (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-d";
      stringArray0[1] = "-d";
      Class2HTML.main(stringArray0);
      String string0 = Class2HTML.toHTML("-d");
      assertEquals("-d", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[2];
      stringArray0[0] = "-d";
      stringArray0[1] = "-d";
      Class2HTML.main(stringArray0);
      Class2HTML.main(stringArray0);
      // Undeclared exception!
      try { 
        Class2HTML.toHTML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Class2HTML.referenceType("A;|BQVL~\"Q}#]u");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-d";
      stringArray0[1] = "&lt;/TITLE&gt;&lt;/HEAD&gt;\n&lt;FRAMESET BORDER=1 cols=\"30%,*\"&gt;\n&lt;FRAMESET BORDER=1 rows=\"80%,*\"&gt;\n&lt;FRAME NAME=\"ConstantPool\" SRC=\"/";
      stringArray0[2] = "A;|BQVL~\"Q}#]u";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[10];
      stringArray0[0] = "-d";
      stringArray0[1] = "-d";
      FileSystemHandling.shouldAllThrowIOExceptions();
      Class2HTML.referenceType("-d");
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }
}
