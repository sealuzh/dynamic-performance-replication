/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 23:29:16 GMT 2018
 */

package weka.classifiers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Arrays;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.classifiers.CheckClassifier;
import weka.classifiers.Classifier;
import weka.classifiers.lazy.LWL;
import weka.core.TestInstances;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CheckClassifier_ESTest extends CheckClassifier_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(false, false, false, false, true, false, 1985);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '1985' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(false, true, true, true, true, false, 87);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '87' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.printAttributeSummary(false, true, false, false, true, false, 104);
      checkClassifier0.updateableClassifier();
      checkClassifier0.testsPerClassType(0, false, false, false);
      String[] stringArray0 = new String[9];
      String string0 = "weighted instances classifier...";
      stringArray0[0] = string0;
      checkClassifier0.setOptions(stringArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.multiInstanceHandler();
      checkClassifier0.updateableClassifier();
      checkClassifier0.updateableClassifier();
      String[] stringArray0 = new String[0];
      checkClassifier0.setOptions(stringArray0);
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(false, false, true, false, false, true, 10000);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '10000' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean[] booleanArray0 = checkClassifier0.instanceWeights(false, false, false, true, true, false, 0);
      assertTrue(Arrays.equals(new boolean[] {true, false}, booleanArray0));
      
      checkClassifier0.setSilent(false);
      checkClassifier0.getOptions();
      boolean[] booleanArray1 = checkClassifier0.canTakeOptions();
      assertTrue(Arrays.equals(new boolean[] {true, false}, booleanArray1));
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = true;
      boolean boolean1 = true;
      int int0 = (-633);
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(true, true, true, true, true, true, (-633));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-633' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean[] booleanArray0 = checkClassifier0.updatingEquality(false, false, true, true, true, true, 0);
      assertTrue(Arrays.equals(new boolean[] {false, false}, booleanArray0));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.declaresSerialVersionUID();
      checkClassifier0.canHandleNClasses(false, false, false, false, false, false, 24);
      checkClassifier0.canTakeOptions();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(true, true, true, false, true, true, 104);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '104' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(false, true, true, false, false, true, (-758));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-758' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.updatingEquality(true, true, false, false, false, true, 0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.updatingEquality(false, true, false, false, false, true, 0);
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleZeroTraining(true, true, false, true, true, true, 2750);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '2750' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.listOptions();
      checkClassifier0.canTakeOptions();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.instanceWeights(false, false, false, true, true, false, 0);
      checkClassifier0.setNumNominal(0);
      checkClassifier0.datasetIntegrity(true, true, true, true, false, false, 0, true, true);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setNumNominal(3);
      checkClassifier0.datasetIntegrity(false, true, true, true, false, false, 3, false, true);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.datasetIntegrity(false, false, false, false, true, false, (-2380), false, false);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-2380' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.updateableClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(true, false, false, false, false, true, 32);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '32' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.testsPerClassType(0, false, true, false);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Problem determining ZeroR performance: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LWL lWL0 = new LWL();
      Classifier classifier0 = lWL0.getClassifier();
      checkClassifier0.setClassifier(classifier0);
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(false, true, false, true, true, false, 87);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '87' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.updateableClassifier();
      CheckClassifier.main((String[]) null);
      try { 
        checkClassifier0.setOptions((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.Utils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleMissing(false, false, false, true, true, true, 382, true, true, 7);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '382' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = true;
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(false, false, false, true, true, false, 84);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '84' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.canTakeOptions();
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(true, false, false, false, false, false, 84);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '84' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(true, true, false, false, false, false, (-39));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-39' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.updateableClassifier();
      checkClassifier0.printAttributeSummary(false, false, false, false, false, false, 0);
      checkClassifier0.doesntUseTestClassVal(false, false, false, false, false, false, 0);
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(true, true, true, true, true, true, 3);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.printAttributeSummary(false, true, false, false, true, false, 100);
      checkClassifier0.updateableClassifier();
      checkClassifier0.testsPerClassType(0, false, false, false);
      String[] stringArray0 = new String[9];
      CheckClassifier.main(stringArray0);
      CheckClassifier checkClassifier1 = new CheckClassifier();
      checkClassifier1.getClassifier();
      checkClassifier0.testToString();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CheckClassifier checkClassifier0 = new CheckClassifier();
      CheckClassifier checkClassifier1 = new CheckClassifier();
      checkClassifier1.multiInstanceHandler();
      CheckClassifier checkClassifier2 = new CheckClassifier();
      checkClassifier2.updateableClassifier();
      checkClassifier2.updateableClassifier();
      CheckClassifier checkClassifier3 = new CheckClassifier();
      checkClassifier1.setSilent(true);
      checkClassifier0.getOptions();
      CheckClassifier checkClassifier4 = new CheckClassifier();
      checkClassifier0.canTakeOptions();
      checkClassifier0.getRevision();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.declaresSerialVersionUID();
      boolean boolean0 = true;
      int int0 = (-774);
      checkClassifier0.printAttributeSummary(false, false, false, true, false, false, (-774));
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        checkClassifier0.testsPerClassType(0, false, true, true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = false;
      boolean boolean1 = true;
      boolean boolean2 = false;
      int int0 = 0;
      checkClassifier0.printAttributeSummary(false, false, true, false, false, false, 0);
      checkClassifier0.datasetIntegrity(false, true, false, false, false, false, 0, false, true);
      boolean boolean3 = false;
      checkClassifier0.printAttributeSummary(false, false, false, false, false, false, (-1438));
      checkClassifier0.testToString();
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(false, true, true, true, true, true, (-1438));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-1438' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setNumNominal(151);
      // Undeclared exception!
      try { 
        checkClassifier0.datasetIntegrity(false, false, true, false, true, true, 3, false, false);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.instanceWeights(true, true, false, false, false, false, 0);
      checkClassifier0.updatingEquality(false, false, false, false, false, true, 0);
      checkClassifier0.canTakeOptions();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.updateableClassifier();
      checkClassifier0.printAttributeSummary(false, false, false, false, false, false, 0);
      checkClassifier0.doesntUseTestClassVal(false, false, false, false, false, false, 0);
      checkClassifier0.m_Classifier = null;
      checkClassifier0.printAttributeSummary(false, false, false, false, false, true, 0);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "[N<(t-Sya=C?kD%(!X";
      checkClassifier0.setSilent(false);
      checkClassifier0.setSilent(true);
      stringArray0[1] = "";
      stringArray0[2] = "";
      checkClassifier0.getOptions();
      stringArray0[3] = "L+)";
      stringArray0[4] = "14";
      stringArray0[5] = "14";
      stringArray0[6] = "O'Q}T3%G$>$";
      checkClassifier0.canTakeOptions();
      checkClassifier0.printAttributeSummary(false, true, false, true, false, true, (-4481));
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setNumNominal(3);
      checkClassifier0.canHandleMissing(true, true, true, false, true, false, 3, true, true, 1126);
      checkClassifier0.getClassifier();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      CheckClassifier checkClassifier1 = new CheckClassifier();
      checkClassifier1.weightedInstancesHandler();
      checkClassifier1.canTakeOptions();
      checkClassifier1.getOptions();
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.printAttributeSummary(false, true, false, false, true, false, 100);
      checkClassifier0.updateableClassifier();
      checkClassifier0.testsPerClassType(0, false, false, false);
      String[] stringArray0 = new String[9];
      String string0 = "weighted instances classifier...";
      stringArray0[0] = string0;
      boolean boolean0 = true;
      int int0 = (-1777);
      checkClassifier0.setNumInstances(int0);
      boolean boolean1 = false;
      boolean boolean2 = true;
      boolean boolean3 = false;
      int int1 = 4;
      checkClassifier0.canHandleOnlyClass(boolean1, boolean2, boolean3, boolean1, boolean0, int1);
      checkClassifier0.canTakeOptions();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.updatingEquality(false, true, true, false, false, true, 0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setWordSeparators("");
      checkClassifier0.declaresSerialVersionUID();
      String[] stringArray0 = checkClassifier0.getOptions();
      checkClassifier0.canTakeOptions();
      checkClassifier0.setOptions(stringArray0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.updateableClassifier();
      checkClassifier0.testsPerClassType(2, false, false, false);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        CheckClassifier.main(stringArray0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Problem determining ZeroR performance: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }
}
