/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 06:46:47 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(995);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5056, "2p.z", "ConstantValue", "UO9uS", "2p.z");
      classWriter0.version = (-5);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(968);
      ByteVector byteVector0 = classWriter0.pool;
      classWriter0.index = (-2009);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, "VbPC3X<P&|msXC0|", "VbPC3X<P&|msXC0|", "y#>]hpRL)_", "n`t");
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1000);
      classWriter0.version = 1000;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "tg{3h>", "", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(968);
      classWriter0.index = (-2009);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, "VbPC3X<P&|msXC0|", "VbPC3X<P&|msXC0|", "y#>]hpRL)_", "n`t");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1000);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 592, "", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", "");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1000);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 592, "", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2590));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "4Rz>ip~%#", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "2p.z", "", "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(968);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 0, (String) null, "arNd0m\"0{", (String) null, "Signature");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(60);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 0, "", "J\"zS(+KZ\"Y(=,G|", "", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@706dad0
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(995);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5056, "2p.z", "ConstantValue", "UO9uS", "2p.z");
      Attribute attribute0 = new Attribute("ConstantValue");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1000);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "tg{3h>", "", (String) null, (Object) null);
      fieldWriter0.visitAnnotation("tg{3h>", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "'.`(r0\"1EAu)iT5H", "", "'.`(r0\"1EAu)iT5H");
      fieldWriter0.visitAnnotation("Y; eXv.4'*", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1000);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (byte) (-25), "", "", "ConstantValue", "ConstantValue");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(968);
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "", "", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1000);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "org.apache.commons.io.filefilter.HiddenFileFilter", "wheel.asm.FieldWriter", (String) null, (Object) null);
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.HiddenFileFilter");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1000);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-869), "2p.z", "2p.z", "", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(968);
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "", "", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(968);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 605, "VbPC3X<P&|msXC0|", "VbPC3X<P&|msXC0|", "y#>]hpRLR?)_", "n`t");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "'.`(r0\"1EAu)iT5H", "", "'.`(r0\"1EAu)iT5H");
      fieldWriter0.visitAnnotation("Y; eXv.4'*", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1000);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "tg{3h>", "", (String) null, (Object) null);
      fieldWriter0.visitAnnotation("tg{3h>", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(26, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(968);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "", "", (String) null, (Object) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 605, "VbPC3X<P&|msXC0|", "VbPC3X<P&|msXC0|", "y#>]hpRLR?)_", "n`t");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "", "'.`(r0\"1EAu)iT5H", "", "'.`(r0\"1EAu)iT5H");
      fieldWriter0.visitEnd();
  }
}
