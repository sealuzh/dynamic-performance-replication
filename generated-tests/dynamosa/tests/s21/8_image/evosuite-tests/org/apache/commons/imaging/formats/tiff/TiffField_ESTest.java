/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 08:27:38 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(5, (byte) (-23), fieldTypeByte0, 4L, (-314L), byteArray0, byteOrder0, (byte) (-23));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-314), tiffField0.getOffset());
      assertEquals((-23), tiffField0.getSortHint());
      assertEquals((-23), tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getTag());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-297), fieldTypeRational0, (-2147483648L), 28, byteArray0, byteOrder0, 1073);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-297), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
      assertEquals(1073, tiffField0.getSortHint());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-2147233619), (-2147233619), fieldTypeRational0.DOUBLE, 4L, 2147230570, byteArray0, byteOrder0, (-1));
      String string0 = tiffField0.getValueDescription();
      assertEquals(2147230570, tiffField0.getOffset());
      assertEquals((-2147233619), tiffField0.getDirectoryType());
      assertEquals((-2147233619), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(32, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 23L, (-3152L), byteArray0, byteOrder0, (byte)21);
      tiffField0.getValue();
      assertEquals(21, tiffField0.getSortHint());
      assertEquals((-3152), tiffField0.getOffset());
      assertEquals(92, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-810), "WKj.{_Rc PT5S");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)50, fieldTypeShort0, 0, (-1853L), byteArray0, byteOrder0, 0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1853), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(0, (byte)0, fieldTypeDouble0, 2580L, 2580L, byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(2580, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-506), 3432, fieldTypeFloat0, 0L, 1L, byteArray0, byteOrder0, (byte)121);
      int int0 = tiffField0.getTag();
      assertEquals(3432, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(121, tiffField0.getSortHint());
      assertEquals((-506), int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-17);
      byteArray0[1] = (byte)9;
      byteArray0[2] = (byte)89;
      byteArray0[3] = (byte)80;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte)79;
      TiffField tiffField0 = new TiffField(2, 48259, fieldTypeLong0.ASCII, 48259, 2, byteArray0, byteOrder0, (-442));
      String string0 = tiffField0.getStringValue();
      assertEquals((-442), tiffField0.getSortHint());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(48259, tiffField0.getBytesLength());
      assertEquals(48259, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(129, 0, fieldTypeLong0, 28360L, (-10032L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals((-10032), tiffField0.getOffset());
      assertEquals(129, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(288, "gm[Jb\"&Zo<iz5&=k");
      TiffField tiffField0 = new TiffField(712, 0, fieldTypeDouble0, 0L, (-4244L), byteArray0, byteOrder0, (-6857));
      int int0 = tiffField0.getSortHint();
      assertEquals(712, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-4244), tiffField0.getOffset());
      assertEquals((-6857), int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-810), "WKj.{_Rc PXT5S");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-810), (byte)13, fieldTypeShort0, 432L, 0L, byteArray0, byteOrder0, 2);
      int int0 = tiffField0.getOffset();
      assertEquals((-810), tiffField0.getTag());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(326, 326, fieldTypeRational0, 1L, 1L, (byte[]) null, byteOrder0, (-455));
      int int0 = tiffField0.getOffset();
      assertEquals((-455), tiffField0.getSortHint());
      assertEquals(326, tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals(326, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-810), "WKj.{_Rc PT5S");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(131, (byte)0, fieldTypeShort0, 3169L, (byte)0, byteArray0, byteOrder0, 34675);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(34675, tiffField0.getSortHint());
      assertEquals(6338, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(131, tiffField0.getTag());
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-29);
      byteArray0[4] = (byte) (-29);
      TiffField tiffField0 = new TiffField((-950), (byte)0, fieldTypeRational0, 1498L, (byte) (-29), byteArray0, byteOrder0, 32845);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-950), tiffField0.getTag());
      assertEquals((-2143344), int0);
      assertEquals((-29), tiffField0.getOffset());
      assertEquals(32845, tiffField0.getSortHint());
      assertEquals(11984, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField(1, 65535, fieldTypeByte0, 1, (-1876L), byteArray0, byteOrder0, 285);
      tiffField0.getIntValue();
      assertEquals(285, tiffField0.getSortHint());
      assertEquals((-1876), tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)16;
      TiffField tiffField0 = new TiffField(8, (byte)16, fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, (-1));
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(16, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-109);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(35, 13, fieldTypeLong0.SSHORT, 1L, 1L, byteArray0, byteOrder0, 9);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(35, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(13, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(418, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, (-1028), fieldTypeLong0, (-2130L), 65535, byteArray0, byteOrder0, (byte)8);
      tiffField0.getFieldTypeName();
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-1028), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeRational0, 15, 15, byteArray0, byteOrder0, 15);
      tiffField0.getFieldTypeName();
      assertEquals(15, tiffField0.getDirectoryType());
      assertEquals(15, tiffField0.getTag());
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(15, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(50, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeDouble0, (-2095L), 50, (byte[]) null, byteOrder0, 50);
      tiffField0.getFieldTypeName();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1658, 2, fieldTypeLong0, 1658, (-1560L), byteArray0, byteOrder0, 2147230570);
      tiffField0.getFieldType();
      assertEquals((-1560), tiffField0.getOffset());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(2147230570, tiffField0.getSortHint());
      assertEquals(1658, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1), "xF@@gRSKcDoB~qo}Mz)");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-829), 932, fieldTypeFloat0, 2859L, 1L, (byte[]) null, byteOrder0, (-1));
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-829), tiffField0.getTag());
      assertEquals(932, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "d=QQ+");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-4368), fieldTypeFloat0, (-4368), 504L, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getFieldType();
      assertEquals((-4368), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(504, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 2335, fieldTypeShort0, 1, 10184L, byteArray0, byteOrder0, 2335);
      tiffField0.getDoubleValue();
      assertEquals(10184, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2335, tiffField0.getSortHint());
      assertEquals(2335, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-114);
      byteArray0[4] = (byte) (-110);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1134, 15, fieldTypeRational0, 1L, 1134, byteArray0, byteOrder0, (byte)10);
      tiffField0.getDoubleValue();
      assertEquals(1134, tiffField0.getTag());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(1134, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(15, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-90);
      TiffField tiffField0 = new TiffField(1, 12, fieldTypeByte0, 1L, (-1348L), byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1348), tiffField0.getOffset());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-810), "WKj.{_Rc PT5S");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34850, 0, fieldTypeShort0, 34850, (-2948L), byteArray0, byteOrder0, (byte)85);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2948), tiffField0.getOffset());
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(34850, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-810), "WKj.{_Rc PT5S");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)50, fieldTypeShort0, 0, (-1853L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(50, int0);
      assertEquals((-1853), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1717986918, 276, fieldTypeLong0, 0, 1, byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(1717986918, tiffField0.getTag());
      assertEquals(276, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(288, "gm[Jb\"&Zo<iz5&=k");
      TiffField tiffField0 = new TiffField((-1693), 1833, fieldTypeDouble0, (-1762L), 2147483647L, byteArray0, byteOrder0, (-5735));
      long long0 = tiffField0.getCount();
      assertEquals((-1762L), long0);
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals((-5735), tiffField0.getSortHint());
      assertEquals(1833, tiffField0.getDirectoryType());
      assertEquals((-1693), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-810), "WKj.{_Rc PT5S");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)50, fieldTypeShort0, 0, (-1853L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-1853), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1056), 0, fieldTypeByte0, (-1056), 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1056), int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1056), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "L");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3422), (-3422), fieldTypeByte0, 0, 0, byteArray0, byteOrder0, (byte)4);
      tiffField0.getByteOrder();
      assertEquals((-3422), tiffField0.getDirectoryType());
      assertEquals((-3422), tiffField0.getTag());
      assertEquals(4, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 2335, fieldTypeShort0, 1, 10184L, byteArray0, byteOrder0, 2335);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(2, byteArray1.length);
      assertEquals(2335, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2335, tiffField0.getDirectoryType());
      assertEquals(10184, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-455), (-455), fieldTypeRational0, 0L, (-4685L), byteArray0, byteOrder0, (-455));
      tiffField0.getByteArrayValue();
      assertEquals((-455), tiffField0.getTag());
      assertEquals((-455), tiffField0.getDirectoryType());
      assertEquals((-455), tiffField0.getSortHint());
      assertEquals((-4685), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2147230570, 1641, fieldTypeByte0, 1043L, (-2235L), byteArray0, byteOrder0, 3763);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Unknown value: ");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(1043, tiffField0.getBytesLength());
      assertEquals(2147230570, tiffField0.getTag());
      assertEquals(3763, tiffField0.getSortHint());
      assertEquals(1641, tiffField0.getDirectoryType());
      assertEquals((-2235), tiffField0.getOffset());
      assertEquals(1043L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(52, 52, fieldTypeShort0, 52, 52, (byte[]) null, byteOrder0, 52);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[43];
      TiffField tiffField0 = new TiffField((-1618), (-1618), fieldTypeByte0, (-1618), (-1618), byteArray0, byteOrder0, (-1618));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-810), (-810), fieldTypeFloat0, (-810), 675L, (byte[]) null, byteOrder0, (-810));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147230570, 2147230570, fieldTypeLong0, 2147230570, 2147230570, byteArray0, byteOrder0, 2147230570);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(40094, 40094, (FieldType) null, 40094, 40094, byteArray0, byteOrder0, 40094);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField((-89), (-89), fieldTypeShort0, (-89), (-89), byteArray0, byteOrder0, (-89));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(52, 52, fieldTypeShort0, 52, 52, (byte[]) null, byteOrder0, 52);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-73), (-73), fieldTypeShort0, (-73), (-73), byteArray0, byteOrder0, (-73));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(932, 932, fieldTypeRational0, 932, 932, (byte[]) null, byteOrder0, 932);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeShort0, 6, 6, (byte[]) null, byteOrder0, 6);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-35), (-35), fieldTypeRational0, (-35), (-35), byteArray0, byteOrder0, (-35));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[22];
      TiffField tiffField0 = new TiffField(40094, 40094, fieldTypeShort0, 40094, (-509L), byteArray0, byteOrder0, 40094);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(914, 914, fieldTypeShort0, 914, 914, (byte[]) null, byteOrder0, 914);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-33), (-33), fieldTypeRational0, (-33), (-33), byteArray0, (ByteOrder) null, (-33));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeRational0, 1, (-992), byteArray0, byteOrder0, (-992));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeShort0, 2, 2, (byte[]) null, byteOrder0, 2);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-143), (-143), fieldTypeRational0, (-143), (-143), byteArray0, byteOrder0, (-143));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-4234), fieldTypeRational0, 27, 4L, byteArray0, byteOrder0, 27);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeShort0, 46, 46, (byte[]) null, byteOrder0, 46);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-46), (-46), fieldTypeShort0, (-46), (-46), byteArray0, byteOrder0, (-46));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeShort0, 9, 9, (byte[]) null, byteOrder0, 9);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-73), (-73), fieldTypeShort0, (-73), (-73), byteArray0, byteOrder0, (-73));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, (FieldType) null, 50, 50, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(23, 23, fieldTypeRational0, (-1L), 23, byteArray0, byteOrder0, 23);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ,");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, " ,");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(932, 932, fieldTypeRational0, 1L, 1526L, byteArray0, byteOrder0, (-96));
      MockPrintStream mockPrintStream0 = new MockPrintStream("H1$TIT>:}[^YN,{H ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "H1$TIT>:}[^YN,{H ");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-511), (-511), fieldTypeRational0, (-511), 12, byteArray0, byteOrder0, 12);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(40, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)50, fieldTypeDouble0, 1L, (byte)0, byteArray0, byteOrder0, (-506));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" (");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[46];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2842), (-2842), fieldTypeByte0.FLOAT, (-2842), (-2842), byteArray0, byteOrder0, (-2842));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-820), "Kj._RcJPXT5S");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)9, (byte)9, fieldTypeShort0, 1L, (byte)9, byteArray0, byteOrder0, (byte)9);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      TiffField tiffField0 = new TiffField((-5682), 50, fieldTypeRational0.FLOAT, 0L, 2, byteArray0, byteOrder0, 2);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(44, byteArrayOutputStream0.size());
      assertEquals("-5682 (0xffffe9ce: Unknown Tag):  (0 Float)\n", byteArrayOutputStream0.toString());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, 2, fieldTypeRational0, (-1254L), (byte)69, byteArray0, byteOrder0, 2238);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2238, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
      assertTrue(boolean0);
      assertEquals(69, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-508), 50, fieldTypeRational0, 1061L, 50, byteArray0, (ByteOrder) null, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-508), tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "{.ab");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, (-1L), 0, byteArray0, (ByteOrder) null, (byte)1);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1054), (-1054), fieldTypeShort0, (-979L), (-1054), byteArray0, byteOrder0, (-1054));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65106, 2146633159, (FieldType) null, (-1777L), (-1777L), byteArray0, byteOrder0, (byte)13);
      tiffField0.getFieldType();
      assertEquals(65106, tiffField0.getTag());
      assertEquals((-1777), tiffField0.getOffset());
      assertEquals(2146633159, tiffField0.getDirectoryType());
      assertEquals(13, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-455), (-455), fieldTypeRational0, 0L, (-4685L), byteArray0, byteOrder0, (-455));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-455), tiffField0.getSortHint());
      assertEquals((-455), tiffField0.getTag());
      assertEquals((-455), int0);
      assertEquals((-4685), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34, 34, fieldTypeRational0, 34, 34, byteArray0, byteOrder0, 34);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeFloat0, 22, (-1L), (byte[]) null, byteOrder0, 22);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-455), (-455), fieldTypeRational0, 0L, (-4685L), byteArray0, byteOrder0, (-455));
      int int0 = tiffField0.getOffset();
      assertEquals((-455), tiffField0.getDirectoryType());
      assertEquals((-455), tiffField0.getSortHint());
      assertEquals((-4685), int0);
      assertEquals((-455), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-297), fieldTypeRational0, (-2147483648L), 28, byteArray0, byteOrder0, 1073);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-297), tiffField0.getDirectoryType());
      assertEquals(28, tagInfo0.tag);
      assertEquals(28, tiffField0.getTag());
      assertEquals(1073, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "KG;TChh[ ");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50722, 3777, fieldTypeByte0, 50722, 0L, byteArray0, (ByteOrder) null, 50722);
      int int0 = tiffField0.getTag();
      assertEquals(50722, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(50722, int0);
      assertEquals(3777, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "KG;TChh[ ");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50722, 50722, fieldTypeByte0, 50722, 0L, byteArray0, (ByteOrder) null, 50722);
      long long0 = tiffField0.getCount();
      assertEquals(50722, tiffField0.getTag());
      assertEquals(50722, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(50722L, long0);
      assertEquals(50722, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(50, "Saturation");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(50, 634, fieldTypeDouble0, 50, 634, byteArray0, (ByteOrder) null, 712);
      int int0 = tiffField0.getBytesLength();
      assertEquals(634, tiffField0.getDirectoryType());
      assertEquals(400, int0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(712, tiffField0.getSortHint());
      assertEquals(634, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeByte0, 15, 15, byteArray0, byteOrder0, 15);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeShort0, 11, 11, byteArray0, byteOrder0, 11);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[144];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1853, 1853, fieldTypeDouble0.SLONG, 1853, 1853, byteArray0, byteOrder0, 1853);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1853, tiffField0.getTag());
      assertEquals(1853, tiffField0.getSortHint());
      assertEquals(1853L, tiffField0.getCount());
      assertEquals(1853, tiffField0.getOffset());
      assertEquals(7412, tiffField0.getBytesLength());
      assertEquals(1853, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[30];
      TiffField tiffField0 = new TiffField(50232, 50232, fieldTypeByte0, 50232, 50232, byteArray0, byteOrder0, 50232);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@50309dc9 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeRational0, 15, 15, byteArray0, byteOrder0, 15);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1637, 1637, fieldTypeLong0.DOUBLE, 1637, 1637, byteArray0, byteOrder0, 1637);
      tiffField0.getDoubleArrayValue();
      assertEquals(1637, tiffField0.getSortHint());
      assertEquals(1637, tiffField0.getDirectoryType());
      assertEquals(1637, tiffField0.getTag());
      assertEquals(13096, tiffField0.getBytesLength());
      assertEquals(1637, tiffField0.getOffset());
      assertEquals(1637L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)90, (byte)90, fieldTypeFloat0, (byte)90, (byte)90, byteArray0, byteOrder0, (byte)90);
      tiffField0.getDoubleArrayValue();
      assertEquals(90, tiffField0.getTag());
      assertEquals(90, tiffField0.getSortHint());
      assertEquals(90L, tiffField0.getCount());
      assertEquals(360, tiffField0.getBytesLength());
      assertEquals(90, tiffField0.getOffset());
      assertEquals(90, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[43];
      TiffField tiffField0 = new TiffField(4868, 4868, fieldTypeByte0, 4868, 4868, byteArray0, byteOrder0, 4868);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@1d73e137 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1690, 1690, fieldTypeLong0, 1690, 1690, byteArray0, byteOrder0, 1690);
      tiffField0.getDoubleArrayValue();
      assertEquals(1690L, tiffField0.getCount());
      assertEquals(6760, tiffField0.getBytesLength());
      assertEquals(1690, tiffField0.getOffset());
      assertEquals(1690, tiffField0.getDirectoryType());
      assertEquals(1690, tiffField0.getSortHint());
      assertEquals(1690, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeShort0, 6, 6, byteArray0, byteOrder0, 6);
      tiffField0.getDoubleArrayValue();
      assertEquals(6L, tiffField0.getCount());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getBytesLength());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getTag());
      assertEquals(6, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeRational0, 15, 15, byteArray0, byteOrder0, 15);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(15, tiffField0.getTag());
      assertEquals(120, tiffField0.getBytesLength());
      assertEquals(15, tiffField0.getOffset());
      assertEquals(15L, tiffField0.getCount());
      assertEquals(15, tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeRational0, 15, 15, byteArray0, byteOrder0, 15);
      tiffField0.getDoubleArrayValue();
      assertEquals(15, tiffField0.getOffset());
      assertEquals(120, tiffField0.getBytesLength());
      assertEquals(15L, tiffField0.getCount());
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(15, tiffField0.getTag());
      assertEquals(15, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[131];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1855, 1855, fieldTypeDouble0.SLONG, 1855, 1855, byteArray0, byteOrder0, 1855);
      tiffField0.getIntArrayValue();
      assertEquals(1855, tiffField0.getOffset());
      assertEquals(1855, tiffField0.getSortHint());
      assertEquals(1855, tiffField0.getDirectoryType());
      assertEquals(1855, tiffField0.getTag());
      assertEquals(1855L, tiffField0.getCount());
      assertEquals(7420, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1637, 1637, fieldTypeLong0.DOUBLE, 1637, 1637, byteArray0, byteOrder0, 1637);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@63e6ae9e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(88, 88, fieldTypeRational0, 88, 88, byteArray0, byteOrder0, 88);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-455), (-455), fieldTypeRational0, 0L, (-4685L), byteArray0, byteOrder0, (-455));
      tiffField0.getIntArrayValue();
      assertEquals((-455), tiffField0.getTag());
      assertEquals((-4685), tiffField0.getOffset());
      assertEquals((-455), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-455), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[21];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeShort0, 11, 11, byteArray0, byteOrder0, 11);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(11L, tiffField0.getCount());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getTag());
      assertEquals(22, tiffField0.getBytesLength());
      assertEquals(11, tiffField0.getOffset());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(11, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2203, 2203, fieldTypeAscii0, 38720L, (-1L), byteArray0, byteOrder0, 2203);
      String string0 = tiffField0.getStringValue();
      assertEquals(2203, tiffField0.getTag());
      assertEquals(38720, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2203, tiffField0.getDirectoryType());
      assertEquals(2203, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeRational0, 15, 15, byteArray0, byteOrder0, 15);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@64c4d3f5
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(150, 150, fieldTypeRational0, 150, 150, byteArray0, byteOrder0, 150);
      String string0 = tiffField0.getTagName();
      assertEquals(150, tiffField0.getDirectoryType());
      assertEquals(150, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x96)", string0);
      assertEquals(150, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[299];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50834, 50834, fieldTypeDouble0, 50834, 50834, byteArray0, byteOrder0, 50834);
      String string0 = tiffField0.getTagName();
      assertEquals("CurrentPreProfileMatrix", string0);
      assertEquals(50834, tiffField0.getDirectoryType());
      assertEquals(50834, tiffField0.getOffset());
      assertEquals(50834, tiffField0.getSortHint());
      assertEquals(50834, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(32918, 32918, fieldTypeFloat0, 32918, 32918, byteArray0, byteOrder0, 32918);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "V{}G1}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[366];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2323, 2323, fieldTypeDouble0.FLOAT, 2323, 2323, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.toString();
      assertEquals("2323 (0x913: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (91) (2323 Float)", string0);
      assertEquals(2323, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(2323, tiffField0.getDirectoryType());
      assertEquals(9292, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[65];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(16, 50215, fieldTypeByte0, 50215, 29L, byteArray0, byteOrder0, 44);
      tiffField0.dump();
      assertEquals(16, tiffField0.getTag());
      assertEquals(50215, tiffField0.getBytesLength());
      assertEquals(50215, tiffField0.getDirectoryType());
      assertEquals(50215L, tiffField0.getCount());
      assertEquals(44, tiffField0.getSortHint());
      assertEquals(29, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[423];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeDouble0, 1361, 1361, byteArray0, byteOrder0, 40);
      String string0 = tiffField0.toString();
      assertEquals(40, tiffField0.getSortHint());
      assertEquals(1361, tiffField0.getOffset());
      assertEquals("12 (0xc: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (1361 Double)", string0);
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(10888, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[350];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(956, 956, fieldTypeLong0, 956, 956, byteArray0, byteOrder0, 956);
      String string0 = tiffField0.toString();
      assertEquals(3824, tiffField0.getBytesLength());
      assertEquals(956, tiffField0.getOffset());
      assertEquals(956, tiffField0.getSortHint());
      assertEquals(956, tiffField0.getDirectoryType());
      assertEquals("956 (0x3bc: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (87) (956 IFD)", string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[43];
      TiffField tiffField0 = new TiffField(50215, 50215, fieldTypeByte0.IFD, 50215, 50215, byteArray0, byteOrder0, 50215);
      tiffField0.dump();
      assertEquals(50215, tiffField0.getDirectoryType());
      assertEquals(50215, tiffField0.getSortHint());
      assertEquals(50215, tiffField0.getTag());
      assertEquals(50215L, tiffField0.getCount());
      assertEquals(200860, tiffField0.getBytesLength());
      assertEquals(50215, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[109];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1683, 32, fieldTypeShort0, 1683, 32, byteArray0, byteOrder0, 32);
      tiffField0.dump();
      assertEquals(32, tiffField0.getOffset());
      assertEquals(32, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getSortHint());
      assertEquals(1683, tiffField0.getTag());
      assertEquals(1683L, tiffField0.getCount());
      assertEquals(3366, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeShort0, 2, 2, byteArray0, byteOrder0, 2);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(2L, tiffField0.getCount());
      assertEquals(2, tiffField0.getTag());
      assertEquals(2, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[204];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34910, 34910, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeDouble0).FLOAT).ASCII, 34910, 34910, byteArray0, byteOrder0, 34910);
      tiffField0.toString();
      assertEquals(34910, tiffField0.getOffset());
      assertEquals(34910, tiffField0.getTag());
      assertEquals(34910, tiffField0.getBytesLength());
      assertEquals(34910L, tiffField0.getCount());
      assertEquals(34910, tiffField0.getDirectoryType());
      assertEquals(34910, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)90, (byte)90, fieldTypeFloat0.ASCII, (byte)90, (byte)90, byteArray0, byteOrder0, (byte)90);
      String string0 = tiffField0.getValueDescription();
      assertEquals(90, tiffField0.getSortHint());
      assertEquals(90, tiffField0.getDirectoryType());
      assertEquals(90, tiffField0.getTag());
      assertEquals(90, tiffField0.getBytesLength());
      assertEquals(90, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "KG;TChh[ ");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50722, 50722, fieldTypeByte0, 50722, 0L, byteArray0, (ByteOrder) null, 50722);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-3563), 50722);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(50722, tiffField0.getSortHint());
      assertEquals(50722, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(50722, tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals(50722L, tiffField0.getCount());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40960, 40960, (FieldType) null, (-1L), (-1L), (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeRational0, 15, 15, byteArray0, byteOrder0, 15);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(15, tiffField0.getDirectoryType());
      assertEquals(15, tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(15L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(105, 105, fieldTypeRational0, 105, 105, byteArray0, byteOrder0, 105);
      int int0 = tiffField0.getSortHint();
      assertEquals(105, int0);
      assertEquals(105, tiffField0.getTag());
      assertEquals(105, tiffField0.getDirectoryType());
      assertEquals(840, tiffField0.getBytesLength());
      assertEquals(105, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeShort0, 11, 11, byteArray0, byteOrder0, 11);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(11, tiffField0.getOffset());
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getSortHint());
      assertEquals("11 (0xb: ProcessingSoftware): ", string0);
      assertEquals(22, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(905, 905, fieldTypeByte0, 905, 905, (byte[]) null, byteOrder0, 905);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(288, 288, fieldTypeByte0, (-1762L), (-1762L), byteArray0, byteOrder0, 288);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(65562, (-301));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: FreeOffsets, fieldType: SByte", string0);
      assertEquals(288, tiffField0.getTag());
      assertEquals(288, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-1762), tiffField0.getOffset());
      assertEquals(288, tiffField0.getDirectoryType());
      assertEquals((-1762L), tiffField0.getCount());
  }
}
