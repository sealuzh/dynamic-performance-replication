/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 17:15:31 GMT 2018
 */

package us.codecraft.webmagic.utils;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import us.codecraft.webmagic.utils.DoubleKeyMap;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DoubleKeyMap_ESTest extends DoubleKeyMap_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      DoubleKeyMap<String, Object, Integer> doubleKeyMap0 = new DoubleKeyMap<String, Object, Integer>((Map<String, Map<Object, Integer>>) null);
      DoubleKeyMap<String, String, Object> doubleKeyMap1 = new DoubleKeyMap<String, String, Object>();
      doubleKeyMap1.put("O;R4Z,", "O;R4Z,", (Object) "O;R4Z,");
      doubleKeyMap1.newMap();
      HashMap<String, Object> hashMap0 = new HashMap<String, Object>();
      // Undeclared exception!
      try { 
        doubleKeyMap1.put(";iS&hmam", (Map<String, Object>) hashMap0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      DoubleKeyMap<String, Object, String> doubleKeyMap0 = new DoubleKeyMap<String, Object, String>((Map<String, Map<Object, String>>) null);
      DoubleKeyMap<String, Integer, Object> doubleKeyMap1 = new DoubleKeyMap<String, Integer, Object>();
      Integer integer0 = new Integer(0);
      Object object0 = doubleKeyMap1.get("tv^O\u0006VFFV]$<`]", integer0);
      assertNull(object0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      DoubleKeyMap<Object, Object, String> doubleKeyMap0 = new DoubleKeyMap<Object, Object, String>();
      doubleKeyMap0.newMap();
      doubleKeyMap0.remove((Object) "9_g8WMDkq*!|T12R h");
      doubleKeyMap0.remove((Object) "aH,u/&{j", (Object) "aH,u/&{j");
      HashMap<Integer, Map<String, Integer>> hashMap0 = new HashMap<Integer, Map<String, Integer>>();
      Class<HashMap> class0 = HashMap.class;
      DoubleKeyMap<Integer, String, Integer> doubleKeyMap1 = new DoubleKeyMap<Integer, String, Integer>(hashMap0, class0);
      Integer integer0 = new Integer((-27));
      DoubleKeyMap<String, Object, String> doubleKeyMap2 = new DoubleKeyMap<String, Object, String>();
      doubleKeyMap2.put("px(d,@lju+b!", (Object) null, "aH,u/&{j");
      DoubleKeyMap<String, Integer, Object> doubleKeyMap3 = new DoubleKeyMap<String, Integer, Object>();
      DoubleKeyMap<String, Object, String> doubleKeyMap4 = new DoubleKeyMap<String, Object, String>();
      Object object0 = new Object();
      doubleKeyMap2.get("px(d,@lju+b!", object0);
      Class<Map> class1 = Map.class;
      DoubleKeyMap<Object, Integer, String> doubleKeyMap5 = null;
      try {
        doubleKeyMap5 = new DoubleKeyMap<Object, Integer, String>(class1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // wrong proto type map interface java.util.Map
         //
         verifyException("us.codecraft.webmagic.utils.MultiKeyMapBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      HashMap<Object, Map<String, String>> hashMap0 = new HashMap<Object, Map<String, String>>();
      Class<Map> class0 = Map.class;
      DoubleKeyMap<Object, String, String> doubleKeyMap0 = new DoubleKeyMap<Object, String, String>(hashMap0, class0);
      DoubleKeyMap<Object, Object, Object> doubleKeyMap1 = new DoubleKeyMap<Object, Object, Object>();
      DoubleKeyMap<Integer, Object, String> doubleKeyMap2 = new DoubleKeyMap<Integer, Object, String>();
      int int0 = 1344;
      Integer integer0 = new Integer(1344);
      doubleKeyMap2.put(integer0, (Object) doubleKeyMap1, "^tSKIv");
      HashMap<Map<String, Object>, Map<String, String>> hashMap1 = new HashMap<Map<String, Object>, Map<String, String>>();
      doubleKeyMap2.put((Integer) null, (Object) null, "^tSKIv");
      DoubleKeyMap<Map<String, Object>, String, String> doubleKeyMap3 = new DoubleKeyMap<Map<String, Object>, String, String>(hashMap1);
      DoubleKeyMap<String, Object, Object> doubleKeyMap4 = new DoubleKeyMap<String, Object, Object>();
      Map<String, Object> map0 = doubleKeyMap4.newMap();
      doubleKeyMap3.put(map0, "^tSKIv", (String) null);
      String string0 = "X8";
      doubleKeyMap3.remove(map0, "X8");
      DoubleKeyMap<Object, String, Map<String, Object>> doubleKeyMap5 = new DoubleKeyMap<Object, String, Map<String, Object>>();
      Class<Map> class1 = Map.class;
      DoubleKeyMap<Integer, String, String> doubleKeyMap6 = null;
      try {
        doubleKeyMap6 = new DoubleKeyMap<Integer, String, String>(class1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // wrong proto type map interface java.util.Map
         //
         verifyException("us.codecraft.webmagic.utils.MultiKeyMapBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      HashMap<Object, Map<String, String>> hashMap0 = new HashMap<Object, Map<String, String>>();
      Class<Map> class0 = Map.class;
      DoubleKeyMap<Object, String, String> doubleKeyMap0 = new DoubleKeyMap<Object, String, String>(hashMap0, class0);
      DoubleKeyMap<Object, Object, Object> doubleKeyMap1 = new DoubleKeyMap<Object, Object, Object>();
      int int0 = (-2962);
      Integer integer0 = new Integer((-2962));
      DoubleKeyMap<Integer, Object, String> doubleKeyMap2 = new DoubleKeyMap<Integer, Object, String>();
      Integer integer1 = new Integer((-2962));
      doubleKeyMap2.put(integer1, (Object) "^tSKIv", "^tSKIv");
      HashMap<Map<String, Object>, Map<String, String>> hashMap1 = new HashMap<Map<String, Object>, Map<String, String>>();
      doubleKeyMap2.put(integer1, (Object) null, "^tSKIv");
      DoubleKeyMap<Map<String, Object>, String, String> doubleKeyMap3 = new DoubleKeyMap<Map<String, Object>, String, String>(hashMap1);
      DoubleKeyMap<String, Object, Object> doubleKeyMap4 = new DoubleKeyMap<String, Object, Object>();
      Map<String, Object> map0 = doubleKeyMap4.newMap();
      doubleKeyMap3.put(map0, (String) null, "ArBE$rMW=E");
      doubleKeyMap3.remove(map0, (String) null);
      Class<Map> class1 = Map.class;
      DoubleKeyMap<Integer, String, String> doubleKeyMap5 = null;
      try {
        doubleKeyMap5 = new DoubleKeyMap<Integer, String, String>(class1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // wrong proto type map interface java.util.Map
         //
         verifyException("us.codecraft.webmagic.utils.MultiKeyMapBase", e);
      }
  }
}
