/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 22:55:49 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ObjectOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)39;
      TiffField tiffField0 = new TiffField((byte)0, 33450, fieldTypeShort0, (byte)39, 3027L, byteArray0, byteOrder0, 497);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(33450, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(3027, tiffField0.getOffset());
      assertEquals(497, tiffField0.getSortHint());
      assertEquals(39, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)74;
      byteArray0[4] = (byte)74;
      TiffField tiffField0 = new TiffField((-1284), (byte)74, fieldTypeRational0, 4L, 1L, byteArray0, byteOrder0, 42033);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1, int0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(74, tiffField0.getDirectoryType());
      assertEquals(42033, tiffField0.getSortHint());
      assertEquals((-1284), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)74;
      TiffField tiffField0 = new TiffField((-1284), (byte)74, fieldTypeRational0, 4L, 1L, byteArray0, byteOrder0, 42033);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(42033, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1284), tiffField0.getTag());
      assertEquals(74, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-14), 1682, fieldTypeByte0.SLONG, (byte)1, (byte) (-26), byteArray0, byteOrder0, 337);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-14), tiffField0.getTag());
      assertEquals(1682, tiffField0.getDirectoryType());
      assertEquals(337, tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals((-26), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(27, (-114), fieldTypeRational0, (-1L), 4530, byteArray0, byteOrder0, 27);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-114), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
      assertEquals(4530, tiffField0.getOffset());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147231270, 1560, fieldTypeLong0, 1560, 2147483647L, byteArray0, byteOrder0, 469);
      tiffField0.getValue();
      assertEquals(469, tiffField0.getSortHint());
      assertEquals(1560, tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(2147231270, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(330, 18, fieldTypeRational0.IFD, 55, 833L, byteArray0, byteOrder0, 330);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(18, tiffField0.getDirectoryType());
      assertEquals(833, tiffField0.getOffset());
      assertEquals(330, tagInfo0.tag);
      assertEquals(330, tiffField0.getTag());
      assertEquals(330, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "... (");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 65535, fieldTypeLong0, 3185L, 24552L, byteArray0, byteOrder0, 40963);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(40963, tiffField0.getSortHint());
      assertEquals(24552, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2147230794, (byte) (-59), fieldTypeRational0.SHORT, 1689, (-1L), byteArray0, byteOrder0, (byte) (-59));
      int int0 = tiffField0.getTag();
      assertEquals((-59), tiffField0.getSortHint());
      assertEquals((-59), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2147230794, int0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2666), "... (");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)8;
      TiffField tiffField0 = new TiffField(2141726319, (-2204), fieldTypeShort0.ASCII, 1982292598, 1L, byteArray0, byteOrder0, (-1847));
      String string0 = tiffField0.getStringValue();
      assertEquals((-1847), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-2204), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2141726319, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(34029, "<Xg]ui8lhDwho1V");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2641, (-1369), fieldTypeAscii0.SSHORT, 0L, (-2147483648L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(2641, tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-1369), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1), (byte)50, fieldTypeByte0.IFD, 50, (byte) (-7), byteArray0, (ByteOrder) null, (-1006));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-7), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1006), int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(167, 2147230794, fieldTypeDouble0, 3585L, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals(2147230794, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(167, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(115, 115, (FieldType) null, 115, (-1085L), byteArray0, byteOrder0, (byte) (-26));
      int int0 = tiffField0.getOffset();
      assertEquals(115, tiffField0.getDirectoryType());
      assertEquals((-1085), int0);
      assertEquals((-26), tiffField0.getSortHint());
      assertEquals(115, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(3824, "... (");
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte)39;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3824, 3824, fieldTypeLong0, 3824, 0L, byteArray0, byteOrder0, (-1));
      tiffField0.getIntValueOrArraySum();
      assertEquals(3824, tiffField0.getDirectoryType());
      assertEquals(3824, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-7);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-69), (byte) (-1), fieldTypeByte0.LONG, 1L, 16L, byteArray0, byteOrder0, 286);
      tiffField0.getIntValueOrArraySum();
      assertEquals(16, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(286, tiffField0.getSortHint());
      assertEquals((-69), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65542, 50, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (-1));
      tiffField0.getIntValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(65542, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)84;
      TiffField tiffField0 = new TiffField(2295, 2295, fieldTypeByte0.SSHORT, 1L, 2295, byteArray0, byteOrder0, 3763);
      tiffField0.getIntValue();
      assertEquals(3763, tiffField0.getSortHint());
      assertEquals(2295, tiffField0.getTag());
      assertEquals(2295, tiffField0.getOffset());
      assertEquals(2295, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-7);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-69), (byte) (-1), fieldTypeByte0.IFD, 1L, 16L, byteArray0, byteOrder0, 286);
      tiffField0.getIntValue();
      assertEquals((-69), tiffField0.getTag());
      assertEquals(16, tiffField0.getOffset());
      assertEquals(286, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1150), (String) null);
      TiffField tiffField0 = new TiffField(330, 18, fieldTypeLong0, 55, 833L, byteArray0, byteOrder0, 330);
      tiffField0.getFieldTypeName();
      assertEquals(833, tiffField0.getOffset());
      assertEquals(18, tiffField0.getDirectoryType());
      assertEquals(330, tiffField0.getTag());
      assertEquals(330, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-15), (-15), fieldTypeRational0, (-15), (-15), byteArray0, byteOrder0, (-15));
      tiffField0.getFieldTypeName();
      assertEquals((-15), tiffField0.getDirectoryType());
      assertEquals((-15), tiffField0.getTag());
      assertEquals((-15), tiffField0.getOffset());
      assertEquals((-15), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1019), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (byte)0, fieldTypeDouble0, (-1047L), (-1019), byteArray0, byteOrder0, 12);
      tiffField0.getFieldTypeName();
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1019), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte)0, "Ck=${?_Bn%tvSksM%b");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3339), 1717986918, fieldTypeShort0, (byte) (-46), 8589934588L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(1717986918, tiffField0.getDirectoryType());
      assertEquals((-4), tiffField0.getOffset());
      assertEquals((-3339), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1019), "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1019), 0, fieldTypeDouble0, 0, (-1659L), byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals((-1659), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1019), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(932, 529, fieldTypeLong0, 932, 932, byteArray0, byteOrder0, 529);
      tiffField0.getFieldType();
      assertEquals(529, tiffField0.getSortHint());
      assertEquals(932, tiffField0.getOffset());
      assertEquals(932, tiffField0.getTag());
      assertEquals(529, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 4530, fieldTypeByte0, 1, 510L, byteArray0, byteOrder0, 2590);
      assertTrue(tiffField0.isLocalValue());
      
      tiffField0.getDoubleValue();
      assertEquals(2590, tiffField0.getSortHint());
      assertEquals(510, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(4530, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField(2710, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, 2147230794);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2710, tiffField0.getTag());
      assertEquals(2147230794, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-17);
      TiffField tiffField0 = new TiffField(17, 888, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, 1525);
      tiffField0.getDoubleValue();
      assertEquals(888, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(17, tiffField0.getTag());
      assertEquals(1525, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(335, 0, fieldTypeDouble0, (-1L), 335, byteArray0, (ByteOrder) null, 335);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(335, tiffField0.getSortHint());
      assertEquals(335, tiffField0.getTag());
      assertEquals(335, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-1L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-731), (-1648), fieldTypeByte0, 95L, (-1648), byteArray0, byteOrder0, (-1734));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1734), tiffField0.getSortHint());
      assertEquals((-1648), int0);
      assertEquals((-1648), tiffField0.getOffset());
      assertEquals((-731), tiffField0.getTag());
      assertEquals(95L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, (int) (byte)0, (int) (byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1062, 1062, fieldTypeDouble0, 1062, 1062, byteArray0, byteOrder0, (-1478));
      tiffField0.getCount();
      assertEquals(1062, tiffField0.getTag());
      assertEquals((-1478), tiffField0.getSortHint());
      assertEquals(1062, tiffField0.getDirectoryType());
      assertEquals(1062, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(335, 0, fieldTypeDouble0, (-1L), 335, byteArray0, (ByteOrder) null, 335);
      long long0 = tiffField0.getCount();
      assertEquals(335, tiffField0.getOffset());
      assertEquals((-1L), long0);
      assertEquals(335, tiffField0.getSortHint());
      assertEquals(335, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1338, "vRW%,Y[Y_nlit9@7w<R");
      TiffField tiffField0 = new TiffField(1588, (byte)104, fieldTypeShort0, 34029, 0, byteArray0, byteOrder0, (byte)104);
      int int0 = tiffField0.getBytesLength();
      assertEquals(1588, tiffField0.getTag());
      assertEquals(68058, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(104, tiffField0.getSortHint());
      assertEquals(104, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte) (-1), "vRW%,Y[Y_nlit9@7w<R");
      TiffField tiffField0 = new TiffField(2609, (byte)21, fieldTypeShort0, (-266L), (byte)74, byteArray0, byteOrder0, 19);
      int int0 = tiffField0.getBytesLength();
      assertEquals(2609, tiffField0.getTag());
      assertEquals(74, tiffField0.getOffset());
      assertEquals((-532), int0);
      assertEquals(21, tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-852), 490, fieldTypeByte0.SLONG, 4L, 200L, byteArray0, (ByteOrder) null, (-852));
      tiffField0.getByteOrder();
      assertEquals((-852), tiffField0.getSortHint());
      assertEquals(490, tiffField0.getDirectoryType());
      assertEquals(200, tiffField0.getOffset());
      assertEquals(4L, tiffField0.getCount());
      assertEquals((-852), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2710, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, 2147230794);
      tiffField0.getByteArrayValue();
      assertEquals(2710, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2147230794, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(996, 996, fieldTypeShort0, 0L, 996, byteArray0, byteOrder0, 0);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(996, tiffField0.getDirectoryType());
      assertEquals(0, byteArray1.length);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(996, tiffField0.getOffset());
      assertEquals(996, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(13, 2147230794, fieldTypeShort0, (byte)0, 24552L, byteArray0, byteOrder0, 1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("... (");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(2147230794, tiffField0.getDirectoryType());
      assertEquals(24552, tiffField0.getOffset());
      assertEquals(13, tiffField0.getTag());
      assertTrue(tiffField0.isLocalValue());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50716, 3069, fieldTypeDouble0, 3069, 867L, byteArray0, byteOrder0, 2381);
      MockFile mockFile0 = new MockFile("kisc.dr9MDS", "kisc.dr9MDS");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream(mockFileOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(objectOutputStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(55L, mockFile0.length());
      assertEquals(2381, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeRational0, 55, 55, (byte[]) null, byteOrder0, 55);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[45];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2099), (-2099), fieldTypeShort0, (-2099), (-2099), byteArray0, byteOrder0, (-2099));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 55);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeRational0, 55, 55, (byte[]) null, byteOrder0, 55);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((-20), (-20), fieldTypeRational0, (-20), (-20), byteArray0, byteOrder0, (-20));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1, 36, fieldTypeDouble0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-57), fieldTypeShort0, (-57), 28, byteArray0, byteOrder0, (-57));
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3751, 3751, fieldTypeByte0, (-2612L), 3751, byteArray0, byteOrder0, 3751);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeRational0, 1L, 152, byteArray0, byteOrder0, 19);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(146, 146, fieldTypeRational0, 146, 146, (byte[]) null, byteOrder0, 146);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-15), (-15), fieldTypeRational0, (-15), (-15), byteArray0, byteOrder0, (-15));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[329];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65504, 65504, (FieldType) null, 65504, 65504, byteArray0, byteOrder0, 65504);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[47];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(29, 29, (FieldType) null, 29, 29, byteArray0, byteOrder0, 29);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-189), (-189), fieldTypeByte0, (-189), (-189), byteArray0, byteOrder0, (-189));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[89];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(28, (-2147483646), fieldTypeRational0, (-2147483646), 28, byteArray0, byteOrder0, 28);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 65535, 65535, (byte[]) null, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-4183), (-4183), fieldTypeRational0.IFD, (-4183), (-4183), byteArray0, byteOrder0, (-4183));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((-424), 1029, fieldTypeRational0, 1L, 0L, byteArray0, byteOrder0, 3809);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(302, 302, fieldTypeRational0, 302, 302, (byte[]) null, byteOrder0, 302);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[47];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-6), (-6), fieldTypeShort0, (-6), (-6), byteArray0, byteOrder0, (-6));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[73];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65494, 65494, (FieldType) null, 65494, 65494, byteArray0, byteOrder0, 65494);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-1485), (-1485), fieldTypeShort0, (-1485), (-1485), byteArray0, byteOrder0, (-1485));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1257, 1257, fieldTypeShort0, 1257, 1257, (byte[]) null, byteOrder0, 1257);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-16), (-16), fieldTypeRational0, (-16), (-16), byteArray0, byteOrder0, (-16));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeByte0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 312, fieldTypeDouble0, 1L, 1, byteArray0, byteOrder0, 1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("&xExg7i]");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "&xExg7i]");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[71];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(2372, 2372, fieldTypeLong0, (-680L), (-680L), byteArray0, byteOrder0, 2372);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3868, 865, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, (byte)20);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[63];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((-724), (-724), fieldTypeByte0, (-724), (-724), byteArray0, byteOrder0, (-724));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 1L, 524264L, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte) (-19), "... (");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2147230794, 2147230794, fieldTypeShort0, (-1483L), (-1L), byteArray0, byteOrder0, (byte) (-119));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("... (");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1982292598, 2241, fieldTypeLong0.SHORT, 0, (-1369), byteArray0, byteOrder0, (-2666));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2241, tiffField0.getDirectoryType());
      assertEquals(1982292598, tiffField0.getTag());
      assertEquals((-1369), tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals((-2666), tiffField0.getSortHint());
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeLong0, 4L, 26, byteArray0, byteOrder0, 2147231270);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2147231270, tiffField0.getSortHint());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(26, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(26, tiffField0.getTag());
      assertEquals(26, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1734), 85, fieldTypeByte0, (-1734), 85, byteArray0, byteOrder0, 12);
      tiffField0.getByteOrder();
      assertEquals(85, tiffField0.getOffset());
      assertEquals((-1734), tiffField0.getBytesLength());
      assertEquals(85, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals((-1734), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeByte0, 5, 5, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 87, (FieldType) null, 334, 2514L, byteArray0, byteOrder0, 845);
      tiffField0.getFieldType();
      assertEquals(87, tiffField0.getDirectoryType());
      assertEquals(845, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2514, tiffField0.getOffset());
      assertEquals(334L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(596, 596, fieldTypeDouble0, 596, 1L, byteArray0, byteOrder0, (byte) (-44));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(596, tiffField0.getTag());
      assertEquals(4768, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-44), tiffField0.getSortHint());
      assertEquals(596, int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeRational0, 55, 55, byteArray0, byteOrder0, 55);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(59933, 59933, fieldTypeRational0, 59933, (-2864L), (byte[]) null, byteOrder0, 59933);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte)0, "... a(");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2147230794, (byte)0, fieldTypeShort0, 1679L, 8496L, byteArray0, byteOrder0, (-1286));
      int int0 = tiffField0.getOffset();
      assertEquals(8496, int0);
      assertEquals(2147230794, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(3358, tiffField0.getBytesLength());
      assertEquals((-1286), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(28, (-744), fieldTypeRational0, 28, (-744), byteArray0, (ByteOrder) null, (byte)91);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(91, tiffField0.getSortHint());
      assertEquals((-744), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertEquals(28, tagInfo0.tag);
      assertEquals((-744), tiffField0.getOffset());
      assertEquals(28L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(34023, "");
      TiffField tiffField0 = new TiffField((-2125344640), (-769), fieldTypeLong0, (-769), 241L, byteArray0, byteOrder0, (-1965));
      int int0 = tiffField0.getTag();
      assertEquals((-769), tiffField0.getDirectoryType());
      assertEquals((-2125344640), int0);
      assertEquals(241, tiffField0.getOffset());
      assertEquals((-1965), tiffField0.getSortHint());
      assertTrue(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1909), (-1909), fieldTypeLong0, 0L, 0L, byteArray0, byteOrder0, (byte) (-18));
      tiffField0.getCount();
      assertEquals((-1909), tiffField0.getTag());
      assertEquals((-18), tiffField0.getSortHint());
      assertEquals((-1909), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0L, 0, byteArray0, byteOrder0, (-480));
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-480), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeRational0, 36, 36, byteArray0, byteOrder0, 36);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(371, 371, fieldTypeRational0.IFD, 371, 371, byteArray0, byteOrder0, 371);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[14];
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeRational0, 5, 5, byteArray0, byteOrder0, 5);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeDouble0, 36, 36, byteArray0, byteOrder0, 36);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@6aa8308c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(371, 371, fieldTypeByte0, 371, 371, byteArray0, byteOrder0, 371);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@6b145754 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[103];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2715, 2715, fieldTypeDouble0.FLOAT, 2715, 2715, byteArray0, byteOrder0, 2715);
      tiffField0.getDoubleArrayValue();
      assertEquals(2715, tiffField0.getSortHint());
      assertEquals(2715, tiffField0.getDirectoryType());
      assertEquals(2715, tiffField0.getOffset());
      assertEquals(2715, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2125344629), (-2125344629), fieldTypeLong0, (-2125344629), (-2125344629), byteArray0, byteOrder0, (-2125344629));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2125344629), tiffField0.getOffset());
      assertEquals((-2125344629), tiffField0.getDirectoryType());
      assertEquals((-2125344629), tiffField0.getSortHint());
      assertEquals((-2125344629), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[20];
      TiffField tiffField0 = new TiffField((byte)84, (byte)84, fieldTypeShort0.DOUBLE, (byte)84, (byte)84, byteArray0, byteOrder0, (byte)84);
      tiffField0.getDoubleArrayValue();
      assertEquals(84, tiffField0.getTag());
      assertEquals(84, tiffField0.getSortHint());
      assertEquals(84, tiffField0.getDirectoryType());
      assertEquals(84, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[47];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeShort0, 14, 14, byteArray0, byteOrder0, 14);
      tiffField0.getDoubleArrayValue();
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getOffset());
      assertEquals(14, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeShort0, 36, 36, byteArray0, byteOrder0, 36);
      tiffField0.getDoubleArrayValue();
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getTag());
      assertEquals(36, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeRational0, 4, 4, byteArray0, byteOrder0, 4);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(4, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(4, tiffField0.getTag());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[15];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2125344640), (-2125344640), fieldTypeLong0, (-2125344640), (-2125344640), byteArray0, byteOrder0, (-2125344640));
      assertEquals(88556032, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals((-2125344640), tiffField0.getDirectoryType());
      assertEquals((-2125344640), tiffField0.getTag());
      assertEquals((-2125344640), tiffField0.getSortHint());
      assertEquals((-2125344640), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeShort0, 36, 36, byteArray0, byteOrder0, 36);
      tiffField0.getIntArrayValue();
      assertEquals(36, tiffField0.getOffset());
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getTag());
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals(72, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeRational0, 36, 36, byteArray0, byteOrder0, 36);
      tiffField0.getIntArrayValue();
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals(288, tiffField0.getBytesLength());
      assertEquals(36, tiffField0.getTag());
      assertEquals(36, tiffField0.getOffset());
      assertEquals(36, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(28, 28, fieldTypeRational0, 28, 28, byteArray0, byteOrder0, 28);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[17];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeByte0, 14, 14, byteArray0, byteOrder0, 14);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@2ad896e3 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(65462, 65462, fieldTypeAscii0, 65462, 65462, byteArray0, byteOrder0, 65462);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(65462, tiffField0.getBytesLength());
      assertEquals(65462, tiffField0.getDirectoryType());
      assertEquals(65462, tiffField0.getTag());
      assertEquals(65462, tiffField0.getOffset());
      assertEquals(65462, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeRational0, 4, 4, byteArray0, byteOrder0, 4);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@78982ce
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeRational0, 4, 4, byteArray0, byteOrder0, 4);
      String string0 = tiffField0.getTagName();
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x4)", string0);
      assertEquals(4, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(14, (-1911), fieldTypeByte0, 14, (-1911), byteArray0, byteOrder0, (-1911));
      String string0 = tiffField0.getTagName();
      assertEquals(14, tiffField0.getTag());
      assertEquals((-1911), tiffField0.getOffset());
      assertEquals("GPSTrackRef", string0);
      assertFalse(tiffField0.isLocalValue());
      assertEquals((-1911), tiffField0.getSortHint());
      assertEquals((-1911), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeShort0, 11, 11, byteArray0, byteOrder0, 11);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "8InIofcT#Oi4l\"N");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(262140, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[71];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeByte0, 46, 46, byteArray0, byteOrder0, 46);
      String string0 = tiffField0.getValueDescription();
      assertEquals(46, tiffField0.getSortHint());
      assertEquals(46, tiffField0.getTag());
      assertEquals(46, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(46, tiffField0.getOffset());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0", string0);
      assertEquals(46L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[63];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(4530, 4, fieldTypeByte0, 4530, 4530, byteArray0, byteOrder0, 4);
      tiffField0.dump();
      assertEquals(4530, tiffField0.getOffset());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(4530, tiffField0.getTag());
      assertEquals(4530, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4530L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[427];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65494, 65494, fieldTypeDouble0, 65494, 65494, byteArray0, byteOrder0, 65494);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65494, tiffField0.getOffset());
      assertEquals(65494, tiffField0.getDirectoryType());
      assertEquals(65494, tiffField0.getSortHint());
      assertEquals(523952, tiffField0.getBytesLength());
      assertEquals(65494, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(65494L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[103];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2715, 2715, fieldTypeDouble0.FLOAT, 2715, 2715, byteArray0, byteOrder0, 2715);
      String string0 = tiffField0.toString();
      assertEquals(10860, tiffField0.getBytesLength());
      assertEquals(2715, tiffField0.getOffset());
      assertEquals(2715, tiffField0.getDirectoryType());
      assertEquals(2715, tiffField0.getSortHint());
      assertEquals("2715 (0xa9b: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (2715 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(2275, 2275, fieldTypeLong0, 2275, 2275, byteArray0, byteOrder0, 2275);
      String string0 = tiffField0.toString();
      assertEquals(9100, tiffField0.getBytesLength());
      assertEquals(2275, tiffField0.getOffset());
      assertEquals(2275, tiffField0.getDirectoryType());
      assertEquals(2275, tiffField0.getSortHint());
      assertEquals("2275 (0x8e3: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (2275 SLong)", string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[345];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(158, 158, fieldTypeShort0, 158, 158, byteArray0, byteOrder0, 158);
      String string0 = tiffField0.toString();
      assertEquals(158, tiffField0.getSortHint());
      assertEquals("158 (0x9e: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (158) (158 SShort)", string0);
      assertEquals(158, tiffField0.getOffset());
      assertEquals(158, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte)0, "... (");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2147230794, (byte)0, fieldTypeShort0, 1679L, 8496L, byteArray0, byteOrder0, (-1286));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(3358, tiffField0.getBytesLength());
      assertEquals(2147230794, tiffField0.getTag());
      assertEquals(8496, tiffField0.getOffset());
      assertEquals((-1286), tiffField0.getSortHint());
      assertEquals(1679L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[192];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(65467, 65467, fieldTypeAscii0, 65467, 65467, byteArray0, byteOrder0, 65467);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65467, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(65467, tiffField0.getSortHint());
      assertEquals(65467, tiffField0.getDirectoryType());
      assertEquals(65467, tiffField0.getTag());
      assertEquals(65467, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeRational0.ASCII, 79L, 4, byteArray0, byteOrder0, 4);
      tiffField0.dump();
      assertEquals(79L, tiffField0.getCount());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(79, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getTag());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[48];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(371, 371, fieldTypeRational0.IFD, 371, 371, byteArray0, byteOrder0, 371);
      String string0 = tiffField0.getValueDescription();
      assertEquals(371, tiffField0.getOffset());
      assertEquals(1484, tiffField0.getBytesLength());
      assertEquals(371L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(371, tiffField0.getDirectoryType());
      assertEquals(371, tiffField0.getSortHint());
      assertEquals(371, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1220), 0, fieldTypeRational0, (-1963L), (-1963L), (byte[]) null, byteOrder0, (-1220));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1220), 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-1220), tiffField0.getTag());
      assertEquals((-1963), tiffField0.getOffset());
      assertEquals((-1220), tiffField0.getSortHint());
      assertNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertTrue(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[103];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2715, 2715, fieldTypeDouble0, 2715, (-1042L), byteArray0, byteOrder0, 88);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(88, 88);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Double", string0);
      assertEquals(2715, tiffField0.getDirectoryType());
      assertEquals((-1042), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2715, tiffField0.getTag());
      assertEquals(2715L, tiffField0.getCount());
      assertEquals(88, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2125344629), (-2125344629), fieldTypeLong0, (-2125344629), (-2125344629), byteArray0, byteOrder0, (-2125344629));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-2125344629), tiffField0.getTag());
      assertEquals((-2125344629), tiffField0.getSortHint());
      assertEquals((-2125344629), tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals((-2125344629), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4, 4, (FieldType) null, 4, 4, byteArray0, byteOrder0, 4);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeRational0, 4, 4, byteArray0, byteOrder0, 4);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(4L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(27, (-491), fieldTypeShort0, (-491), (-491), byteArray0, byteOrder0, 27);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(932, 529, fieldTypeLong0, 932, 932, byteArray0, byteOrder0, 529);
      int int0 = tiffField0.getSortHint();
      assertEquals(932, tiffField0.getTag());
      assertEquals(529, tiffField0.getDirectoryType());
      assertEquals(932, tiffField0.getOffset());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(529, int0);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(18, 18, fieldTypeRational0, 18, 18, byteArray0, byteOrder0, 18);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("18 (0x12: Unknown Tag): ", string0);
      assertEquals(18, tiffField0.getSortHint());
      assertEquals(18, tiffField0.getOffset());
      assertEquals(144, tiffField0.getBytesLength());
      assertEquals(18, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeRational0, 16, 16, (byte[]) null, byteOrder0, 16);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }
}
