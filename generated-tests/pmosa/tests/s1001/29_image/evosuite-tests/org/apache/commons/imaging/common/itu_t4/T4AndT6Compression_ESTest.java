/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 18:23:42 GMT 2018
 */

package org.apache.commons.imaging.common.itu_t4;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.imaging.common.itu_t4.T4AndT6Compression;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class T4AndT6Compression_ESTest extends T4AndT6Compression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)47;
      byte byte0 = (byte)12;
      byteArray0[1] = (byte)12;
      byte byte1 = (byte)90;
      byteArray0[2] = (byte)90;
      int int0 = 0;
      boolean boolean0 = true;
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 0, (byte)47, true);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray1, (-3348), (-3348));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte)0, (byte)0, false);
      // Undeclared exception!
      try { 
        T4AndT6Compression.compressT6(byteArray1, (-783), (byte)0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte[] byteArray1 = T4AndT6Compression.decompressModifiedHuffman(byteArray0, 3266, 0);
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray1, 32, 3266);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, 2, 2, false, 2);
      assertArrayEquals(new byte[] {(byte)0, (byte)27, (byte) (-128), (byte)10, (byte)0, (byte)32}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 27, 27, true, 27);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      T4AndT6Compression.decompressT6(byteArray0, (byte)0, (byte)2);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)2, (byte)2, false, (byte)2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      T4AndT6Compression.compressModifiedHuffman(byteArray0, 1, 1);
      try { 
        T4AndT6Compression.decompressT6(byteArray0, 1, 1);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 1, 1, false);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 1, 1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)107;
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte1 = (byte)0;
      byteArray0[2] = (byte)0;
      byte byte2 = (byte)37;
      byteArray0[3] = (byte)37;
      byteArray0[4] = (byte)70;
      byteArray0[5] = (byte)0;
      byte byte3 = (byte) (-78);
      byteArray0[6] = (byte) (-78);
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, (byte)70, (byte)0);
      int int0 = 58;
      int int1 = 192;
      boolean boolean0 = false;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray1, 58, 192, false, 1737);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, (-1485), 1792);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)84;
      byteArray0[1] = (byte)0;
      byte byte0 = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)101;
      byteArray0[4] = (byte)36;
      byte byte1 = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)3;
      int int0 = (-3377);
      byte[] byteArray1 = T4AndT6Compression.decompressT4_2D(byteArray0, (byte)3, (-3377), true);
      int int1 = 2155;
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray1, 2155, (byte)84);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = T4AndT6Compression.decompressModifiedHuffman(byteArray0, (-449), (-1358));
      byte[] byteArray2 = T4AndT6Compression.decompressT4_1D(byteArray0, (-449), (-449), true);
      assertNotSame(byteArray2, byteArray1);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byte byte0 = (byte)79;
      byteArray0[1] = (byte)79;
      boolean boolean0 = true;
      byte[] byteArray1 = T4AndT6Compression.decompressT4_1D(byteArray0, (byte)0, (-1297), true);
      try { 
        T4AndT6Compression.decompressT6(byteArray1, 512, (byte)79);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)4;
      byteArray0[0] = (byte)4;
      byte byte1 = (byte)8;
      byteArray0[1] = (byte)8;
      byte byte2 = (byte) (-21);
      byteArray0[2] = (byte) (-21);
      byte byte3 = (byte)0;
      byteArray0[3] = (byte)0;
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, (byte)4, (-2296));
      int int0 = (-1425);
      boolean boolean0 = false;
      byte[] byteArray2 = T4AndT6Compression.compressT4_2D(byteArray1, 2496, (-1425), false, 0);
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray2, (byte)8, (byte)4);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte[] byteArray1 = T4AndT6Compression.decompressModifiedHuffman(byteArray0, (-1), (-1));
      try { 
        T4AndT6Compression.compressT6(byteArray1, 40, 40);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-112);
      byteArray0[1] = (byte) (-91);
      byteArray0[2] = (byte) (-3);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)52;
      T4AndT6Compression.compressT6(byteArray0, (byte)0, (byte) (-91));
      byte[] byteArray1 = T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte) (-112), (byte) (-91));
      byte[] byteArray2 = T4AndT6Compression.decompressT4_1D(byteArray1, (byte) (-91), 0, false);
      assertNotSame(byteArray2, byteArray0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)7;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)7, (byte)7, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte)0, (byte)0, true);
      assertArrayEquals(new byte[] {(byte)0, (byte)1}, byteArray1);
      
      byte[] byteArray2 = T4AndT6Compression.compressT6(byteArray0, (byte)0, 1);
      T4AndT6Compression.compressT4_2D(byteArray2, 48, (byte)0, true, (-37));
      assertArrayEquals(new byte[] {(byte)0, (byte)16, (byte)1}, byteArray2);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)31;
      byteArray0[1] = (byte)0;
      T4AndT6Compression.compressT6(byteArray0, 0, 0);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)31;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)0;
      byteArray1[3] = (byte)31;
      byteArray1[4] = (byte)31;
      byteArray1[5] = (byte)31;
      byteArray1[6] = (byte)0;
      T4AndT6Compression.compressModifiedHuffman(byteArray1, 0, (byte)0);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (byte)0, (byte)31, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-119);
      byte byte0 = (byte)41;
      byteArray0[1] = (byte)41;
      byte byte1 = (byte)55;
      byteArray0[2] = (byte)55;
      byte byte2 = (byte)0;
      byteArray0[3] = (byte)0;
      byte byte3 = (byte)2;
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      int int0 = 1068;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray0, (byte)41, 1068);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 1, 1, false);
      byte[] byteArray2 = T4AndT6Compression.decompressT4_1D(byteArray1, 1, 1, false);
      assertArrayEquals(new byte[] {(byte)0}, byteArray2);
      assertArrayEquals(new byte[] {(byte)0, (byte)17, (byte) (-64), (byte)4}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 1, 1, false);
      assertArrayEquals(new byte[] {(byte)0, (byte)17, (byte) (-64), (byte)4}, byteArray1);
      
      byte[] byteArray2 = T4AndT6Compression.compressT6(byteArray0, 1, 1);
      assertArrayEquals(new byte[] {(byte) (-128), (byte)8, (byte)0, (byte) (-128)}, byteArray2);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 1273, (-1));
      try { 
        T4AndT6Compression.decompressT6(byteArray1, 1, 1273);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unknown T.6 control code 000000000001
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-64);
      T4AndT6Compression.decompressT6(byteArray0, 0, 1);
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-64);
      byteArray1[1] = (byte) (-64);
      byteArray1[4] = (byte) (-64);
      // Undeclared exception!
      try { 
        T4AndT6Compression.compressT6(byteArray1, (byte) (-64), (byte) (-64));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)5;
      byteArray0[4] = (byte)5;
      byteArray0[5] = (byte)5;
      byteArray0[7] = (byte)5;
      byteArray0[8] = (byte)5;
      int int0 = 2;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray0, 2, 58);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-60);
      byteArray0[0] = (byte) (-60);
      byte byte1 = (byte) (-39);
      byteArray0[1] = (byte) (-39);
      int int0 = 3600;
      T4AndT6Compression.decompressModifiedHuffman(byteArray0, 3600, (byte) (-60));
      int int1 = (-1466);
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, (-1466), 63);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byte byte0 = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)30;
      byte[] byteArray1 = T4AndT6Compression.decompressT6(byteArray0, (byte)30, (byte)0);
      int int0 = 180;
      try { 
        T4AndT6Compression.compressT6(byteArray1, 180, (byte)30);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-1), (-1), true);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 2240, 2240, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      try { 
        T4AndT6Compression.compressT4_1D(byteArray0, 1609, 1609, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-127);
      byte byte0 = (byte)52;
      byteArray0[1] = (byte)52;
      byte byte1 = (byte) (-67);
      byteArray0[2] = (byte) (-67);
      byte[] byteArray1 = T4AndT6Compression.decompressT6(byteArray0, (byte)52, 0);
      T4AndT6Compression.compressModifiedHuffman(byteArray1, 1271, (byte) (-127));
      int int0 = 1920;
      T4AndT6Compression.decompressModifiedHuffman(byteArray0, 1920, (byte) (-127));
      boolean boolean0 = false;
      // Undeclared exception!
      T4AndT6Compression.compressT4_1D(byteArray0, 0, 1920, false);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-21);
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 1, (byte) (-21));
      try { 
        T4AndT6Compression.decompressT6(byteArray1, 22, 22);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unknown T.6 control code 000000000001
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-1211), (-1211), true);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, 386, 386, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byte byte0 = (byte) (-62);
      byte byte1 = (byte)4;
      byteArray0[1] = (byte)4;
      boolean boolean0 = true;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)4, (byte)4, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)31;
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte)0;
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 2560, (byte)0);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, (byte)0, (byte)31, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)53;
      try { 
        T4AndT6Compression.compressT6(byteArray0, (byte)53, (byte)27);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)16;
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte) (-9);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-85);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)0;
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, (byte)0, (byte)16);
      boolean boolean0 = false;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (-346), (byte)16, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-26), (-26), false);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (-26), 3161, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte) (-3);
      byteArray0[4] = (byte)30;
      byteArray0[5] = (byte)11;
      byteArray0[6] = (byte)63;
      byteArray0[7] = (byte) (-46);
      byte[] byteArray1 = T4AndT6Compression.decompressT6(byteArray0, 2199, 2);
      byte[] byteArray2 = T4AndT6Compression.compressT4_2D(byteArray1, (byte)11, (byte)4, true, (byte) (-46));
      assertNotSame(byteArray2, byteArray1);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte[] byteArray1 = T4AndT6Compression.compressModifiedHuffman(byteArray0, 1, 1);
      T4AndT6Compression.decompressModifiedHuffman(byteArray1, 1, 1);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 4515, 4515, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)28;
      byteArray0[1] = (byte)15;
      try { 
        T4AndT6Compression.compressT6(byteArray0, 4, 25);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)16;
      byteArray0[0] = (byte)16;
      byte byte1 = (byte)0;
      byteArray0[1] = (byte)0;
      byte byte2 = (byte)2;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)3;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-85);
      int int0 = 821;
      try { 
        T4AndT6Compression.compressT6(byteArray0, (byte)3, 821);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-13);
      byteArray0[1] = (byte)35;
      try { 
        T4AndT6Compression.compressT6(byteArray0, 4, 396);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)16;
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)16;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-85);
      int int0 = 821;
      try { 
        T4AndT6Compression.compressT6(byteArray0, (byte)16, 821);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byte byte0 = (byte)47;
      byteArray0[0] = (byte)47;
      byteArray0[1] = (byte) (-32);
      byteArray0[2] = (byte)10;
      byteArray0[3] = (byte) (-11);
      byteArray0[4] = (byte) (-118);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 3, (byte)10, false, (byte) (-11));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte)24;
      byteArray0[2] = (byte)4;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)24;
      byteArray0[6] = (byte)4;
      byte[] byteArray1 = T4AndT6Compression.decompressT6(byteArray0, (byte)24, (-2196));
      T4AndT6Compression.compressT4_2D(byteArray0, (byte)4, 3, false, (-1367));
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray1, (byte)4, (byte)4);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte) (-3);
      byte byte0 = (byte)30;
      byteArray0[4] = (byte)30;
      byteArray0[5] = (byte)11;
      byteArray0[6] = (byte)63;
      byteArray0[7] = (byte) (-46);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)4, (byte)24, true, 6);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      int int0 = 1068;
      byte[] byteArray1 = T4AndT6Compression.decompressT6(byteArray0, (byte)0, (byte)0);
      int int1 = 1664;
      boolean boolean0 = true;
      byte[] byteArray2 = T4AndT6Compression.compressT4_2D(byteArray1, 134, (-414), true, (byte)0);
      boolean boolean1 = true;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray2, (-2718), 64, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)70;
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte) (-3);
      byte byte1 = (byte)30;
      byteArray0[5] = (byte)11;
      byteArray0[6] = (byte)63;
      byte byte2 = (byte) (-46);
      byteArray0[7] = (byte) (-46);
      int int0 = 34;
      try { 
        T4AndT6Compression.compressT6(byteArray0, (byte)11, 34);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte) (-3);
      byteArray0[4] = (byte)30;
      byteArray0[5] = (byte)11;
      byteArray0[6] = (byte)63;
      byteArray0[7] = (byte) (-46);
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, (byte)4, 1, true, 1);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (byte)63, (byte)11, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)70;
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte) (-1);
      byteArray0[5] = (byte)12;
      byte byte1 = (byte)63;
      byteArray0[6] = (byte)63;
      byteArray0[7] = (byte) (-46);
      int int0 = 34;
      try { 
        T4AndT6Compression.compressT6(byteArray0, (byte)12, 34);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byte byte0 = (byte)63;
      byteArray0[0] = (byte)63;
      byteArray0[1] = (byte)7;
      byteArray0[2] = (byte)67;
      byteArray0[3] = (byte) (-92);
      byteArray0[4] = (byte) (-64);
      byte byte1 = (byte)59;
      byteArray0[5] = (byte)59;
      byteArray0[6] = (byte)6;
      byteArray0[7] = (byte)46;
      boolean boolean0 = false;
      T4AndT6Compression.decompressT4_1D(byteArray0, (-666), (-35), false);
      int int0 = 1536;
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)63, 1536);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte)70;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte) (-3);
      byteArray0[5] = (byte)11;
      byteArray0[6] = (byte)63;
      byteArray0[7] = (byte) (-46);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)4, (byte)24, true, 6);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      boolean boolean0 = false;
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 1, 1, false);
      int int0 = 420;
      int int1 = 1686;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 420, 1686, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 102, 2920, false, 2920);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      int int0 = 96;
      int int1 = 2299;
      boolean boolean0 = false;
      try { 
        T4AndT6Compression.compressT4_1D(byteArray0, 96, 2299, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-1419), 21, false);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 21, 21, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte)2, (byte)2, false);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, (byte)2, 2, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-68);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-77);
      byteArray0[4] = (byte) (-125);
      byteArray0[5] = (byte) (-117);
      byteArray0[6] = (byte) (-50);
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte) (-77), 355, false);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 432, 1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      int int0 = 131;
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray0, 131, 131);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte) (-92);
      byteArray0[3] = (byte) (-21);
      byteArray0[4] = (byte)111;
      byteArray0[5] = (byte) (-96);
      byteArray0[6] = (byte) (-7);
      byteArray0[7] = (byte)32;
      byteArray0[8] = (byte)118;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, 2176, (byte)10, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 3, 1, false);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 3, 3, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 1, 1, true);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, 1, 5, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)10, (byte)0);
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, (byte)10, 1, false, (-546));
      boolean boolean0 = false;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 20, 1, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte)24;
      byteArray0[2] = (byte)4;
      byteArray0[3] = (byte) (-3);
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)24;
      byteArray0[6] = (byte)4;
      byteArray0[7] = (byte) (-46);
      byte[] byteArray1 = T4AndT6Compression.decompressT6(byteArray0, 2199, 2);
      byte[] byteArray2 = T4AndT6Compression.compressT4_2D(byteArray1, (byte)4, (byte)4, true, (byte) (-46));
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray2, 6, 5, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)24;
      byteArray0[1] = (byte)24;
      byteArray0[2] = (byte)4;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte)24;
      byteArray0[6] = (byte)4;
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, (byte)4, (byte)4, true, (byte)0);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, (byte)4, 5, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byteArray0[2] = (byte) (-92);
      byte byte0 = (byte) (-21);
      byteArray0[4] = (byte) (-92);
      byteArray0[5] = (byte) (-96);
      byteArray0[6] = (byte) (-7);
      byteArray0[7] = (byte)32;
      byte byte1 = (byte)118;
      byteArray0[8] = (byte)118;
      boolean boolean0 = true;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, 2176, (byte)10, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }
}
