/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 07:26:30 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)40;
      TiffField tiffField0 = new TiffField(0, 262, fieldTypeShort0, 37416, (-1319L), byteArray0, (ByteOrder) null, 3670);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getTag());
      assertEquals(74832, tiffField0.getBytesLength());
      assertEquals(10240, int0);
      assertEquals(262, tiffField0.getDirectoryType());
      assertEquals(3670, tiffField0.getSortHint());
      assertEquals((-1319), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)56;
      byteArray0[4] = (byte)56;
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeRational0, 492L, (byte)56, byteArray0, byteOrder0, (-2397));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(56, tiffField0.getDirectoryType());
      assertEquals(3936, tiffField0.getBytesLength());
      assertEquals(1, int0);
      assertEquals((-2397), tiffField0.getSortHint());
      assertEquals(56, tiffField0.getTag());
      assertEquals(56, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)56;
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeRational0, 492L, (byte)56, byteArray0, byteOrder0, (-2397));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(56, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-2397), tiffField0.getSortHint());
      assertEquals(3936, tiffField0.getBytesLength());
      assertEquals(56, tiffField0.getTag());
      assertEquals(56, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2365), 33550, fieldTypeLong0, 1L, 693L, byteArray0, byteOrder0, 1982292598);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1982292598, tiffField0.getSortHint());
      assertEquals(693, tiffField0.getOffset());
      assertEquals((-2365), tiffField0.getTag());
      assertEquals(33550, tiffField0.getDirectoryType());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-761), fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 2328);
      tiffField0.dump();
      assertEquals((-761), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2328, tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeRational0, (byte)56, (byte)56, byteArray0, byteOrder0, (byte)56);
      String string0 = tiffField0.getValueDescription();
      assertEquals(56, tiffField0.getDirectoryType());
      assertEquals("", string0);
      assertEquals(448, tiffField0.getBytesLength());
      assertEquals(56, tiffField0.getTag());
      assertEquals(56, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(56, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[18];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2144348635, (-2258), fieldTypeFloat0.RATIONAL, 15, 0L, byteArray0, byteOrder0, 9);
      tiffField0.getValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2258), tiffField0.getDirectoryType());
      assertEquals(2144348635, tiffField0.getTag());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(120, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(513, 513, fieldTypeRational0, 513, 513, byteArray0, byteOrder0, 513);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(513, tiffField0.getOffset());
      assertEquals(513, tagInfo0.tag);
      assertEquals(513, tiffField0.getDirectoryType());
      assertEquals(513, tiffField0.getSortHint());
      assertEquals(513, tiffField0.getTag());
      assertTrue(tagInfo0.isOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[0];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, (-641L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-641), tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1), 34029, fieldTypeLong0.SHORT, 837L, (byte)0, byteArray0, byteOrder0, 2145769774);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2145769774, tiffField0.getSortHint());
      assertEquals(34029, tiffField0.getDirectoryType());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-115);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)27;
      byteArray0[3] = (byte) (-38);
      byteArray0[4] = (byte)14;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(89, 89, fieldTypeAscii0, 1128L, 1128L, byteArray0, byteOrder0, (byte)24);
      String string0 = tiffField0.getStringValue();
      assertEquals(89, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1128, tiffField0.getBytesLength());
      assertEquals(89, tiffField0.getTag());
      assertEquals(1128, tiffField0.getOffset());
      assertEquals(24, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)10, (byte)56, fieldTypeLong0.SRATIONAL, 314, (-4099L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(56, tiffField0.getDirectoryType());
      assertEquals((-4099), tiffField0.getOffset());
      assertEquals(10, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2012), (-1), (FieldType) null, (-2012), 1L, byteArray0, byteOrder0, (byte)118);
      int int0 = tiffField0.getSortHint();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-2012), tiffField0.getTag());
      assertEquals(118, int0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1196, (byte)10, fieldTypeLong0, (byte)10, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1196, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-2147366967), "da5]2XTNZ@gi;}2>E;");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1, 3274, fieldTypeByte0, 229L, (-1449L), byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getOffset();
      assertEquals(1, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-1449), int0);
      assertEquals(3274, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)10;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147155737, (-836), fieldTypeLong0, 1L, (-1565L), byteArray0, byteOrder0, 41730);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2147155737, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(41730, tiffField0.getSortHint());
      assertEquals((-1565), tiffField0.getOffset());
      assertEquals((-836), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-67);
      TiffField tiffField0 = new TiffField((byte) (-63), 777, fieldTypeLong0, (byte)1, (byte)1, byteArray0, byteOrder0, 3);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(777, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-63), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 1715, fieldTypeShort0, 1, (byte) (-49), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-49), tiffField0.getOffset());
      assertEquals(1715, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)10;
      TiffField tiffField0 = new TiffField(14, 2697, fieldTypeShort0, 1L, (-1173L), byteArray0, byteOrder0, (-1));
      tiffField0.getIntValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(14, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(2697, tiffField0.getDirectoryType());
      assertEquals((-1173), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(34908, "f;MC#");
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-15);
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1600), (-1600), fieldTypeShort0, 1L, (-1600), byteArray0, byteOrder0, (-1));
      tiffField0.getIntValue();
      assertEquals((-1600), tiffField0.getOffset());
      assertEquals((-1600), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-1600), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(4599, (String) null);
      TiffField tiffField0 = new TiffField(50732, (byte)46, fieldTypeShort0, 4L, 5272L, byteArray0, (ByteOrder) null, 4599);
      tiffField0.getFieldTypeName();
      assertEquals(50732, tiffField0.getTag());
      assertEquals(4599, tiffField0.getSortHint());
      assertEquals(5272, tiffField0.getOffset());
      assertEquals(46, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1709), (-1709), fieldTypeLong0, (-1709), 0L, byteArray0, byteOrder0, (-1709));
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1709), tiffField0.getSortHint());
      assertEquals((-1709), tiffField0.getTag());
      assertEquals((-1709), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[42];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(76, "");
      TiffField tiffField0 = new TiffField(2070, 1, fieldTypeFloat0, 1173L, (-968L), byteArray0, byteOrder0, 141);
      tiffField0.getFieldTypeName();
      assertEquals(2070, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-968), tiffField0.getOffset());
      assertEquals(141, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[0];
      CharBuffer charBuffer0 = CharBuffer.allocate('\u0084');
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, (-641L), byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-641), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1196, (byte)10, fieldTypeLong0, (byte)10, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(1196, tiffField0.getTag());
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2445), " for: ");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-2445), (byte)56, fieldTypeLong0, (byte)56, (byte)56, byteArray0, byteOrder0, 1513);
      tiffField0.getFieldType();
      assertEquals(56, tiffField0.getDirectoryType());
      assertEquals(1513, tiffField0.getSortHint());
      assertEquals(56, tiffField0.getOffset());
      assertEquals((-2445), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147467870, (-913), fieldTypeShort0, 1, 2007L, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals((-913), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(2007, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2147467870, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)46;
      TiffField tiffField0 = new TiffField((byte)0, 127, fieldTypeShort0, 1L, 2892L, byteArray0, byteOrder0, (-175));
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-175), tiffField0.getSortHint());
      assertEquals(127, tiffField0.getDirectoryType());
      assertEquals(2892, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(34908, "f;MC#");
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-15);
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1600), (-1600), fieldTypeShort0, 1L, (-1600), byteArray0, byteOrder0, (-1));
      tiffField0.getDoubleValue();
      assertEquals((-1600), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-1600), tiffField0.getTag());
      assertEquals((-1600), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)73, (byte)73, fieldTypeRational0, (byte)73, (byte)73, byteArray0, byteOrder0, (byte)73);
      tiffField0.getDoubleArrayValue();
      assertEquals(584, tiffField0.getBytesLength());
      assertEquals(73, tiffField0.getOffset());
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(73, tiffField0.getTag());
      assertEquals(73, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 3413L, 0L, byteArray0, byteOrder0, (-1357));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-1357), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(34029, (byte)6, fieldTypeLong0.SHORT, 34029, 1L, byteArray0, byteOrder0, 34029);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(34029, tiffField0.getTag());
      assertEquals(34029, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, (byte)0, 306, byteArray0, (ByteOrder) null, 2014);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals(306, tiffField0.getOffset());
      assertEquals(2014, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)56, 77, fieldTypeLong0, (byte)50, 2428L, byteArray0, (ByteOrder) null, 77);
      tiffField0.getCount();
      assertEquals(2428, tiffField0.getOffset());
      assertEquals(56, tiffField0.getTag());
      assertEquals(77, tiffField0.getSortHint());
      assertEquals(77, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-253), (-253), fieldTypeLong0, (-253), (-1L), (byte[]) null, byteOrder0, (-253));
      tiffField0.getCount();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-253), tiffField0.getDirectoryType());
      assertEquals((-253), tiffField0.getSortHint());
      assertEquals((-253), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, (byte)0, 306, byteArray0, (ByteOrder) null, 2014);
      int int0 = tiffField0.getBytesLength();
      assertEquals(2014, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(306, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, (int) (byte)0, (int) (byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(33918, 33918, fieldTypeRational0, (-1L), 4L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(33918, tiffField0.getDirectoryType());
      assertEquals((-8), int0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals(33918, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, (-867), fieldTypeRational0, 0, (byte)0, byteArray0, (ByteOrder) null, 306);
      tiffField0.getByteOrder();
      assertEquals((-867), tiffField0.getDirectoryType());
      assertEquals(306, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte)0, fieldTypeShort0, (byte)56, 1224L, byteArray0, byteOrder0, 1);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1224, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(11, "Missing value: ");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 11, 0L, byteArray0, byteOrder0, 204);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(204, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(44, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, (byte)0, 306, byteArray0, (ByteOrder) null, 2014);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, byteArray1.length);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2014, tiffField0.getSortHint());
      assertEquals(306, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-138), (-138), (FieldType) null, (byte)44, (-138), byteArray0, byteOrder0, (-138));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[92];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-735), (-735), fieldTypeFloat0, (-735), (-735), byteArray0, byteOrder0, (-735));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1653, 1653, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 1653);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-2147279455), fieldTypeLong0, 65535, (-2147279455), (byte[]) null, byteOrder0, (-2147279455));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[42];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4), (-4), fieldTypeByte0, (-4), (-4), byteArray0, byteOrder0, (-4));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)93, (byte)93, fieldTypeShort0, (byte)93, (byte)93, (byte[]) null, byteOrder0, (byte)93);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1051), (-1051), fieldTypeRational0, (-1051), (-1051), byteArray0, byteOrder0, (-1051));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeShort0, (byte)56, (byte)56, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-13), (byte) (-13), fieldTypeShort0, (byte) (-13), (byte) (-13), byteArray0, byteOrder0, (byte) (-13));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, (byte)56);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 4, fieldTypeLong0, 65535, 4, (byte[]) null, byteOrder0, 4);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)59, (byte)59, (FieldType) null, (byte)59, (byte)59, byteArray0, byteOrder0, (byte)59);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-60), (byte) (-60), fieldTypeShort0, (byte) (-60), (byte) (-60), byteArray0, byteOrder0, (byte) (-60));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeShort0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3385, 3385, fieldTypeByte0, 3385, 3385, (byte[]) null, byteOrder0, 3385);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte) (-12), (byte) (-12), fieldTypeFloat0, (byte) (-12), (byte) (-12), byteArray0, byteOrder0, (byte) (-12));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)46, (byte)46, fieldTypeRational0, 1L, (byte)46, byteArray0, byteOrder0, (byte)46);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[197];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1672, 1672, fieldTypeLong0.SRATIONAL, 1, 1, byteArray0, byteOrder0, (-2902));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(32995, 32995, fieldTypeShort0, 32995, 32995, (byte[]) null, byteOrder0, 32995);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-567), (-567), fieldTypeShort0, (-567), (-567), byteArray0, byteOrder0, (-567));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)27, (byte)27, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (byte)27);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)27, (-543), fieldTypeDouble0, 510L, 510L, byteArray0, byteOrder0, (byte)27);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)73, (byte)73, fieldTypeRational0, (byte)73, (byte)73, (byte[]) null, byteOrder0, (byte)73);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2526), (-2526), fieldTypeRational0, (-2526), (-2526), byteArray0, byteOrder0, (-2526));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, (-284L), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(532, 532, fieldTypeShort0, 532, 532, (byte[]) null, byteOrder0, 532);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-123), (byte) (-123), fieldTypeShort0, (byte) (-123), (byte) (-123), byteArray0, byteOrder0, (byte) (-123));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(58, 58, fieldTypeRational0, 58, 336L, (byte[]) null, byteOrder0, 58);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-472), (-472), fieldTypeRational0, (-472), (-472), byteArray0, byteOrder0, (-472));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[92];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(1640, 1640, fieldTypeByte0, (-1223L), (-83L), byteArray0, byteOrder0, 1640);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(1640);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 1L, 4190L, byteArray0, byteOrder0, (byte)97);
      MockPrintStream mockPrintStream0 = new MockPrintStream("~");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "~");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1266, 2146668663, fieldTypeShort0, (-970L), (byte)56, byteArray0, byteOrder0, 1266);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 1L, 4190L, byteArray0, byteOrder0, (byte)97);
      MockPrintStream mockPrintStream0 = new MockPrintStream("~");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte) (-31), (byte) (-31), fieldTypeFloat0, (byte) (-31), (byte) (-31), byteArray0, byteOrder0, (byte) (-31));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)105, 1, fieldTypeRational0, 1, 0L, byteArray0, byteOrder0, 1300);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)69, (byte)69, fieldTypeRational0, (byte)69, (byte)69, byteArray0, byteOrder0, (byte)69);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "qdL,@");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 0, fieldTypeByte0, 0L, (byte) (-1), byteArray0, byteOrder0, (byte) (-1));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)99, (byte) (-72), fieldTypeRational0, (byte)99, 4L, byteArray0, byteOrder0, (byte)99);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-72), tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(99, tiffField0.getSortHint());
      assertEquals(99, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-307), 65535, (FieldType) null, (-307), 65535, byteArray0, byteOrder0, (byte)13);
      tiffField0.getFieldType();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-307), tiffField0.getTag());
      assertEquals(13, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37387, (-3967), fieldTypeShort0, 37387, 1091L, byteArray0, byteOrder0, (byte) (-49));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-49), tiffField0.getSortHint());
      assertEquals(1091, tiffField0.getOffset());
      assertEquals((-3967), int0);
      assertEquals(37387, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)60, (byte)60, fieldTypeRational0, (byte)60, (byte)60, byteArray0, byteOrder0, (byte)60);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte)0, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(27, (-2468), (FieldType) null, (-1L), (-2468), byteArray0, byteOrder0, 27);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-2468), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tagInfo0.tag);
      assertEquals((-2468), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2606, "");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2606, 2606, fieldTypeAscii0, 0L, (-1L), byteArray0, (ByteOrder) null, 3039);
      int int0 = tiffField0.getTag();
      assertEquals(2606, int0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(3039, tiffField0.getSortHint());
      assertEquals(2606, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 519L, (-1L), byteArray0, byteOrder0, (byte)109);
      int int0 = tiffField0.getBytesLength();
      assertEquals(2076, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(109, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[42];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(3292, 3292, fieldTypeShort0, 3292, 3292, byteArray0, byteOrder0, 3292);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("3292 (0xcdc: Unknown Tag): ", string0);
      assertEquals(3292, tiffField0.getDirectoryType());
      assertEquals(3292, tiffField0.getSortHint());
      assertEquals(3292, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeFloat0, (byte)56, (byte)56, byteArray0, byteOrder0, (byte)56);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeShort0, (byte)56, (byte)56, byteArray0, byteOrder0, (byte)56);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[54];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1888, 1888, fieldTypeLong0, 1888, 1888, byteArray0, byteOrder0, (-1590));
      tiffField0.getIntValueOrArraySum();
      assertEquals(1888, tiffField0.getDirectoryType());
      assertEquals((-1590), tiffField0.getSortHint());
      assertEquals(1888, tiffField0.getTag());
      assertEquals(1888, tiffField0.getOffset());
      assertEquals(7552, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1982292615, 1982292615, fieldTypeByte0, 1982292615, 1982292615, byteArray0, byteOrder0, 1982292615);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@4f9eb3ef for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)63, (byte)63, fieldTypeRational0, (byte)63, (byte)63, byteArray0, byteOrder0, (byte)63);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[42];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2697, 2697, fieldTypeDouble0, 2697, 2697, byteArray0, byteOrder0, 2697);
      tiffField0.getDoubleArrayValue();
      assertEquals(21576, tiffField0.getBytesLength());
      assertEquals(2697, tiffField0.getSortHint());
      assertEquals(2697, tiffField0.getOffset());
      assertEquals(2697, tiffField0.getTag());
      assertEquals(2697, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[42];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, 28, fieldTypeByte0, 28, 28, byteArray0, byteOrder0, 28);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@257dc00e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[42];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1888, 1888, fieldTypeLong0, 1888, 1888, byteArray0, byteOrder0, 1888);
      tiffField0.getDoubleArrayValue();
      assertEquals(1888, tiffField0.getOffset());
      assertEquals(1888, tiffField0.getDirectoryType());
      assertEquals(1888, tiffField0.getSortHint());
      assertEquals(1888, tiffField0.getTag());
      assertEquals(7552, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeFloat0, (byte)56, (byte)56, byteArray0, byteOrder0, (byte)56);
      tiffField0.getDoubleArrayValue();
      assertEquals(56, tiffField0.getDirectoryType());
      assertEquals(224, tiffField0.getBytesLength());
      assertEquals(56, tiffField0.getOffset());
      assertEquals(56, tiffField0.getSortHint());
      assertEquals(56, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeShort0, (byte)56, (byte)56, byteArray0, byteOrder0, (byte)56);
      tiffField0.getDoubleArrayValue();
      assertEquals(56, tiffField0.getOffset());
      assertEquals(112, tiffField0.getBytesLength());
      assertEquals(56, tiffField0.getSortHint());
      assertEquals(56, tiffField0.getTag());
      assertEquals(56, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[232];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeDouble0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)63, (byte)63, fieldTypeRational0, (byte)63, (byte)63, byteArray0, byteOrder0, (byte)63);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(63, tiffField0.getTag());
      assertEquals(63, tiffField0.getDirectoryType());
      assertEquals(63, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(504, tiffField0.getBytesLength());
      assertEquals(63, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[54];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1888, 1888, fieldTypeLong0, 1888, 1888, byteArray0, byteOrder0, 1888);
      tiffField0.getIntArrayValue();
      assertEquals(1888, tiffField0.getTag());
      assertEquals(1888, tiffField0.getOffset());
      assertEquals(1888, tiffField0.getSortHint());
      assertEquals(1888, tiffField0.getDirectoryType());
      assertEquals(7552, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeFloat0, (byte)56, (byte)56, byteArray0, byteOrder0, (byte)56);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@19a65e4a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)73, (byte)73, fieldTypeRational0, (byte)73, (byte)73, byteArray0, byteOrder0, (byte)73);
      tiffField0.getIntArrayValue();
      assertEquals(584, tiffField0.getBytesLength());
      assertEquals(73, tiffField0.getOffset());
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(73, tiffField0.getDirectoryType());
      assertEquals(73, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeShort0, (byte)56, (byte)56, byteArray0, byteOrder0, (byte)56);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(112, tiffField0.getBytesLength());
      assertEquals(56, tiffField0.getOffset());
      assertEquals(56, tiffField0.getTag());
      assertEquals(56, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(56, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[288];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, (byte)62, byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(62, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)73, (byte)73, fieldTypeRational0, (byte)73, (byte)73, byteArray0, byteOrder0, (byte)73);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeShort0, (byte)56, (byte)56, byteArray0, byteOrder0, (byte)56);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@112b2ea5
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)42, 893, fieldTypeAscii0, 2068L, 224L, byteArray0, byteOrder0, 893);
      String string0 = tiffField0.getStringValue();
      assertEquals(224, tiffField0.getOffset());
      assertEquals(2068, tiffField0.getBytesLength());
      assertEquals(42, tiffField0.getTag());
      assertEquals(893, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(893, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)38, (byte)38, fieldTypeShort0, (byte)38, (byte)38, byteArray0, byteOrder0, (byte)38);
      String string0 = tiffField0.getTagName();
      assertEquals(38, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x26)", string0);
      assertEquals(38, tiffField0.getSortHint());
      assertEquals(38, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(514, 514, fieldTypeRational0, 514, 514, byteArray0, byteOrder0, 514);
      String string0 = tiffField0.getTagName();
      assertEquals(514, tiffField0.getOffset());
      assertEquals("JpgFromRawLength", string0);
      assertEquals(514, tiffField0.getSortHint());
      assertEquals(514, tiffField0.getTag());
      assertEquals(514, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)62, (byte)62, fieldTypeFloat0, (byte)62, (byte)62, byteArray0, byteOrder0, (byte)62);
      String string0 = tiffField0.toString();
      assertEquals("62 (0x3e: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (54) (62 Float)", string0);
      assertEquals(62, tiffField0.getDirectoryType());
      assertEquals(62, tiffField0.getSortHint());
      assertEquals(62, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[35];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2705, 2705, fieldTypeByte0, 2705, 2705, byteArray0, byteOrder0, 2705);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2705, tiffField0.getDirectoryType());
      assertEquals(2705, tiffField0.getSortHint());
      assertEquals(2705L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(2705, tiffField0.getOffset());
      assertEquals(2705, tiffField0.getTag());
      assertEquals(2705, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField((byte)101, (byte)101, fieldTypeByte0, (byte)101, (byte)101, byteArray0, byteOrder0, (byte)101);
      String string0 = tiffField0.toString();
      assertEquals(101, tiffField0.getOffset());
      assertEquals("101 (0x65: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (101) (101 Byte)", string0);
      assertEquals(101, tiffField0.getSortHint());
      assertEquals(101, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[232];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(508, 508, fieldTypeDouble0, 508, 508, byteArray0, byteOrder0, 508);
      tiffField0.dump();
      assertEquals(508, tiffField0.getTag());
      assertEquals(508L, tiffField0.getCount());
      assertEquals(508, tiffField0.getOffset());
      assertEquals(4064, tiffField0.getBytesLength());
      assertEquals(508, tiffField0.getSortHint());
      assertEquals(508, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(529, 529, fieldTypeLong0, 529, 1L, byteArray0, byteOrder0, 529);
      String string0 = tiffField0.toString();
      assertEquals(529, tiffField0.getSortHint());
      assertEquals(529, tiffField0.getDirectoryType());
      assertEquals(2116, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals("529 (0x211: YCbCrCoefficients): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (529 SLong)", string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((byte)46, (byte)46, fieldTypeLong0, (byte)46, (byte)46, byteArray0, byteOrder0, (byte)46);
      String string0 = tiffField0.toString();
      assertEquals(46, tiffField0.getDirectoryType());
      assertEquals(184, tiffField0.getBytesLength());
      assertEquals("46 (0x2e: Unknown Tag): 0, 0, 0, 0 (46 Long)", string0);
      assertEquals(46, tiffField0.getOffset());
      assertEquals(46, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[288];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)91, (byte)91, fieldTypeShort0, (byte)91, (byte)91, byteArray0, byteOrder0, (byte)91);
      String string0 = tiffField0.toString();
      assertEquals(91, tiffField0.getSortHint());
      assertEquals(91, tiffField0.getDirectoryType());
      assertEquals(91, tiffField0.getOffset());
      assertEquals("91 (0x5b: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (91) (91 SShort)", string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeFloat0, (byte)56, (byte)56, byteArray0, byteOrder0, (byte)56);
      String string0 = tiffField0.getValueDescription();
      assertEquals(224, tiffField0.getBytesLength());
      assertEquals(56, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(56L, tiffField0.getCount());
      assertEquals(56, tiffField0.getDirectoryType());
      assertEquals(56, tiffField0.getTag());
      assertEquals(56, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[64];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4270, 3976, fieldTypeAscii0, 3976, 501L, byteArray0, byteOrder0, 3976);
      String string0 = tiffField0.getValueDescription();
      assertEquals(501, tiffField0.getOffset());
      assertEquals(4270, tiffField0.getTag());
      assertEquals(3976, tiffField0.getSortHint());
      assertEquals(3976, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(3976, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeShort0, (byte)56, (byte)56, byteArray0, byteOrder0, (byte)56);
      String string0 = tiffField0.getValueDescription();
      assertEquals(56, tiffField0.getOffset());
      assertEquals(112, tiffField0.getBytesLength());
      assertEquals(56L, tiffField0.getCount());
      assertEquals(56, tiffField0.getTag());
      assertEquals(56, tiffField0.getDirectoryType());
      assertEquals(56, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-1417), (-1417), fieldTypeAscii0, (byte)13, 1L, byteArray0, byteOrder0, (-1173));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1417), tiffField0.getTag());
      assertEquals((-1173), tiffField0.getSortHint());
      assertEquals((-1417), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(13, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1648, 1648, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 1648);
      tiffField0.toString();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1648, tiffField0.getTag());
      assertEquals(1648, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1648, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(30, (byte)27, fieldTypeRational0, 268L, 268L, byteArray0, byteOrder0, 270);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)27, 24);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(27, tiffField0.getDirectoryType());
      assertEquals(30, tiffField0.getTag());
      assertEquals(270, tiffField0.getSortHint());
      assertEquals(268, tiffField0.getOffset());
      assertNull(string0);
      assertFalse(tiffField0.isLocalValue());
      assertEquals(268L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1175), 38, fieldTypeFloat0, (-1175), (-2248), byteArray0, byteOrder0, (-1));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2248), (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(38, tiffField0.getDirectoryType());
      assertEquals((-1175), tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-2248), tiffField0.getOffset());
      assertEquals((-1175L), tiffField0.getCount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, (FieldType) null, 50, 50, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-49), (byte) (-49), fieldTypeShort0, 37387, (byte) (-49), byteArray0, byteOrder0, (byte) (-49));
      int int0 = tiffField0.getSortHint();
      assertEquals((-49), tiffField0.getOffset());
      assertEquals((-49), tiffField0.getTag());
      assertEquals((-49), int0);
      assertEquals(37387L, tiffField0.getCount());
      assertEquals((-49), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)27, (-838), fieldTypeRational0, (-838), (-838), byteArray0, byteOrder0, (byte)27);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 41, fieldTypeLong0, 65535, 41, (byte[]) null, byteOrder0, 41);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(34, 34, fieldTypeRational0, 1L, 34, byteArray0, (ByteOrder) null, (byte)43);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)56, (byte)56, fieldTypeShort0, (byte)56, (byte)56, byteArray0, byteOrder0, (byte)56);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(56, tiffField0.getDirectoryType());
      assertEquals(56, tiffField0.getTag());
      assertEquals(56, tiffField0.getSortHint());
      assertEquals(56L, tiffElement0.offset);
  }
}
