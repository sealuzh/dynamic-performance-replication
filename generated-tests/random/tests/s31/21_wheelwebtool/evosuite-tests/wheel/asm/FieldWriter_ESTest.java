/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 16:26:35 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 6, "j9", "", (String) null, "j9");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4096);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, (String) null, (String) null, "", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2031);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2031, "", "", (String) null, "");
      Attribute attribute0 = new Attribute("%q6hJd`L^~");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-111));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 65535, "52GD[_6|(UM", "java/lang/Class", "java/lang/Class", "java/lang/Class");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation(";D", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1331);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 285212684, ",P5+#\"jVS_?Ew'`^'d&", ",P5+#\"jVS_?Ew'`^'d&", "X=_[yL(Wz?s-Sb)v", ",P5+#\"jVS_?Ew'`^'d&");
      fieldWriter0.visitAnnotation("X=_[yL(Wz?s-Sb)v", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1577));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1577), "LocalVariableTable", "", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 6, "j9", "", (String) null, "j9");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1577));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1577), "LocalVariableTable", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "so", "so", "wheel.asm.FieldWriter", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1331);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 285212684, ",P5+#\"jVS_?Ew'`^'d&", ",P5+#\"jVS_?Ew'`^'d&", "X=_[yL(Wz?s-Sb)v", ",P5+#\"jVS_?Ew'`^'d&");
      fieldWriter0.visitAnnotation("X=_[yL(Wz?s-Sb)v", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2674);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2674, "", "System", "yh~FV{Zl", "");
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "_]N9\"+y0H_*", "_]N9\"+y0H_*", "ConstantValue", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(959);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 49, "O^#F?Mf^]kKrpr&", "O^#F?Mf^]kKrpr&", "O^#F?Mf^]kKrpr&", "O^#F?Mf^]kKrpr&");
      // Undeclared exception!
      try { 
        classWriter0.visitField(959, "O^#F?Mf^]kKrpr&", "@?8K}0zRs+iYr\"<wgi;", "", fileSystemHandling0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.testdata.FileSystemHandling@7452d6a2
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 6, "j9", "", (String) null, "j9");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2674);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2674, "", "System", "yh~FV{Zl", "");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
