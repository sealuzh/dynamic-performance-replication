/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 03 10:21:25 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2257));
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "@.J]a$Xz~cF";
      stringArray0[2] = "long";
      stringArray0[3] = "@.J]a$Xz~cF";
      stringArray0[4] = "";
      stringArray0[5] = "@.J]a$Xz~cF";
      stringArray0[6] = "@.J]a$Xz~cF";
      stringArray0[7] = "@.J]a$Xz~cF";
      classWriter0.visit((-2257), (-2257), "@.J]a$Xz~cF", "@.J]a$Xz~cF", "@.J]a$Xz~cF", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2257), "@.J]a$Xz~cF", "@.J]a$Xz~cF", "", "@.J]a$Xz~cF");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2270));
      classWriter0.index = (-2270);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "S1gnEture", "S1gnEture", "S1gnEture", "S1gnEture");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2270));
      classWriter0.index = (-2270);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "S1gnEture", "S1gnEture", "S1gnEture", "S1gnEture");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(12);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", (Object) null);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2270));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "S1gnEture", "S1gnEture", "S1gnEture", "S1gnEture");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "_i>hCXdN7g$).tn", "_i>hCXdN7g$).tn", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2270));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "S1gnEture", "S1gnEture", "S1gnEture", "S1gnEture");
      ByteVector byteVector0 = classWriter0.pool;
      Attribute attribute0 = new Attribute("S1gnEture");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2276));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2276), "@.J]aXz~cF", "@.J]aXz~cF", "@.J]aXz~cF", "@.J]aXz~cF");
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = (-2276);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2262));
      classWriter0.index = 65535;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Deprecated", "@!aXz+Y", "The wildcard array must not be null", ":(8q![xJNx?G3{fPW");
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2257));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3862);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "T||]%|~ZG.LC(6mb~A", "T||]%|~ZG.LC(6mb~A", "T||]%|~ZG.LC(6mb~A", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2305));
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = (-2305);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 50, "Invalid IOCase name: ", "RuntimeInvisibleAnnotations", "", (Object) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("z#r0_a?m:`J/=PE?ja6", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(12);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("K*Q\"Oh>R7S", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2257));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "M\"fa/A .y8", "n~Ei7sy8#+^>@pK=P", (String) null, "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2309));
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-807), "2a/Xz+Y", "2a/Xz+Y", "2a/Xz+Y", "2a/Xz+Y");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(12);
      ByteVector byteVector0 = classWriter0.pool;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2623), "", "", "", "c]>");
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2264));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "^g]c}]>udP'a", "^g]c}]>udP'a", "^g]c}]>udP'a", "^g]c}]>udP'a");
      Attribute attribute0 = new Attribute("^g]c}]>udP'a");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4008);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "kud&%.&3W", "kud&%.&3W", "kud&%.&3W", "kud&%.&3W");
      fieldWriter0.visitAnnotation("kud&%.&3W", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2308));
      classWriter0.version = (-2308);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2308), "B'AQ_gYC3", "B'AQ_gYC3", "B'AQ_gYC3", "B'AQ_gYC3");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2308));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2308), "B'AQ_gYC3", "B'AQ_gYC3", "B'AQ_gYC3", "B'AQ_gYC3");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(12);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", (Object) null);
      fieldWriter0.visitAnnotation("z#r0_a?m:`J/=PE?ja6", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2257));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "M\"fa/A .y8", "n~Ei7sy8#+^>@pK=P", (String) null, "");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(12);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "", (Object) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-2623), "", "", "", "c]>");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1170));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 357, "Synthetic", "Synthetic", "wheel.asm.FieldWriter", "wheel.asm.FieldWriter");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2270));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "IB#@5JK:(", "IB#@5JK:(", "IB#@5JK:(", "IB#@5JK:(");
      Attribute attribute0 = new Attribute("IB#@5JK:(");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
