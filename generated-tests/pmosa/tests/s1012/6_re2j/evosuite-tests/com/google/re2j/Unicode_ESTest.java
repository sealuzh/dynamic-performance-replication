/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 23:15:21 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.re2j.Unicode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Unicode_ESTest extends Unicode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Unicode.isLower(0);
      Unicode.isUpper(92);
      boolean boolean0 = Unicode.isUpper(501);
      int int0 = Unicode.simpleFold(501);
      assertEquals(500, int0);
      
      Unicode.toUpper(500);
      Unicode.simpleFold(500);
      Unicode.isTitle((-3697));
      Unicode.toUpper(0);
      Unicode.simpleFold(1803);
      Unicode.isLower(0);
      Unicode.simpleFold(500);
      int int1 = Unicode.simpleFold(500);
      assertEquals(501, int1);
      
      Unicode.simpleFold(0);
      Unicode.isTitle(1910);
      boolean boolean1 = Unicode.isPrint((-29));
      assertTrue(boolean1 == boolean0);
      
      Unicode.isTitle(1803);
      int int2 = Unicode.simpleFold(1803);
      assertEquals(1803, int2);
      
      Unicode.isTitle((-2096));
      Unicode.toLower(0);
      Unicode.isTitle(2070);
      int int3 = Unicode.simpleFold(0);
      assertEquals(0, int3);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = Unicode.MAX_ASCII;
      int int1 = Unicode.toLower(127);
      assertEquals(127, int1);
      
      boolean boolean0 = Unicode.isPrint(161);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = Unicode.isPrint(65);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Unicode.isTitle((-3061));
      int int0 = Unicode.toUpper((-2005));
      assertEquals((-2005), int0);
      
      int int1 = Unicode.MAX_FOLD;
      boolean boolean0 = Unicode.isLower((-2005));
      assertFalse(boolean0);
      
      int int2 = Unicode.toLower(8115);
      assertEquals(8115, int2);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = Unicode.isPrint(7406);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Unicode.isTitle(2272);
      Unicode.isUpper(0);
      boolean boolean0 = Unicode.isTitle(668);
      Unicode.isTitle(2272);
      Unicode.toUpper(668);
      int int0 = Unicode.simpleFold(668);
      assertEquals(668, int0);
      
      boolean boolean1 = Unicode.isPrint(668);
      assertFalse(boolean1 == boolean0);
      
      Unicode.isLower(668);
      int int1 = Unicode.toLower((-144));
      assertEquals((-144), int1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int int0 = Unicode.toUpper(122);
      assertEquals(90, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = Unicode.isPrint(1767);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = Unicode.isPrint(2381);
      Unicode.toLower(2381);
      Unicode.isLower(2381);
      boolean boolean1 = Unicode.isPrint((-1));
      boolean boolean2 = Unicode.isPrint((-1));
      assertFalse(boolean2 == boolean0);
      
      Unicode.isTitle(8013);
      int int0 = Unicode.simpleFold(8013);
      assertEquals(8005, int0);
      
      Unicode.isUpper(2381);
      Unicode.isLower(8013);
      Unicode.isTitle(8005);
      Unicode.isUpper(3543);
      Unicode.isLower(2381);
      Unicode.isUpper(0);
      Unicode.toLower(3543);
      Unicode.isTitle(8170);
      Unicode.isUpper((-1));
      Unicode.isLower(2381);
      boolean boolean3 = Unicode.isPrint(8170);
      assertTrue(boolean3);
      
      int int1 = Unicode.simpleFold(3543);
      assertEquals(3543, int1);
      
      int int2 = Unicode.simpleFold(127);
      assertEquals(127, int2);
      
      Unicode.isTitle(3543);
      boolean boolean4 = Unicode.isUpper(3543);
      assertTrue(boolean4 == boolean1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Unicode.simpleFold((-1418));
      int int0 = Unicode.simpleFold(97);
      assertEquals(65, int0);
      
      Unicode.toUpper((-1418));
      int int1 = Unicode.simpleFold(66639);
      assertEquals(66599, int1);
      
      Unicode.isPrint((-1418));
      Unicode.isTitle((-1534));
      Unicode.isTitle(1246);
      boolean boolean0 = Unicode.isLower(66639);
      boolean boolean1 = Unicode.isLower(1246);
      assertFalse(boolean1);
      
      boolean boolean2 = Unicode.isPrint((-2563));
      assertFalse(boolean2 == boolean0);
      
      Unicode.isPrint((-62));
      Unicode.isLower(65);
      int int2 = Unicode.simpleFold(0);
      assertEquals(0, int2);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = Unicode.isPrint(767);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = Unicode.isPrint(3182);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      boolean boolean0 = Unicode.isPrint(1805);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Unicode.toLower(1373);
      boolean boolean0 = Unicode.isPrint(1373);
      assertTrue(boolean0);
      
      int int0 = Unicode.toLower(4421);
      assertEquals(4421, int0);
      
      Unicode.toLower((-4249));
      Unicode.toUpper(4421);
      Unicode.isTitle(4421);
      Unicode.isTitle(3440);
      int int1 = Unicode.toLower(0);
      assertEquals(0, int1);
      
      Unicode.isTitle(1);
      boolean boolean1 = Unicode.isPrint(4421);
      assertTrue(boolean1);
      
      int int2 = Unicode.toUpper(4421);
      assertEquals(4421, int2);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Unicode.isTitle(3317);
      Unicode.simpleFold(3317);
      Unicode.toUpper(3317);
      Unicode.isUpper(1660);
      Unicode.toUpper(3317);
      Unicode.toLower(3317);
      Unicode.isUpper(1660);
      boolean boolean0 = Unicode.isLower(8159);
      assertFalse(boolean0);
      
      Unicode.isLower(3317);
      Unicode.toLower(0);
      Unicode.toUpper(3317);
      Unicode.isTitle(1660);
      Unicode.toLower(0);
      Unicode.simpleFold(3317);
      Unicode.toUpper(3317);
      int int0 = Unicode.simpleFold(0);
      assertEquals(0, int0);
      
      Unicode.isPrint(3317);
      Unicode.isLower(3317);
      Unicode.toLower(3317);
      int int1 = Unicode.simpleFold(1935);
      assertEquals(1935, int1);
      
      Unicode.isLower(5905);
      Unicode.isPrint(0);
      boolean boolean1 = Unicode.isUpper(4353);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = Unicode.simpleFold(223);
      assertEquals(7838, int0);
      
      Unicode.isTitle(0);
      Unicode.isLower((-1108));
      int int1 = Unicode.simpleFold(120051);
      assertEquals(120051, int1);
      
      Unicode.isLower(120051);
      boolean boolean0 = Unicode.isTitle(120051);
      Unicode.isLower(223);
      Unicode.isLower(0);
      Unicode.isTitle(223);
      Unicode.isLower(593);
      Unicode.isPrint(529);
      Unicode.isTitle(490);
      Unicode.isLower(223);
      Unicode.isUpper(0);
      Unicode.isLower(559);
      Unicode.isTitle(939);
      Unicode.isTitle(120051);
      Unicode.isTitle(68108);
      boolean boolean1 = Unicode.isPrint(68108);
      assertTrue(boolean1);
      
      boolean boolean2 = Unicode.isPrint(66378);
      assertFalse(boolean2 == boolean0);
      
      int int2 = Unicode.toUpper(66432);
      assertEquals(66432, int2);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Unicode.isUpper((-2));
      Unicode.isPrint(150);
      Unicode.simpleFold((-1446));
      Unicode.isTitle((-738));
      Unicode.isTitle((-738));
      int int0 = Unicode.simpleFold(0);
      assertEquals(0, int0);
      
      int int1 = Unicode.simpleFold(1206);
      assertEquals(1207, int1);
      
      Unicode.isLower(150);
      Unicode.simpleFold(150);
      Unicode.isTitle(161);
      boolean boolean0 = Unicode.isUpper(1206);
      Unicode.isUpper((-2212));
      Unicode.toLower(0);
      Unicode.isLower((-1446));
      Unicode.toUpper((-3212));
      Unicode.toUpper((-2357));
      boolean boolean1 = Unicode.isUpper(1207);
      assertFalse(boolean1);
      
      Unicode.toUpper((-2357));
      Unicode.isTitle(452);
      Unicode.toLower(0);
      boolean boolean2 = Unicode.isPrint(173);
      assertFalse(boolean2 == boolean0);
      
      int int2 = Unicode.toUpper((-2357));
      assertEquals((-2357), int2);
  }
}
