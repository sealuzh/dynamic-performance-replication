/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 03:12:02 GMT 2018
 */

package com.pmdesigns.jvc.tools;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.pmdesigns.jvc.tools.JVCParser;
import com.pmdesigns.jvc.tools.JVCParserTokenManager;
import com.pmdesigns.jvc.tools.ParseException;
import com.pmdesigns.jvc.tools.SimpleCharStream;
import com.pmdesigns.jvc.tools.Token;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PipedInputStream;
import java.io.PipedReader;
import java.io.PushbackInputStream;
import java.io.PushbackReader;
import java.io.Reader;
import java.nio.charset.Charset;
import java.nio.charset.UnsupportedCharsetException;
import java.util.LinkedHashSet;
import java.util.Locale;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JVCParser_ESTest extends JVCParser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      JVCParser jVCParser0 = null;
      try {
        jVCParser0 = new JVCParser("A$Xv9", linkedHashSet0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JVCParser jVCParser0 = new JVCParser((Reader) null);
      jVCParser0.disable_tracing();
      // Undeclared exception!
      try { 
        jVCParser0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.SimpleCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JVCParser jVCParser0 = new JVCParser((JVCParserTokenManager) null);
      jVCParser0.enable_tracing();
      // Undeclared exception!
      try { 
        jVCParser0.getToken(963);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.JVCParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JVCParser jVCParser0 = new JVCParser(mockFileInputStream0);
      String string0 = jVCParser0.parse();
      assertEquals("", string0);
      
      jVCParser0.ReInit((InputStream) mockFileInputStream0);
      assertEquals(100, jVCParser0.debugColumn);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[12];
      JVCParser jVCParser0 = new JVCParser((Reader) null);
      jVCParser0.disable_tracing();
      jVCParser0.ReInit((Reader) null);
      assertEquals(100, jVCParser0.debugColumn);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-84);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JVCParser jVCParser0 = new JVCParser(byteArrayInputStream0);
      jVCParser0.parse();
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      PipedReader pipedReader0 = new PipedReader();
      BufferedReader bufferedReader0 = new BufferedReader(pipedReader0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[1];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol/\\K");
      stringArray0[0] = "K";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "K");
      try { 
        JVCParser.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JVCParser jVCParser0 = new JVCParser((JVCParserTokenManager) null);
      // Undeclared exception!
      try { 
        jVCParser0.getNextToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.JVCParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[4];
      JVCParser jVCParser0 = new JVCParser((Reader) null);
      jVCParser0.disable_tracing();
      jVCParser0.ReInit((JVCParserTokenManager) null);
      assertEquals(100, jVCParser0.debugColumn);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JVCParser jVCParser0 = new JVCParser((Reader) null);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      SimpleCharStream simpleCharStream0 = new SimpleCharStream(pushbackInputStream0);
      JVCParserTokenManager jVCParserTokenManager0 = new JVCParserTokenManager(simpleCharStream0);
      jVCParser0.token_source = jVCParserTokenManager0;
      Token token0 = jVCParser0.getToken(100);
      jVCParser0.disable_tracing();
      JVCParser.main(jVCParserTokenManager0.lexStateNames);
      assertEquals(4095, simpleCharStream0.bufpos);
      
      Token token1 = jVCParser0.getToken(2164);
      assertNotSame(token1, token0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[0];
      JVCParser.main(stringArray0);
      MockFile mockFile0 = new MockFile("com.pmdesigns.jvc.tools.JVCParser");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JVCParser jVCParser0 = new JVCParser(mockFileInputStream0);
      Token token0 = jVCParser0.getNextToken();
      jVCParser0.getNextToken();
      token0.next = null;
      Token token1 = jVCParser0.getToken(0);
      token1.next = token0;
      jVCParser0.parse();
      // Undeclared exception!
      try { 
        jVCParser0.ReInit((InputStream) mockFileInputStream0, "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.io.UnsupportedEncodingException: 
         //
         verifyException("com.pmdesigns.jvc.tools.JVCParser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol/P78Q");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-12);
      FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol/P78Q");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Jm E[[B@9cRHVx>.");
      FileSystemHandling.appendStringToFile(evoSuiteFile1, "%Y7{m4)Oi.B76XjpD8");
      char[] charArray0 = new char[2];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      CharArrayReader charArrayReader1 = new CharArrayReader(charArray0);
      FileSystemHandling.shouldThrowIOException(evoSuiteFile1);
      charArrayReader1.read();
      JVCParser jVCParser0 = new JVCParser(charArrayReader0);
      jVCParser0.getToken((byte) (-12));
      jVCParser0.parse();
      // Undeclared exception!
      try { 
        jVCParser0.generateParseException();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol/P78Q");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "\n");
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.createFolder(evoSuiteFile0);
      byteArray0[0] = (byte)3;
      boolean boolean0 = SimpleCharStream.staticFlag;
      Locale locale0 = new Locale("\n", "\n");
      locale0.getUnicodeLocaleAttributes();
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)3);
      Charset charset0 = Charset.defaultCharset();
      InputStreamReader inputStreamReader0 = new InputStreamReader(pipedInputStream0, charset0);
      MockFileReader mockFileReader0 = new MockFileReader("P78Q");
      PushbackReader pushbackReader0 = new PushbackReader(mockFileReader0);
      JVCParser jVCParser0 = new JVCParser(pushbackReader0);
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "?$>>05XQl!G)mtj^");
      jVCParser0.getToken(501);
      jVCParser0.generateParseException();
      jVCParser0.getNextToken();
      JVCParser jVCParser1 = new JVCParser(pipedInputStream0);
      jVCParser0.enable_tracing();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[2];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol/P78Q");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "\n");
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.createFolder(evoSuiteFile0);
      boolean boolean0 = SimpleCharStream.staticFlag;
      stringArray0[0] = "P78Q";
      stringArray0[1] = "WuV9_A";
      JVCParser.main(stringArray0);
      Locale locale0 = Locale.forLanguageTag("\"to=\"WOzbe?B`j");
      Locale locale1 = Locale.ROOT;
      Set<String> set0 = locale0.getUnicodeLocaleAttributes();
      Charset.defaultCharset();
      JVCParser jVCParser0 = new JVCParser("P78Q", set0, true);
      jVCParser0.parse();
      // Undeclared exception!
      try { 
        jVCParser0.generateParseException();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.pmdesigns.jvc.tools.ParseException", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String[] stringArray0 = new String[1];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol/\\K");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[0] = "K";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "K");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "\"[[+\"");
      try { 
        JVCParser.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[2];
      String string0 = "P78Q";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol/P78Q");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "P78Q");
      boolean boolean0 = SimpleCharStream.staticFlag;
      stringArray0[0] = "P78Q";
      stringArray0[1] = "hWli_A";
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "hWli_A");
      char[] charArray0 = new char[4];
      charArray0[1] = '*';
      charArray0[2] = '*';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "\r");
      JVCParser.main(stringArray0);
      // Undeclared exception!
      try { 
        Charset.forName("hWli_A");
        fail("Expecting exception: UnsupportedCharsetException");
      
      } catch(UnsupportedCharsetException e) {
         //
         // hWli_A
         //
         verifyException("java.nio.charset.Charset", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      String[] stringArray0 = new String[1];
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/13_javaviewcontrol/\\K");
      stringArray0[0] = "K";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "K");
      String string0 = "[[+\"";
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "[[+\"");
      try { 
        JVCParser.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }
}
