/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 04 18:03:56 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)7;
      TiffField tiffField0 = new TiffField(4437, 1, fieldTypeShort0, 50718L, 50718L, byteArray0, byteOrder0, 3956);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(4437, tiffField0.getTag());
      assertEquals(3956, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(7, int0);
      assertEquals(50718, tiffField0.getOffset());
      assertEquals(101436, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      CharBuffer charBuffer0 = CharBuffer.allocate(37);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte)13;
      byteArray0[4] = (byte)13;
      TiffField tiffField0 = new TiffField((-1555), 37, fieldTypeRational0, 65535, 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(65536, int0);
      assertEquals((-1555), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(524280, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(37, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      CharBuffer charBuffer0 = CharBuffer.allocate(37);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)13;
      TiffField tiffField0 = new TiffField((-1555), 37, fieldTypeRational0, 65535, 0L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals((-1555), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(524280, tiffField0.getBytesLength());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, "-");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40091, 40091, fieldTypeByte0, (-2885L), 50, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.toString();
      assertEquals(40091, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(40091, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals("40091 (0x9c9b: XPTitle): Invalid value: Text field not encoded as bytes. (-2885 -)", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(2147005685, 1415, fieldTypeShort0, 0, 78, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1415, tiffField0.getDirectoryType());
      assertEquals(78, tiffField0.getOffset());
      assertEquals("", string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2147005685, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (-1051), fieldTypeByte0, (byte)86, (byte) (-1), byteArray0, byteOrder0, (byte)0);
      tiffField0.getValue();
      assertEquals(86, tiffField0.getBytesLength());
      assertEquals((-1051), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(324, 37520, fieldTypeLong0, 5198L, (-741L), byteArray0, byteOrder0, 328);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(324, tagInfo0.tag);
      assertEquals(37520, tiffField0.getDirectoryType());
      assertEquals(324, tiffField0.getTag());
      assertEquals(328, tiffField0.getSortHint());
      assertEquals((-741), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)0, 0, fieldTypeFloat0.ASCII, 4L, 2, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getTag();
      assertEquals(2, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(133, "/g\"RthBF`,gl3$");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1112), 133, fieldTypeByte0, (-1L), (-50L), byteArray0, byteOrder0, 4284);
      int int0 = tiffField0.getTag();
      assertEquals(4284, tiffField0.getSortHint());
      assertEquals(133, tiffField0.getDirectoryType());
      assertEquals((-1112), int0);
      assertEquals((-50), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)85;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)41;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)112;
      byteArray0[5] = (byte)102;
      byteArray0[6] = (byte) (-30);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeAscii0, 11, 255L, byteArray0, byteOrder0, (byte)85);
      String string0 = tiffField0.getStringValue();
      assertEquals(11, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getBytesLength());
      assertEquals(11, tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2147005685, (-1610612735), fieldTypeShort0, 0, 0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-1610612735), tiffField0.getDirectoryType());
      assertEquals(2147005685, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1908874352), (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(556, 3144, fieldTypeByte0, 3144, 4L, byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1), int0);
      assertEquals(3144, tiffField0.getDirectoryType());
      assertEquals(556, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2145764285, "`J(cey");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(78, (-122), fieldTypeByte0, (byte)13, 65535, byteArray0, byteOrder0, (-1722));
      int int0 = tiffField0.getOffset();
      assertEquals((-1722), tiffField0.getSortHint());
      assertEquals((-122), tiffField0.getDirectoryType());
      assertEquals(78, tiffField0.getTag());
      assertEquals(65535, int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)13;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 1L, 78L, byteArray0, byteOrder0, (byte)13);
      tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getTag());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(78, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1891), "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-60);
      TiffField tiffField0 = new TiffField(440, 65535, fieldTypeLong0, 255L, 1L, byteArray0, byteOrder0, (byte) (-112));
      tiffField0.getIntValueOrArraySum();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(1020, tiffField0.getBytesLength());
      assertEquals((-112), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(440, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1649, (String) null);
      byte[] byteArray0 = new byte[29];
      TiffField tiffField0 = new TiffField(1649, (-2147395797), fieldTypeShort0, 1L, 23L, byteArray0, byteOrder0, 1649);
      tiffField0.getIntValue();
      assertEquals((-2147395797), tiffField0.getDirectoryType());
      assertEquals(1649, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(23, tiffField0.getOffset());
      assertEquals(1649, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-1);
      byteArray0[4] = (byte)28;
      TiffField tiffField0 = new TiffField(232, 1, fieldTypeRational0, 1, 232, byteArray0, (ByteOrder) null, (byte)1);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(232, tiffField0.getTag());
      assertEquals(232, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-60);
      TiffField tiffField0 = new TiffField((-1070), (-1070), fieldTypeShort0, 1L, (-2341L), byteArray0, byteOrder0, 0);
      tiffField0.getIntValue();
      assertEquals((-2341), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1070), tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-1070), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1908874352), (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)9, 3, fieldTypeByte0, 1L, 3, byteArray0, byteOrder0, 1292);
      tiffField0.getFieldTypeName();
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getTag());
      assertEquals(1292, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[29];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1649, "");
      TiffField tiffField0 = new TiffField(1649, 1649, fieldTypeLong0, 1649, 1649, byteArray0, byteOrder0, (-4876));
      tiffField0.getFieldTypeName();
      assertEquals((-4876), tiffField0.getSortHint());
      assertEquals(1649, tiffField0.getDirectoryType());
      assertEquals(1649, tiffField0.getTag());
      assertEquals(1649, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0L, byteArray0, byteOrder0, (byte)101);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(101, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2198), (String) null);
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2153), (-2938), fieldTypeDouble0, 8528L, 255L, byteArray0, byteOrder0, (byte) (-115));
      tiffField0.getFieldType();
      assertEquals((-2938), tiffField0.getDirectoryType());
      assertEquals((-2153), tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
      assertEquals((-115), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(327, 327, fieldTypeByte0, (-17179869184L), 822L, (byte[]) null, byteOrder0, 65535);
      tiffField0.getFieldType();
      assertEquals(327, tiffField0.getDirectoryType());
      assertEquals(822, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(327, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[29];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1649, "");
      TiffField tiffField0 = new TiffField(1649, (-2147395836), fieldTypeLong0, 1L, (-1973L), byteArray0, byteOrder0, 1649);
      tiffField0.getDoubleValue();
      assertEquals((-2147395836), tiffField0.getDirectoryType());
      assertEquals(1649, tiffField0.getSortHint());
      assertEquals(1649, tiffField0.getTag());
      assertEquals((-1973), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)13;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 1L, 78L, byteArray0, byteOrder0, (byte)13);
      tiffField0.getDoubleValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(78, tiffField0.getOffset());
      assertEquals(13, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      TiffField tiffField0 = new TiffField((-1790), (-1790), fieldTypeByte0, 1L, (byte) (-14), byteArray0, byteOrder0, (byte) (-14));
      tiffField0.getDoubleValue();
      assertEquals((-14), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1790), tiffField0.getTag());
      assertEquals((-14), tiffField0.getOffset());
      assertEquals((-1790), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)65, (byte)0, fieldTypeByte0.RATIONAL, (byte)65, (byte)65, byteArray0, byteOrder0, 2147113711);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(65, tiffField0.getOffset());
      assertEquals(65, tiffField0.getTag());
      assertEquals(2147113711, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, (-1717986917), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeLong0).SHORT).ASCII, (byte)0, (byte)0, byteArray0, byteOrder0, (-4983));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-4983), tiffField0.getSortHint());
      assertEquals((-1717986917), int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1185, " o`y6;2]oPQHp#z'+k)");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1185, 0, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (byte)85);
      tiffField0.getCount();
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1185, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1781), (-4953), fieldTypeByte0, (-1781), (-1L), byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1781), tiffField0.getTag());
      assertEquals((-4953), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1062, 1062, fieldTypeShort0, (-1717986917), 0, byteArray0, byteOrder0, 1062);
      int int0 = tiffField0.getBytesLength();
      assertEquals(1062, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1062, tiffField0.getSortHint());
      assertEquals(1062, tiffField0.getDirectoryType());
      assertEquals(858993462, int0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2138718407), (-2138718407), fieldTypeByte0, (-2138718407), (-1521L), byteArray0, (ByteOrder) null, 101);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1521), tiffField0.getOffset());
      assertEquals((-2138718407), tiffField0.getTag());
      assertEquals((-2138718407), tiffField0.getDirectoryType());
      assertEquals(101, tiffField0.getSortHint());
      assertEquals((-2138718407), int0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1159), 2147005685, fieldTypeRational0, 2368L, 3223L, byteArray0, (ByteOrder) null, 2147005685);
      tiffField0.getByteOrder();
      assertEquals(2147005685, tiffField0.getDirectoryType());
      assertEquals((-1159), tiffField0.getTag());
      assertEquals(2147005685, tiffField0.getSortHint());
      assertEquals(3223, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1670, 1890, fieldTypeRational0.SHORT, 1L, (-2829L), byteArray0, byteOrder0, 1670);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(1670, tiffField0.getTag());
      assertEquals(1890, tiffField0.getDirectoryType());
      assertEquals(1670, tiffField0.getSortHint());
      assertEquals((-2829), tiffField0.getOffset());
      assertEquals(2, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1124, 1124, fieldTypeFloat0, 1124, 1124, byteArray0, byteOrder0, (-381));
      tiffField0.getByteArrayValue();
      assertEquals(1124, tiffField0.getDirectoryType());
      assertEquals((-381), tiffField0.getSortHint());
      assertEquals(1124, tiffField0.getOffset());
      assertEquals(1124, tiffField0.getTag());
      assertEquals(4496, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1449, (-1891), fieldTypeLong0, 1449, 109L, byteArray0, byteOrder0, (-3755));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals("1449 (0x5a9: Unknown Tag): 0, 0 (1449 IFD)\n", byteArrayOutputStream0.toString());
      assertEquals((-3755), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeRational0, 16, 16, (byte[]) null, (ByteOrder) null, 16);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-13), (-13), fieldTypeShort0, (-13), (-13), byteArray0, byteOrder0, (-13));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2792, 0, (FieldType) null, 0, 2792, byteArray0, byteOrder0, (byte)10);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(21, 21, fieldTypeRational0, 21, 21, (byte[]) null, (ByteOrder) null, 21);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2), (-2), fieldTypeRational0, (-2), (-2), byteArray0, byteOrder0, (-2));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[102];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(27, (-1), fieldTypeShort0, 4768, 27, byteArray0, (ByteOrder) null, 65100);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1723), (-1723), fieldTypeRational0, (-1723), (-1723), byteArray0, byteOrder0, (-1723));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2391, 2391, fieldTypeRational0, 1L, 1L, byteArray0, (ByteOrder) null, 2391);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(19, 19, fieldTypeRational0, 19, 19, (byte[]) null, (ByteOrder) null, 19);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1260), (-1260), fieldTypeRational0, (-1260), (-1260), byteArray0, (ByteOrder) null, (-1260));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2503, 1, fieldTypeDouble0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(41486, 41486, (FieldType) null, 41486, 8L, byteArray0, (ByteOrder) null, 41486);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, (-23776L), (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-123), (-123), fieldTypeRational0, (-123), (-123), byteArray0, (ByteOrder) null, (-123));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(40093, 0, fieldTypeShort0, 0, 38400L, byteArray0, (ByteOrder) null, 0);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(38, 38, fieldTypeRational0, 38, 38, (byte[]) null, (ByteOrder) null, 38);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3750), (-3750), fieldTypeShort0, (-3750), (-3750), byteArray0, byteOrder0, (-3750));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2384, 2384, fieldTypeRational0, 2384, 2384, byteArray0, (ByteOrder) null, 2384);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37, 37, fieldTypeShort0.RATIONAL, 37, 37, (byte[]) null, byteOrder0, 37);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-14), (-14), fieldTypeShort0, (-14), (-14), byteArray0, byteOrder0, (-14));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2391, 2391, fieldTypeRational0, 1L, 1L, byteArray0, (ByteOrder) null, 2391);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1619, (-146), (FieldType) null, (-1153L), (-1153L), byteArray0, byteOrder0, 1619);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(27, (-73), fieldTypeShort0, 27, 27, byteArray0, (ByteOrder) null, 27);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeRational0, 22, 22, (byte[]) null, (ByteOrder) null, 22);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-30), (-30), fieldTypeRational0, (-30), (-30), byteArray0, (ByteOrder) null, (-30));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(27, 27, fieldTypeRational0, 1L, 27, byteArray0, (ByteOrder) null, 27);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1182, 1182, fieldTypeRational0, 1182, 1182, (byte[]) null, byteOrder0, 1182);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2147005745, 2147005745, fieldTypeRational0, 2147005745, 2147005745, byteArray0, (ByteOrder) null, 2147005745);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, (ByteOrder) null, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1628, (-235), fieldTypeRational0.FLOAT, (-235), (-2147483648L), byteArray0, byteOrder0, (-235));
      MockFile mockFile0 = new MockFile("", "!I");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "!I");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 1);
      MockFile mockFile0 = new MockFile("MD;szFP");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "MD;szFP");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2384, 2384, fieldTypeRational0, 2384, 2384, byteArray0, (ByteOrder) null, 2384);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[128];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1859, (-907), fieldTypeShort0, (-907), (-2098L), byteArray0, (ByteOrder) null, (-907));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(2157, (-1116), fieldTypeRational0, 2157, 226L, byteArray0, byteOrder0, 2157);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1790), (-1790), fieldTypeByte0, 1L, (byte) (-14), byteArray0, byteOrder0, (byte) (-14));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1790), tiffField0.getTag());
      assertEquals((-1790), tiffField0.getDirectoryType());
      assertEquals((-14), tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals((-14), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-312), 2312, fieldTypeLong0, 4294967294L, (-889L), byteArray0, byteOrder0, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-889), tiffField0.getOffset());
      assertEquals(2312, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals((-312), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, "-");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40091, 40091, fieldTypeByte0, (-2885L), 50, byteArray0, byteOrder0, 50);
      tiffField0.getByteOrder();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(40091, tiffField0.getDirectoryType());
      assertEquals(40091, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, (FieldType) null, 1, 1, (byte[]) null, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(702, 1, (FieldType) null, 1, 1, (byte[]) null, byteOrder0, 702);
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(702, tiffField0.getSortHint());
      assertEquals(702, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, (ByteOrder) null, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeLong0, 24, 2103L, (byte[]) null, byteOrder0, 24);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-554), 444, fieldTypeLong0, 0L, (-554), byteArray0, byteOrder0, (-1132));
      int int0 = tiffField0.getOffset();
      assertEquals(444, tiffField0.getDirectoryType());
      assertEquals((-554), tiffField0.getTag());
      assertEquals((-1132), tiffField0.getSortHint());
      assertEquals((-554), int0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1070), (-1070), fieldTypeShort0, 1L, (-2341L), byteArray0, byteOrder0, 0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-2341), tiffField0.getOffset());
      assertEquals((-1070), tiffField0.getTag());
      assertEquals((-1070), tiffField0.getDirectoryType());
      assertEquals((-1), tagInfo0.tag);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2875, 34017, fieldTypeShort0, 2457L, 2875, byteArray0, byteOrder0, 2875);
      int int0 = tiffField0.getTag();
      assertEquals(2875, tiffField0.getOffset());
      assertEquals(34017, tiffField0.getDirectoryType());
      assertEquals(2875, tiffField0.getSortHint());
      assertEquals(2875, int0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1159), 2147005685, fieldTypeRational0, 2368L, 3223L, byteArray0, (ByteOrder) null, 2147005685);
      tiffField0.getCount();
      assertEquals((-1159), tiffField0.getTag());
      assertEquals(2147005685, tiffField0.getDirectoryType());
      assertEquals(2147005685, tiffField0.getSortHint());
      assertEquals(3223, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(327, 327, fieldTypeByte0, (-17179869184L), 822L, (byte[]) null, byteOrder0, 65535);
      int int0 = tiffField0.getBytesLength();
      assertEquals(327, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(327, tiffField0.getTag());
      assertEquals(822, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2403, 2403, fieldTypeRational0, 2403, 2403, byteArray0, (ByteOrder) null, 2403);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2161, 2161, fieldTypeAscii0, 2161, 2161, byteArray0, byteOrder0, 2161);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@7dfcaebd for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2384, 2384, fieldTypeRational0, 2384, 2384, byteArray0, (ByteOrder) null, 2384);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[41];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(2147483595, 2147483595, fieldTypeLong0.ASCII, 2147483595, 2147483595, byteArray0, byteOrder0, 2147483595);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@5fdda550 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[19];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1649, 1649, fieldTypeDouble0, 1649, 1649, byteArray0, byteOrder0, 1649);
      tiffField0.getDoubleArrayValue();
      assertEquals(1649, tiffField0.getDirectoryType());
      assertEquals(13192, tiffField0.getBytesLength());
      assertEquals(1649, tiffField0.getTag());
      assertEquals(1649, tiffField0.getSortHint());
      assertEquals(1649, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[152];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeLong0, 7, 7, byteArray0, byteOrder0, 7);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(7, doubleArray0.length);
      assertEquals(7, tiffField0.getOffset());
      assertEquals(7, tiffField0.getTag());
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3884, 3884, fieldTypeShort0, 3884, 3884, byteArray0, byteOrder0, 3884);
      tiffField0.getDoubleArrayValue();
      assertEquals(3884, tiffField0.getOffset());
      assertEquals(7768, tiffField0.getBytesLength());
      assertEquals(3884, tiffField0.getSortHint());
      assertEquals(3884, tiffField0.getTag());
      assertEquals(3884, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 0);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(0, doubleArray0.length);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2384, 2384, fieldTypeRational0, 2384, 2384, byteArray0, (ByteOrder) null, 2384);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(2384, tiffField0.getTag());
      assertEquals(2384, tiffField0.getDirectoryType());
      assertEquals(2384, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(2384, tiffField0.getOffset());
      assertEquals(19072, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[29];
      TiffField tiffField0 = new TiffField(1649, 1649, fieldTypeShort0.FLOAT, 1649, 1649, byteArray0, byteOrder0, 1649);
      tiffField0.getDoubleArrayValue();
      assertEquals(1649, tiffField0.getOffset());
      assertEquals(1649, tiffField0.getDirectoryType());
      assertEquals(6596, tiffField0.getBytesLength());
      assertEquals(1649, tiffField0.getTag());
      assertEquals(1649, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[137];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeLong0, 7, 7, byteArray0, byteOrder0, 7);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(7, tiffField0.getOffset());
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(7, intArray0.length);
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeShort0, 15, 15, byteArray0, byteOrder0, 15);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(15, tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(15, tiffField0.getSortHint());
      assertEquals(15, tiffField0.getDirectoryType());
      assertEquals(15, tiffField0.getTag());
      assertEquals(30, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2384, 2384, fieldTypeRational0, 2384, 2384, byteArray0, (ByteOrder) null, 2384);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[34];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(2147483595, 2147483595, fieldTypeLong0.ASCII, 2147483595, 2147483595, byteArray0, byteOrder0, 2147483595);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@7117047c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[103];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(25, 25, fieldTypeFloat0, 1L, 1L, byteArray0, byteOrder0, 25);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(25, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2384, 2384, fieldTypeRational0, 2384, 2384, byteArray0, (ByteOrder) null, 2384);
      tiffField0.getIntArrayValue();
      assertEquals(2384, tiffField0.getSortHint());
      assertEquals(2384, tiffField0.getTag());
      assertEquals(2384, tiffField0.getDirectoryType());
      assertEquals(2384L, tiffField0.getCount());
      assertEquals(19072, tiffField0.getBytesLength());
      assertEquals(2384, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[185];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeLong0.ASCII, 0L, 2, byteArray0, byteOrder0, 1368);
      String string0 = tiffField0.getStringValue();
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(1368, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(2, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeShort0, 15, 15, byteArray0, byteOrder0, 15);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@4c68e756
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2368, 2368, fieldTypeRational0, 2368, 2368, byteArray0, (ByteOrder) null, 2368);
      String string0 = tiffField0.getTagName();
      assertEquals(2368, tiffField0.getOffset());
      assertEquals(2368, tiffField0.getSortHint());
      assertEquals(2368, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x940)", string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(340, 340, fieldTypeRational0, 340, 340, byteArray0, (ByteOrder) null, 340);
      String string0 = tiffField0.getTagName();
      assertEquals(340, tiffField0.getOffset());
      assertEquals(340, tiffField0.getSortHint());
      assertEquals(340, tiffField0.getTag());
      assertEquals("SMinSampleValue", string0);
      assertEquals(340, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(603, 603, fieldTypeShort0, 603, 603, byteArray0, byteOrder0, 603);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[213];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1229, 14, fieldTypeFloat0, 1229, 14, byteArray0, byteOrder0, 1229);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1229, tiffField0.getSortHint());
      assertEquals(1229L, tiffField0.getCount());
      assertEquals(1229, tiffField0.getTag());
      assertEquals(14, tiffField0.getOffset());
      assertEquals(4916, tiffField0.getBytesLength());
      assertEquals(14, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[31];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeByte0, 6, 6, byteArray0, (ByteOrder) null, 6);
      String string0 = tiffField0.getValueDescription();
      assertEquals("0, 0, 0, 0, 0, 0", string0);
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getTag());
      assertEquals(6, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(6L, tiffField0.getCount());
      assertEquals(6, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[29];
      TiffField tiffField0 = new TiffField(1649, 1649, fieldTypeShort0.FLOAT, 1649, 1649, byteArray0, byteOrder0, 1649);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1649, tiffField0.getOffset());
      assertEquals(1649L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(1649, tiffField0.getDirectoryType());
      assertEquals(6596, tiffField0.getBytesLength());
      assertEquals(1649, tiffField0.getTag());
      assertEquals(1649, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[19];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1649, 1649, fieldTypeDouble0, 1649, 1649, byteArray0, byteOrder0, 1649);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1649, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1649, tiffField0.getDirectoryType());
      assertEquals(13192, tiffField0.getBytesLength());
      assertEquals(1649L, tiffField0.getCount());
      assertEquals(1649, tiffField0.getTag());
      assertEquals(1649, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[298];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1030, 1030, fieldTypeLong0, 2400L, 1030, byteArray0, byteOrder0, 1030);
      String string0 = tiffField0.toString();
      assertEquals(1030, tiffField0.getOffset());
      assertEquals(1030, tiffField0.getSortHint());
      assertEquals("1030 (0x406: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (74) (2400 IFD)", string0);
      assertEquals(1030, tiffField0.getDirectoryType());
      assertEquals(9600, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeShort0, 2, 2, byteArray0, byteOrder0, 2);
      String string0 = tiffField0.toString();
      assertEquals(2, tiffField0.getSortHint());
      assertEquals("2 (0x2: Unknown Tag): 0, 0 (2 SShort)", string0);
      assertEquals(2, tiffField0.getOffset());
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[138];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(340, 340, fieldTypeByte0, 340, 340, byteArray0, (ByteOrder) null, (-3108));
      String string0 = tiffField0.getValueDescription();
      assertEquals(340L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(340, tiffField0.getTag());
      assertEquals(340, tiffField0.getDirectoryType());
      assertEquals(340, tiffField0.getBytesLength());
      assertEquals(340, tiffField0.getOffset());
      assertEquals((-3108), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2379, 2379, fieldTypeRational0, 2379, 2379, byteArray0, (ByteOrder) null, 2379);
      tiffField0.dump();
      assertEquals(2379, tiffField0.getTag());
      assertEquals(2379, tiffField0.getSortHint());
      assertEquals(2379L, tiffField0.getCount());
      assertEquals(2379, tiffField0.getDirectoryType());
      assertEquals(2379, tiffField0.getOffset());
      assertEquals(19032, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[113];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2391, 2391, fieldTypeAscii0, 255L, 2391, byteArray0, (ByteOrder) null, 2564);
      String string0 = tiffField0.getValueDescription();
      assertEquals(255, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(2391, tiffField0.getDirectoryType());
      assertEquals(2564, tiffField0.getSortHint());
      assertEquals(2391, tiffField0.getTag());
      assertEquals(2391, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeShort0.ASCII, 0L, 15, byteArray0, byteOrder0, 15);
      tiffField0.toString();
      assertEquals(15, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(15, tiffField0.getOffset());
      assertEquals(15, tiffField0.getTag());
      assertEquals(15, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(590, 590, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 590);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(590, tiffField0.getTag());
      assertEquals(590, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(590, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[108];
      TiffField tiffField0 = new TiffField(2381, 2381, fieldTypeShort0, 2381, 2381, byteArray0, (ByteOrder) null, 2381);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2381, tiffField0.getDirectoryType());
      assertEquals(2381, tiffField0.getSortHint());
      assertEquals(2381L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(2381, tiffField0.getTag());
      assertEquals(4762, tiffField0.getBytesLength());
      assertEquals(2381, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(515, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(515, 515, fieldTypeRational0, 515, 3931L, byteArray0, byteOrder0, (byte)84);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1351, (-134));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(515, tiffField0.getDirectoryType());
      assertEquals(84, tiffField0.getSortHint());
      assertEquals(515, tiffField0.getTag());
      assertEquals(3931, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(515L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2942), 541, fieldTypeByte0, 541, 541, byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1977, (byte)0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SByte", string0);
      assertFalse(tiffField0.isLocalValue());
      assertEquals((-2942), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(541, tiffField0.getOffset());
      assertEquals(541, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(3302, 3302, fieldTypeByte0, 4L, 2802L, (byte[]) null, (ByteOrder) null, 133);
      assertTrue(tiffField0.isLocalValue());
      
      tiffField0.getOversizeValueElement();
      assertEquals(133, tiffField0.getSortHint());
      assertEquals(3302, tiffField0.getTag());
      assertEquals(3302, tiffField0.getDirectoryType());
      assertEquals(2802, tiffField0.getOffset());
      assertEquals(4L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2403, 2403, fieldTypeRational0, 2403, 2403, byteArray0, (ByteOrder) null, 2403);
      tiffField0.getFieldTypeName();
      assertEquals(2403, tiffField0.getTag());
      assertEquals(2403, tiffField0.getOffset());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(2403, tiffField0.getDirectoryType());
      assertEquals(2403, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2403, 2403, fieldTypeRational0, 2403, 2403, byteArray0, (ByteOrder) null, 2403);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2403, tiffField0.getOffset());
      assertEquals(2403, tiffField0.getSortHint());
      assertEquals(2403, tiffField0.getTag());
      assertEquals(2403, int0);
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(2147005685, 2147005685, fieldTypeRational0, 2396L, 2147005685, byteArray0, (ByteOrder) null, 2147005685);
      int int0 = tiffField0.getSortHint();
      assertEquals(2147005685, int0);
      assertEquals(2147005685, tiffField0.getTag());
      assertEquals(2147005685, tiffField0.getOffset());
      assertEquals(2147005685, tiffField0.getDirectoryType());
      assertEquals(19168, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, (ByteOrder) null, 0);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("0 (0x0: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField(38, 15, fieldTypeRational0, 1L, 3775L, byteArray0, (ByteOrder) null, 15);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2379, 2379, fieldTypeRational0, 2379, 2379, byteArray0, (ByteOrder) null, 2379);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(2379L, tiffElement0.offset);
      assertEquals(2379, tiffField0.getDirectoryType());
      assertEquals(2379, tiffField0.getSortHint());
      assertEquals(2379, tiffField0.getTag());
  }
}
