/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 04 15:07:03 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte)50;
      byteArray0[4] = (byte) (-10);
      TiffField tiffField0 = new TiffField(103, 8, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeRational0).SHORT).SRATIONAL, 8, (-841), byteArray0, byteOrder0, (byte)1);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(103, tiffField0.getTag());
      assertEquals((-841), tiffField0.getOffset());
      assertEquals(52, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte) (-10);
      TiffField tiffField0 = new TiffField(103, 8, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeRational0).SSHORT).SRATIONAL, 8, (-841), byteArray0, byteOrder0, (byte)1);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-841), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(103, tiffField0.getTag());
      assertEquals(8, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(535, 32896, fieldTypeAscii0, 4L, (-1L), byteArray0, byteOrder0, 954);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(32896, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(954, tiffField0.getSortHint());
      assertEquals(535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(40091, 129, fieldTypeRational0.LONG, 1564L, (-35), byteArray0, byteOrder0, (-747));
      String string0 = tiffField0.toString();
      assertEquals((-35), tiffField0.getOffset());
      assertEquals((-747), tiffField0.getSortHint());
      assertEquals(129, tiffField0.getDirectoryType());
      assertEquals("40091 (0x9c9b: XPTitle): Invalid value: Text field not encoded as bytes. (1564 Long)", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1454, 1454, fieldTypeShort0, 1454, 1454, byteArray0, byteOrder0, 1454);
      tiffField0.dump();
      assertEquals(1454, tiffField0.getTag());
      assertEquals(1454, tiffField0.getSortHint());
      assertEquals(1454, tiffField0.getDirectoryType());
      assertEquals(1454, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-504), 0, fieldTypeShort0, (byte)100, (byte)100, byteArray0, byteOrder0, 33919);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-504), tiffField0.getTag());
      assertEquals(33919, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(100, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[67];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(73, 73, fieldTypeLong0.ASCII, 2485L, 2147483647L, byteArray0, byteOrder0, 4096);
      tiffField0.getValue();
      assertEquals(73, tiffField0.getTag());
      assertEquals(4096, tiffField0.getSortHint());
      assertEquals(73, tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[104];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(47, "");
      TiffField tiffField0 = new TiffField(416, 47, fieldTypeShort0, 1321L, (-2478L), byteArray0, byteOrder0, 47);
      tiffField0.getTagInfo();
      assertEquals((-2478), tiffField0.getOffset());
      assertEquals(47, tiffField0.getSortHint());
      assertEquals(47, tiffField0.getDirectoryType());
      assertEquals(416, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)104, (-446), fieldTypeShort0, (byte)0, (-446), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals((-446), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-446), tiffField0.getOffset());
      assertEquals(104, int0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1221), 860, fieldTypeShort0, 860, 860, byteArray0, byteOrder0, 860);
      int int0 = tiffField0.getTag();
      assertEquals(860, tiffField0.getOffset());
      assertEquals((-1221), int0);
      assertEquals(860, tiffField0.getSortHint());
      assertEquals(860, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)32;
      byteArray0[1] = (byte)32;
      TiffField tiffField0 = new TiffField(1502, 1502, fieldTypeRational0.ASCII, 1502, 114L, byteArray0, byteOrder0, 35);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(1502, tiffField0.getDirectoryType());
      assertEquals(35, tiffField0.getSortHint());
      assertEquals(114, tiffField0.getOffset());
      assertEquals(1502, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2053, 2053, fieldTypeRational0, (-679L), (-679L), byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getSortHint();
      assertEquals((-679), tiffField0.getOffset());
      assertEquals(65535, int0);
      assertEquals(2053, tiffField0.getTag());
      assertEquals(2053, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1687, (-1115), fieldTypeLong0, 0L, 523L, byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1115), tiffField0.getDirectoryType());
      assertEquals(1687, tiffField0.getTag());
      assertEquals(523, tiffField0.getOffset());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)104, (-446), fieldTypeShort0, 915L, (byte)0, byteArray0, byteOrder0, (-446));
      int int0 = tiffField0.getOffset();
      assertEquals(0, int0);
      assertEquals((-446), tiffField0.getSortHint());
      assertEquals(104, tiffField0.getTag());
      assertEquals((-446), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1221), 860, fieldTypeShort0, 860, 860, byteArray0, byteOrder0, 860);
      int int0 = tiffField0.getOffset();
      assertEquals((-1221), tiffField0.getTag());
      assertEquals(860, tiffField0.getDirectoryType());
      assertEquals(860, int0);
      assertEquals(860, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2398), "");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)6;
      TiffField tiffField0 = new TiffField((-2398), 1839, fieldTypeShort0, 974L, 1839, byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(6, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1839, tiffField0.getOffset());
      assertEquals((-2398), tiffField0.getTag());
      assertEquals(1839, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-47);
      TiffField tiffField0 = new TiffField((-2147162695), (-2147162695), fieldTypeRational0.SHORT, 33550L, 0L, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-2147162695), tiffField0.getTag());
      assertEquals((-2147162695), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-12032), int0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeByte0.DOUBLE, 1L, (-1347L), byteArray0, byteOrder0, 0);
      tiffField0.getIntValue();
      assertEquals((-1347), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)12;
      byteArray0[4] = (byte)12;
      TiffField tiffField0 = new TiffField(2935, (byte)12, fieldTypeRational0, 1L, 0L, byteArray0, byteOrder0, 107);
      tiffField0.getIntValue();
      assertEquals(2935, tiffField0.getTag());
      assertEquals(107, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-34);
      TiffField tiffField0 = new TiffField(1971, (byte)1, fieldTypeShort0, (byte)1, (-4206L), byteArray0, byteOrder0, (byte)28);
      tiffField0.getIntValue();
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1971, tiffField0.getTag());
      assertEquals((-4206), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(292, (String) null);
      TiffField tiffField0 = new TiffField((-2147162695), (-2147162695), fieldTypeShort0, 33550L, 0L, byteArray0, byteOrder0, 65535);
      tiffField0.getFieldTypeName();
      assertEquals((-2147162695), tiffField0.getDirectoryType());
      assertEquals((-2147162695), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(535, 32896, fieldTypeAscii0, 4L, (-1L), byteArray0, byteOrder0, 954);
      tiffField0.getFieldTypeName();
      assertEquals(535, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(32896, tiffField0.getDirectoryType());
      assertEquals(954, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "t'\"FV1");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 1234L, 433L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(433, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1218, 0, fieldTypeShort0, 1759L, 1759L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1759, tiffField0.getOffset());
      assertEquals(1218, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-332), "T8Ah!dMyZn$IU7@nw");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-332), 12, fieldTypeShort0, 12, 12, byteArray0, byteOrder0, 12);
      tiffField0.getFieldType();
      assertEquals(12, tiffField0.getOffset());
      assertEquals((-332), tiffField0.getTag());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1201), (-1201), fieldTypeByte0, (byte)1, (byte)1, byteArray0, byteOrder0, (-1201));
      tiffField0.getDoubleValue();
      assertEquals((-1201), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1201), tiffField0.getTag());
      assertEquals((-1201), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)24;
      TiffField tiffField0 = new TiffField((-543), 2621, fieldTypeLong0.SHORT, 1L, (-2489), byteArray0, byteOrder0, (byte) (-55));
      tiffField0.getDoubleValue();
      assertEquals((-543), tiffField0.getTag());
      assertEquals(2621, tiffField0.getDirectoryType());
      assertEquals((-55), tiffField0.getSortHint());
      assertEquals((-2489), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-1);
      TiffField tiffField0 = new TiffField(4, 33451, fieldTypeShort0, 1L, (-968L), byteArray0, byteOrder0, 4);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals((-968), tiffField0.getOffset());
      assertEquals(33451, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(41, 0, fieldTypeLong0, 1366L, 2789L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(41, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(2789, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2398), "");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-2398), 1839, fieldTypeShort0, 974L, 1839, byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2398), tiffField0.getTag());
      assertEquals(1839, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1839, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)104, (-446), fieldTypeShort0, (byte)0, (-446), byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals(104, tiffField0.getTag());
      assertEquals((-446), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-446), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1237), (byte)0, fieldTypeByte0.RATIONAL, (-2147364534), 1717986918, byteArray0, byteOrder0, 1342);
      long long0 = tiffField0.getCount();
      assertEquals((-2147364534L), long0);
      assertEquals(1342, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1717986918, tiffField0.getOffset());
      assertEquals((-1237), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(33550, "F=a{hU;v\ram/3imdq");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33550, 33550, fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, 33550);
      tiffField0.getBytesLength();
      assertEquals(33550, tiffField0.getTag());
      assertEquals(33550, tiffField0.getSortHint());
      assertEquals(33550, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2398), "");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-2398), 1839, fieldTypeShort0, 974L, 1839, byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getBytesLength();
      assertEquals(1839, tiffField0.getDirectoryType());
      assertEquals((-2398), tiffField0.getTag());
      assertEquals(1839, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(33550, "F=a{hU;v\ram/3imdq");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1394), (-2809), fieldTypeDouble0.UNDEFINED, (-1394), 1L, byteArray0, byteOrder0, (byte) (-93));
      tiffField0.getBytesLength();
      assertEquals((-2809), tiffField0.getDirectoryType());
      assertEquals((-1394), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-93), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(774, 1, fieldTypeShort0, (-1896L), 1362L, byteArray0, (ByteOrder) null, (-1225));
      tiffField0.getByteOrder();
      assertEquals(1362, tiffField0.getOffset());
      assertEquals((-1225), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(774, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-1414), fieldTypeShort0, 1, 17161804120L, byteArray0, byteOrder0, (-2166));
      tiffField0.getByteArrayValue();
      assertEquals((-2166), tiffField0.getSortHint());
      assertEquals((-18065064), tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1414), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)98, 60, fieldTypeShort0, (-2147483648L), 234L, byteArray0, byteOrder0, 370);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getByteArrayValue();
      assertEquals(98, tiffField0.getTag());
      assertEquals(370, tiffField0.getSortHint());
      assertEquals(60, tiffField0.getDirectoryType());
      assertEquals(234, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, (String) null);
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(535, 32896, fieldTypeAscii0, 4L, (-1L), byteArray0, byteOrder0, 962);
      MockFile mockFile0 = new MockFile("La Xt5q.*8i7H");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(152L, mockFile0.length());
      assertEquals(962, tiffField0.getSortHint());
      assertEquals(535, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(32896, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)31, (byte)31, fieldTypeRational0, (byte)31, (byte)31, (byte[]) null, byteOrder0, (byte)31);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte) (-55), (byte) (-55), fieldTypeRational0, (byte) (-55), (byte) (-55), byteArray0, byteOrder0, (byte) (-55));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(568, 568, (FieldType) null, 50967, 255L, byteArray0, byteOrder0, 50967);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, (byte[]) null, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2140), (-2140), fieldTypeByte0.DOUBLE, (-2140), (-2140), byteArray0, byteOrder0, (-2140));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(40091, 608, fieldTypeShort0, 0L, (-289L), byteArray0, byteOrder0, 40091);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1457), (-1457), fieldTypeShort0, (-1457), (-1457), byteArray0, byteOrder0, (-1457));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)32, (byte)32, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, (byte)32);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((byte)92, (byte)92, fieldTypeDouble0, (byte)92, (byte)92, (byte[]) null, byteOrder0, (byte)92);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-18), (-18), fieldTypeShort0, (-18), (-18), byteArray0, byteOrder0, (-18));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)32, (byte)32, fieldTypeShort0, (byte)32, (byte)32, (byte[]) null, byteOrder0, (byte)32);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)32, (byte)32, fieldTypeShort0, (byte)32, (byte)32, (byte[]) null, byteOrder0, (byte)32);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147371968, 2147371968, fieldTypeShort0, 2147371968, 2147371968, byteArray0, byteOrder0, 2147371968);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147348797), (-2147348797), fieldTypeRational0, (-2147348797), (-2147348797), (byte[]) null, byteOrder0, (-2147348797));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte) (-22), (byte) (-22), fieldTypeRational0, (byte) (-22), (byte) (-22), byteArray0, byteOrder0, (byte) (-22));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeShort0, 33, 33, byteArray0, byteOrder0, 33);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)32, (byte)32, fieldTypeRational0, (byte)32, (byte)32, (byte[]) null, byteOrder0, (byte)32);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-126), (-126), fieldTypeShort0, (-126), (-126), byteArray0, byteOrder0, (-126));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)74, (byte)74, fieldTypeRational0, 1L, (byte)74, byteArray0, byteOrder0, (byte)74);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4077, 4077, (FieldType) null, 4077, 0L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[67];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(27, (-2720), fieldTypeRational0, (-2720), (-2720), byteArray0, byteOrder0, (-2720));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[202];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)16, (byte)16, (FieldType) null, (byte)16, (byte)16, byteArray0, byteOrder0, (byte)16);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte) (-41), (byte) (-41), fieldTypeRational0, (byte) (-41), (byte) (-41), byteArray0, byteOrder0, (byte) (-41));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(892, 892, fieldTypeShort0, 1L, 656L, byteArray0, byteOrder0, 892);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4191, 4191, fieldTypeShort0, 4191, 4191, (byte[]) null, byteOrder0, 4191);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-79), (byte) (-79), fieldTypeRational0, (byte) (-79), (byte) (-79), byteArray0, byteOrder0, (byte) (-79));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-3533), (-3533), fieldTypeShort0, (-3533), (-3533), byteArray0, (ByteOrder) null, 2519);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ResolutionUnit");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "ResolutionUnit");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, (byte) (-84), byteArray0, byteOrder0, (byte) (-84));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("4^E[<hC&X");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "4^E[<hC&X");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte) (-9), (byte) (-9), fieldTypeRational0, (byte) (-9), (byte) (-9), byteArray0, byteOrder0, (byte) (-9));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("nO5VDN^p,");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)7, 365, fieldTypeRational0, 1L, (-266L), byteArray0, byteOrder0, 50932);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(", fieldType: ");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4378), 33, fieldTypeShort0, (-4378), 33, byteArray0, byteOrder0, (-4378));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-26), (-26), fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (-26));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)16, (byte)16, fieldTypeRational0, (byte)16, (byte)16, byteArray0, byteOrder0, (byte)16);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1971, (byte)1, fieldTypeShort0, (byte)1, (-4206L), byteArray0, byteOrder0, (byte)28);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1971, tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals((-4206), tiffField0.getOffset());
      assertEquals(28, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (-611), fieldTypeByte0, 867L, (-611), byteArray0, byteOrder0, (byte)28);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(28, tiffField0.getSortHint());
      assertEquals((-611), tiffField0.getOffset());
      assertFalse(boolean0);
      assertEquals((-611), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 468, (FieldType) null, 468, 0, byteArray0, byteOrder0, 50940);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getTag());
      assertEquals(468, tiffField0.getDirectoryType());
      assertEquals(50940, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1312, 1312, fieldTypeRational0, 1312, 1312, (byte[]) null, byteOrder0, 1312);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50716, 50716, (FieldType) null, (-4137L), 1260L, byteArray0, byteOrder0, 1);
      tiffField0.getFieldType();
      assertEquals(50716, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(50716, tiffField0.getDirectoryType());
      assertEquals(1260, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (-611), fieldTypeByte0, 867L, (-611), byteArray0, byteOrder0, (byte)28);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-611), int0);
      assertEquals((-611), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)13, (byte)13, fieldTypeRational0, (byte)13, (byte)13, byteArray0, byteOrder0, (byte)13);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(28, 28, fieldTypeRational0, 28, 69820L, (byte[]) null, byteOrder0, 28);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(33550, "F=a{hU;v\ram/3imdq");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-79), fieldTypeDouble0, 2131L, (-511L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals((-79), tiffField0.getDirectoryType());
      assertEquals((-511), int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)27, (-3962), fieldTypeRational0, 317L, 1L, byteArray0, byteOrder0, (-2047));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tagInfo0.tag);
      assertEquals((-3962), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-2047), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(33550, "F=a{hU;v\ram/3imdq");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-79), fieldTypeDouble0, 2131L, (-511L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-511), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-79), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-1573), 50, fieldTypeLong0, 50, 50, (byte[]) null, byteOrder0, 50);
      long long0 = tiffField0.getCount();
      assertEquals((-1573), tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50L, long0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1440), 0, (FieldType) null, 1L, (-1440), byteArray0, byteOrder0, (byte) (-109));
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeShort0, 33, 33, byteArray0, byteOrder0, 33);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[78];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeLong0, 22, 22, byteArray0, byteOrder0, 22);
      tiffField0.getIntValueOrArraySum();
      assertEquals(22, tiffField0.getDirectoryType());
      assertEquals(88, tiffField0.getBytesLength());
      assertEquals(22L, tiffField0.getCount());
      assertEquals(22, tiffField0.getTag());
      assertEquals(22, tiffField0.getOffset());
      assertEquals(22, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[122];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(37396, 37396, fieldTypeFloat0, 37396, 37396, byteArray0, byteOrder0, 37396);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@186f8557 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)31, (byte)31, fieldTypeRational0, (byte)31, (byte)31, byteArray0, byteOrder0, (byte)31);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34293, 34293, fieldTypeByte0.DOUBLE, 34293, 34293, byteArray0, byteOrder0, 34293);
      tiffField0.getDoubleArrayValue();
      assertEquals(34293, tiffField0.getTag());
      assertEquals(34293, tiffField0.getDirectoryType());
      assertEquals(34293L, tiffField0.getCount());
      assertEquals(34293, tiffField0.getOffset());
      assertEquals(274344, tiffField0.getBytesLength());
      assertEquals(34293, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[46];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34253, 34253, fieldTypeByte0, 34253, 34253, byteArray0, byteOrder0, 34253);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@4cf3f0f1 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[86];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeLong0, 5, 5, byteArray0, byteOrder0, 5);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(5, tiffField0.getOffset());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getTag());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(5L, tiffField0.getCount());
      assertEquals(5, doubleArray0.length);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[157];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)52, (byte)52, fieldTypeLong0.FLOAT, (byte)52, (byte)52, byteArray0, byteOrder0, (byte)52);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(52, tiffField0.getOffset());
      assertEquals(39, doubleArray0.length);
      assertEquals(52L, tiffField0.getCount());
      assertEquals(52, tiffField0.getSortHint());
      assertEquals(52, tiffField0.getTag());
      assertEquals(52, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)31, (byte)31, fieldTypeRational0, (byte)31, (byte)31, byteArray0, byteOrder0, (byte)31);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(31L, tiffField0.getCount());
      assertEquals(31, tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(31, tiffField0.getDirectoryType());
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(248, tiffField0.getBytesLength());
      assertEquals(31, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeShort0, 33, 33, byteArray0, byteOrder0, 33);
      tiffField0.getDoubleArrayValue();
      assertEquals(33, tiffField0.getOffset());
      assertEquals(33, tiffField0.getTag());
      assertEquals(33L, tiffField0.getCount());
      assertEquals(66, tiffField0.getBytesLength());
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(33, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)31, (byte)31, fieldTypeRational0, (byte)31, (byte)31, byteArray0, byteOrder0, (byte)31);
      tiffField0.getDoubleArrayValue();
      assertEquals(31, tiffField0.getOffset());
      assertEquals(31, tiffField0.getDirectoryType());
      assertEquals(31, tiffField0.getTag());
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(31L, tiffField0.getCount());
      assertEquals(248, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2337, 2337, fieldTypeByte0, 2337, 2337, byteArray0, byteOrder0, 2337);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@137864bc for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[157];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(51043, 51043, fieldTypeLong0, 51043, 51043, byteArray0, byteOrder0, 51043);
      tiffField0.getIntArrayValue();
      assertEquals(51043, tiffField0.getOffset());
      assertEquals(51043, tiffField0.getSortHint());
      assertEquals(51043, tiffField0.getTag());
      assertEquals(51043L, tiffField0.getCount());
      assertEquals(204172, tiffField0.getBytesLength());
      assertEquals(51043, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField((byte)26, (byte)26, fieldTypeRational0, (byte)26, (byte)26, byteArray0, byteOrder0, (byte)26);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeShort0, 33, 33, byteArray0, byteOrder0, 33);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(33, tiffField0.getDirectoryType());
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(66, tiffField0.getBytesLength());
      assertEquals(33, tiffField0.getTag());
      assertEquals(33L, tiffField0.getCount());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(33, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)31, (byte)31, fieldTypeRational0, (byte)31, (byte)31, byteArray0, byteOrder0, (byte)31);
      tiffField0.getIntArrayValue();
      assertEquals(31, tiffField0.getTag());
      assertEquals(31L, tiffField0.getCount());
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(31, tiffField0.getOffset());
      assertEquals(248, tiffField0.getBytesLength());
      assertEquals(31, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeShort0, 33, 33, byteArray0, byteOrder0, 33);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@67fbfb6b
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)90, 89, fieldTypeRational0.ASCII, (byte)90, 963L, byteArray0, byteOrder0, (byte)90);
      String string0 = tiffField0.getStringValue();
      assertEquals(90, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(90, tiffField0.getSortHint());
      assertEquals(963, tiffField0.getOffset());
      assertEquals(89, tiffField0.getDirectoryType());
      assertEquals(90, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(88, 88, fieldTypeShort0, 88, 88, byteArray0, byteOrder0, 88);
      String string0 = tiffField0.getTagName();
      assertEquals(88, tiffField0.getSortHint());
      assertEquals(88, tiffField0.getOffset());
      assertEquals(88, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x58)", string0);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(51022, 51022, fieldTypeShort0, 51022, 51022, byteArray0, byteOrder0, 51022);
      String string0 = tiffField0.getTagName();
      assertEquals(51022, tiffField0.getSortHint());
      assertEquals(51022, tiffField0.getDirectoryType());
      assertEquals(51022, tiffField0.getTag());
      assertEquals(51022, tiffField0.getOffset());
      assertEquals("OpcodeList3", string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[214];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)85, (byte)85, fieldTypeLong0.FLOAT, (byte)85, (byte)85, byteArray0, byteOrder0, (byte)85);
      String string0 = tiffField0.getValueDescription();
      assertEquals(85, tiffField0.getDirectoryType());
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(85, tiffField0.getTag());
      assertEquals(85, tiffField0.getOffset());
      assertEquals(85L, tiffField0.getCount());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53)", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34253, 34253, fieldTypeByte0, 34253, 34253, byteArray0, byteOrder0, 34253);
      String string0 = tiffField0.toString();
      assertEquals(34253, tiffField0.getBytesLength());
      assertEquals("34253 (0x85cd: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (65) (34253 Byte)", string0);
      assertEquals(34253, tiffField0.getDirectoryType());
      assertEquals(34253, tiffField0.getSortHint());
      assertEquals(34253, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[46];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34253, 34253, fieldTypeByte0, 34253, 34253, byteArray0, byteOrder0, 34253);
      String string0 = tiffField0.toString();
      assertEquals("34253 (0x85cd: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (34253 Undefined)", string0);
      assertEquals(34253, tiffField0.getDirectoryType());
      assertEquals(34253, tiffField0.getBytesLength());
      assertEquals(34253, tiffField0.getOffset());
      assertEquals(34253, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34293, 34293, fieldTypeByte0.DOUBLE, 34293, 34293, byteArray0, byteOrder0, 34293);
      String string0 = tiffField0.toString();
      assertEquals(274344, tiffField0.getBytesLength());
      assertEquals(34293, tiffField0.getDirectoryType());
      assertEquals(34293, tiffField0.getSortHint());
      assertEquals("34293 (0x85f5: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (34293 Double)", string0);
      assertEquals(34293, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[373];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((-528), (-528), fieldTypeLong0, (byte)90, (byte)90, byteArray0, byteOrder0, (byte)90);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-528), tiffField0.getDirectoryType());
      assertEquals((-528), tiffField0.getTag());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (90)", string0);
      assertEquals(90L, tiffField0.getCount());
      assertEquals(90, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(90, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)120, (byte)120, fieldTypeLong0, (byte)120, (byte)120, byteArray0, byteOrder0, (byte)120);
      String string0 = tiffField0.toString();
      assertEquals(120, tiffField0.getDirectoryType());
      assertEquals(120, tiffField0.getSortHint());
      assertEquals(120, tiffField0.getOffset());
      assertEquals(480, tiffField0.getBytesLength());
      assertEquals("120 (0x78: Unknown Tag): 0, 0, 0, 0, 0 (120 Long)", string0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[167];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1311, 1311, fieldTypeShort0, 1311, 1311, byteArray0, byteOrder0, 1311);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1311L, tiffField0.getCount());
      assertEquals(1311, tiffField0.getOffset());
      assertEquals(1311, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1311, tiffField0.getTag());
      assertEquals(2622, tiffField0.getBytesLength());
      assertEquals(1311, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[157];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)52, (byte)52, fieldTypeLong0.FLOAT, (byte)52, (byte)52, byteArray0, byteOrder0, (byte)52);
      String string0 = tiffField0.getValueDescription();
      assertEquals(52, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertEquals(52L, tiffField0.getCount());
      assertEquals(52, tiffField0.getDirectoryType());
      assertEquals(52, tiffField0.getTag());
      assertEquals(52, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[285];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)58, (byte)58, fieldTypeLong0.ASCII, (byte)58, (-29440L), byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertEquals(58, tiffField0.getDirectoryType());
      assertEquals((-29440), tiffField0.getOffset());
      assertEquals(58, tiffField0.getBytesLength());
      assertEquals(58, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-606), (-606), fieldTypeAscii0, 0L, (-2147483648L), byteArray0, byteOrder0, (-606));
      tiffField0.toString();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals((-606), tiffField0.getTag());
      assertEquals((-606), tiffField0.getDirectoryType());
      assertEquals((-606), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[157];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeLong0.FLOAT, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1221), 860, fieldTypeShort0, 860, 860, byteArray0, byteOrder0, 860);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1221), (-1221));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(860, tiffField0.getSortHint());
      assertEquals(860, tiffField0.getDirectoryType());
      assertEquals((-1221), tiffField0.getTag());
      assertNull(string0);
      assertEquals(860, tiffField0.getOffset());
      assertEquals(860L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33, (-377), fieldTypeShort0, 33, 4L, byteArray0, byteOrder0, 33);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1414), 33);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(33, tiffField0.getTag());
      assertEquals(33, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Short", string0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals(33L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals((-377), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37396, 37396, fieldTypeShort0, 37396, 37396, byteArray0, byteOrder0, 37396);
      tiffField0.getFieldTypeName();
      assertEquals(37396, tiffField0.getTag());
      assertEquals(37396, tiffField0.getOffset());
      assertEquals(37396, tiffField0.getSortHint());
      assertEquals(37396, tiffField0.getDirectoryType());
      assertEquals(74792, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[225];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(28, (-1587), fieldTypeDouble0, 28, 28, byteArray0, byteOrder0, 28);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(40091, 608, fieldTypeShort0, 0L, (-289L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals((-289), tiffField0.getOffset());
      assertEquals(608, tiffField0.getDirectoryType());
      assertEquals(40091, tiffField0.getTag());
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)12, (byte)12, fieldTypeRational0, (byte)12, (byte)12, byteArray0, byteOrder0, (byte)12);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("12 (0xc: Unknown Tag): ", string0);
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getOffset());
      assertEquals(12L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-1573), 50, fieldTypeLong0, 50, 50, (byte[]) null, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[17];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeShort0, 33, 33, byteArray0, byteOrder0, 33);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(33, tiffField0.getDirectoryType());
      assertEquals(33, tiffField0.getTag());
      assertEquals(33, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(33L, tiffElement0.offset);
  }
}
