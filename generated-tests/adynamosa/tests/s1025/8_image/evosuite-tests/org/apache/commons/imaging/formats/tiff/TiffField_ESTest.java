/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 23 14:56:06 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.OutputStreamWriter;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetEncoder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(290, 2147260254, fieldTypeLong0.SSHORT, 93L, 31704L, byteArray0, byteOrder0, (-2146));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2147260254, tiffField0.getDirectoryType());
      assertEquals(31704, tiffField0.getOffset());
      assertEquals(290, tiffField0.getTag());
      assertEquals(255, int0);
      assertEquals((-2146), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "W");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)23;
      byteArray0[4] = (byte)10;
      CharBuffer charBuffer0 = CharBuffer.allocate(48257);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2101792506, (-321), fieldTypeRational0, 724L, (-321), byteArray0, byteOrder0, 7);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-321), tiffField0.getOffset());
      assertEquals((-321), tiffField0.getDirectoryType());
      assertEquals(2, int0);
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(2101792506, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(28, (-1575), fieldTypeFloat0, 28, 10012L, byteArray0, byteOrder0, (byte) (-49));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(28, tagInfo0.tag);
      assertEquals(10012, tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-1575), tiffField0.getDirectoryType());
      assertEquals((-49), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(400, (-1653), fieldTypeRational0, 400, 2207L, byteArray0, byteOrder0, 1);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(400, tagInfo0.tag);
      assertEquals(2207, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1653), tiffField0.getDirectoryType());
      assertEquals(400, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(65535, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 0, fieldTypeByte0, 0, (-1290L), byteArray0, byteOrder0, 1161);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1290), tiffField0.getOffset());
      assertEquals(65535, int0);
      assertEquals(1161, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1587), 0, fieldTypeRational0, 3963L, (byte)16, byteArray0, byteOrder0, (-1109));
      int int0 = tiffField0.getTag();
      assertEquals((-1587), int0);
      assertEquals(16, tiffField0.getOffset());
      assertEquals((-1109), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-4328), "");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)89;
      TiffField tiffField0 = new TiffField(41985, (-2300), fieldTypeAscii0, (byte)89, (-4328), byteArray0, byteOrder0, 2200);
      String string0 = tiffField0.getStringValue();
      assertEquals((-2300), tiffField0.getDirectoryType());
      assertEquals((-4328), tiffField0.getOffset());
      assertEquals(2200, tiffField0.getSortHint());
      assertEquals(41985, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "'");
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2199), (-2199), fieldTypeShort0, (-3343L), 0L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-2199), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-2199), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1221), 5, fieldTypeShort0, (byte)2, 5, byteArray0, byteOrder0, 5);
      int int0 = tiffField0.getSortHint();
      assertEquals(5, tiffField0.getOffset());
      assertEquals(5, int0);
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals((-1221), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte) (-74), 1, fieldTypeLong0, 1, 0L, byteArray0, (ByteOrder) null, 2011);
      int int0 = tiffField0.getOffset();
      assertEquals(0, int0);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-74), tiffField0.getTag());
      assertEquals(2011, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)67, (byte)67, fieldTypeByte0, (-946), (-143L), byteArray0, byteOrder0, (byte)44);
      int int0 = tiffField0.getOffset();
      assertEquals(67, tiffField0.getDirectoryType());
      assertEquals(44, tiffField0.getSortHint());
      assertEquals((-143), int0);
      assertEquals(67, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-2147162695), (String) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)30;
      TiffField tiffField0 = new TiffField(1, (-2147162695), fieldTypeByte0, 1L, (byte)31, byteArray0, byteOrder0, (-3012));
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-3012), tiffField0.getSortHint());
      assertEquals(31, tiffField0.getOffset());
      assertEquals((-2147162695), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-22);
      TiffField tiffField0 = new TiffField((byte)2, (byte)2, fieldTypeLong0, 200L, 255L, byteArray0, byteOrder0, (byte)2);
      tiffField0.getIntValueOrArraySum();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField((byte)67, 2504, fieldTypeShort0, 1L, 1086L, byteArray0, byteOrder0, 2147434516);
      tiffField0.getIntValue();
      assertEquals(67, tiffField0.getTag());
      assertEquals(1086, tiffField0.getOffset());
      assertEquals(2147434516, tiffField0.getSortHint());
      assertEquals(2504, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)67;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1265), (-636), fieldTypeByte0, 1L, 0L, byteArray0, byteOrder0, (-636));
      tiffField0.getIntValue();
      assertEquals((-1265), tiffField0.getTag());
      assertEquals((-636), tiffField0.getDirectoryType());
      assertEquals((-636), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-16);
      TiffField tiffField0 = new TiffField((byte) (-16), (byte) (-16), fieldTypeFloat0, 1L, (-653L), byteArray0, byteOrder0, (byte) (-16));
      tiffField0.getIntValue();
      assertEquals((-16), tiffField0.getTag());
      assertEquals((-16), tiffField0.getSortHint());
      assertEquals((-653), tiffField0.getOffset());
      assertEquals((-16), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(405, (String) null);
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-108), 41491, fieldTypeAscii0, (byte) (-101), (-8L), byteArray0, (ByteOrder) null, 2147263370);
      tiffField0.getFieldTypeName();
      assertEquals((-108), tiffField0.getTag());
      assertEquals(41491, tiffField0.getDirectoryType());
      assertEquals(2147263370, tiffField0.getSortHint());
      assertEquals((-8), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)67, (byte)67, fieldTypeByte0, (-946), (-143L), byteArray0, byteOrder0, (byte)44);
      tiffField0.getFieldTypeName();
      assertEquals(67, tiffField0.getDirectoryType());
      assertEquals((-143), tiffField0.getOffset());
      assertEquals(44, tiffField0.getSortHint());
      assertEquals(67, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147209068, 2138718408, (FieldType) null, 4L, (-620L), (byte[]) null, byteOrder0, 735);
      tiffField0.getFieldType();
      assertEquals(2147209068, tiffField0.getTag());
      assertEquals((-620), tiffField0.getOffset());
      assertEquals(735, tiffField0.getSortHint());
      assertEquals(2138718408, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "W");
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate(48257);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(875, 0, fieldTypeRational0, (-5097L), 685L, byteArray0, byteOrder0, 41991);
      tiffField0.getFieldType();
      assertEquals(875, tiffField0.getTag());
      assertEquals(41991, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(685, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, 1946);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(1946, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(821, (String) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-102);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(13, 1, fieldTypeFloat0, 1, 1L, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getDoubleValue();
      assertEquals(13, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      byteArray0[3] = (byte) (-16);
      TiffField tiffField0 = new TiffField((byte) (-16), (byte) (-16), fieldTypeFloat0, 1L, (-653L), byteArray0, byteOrder0, (byte) (-16));
      tiffField0.getDoubleValue();
      assertEquals((-653), tiffField0.getOffset());
      assertEquals((-16), tiffField0.getTag());
      assertEquals((-16), tiffField0.getDirectoryType());
      assertEquals((-16), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1221), 860, fieldTypeShort0, 860, 860, byteArray0, byteOrder0, 860);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(860, int0);
      assertEquals(860, tiffField0.getSortHint());
      assertEquals((-1221), tiffField0.getTag());
      assertEquals(860, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2147162695), "BlackLevel");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(292, (-791), fieldTypeRational0, 0, 292, (byte[]) null, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(292, tiffField0.getOffset());
      assertEquals(292, tiffField0.getTag());
      assertEquals((-791), int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2147162695), "BlackLevel");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(292, (-791), fieldTypeRational0, 0, 292, (byte[]) null, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(292, tiffField0.getOffset());
      assertEquals(292, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-791), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2147162724), "BlackLevel");
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, (-1402L), (-2147162724), byteArray0, byteOrder0, 1493);
      tiffField0.getCount();
      assertEquals(1493, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-2147162724), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2147162695), "BlackLevel");
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(50, (byte) (-47), fieldTypeRational0, 0L, (byte)0, byteArray0, byteOrder0, 2146300461);
      tiffField0.getBytesLength();
      assertEquals(2146300461, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-47), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)67, (byte)67, fieldTypeByte0, (-946), (-143L), byteArray0, byteOrder0, (byte)44);
      tiffField0.getBytesLength();
      assertEquals((-143), tiffField0.getOffset());
      assertEquals(44, tiffField0.getSortHint());
      assertEquals(67, tiffField0.getDirectoryType());
      assertEquals(67, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(925, 1521, fieldTypeShort0, 200L, 1237, byteArray0, (ByteOrder) null, 925);
      tiffField0.getByteOrder();
      assertEquals(1521, tiffField0.getDirectoryType());
      assertEquals(925, tiffField0.getSortHint());
      assertEquals(925, tiffField0.getTag());
      assertEquals(1237, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(28, (-1575), fieldTypeFloat0, 28, 10012L, byteArray0, byteOrder0, (byte) (-49));
      tiffField0.getByteArrayValue();
      assertEquals(10012, tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-1575), tiffField0.getDirectoryType());
      assertEquals((-49), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 921, fieldTypeRational0, (byte)0, 4L, byteArray0, byteOrder0, 0);
      tiffField0.getByteArrayValue();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(921, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2866, 2866, (FieldType) null, 2866, 2866, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      byte[] byteArray0 = new byte[83];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(322, 322, (FieldType) null, 1717986918, 322, byteArray0, byteOrder0, (-1177));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2147162724), "BlackLevel");
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(274, (-326), fieldTypeRational0, 8555436860L, 0L, byteArray0, byteOrder0, (-1791));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, 161, (FieldType) null, (-1246L), (-1), byteArray0, byteOrder0, 2151);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      TiffField tiffField0 = new TiffField(0, (byte)14, (FieldType) null, 0, 669L, (byte[]) null, (ByteOrder) null, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(158, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(158, 0, fieldTypeShort0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[141];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(637, 31, fieldTypeLong0.UNDEFINED, (-1052L), (-1052L), byteArray0, byteOrder0, (-153));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[168];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(106, (byte)37, fieldTypeLong0, (-1800), 8304L, byteArray0, byteOrder0, 106);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[201];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(65535, 31, fieldTypeLong0, 2147483647L, 2216L, byteArray0, byteOrder0, 232);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2078, 2078, fieldTypeRational0, 1202L, 990L, byteArray0, byteOrder0, 2768);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(405, (String) null);
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-108), 41491, fieldTypeAscii0, (byte) (-101), (-8L), byteArray0, (ByteOrder) null, 2147263370);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1440), 0, (FieldType) null, 1L, (-1440), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2138266979, 142, fieldTypeRational0, 34112L, 990L, byteArray0, byteOrder0, 2078);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "1yK2)rYFh]|6Qq");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(54, (-1), fieldTypeShort0, 623, 9616L, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4117), 537, fieldTypeAscii0, 4L, 0L, byteArray0, byteOrder0, 0);
      MockFile mockFile0 = new MockFile("org.apache.commons.io.IOCase");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(100L, mockFile0.length());
      assertEquals(537, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-4117), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1221), 1521, fieldTypeShort0, 200L, 1306L, byteArray0, byteOrder0, 50707);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1221), tiffField0.getTag());
      assertEquals(50707, tiffField0.getSortHint());
      assertEquals(1521, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(1306, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-2147162695), (String) null);
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1, (-2147162695), fieldTypeByte0, 1L, (byte)31, byteArray0, byteOrder0, (-3012));
      tiffField0.getFieldType();
      assertEquals((-3012), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-2147162695), tiffField0.getDirectoryType());
      assertEquals(31, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(41, 0, fieldTypeLong0, 1366L, 2789L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2789, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(41, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(65535, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 0, fieldTypeByte0, 0, (-1290L), byteArray0, byteOrder0, 1161);
      tiffField0.getValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1161, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-1290), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(269, 269, fieldTypeByte0, 393L, 269, byteArray0, byteOrder0, (byte)98);
      int int0 = tiffField0.getOffset();
      assertEquals(98, tiffField0.getSortHint());
      assertEquals(269, tiffField0.getDirectoryType());
      assertEquals(269, tiffField0.getTag());
      assertEquals(269, int0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, 161, (FieldType) null, (-1246L), (-1), byteArray0, byteOrder0, 2151);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(161, tiffField0.getDirectoryType());
      assertEquals(2151, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(535, 32896, fieldTypeAscii0, 4L, (-1L), byteArray0, byteOrder0, 954);
      tiffField0.getCount();
      assertEquals(954, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(535, tiffField0.getTag());
      assertEquals(32896, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, (-180), fieldTypeAscii0, 1L, 4L, byteArray0, byteOrder0, 2146232929);
      tiffField0.getBytesLength();
      assertEquals(6, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-180), tiffField0.getDirectoryType());
      assertEquals(2146232929, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(821, (String) null);
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(13, 1, fieldTypeFloat0, 1, 1L, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getDoubleValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(13, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(535, 32896, fieldTypeAscii0, 4L, (-1L), byteArray0, byteOrder0, 954);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)2, (byte)2, fieldTypeLong0, 200L, 255L, byteArray0, byteOrder0, (byte)2);
      tiffField0.getIntValueOrArraySum();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "W");
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate(48257);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2101792506, (-321), fieldTypeRational0, 724L, (-321), byteArray0, byteOrder0, 7);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(535, 32896, fieldTypeAscii0, 4L, (-1L), byteArray0, byteOrder0, 954);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@701891eb for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-4320), (byte)17, fieldTypeDouble0, 1574L, 2147209068, byteArray0, (ByteOrder) null, 37395);
      tiffField0.getDoubleArrayValue();
      assertEquals(2147209068, tiffField0.getOffset());
      assertEquals(37395, tiffField0.getSortHint());
      assertEquals((-4320), tiffField0.getTag());
      assertEquals(17, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[218];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 87, fieldTypeFloat0, 187L, 50, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(87, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, 1393, fieldTypeLong0, (byte)2, (-1220), byteArray0, byteOrder0, (byte)2);
      tiffField0.getDoubleArrayValue();
      assertEquals(2, tiffField0.getSortHint());
      assertEquals((-1220), tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1393, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[83];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147162728), (-326), fieldTypeRational0.SHORT, (-2147162728), (-2147162728), byteArray0, byteOrder0, (-326));
      tiffField0.getDoubleArrayValue();
      assertEquals((-326), tiffField0.getSortHint());
      assertEquals((-326), tiffField0.getDirectoryType());
      assertEquals((-2147162728), tiffField0.getTag());
      assertEquals((-2147162728), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2147162695), "BlackLevel");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-667), 1810, fieldTypeRational0, 200L, (-1L), byteArray0, byteOrder0, 50718);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(1810, tiffField0.getDirectoryType());
      assertEquals((-667), tiffField0.getTag());
      assertEquals(50718, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)8, 480, fieldTypeRational0.SHORT, 1, (byte)101, byteArray0, byteOrder0, 2095105998);
      tiffField0.getDoubleArrayValue();
      assertEquals(2095105998, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
      assertEquals(480, tiffField0.getDirectoryType());
      assertEquals(101, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(535, 32896, fieldTypeAscii0, 4L, (-1L), byteArray0, byteOrder0, 954);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@302200eb for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)2, (byte)2, fieldTypeLong0, 200L, 255L, byteArray0, byteOrder0, (byte)2);
      tiffField0.getIntArrayValue();
      assertEquals(2, tiffField0.getTag());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[83];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147162728), (-326), fieldTypeRational0.SHORT, (-2147162728), (-2147162728), byteArray0, byteOrder0, (-326));
      assertEquals(641840, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals((-326), tiffField0.getSortHint());
      assertEquals((-326), tiffField0.getDirectoryType());
      assertEquals((-2147162728), tiffField0.getTag());
      assertEquals((-2147162728), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(33550, "");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)41, (-1453), fieldTypeRational0, (byte)67, (byte)67, byteArray0, (ByteOrder) null, 2244);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2078, 2078, fieldTypeRational0, 1202L, 990L, byteArray0, byteOrder0, 2768);
      tiffField0.getIntArrayValue();
      assertEquals(990, tiffField0.getOffset());
      assertEquals(2078, tiffField0.getDirectoryType());
      assertEquals(9616, tiffField0.getBytesLength());
      assertEquals(2768, tiffField0.getSortHint());
      assertEquals(2078, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1784), (-4927), fieldTypeByte0, 1L, (-1784), byteArray0, byteOrder0, (byte)97);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-1784), tiffField0.getTag());
      assertEquals((-4927), tiffField0.getDirectoryType());
      assertEquals((-1784), tiffField0.getOffset());
      assertEquals(97, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(65535, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 0, fieldTypeByte0, 0, (-1290L), byteArray0, byteOrder0, 1161);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@7bd6156f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1587), 0, fieldTypeRational0, 3963L, (byte)16, byteArray0, byteOrder0, (-1109));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@4d182192
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, (-180), fieldTypeAscii0, 1L, 4L, byteArray0, byteOrder0, 2146232929);
      assertEquals(1, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(6, tiffField0.getTag());
      assertEquals(2146232929, tiffField0.getSortHint());
      assertEquals((-180), tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)67, (byte)67, fieldTypeByte0, (-946), (-143L), byteArray0, byteOrder0, (byte)44);
      String string0 = tiffField0.getTagName();
      assertEquals(67, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x43)", string0);
      assertEquals((-143), tiffField0.getOffset());
      assertEquals(44, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(33550, "F=a{hU;v\ram/3imdq");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33550, 33550, fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, 33550);
      String string0 = tiffField0.getTagName();
      assertEquals(33550, tiffField0.getTag());
      assertEquals(33550, tiffField0.getSortHint());
      assertEquals(33550, tiffField0.getDirectoryType());
      assertEquals("ModelPixelScaleTag", string0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, 1946);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ColorMap");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(1946, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[218];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 87, fieldTypeFloat0, 187L, 50, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getValueDescription();
      assertEquals(87, tiffField0.getDirectoryType());
      assertEquals(187L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (54)", string0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2147162724), "BlackLevel");
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(322, 1717986918, fieldTypeRational0.BYTE, 650L, 650L, byteArray0, byteOrder0, 322);
      String string0 = tiffField0.toString();
      assertEquals("322 (0x142: TileWidth): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (64) (650 Byte)", string0);
      assertEquals(650, tiffField0.getOffset());
      assertEquals(322, tiffField0.getSortHint());
      assertEquals(1717986918, tiffField0.getDirectoryType());
      assertEquals(650, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-79), (byte) (-2), fieldTypeFloat0, 1283L, (-205), byteArray0, byteOrder0, (byte)66);
      String string0 = tiffField0.getValueDescription();
      assertEquals(66, tiffField0.getSortHint());
      assertEquals((-205), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-79), tiffField0.getTag());
      assertEquals((-2), tiffField0.getDirectoryType());
      assertEquals(1283L, tiffField0.getCount());
      assertEquals(5132, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[419];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1721, 1721, fieldTypeDouble0, 1982L, 1982L, byteArray0, byteOrder0, 1721);
      String string0 = tiffField0.toString();
      assertEquals(1982, tiffField0.getOffset());
      assertEquals(15856, tiffField0.getBytesLength());
      assertEquals(1721, tiffField0.getSortHint());
      assertEquals(1721, tiffField0.getDirectoryType());
      assertEquals("1721 (0x6b9: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (1982 Double)", string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[35];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147162695), (-2147162695), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeRational0).SLONG).DOUBLE, 382L, (byte)41, byteArray0, byteOrder0, 3194);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2147162695), tiffField0.getDirectoryType());
      assertEquals((-2147162695), tiffField0.getTag());
      assertEquals(3056, tiffField0.getBytesLength());
      assertEquals(382L, tiffField0.getCount());
      assertEquals(3194, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(41, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(33550, "F=a{hU;v\ram/3imdq");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33550, 33550, fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, 33550);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      Charset charset0 = Charset.defaultCharset();
      CharsetEncoder charsetEncoder0 = charset0.newEncoder();
      OutputStreamWriter outputStreamWriter0 = new OutputStreamWriter(pipedOutputStream0, charsetEncoder0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(outputStreamWriter0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(33550, tiffField0.getSortHint());
      assertEquals(33550, tiffField0.getTag());
      assertEquals(33550, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[210];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(50, 1, fieldTypeLong0, 2083, 1L, byteArray0, byteOrder0, 453);
      String string0 = tiffField0.getValueDescription();
      assertEquals(8332, tiffField0.getBytesLength());
      assertEquals(2083L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(453, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)2, (byte)2, fieldTypeLong0, 200L, 255L, byteArray0, byteOrder0, (byte)2);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(200L, tiffField0.getCount());
      assertEquals(2, tiffField0.getTag());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(800, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[141];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((byte)73, 32932, fieldTypeShort0, 32932, (byte)88, byteArray0, byteOrder0, 25);
      String string0 = tiffField0.getValueDescription();
      assertEquals(32932L, tiffField0.getCount());
      assertEquals(88, tiffField0.getOffset());
      assertEquals(73, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(32932, tiffField0.getDirectoryType());
      assertEquals(65864, tiffField0.getBytesLength());
      assertEquals(25, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2147162724), "BlackLevel");
      byte[] byteArray0 = new byte[58];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(37385, (-1633), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeRational0).LONG.SBYTE).ASCII, 37385, (-326), byteArray0, byteOrder0, (-1633));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1633), tiffField0.getDirectoryType());
      assertEquals((-326), tiffField0.getOffset());
      assertEquals(37385, tiffField0.getBytesLength());
      assertEquals(37385, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-1633), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, 1946);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("", string0);
      assertEquals(1946, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1784), (-4927), fieldTypeByte0, 1L, (-1784), byteArray0, byteOrder0, (byte)97);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-1784), tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-4927), tiffField0.getDirectoryType());
      assertEquals((-1784), tiffField0.getOffset());
      assertEquals(97, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2136582715, 50941, fieldTypeLong0, 1L, 1722L, byteArray0, byteOrder0, 2147260254);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(50941, tiffField0.getDirectoryType());
      assertEquals(1722, tiffField0.getOffset());
      assertEquals(2136582715, tiffField0.getTag());
      assertEquals(2147260254, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1587), 0, fieldTypeRational0, 3963L, (byte)16, byteArray0, byteOrder0, (-1109));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)16, (byte)16);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-1587), tiffField0.getTag());
      assertEquals((-1109), tiffField0.getSortHint());
      assertEquals(16, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(31704, tiffField0.getBytesLength());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1521, 1521, fieldTypeShort0, 2132L, 1496L, byteArray0, byteOrder0, (byte)9);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-21), 1521);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Short", string0);
      assertEquals(2132L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(1521, tiffField0.getTag());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(1521, tiffField0.getDirectoryType());
      assertEquals(1496, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1784), (-4927), fieldTypeByte0, 1L, (-1784), byteArray0, byteOrder0, (byte)97);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(97, tiffField0.getSortHint());
      assertEquals((-1784), tiffField0.getTag());
      assertEquals((-1784), tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-4927), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(535, 32896, fieldTypeAscii0, 4L, (-1L), byteArray0, byteOrder0, 954);
      tiffField0.getFieldTypeName();
      assertEquals(32896, tiffField0.getDirectoryType());
      assertEquals(954, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(535, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(28, (-1575), fieldTypeFloat0, 28, 10012L, byteArray0, byteOrder0, (byte) (-49));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-49), tiffField0.getSortHint());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals(10012, tiffField0.getOffset());
      assertEquals(112, tiffField0.getBytesLength());
      assertEquals((-1575), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(476, 2147209068, fieldTypeByte0, 0L, 1908L, byteArray0, byteOrder0, (-946));
      int int0 = tiffField0.getSortHint();
      assertEquals((-946), int0);
      assertEquals(476, tiffField0.getTag());
      assertTrue(tiffField0.isLocalValue());
      assertEquals(1908, tiffField0.getOffset());
      assertEquals(2147209068, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, (-180), fieldTypeAscii0, 1L, 4L, byteArray0, byteOrder0, 2146232929);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("6 (0x6: GPSAltitude): ", string0);
      assertEquals((-180), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(2146232929, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, (-180), fieldTypeAscii0, 1L, 4L, byteArray0, byteOrder0, 2146232929);
      tiffField0.dump();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(2146232929, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-180), tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, 1946);
      tiffField0.getByteOrder();
      assertEquals(1946, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(535, 0, fieldTypeAscii0, 535, 1L, byteArray0, byteOrder0, 65535);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1L, tiffElement0.offset);
      assertEquals(535, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
  }
}
