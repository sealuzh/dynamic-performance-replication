/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 05:56:05 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-25));
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-25), "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-25));
      classWriter0.index = (-25);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-25), "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "LocalVariableTypeTable", "LocalVariableTypeTable", "", (Object) null);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131126);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "S=iatur", "S=iatur", "S=iatur", "S=iatur");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-203));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Signature", "Signature", "Signature", "Signature");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "{2u/nj/=^4>6fWhk", "org.apache.commons.io.filefilter.TrueFileFilter", "LocalVariableTypeTable", "LocalVariableTypeTable");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-25));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-25), "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB");
      Attribute attribute0 = new Attribute("2X-}_T5NT*>>rUB");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131121);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "", "");
      ByteVector byteVector0 = new ByteVector(2);
      byteVector0.length = 131121;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-344));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 3963, (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "{`", "{`", "{`", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "{2u/nj/=^4>6fWhk", "&r", "ConstantValue", "&r");
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[5];
      byteVector0.data = byteArray0;
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 0, "org.apache.commons.io.filefilter.TrueFileFilter", "&r", "{2u/nj/=^4>6fWhk", byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16777226, "}9-?Gb:2+]Fj\"m8Y", "", "[>R^a{R5H", "LocalVaribleTypeTable");
      fieldWriter0.visitAnnotation("ynOo=", false);
      ByteVector byteVector0 = new ByteVector(311);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131096);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "#^:YU.))", "#^:YU.))", "#^:YU.))", "#^:YU.))");
      fieldWriter0.visitAnnotation("#^:YU.))", true);
      ByteVector byteVector0 = new ByteVector(131096);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "{2u/nj/=^4>6fWhk", "float", (String) null, "{2u/nj/=^4>6fWhk");
      ByteVector byteVector0 = new ByteVector(1717);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-25));
      classWriter0.version = 51;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-25), "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB");
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-25));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-25), "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB");
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-28));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1687), "oe]recated", "jV*gfs^~aw<w", "jV*gfs^~aw<w", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-28));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1687), "oe]recated", "jV*gfs^~aw<w", "jV*gfs^~aw<w", (Object) null);
      Attribute attribute0 = new Attribute("Q");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131125);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "TR", "TR", "TR", "TR");
      fieldWriter0.visitAnnotation("TR", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-25));
      classWriter0.version = 51;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-25), "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16777226, "}9-?Gb:2+]Fj\"m8Y", "", "[>R^a{R5H", "LocalVaribleTypeTable");
      fieldWriter0.visitAnnotation("ynOo=", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "{2u/nj/=^4>6fWhk", "float", (String) null, "{2u/nj/=^4>6fWhk");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 16777226, "}9-?Gb:2+]Fj\"m8Y", "", "[>R^a{R5H", "LocalVaribleTypeTable");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-25));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-25), "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB", "2X-}_T5NT*>>rUB");
      Attribute attribute0 = new Attribute("2X-}_T5NT*>>rUB");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(1);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
