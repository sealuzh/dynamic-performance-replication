/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 12:31:05 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      classWriter0.visit(49, 49, "ConstantValue", "KKAfgKzF.5a~k", "ConstantValue", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2580), "org.apache.commons.io.filefilter.FileFileFilter", "org.apache.commons.io.filefilter.FileFileFilter", "org.apache.commons.io.filefilter.FileFileFilter", "ConstantValue");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3919));
      classWriter0.index = (-3919);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "byte", "&tZ", ";\"i-e/", ";\"i-e/");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      classWriter0.visit(49, 49, "ConstantValue", "KKAfgKzF.5a~k", "ConstantValue", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2580), "org.apache.commons.io.filefilter.FileFileFilter", "org.apache.commons.io.filefilter.FileFileFilter", "org.apache.commons.io.filefilter.FileFileFilter", "ConstantValue");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3930));
      classWriter0.index = (-3930);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "byte", "&tZ", ";\"i-e/", ";\"i-e/");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1070), "KKAfFgKzF.5a~k", "ahrz5n0>KvX`>R*I0M", (String) null, "%R:\"t)l.O4:%o1]");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, ")rD~h^1kx<|&b9S", ")rD~h^1kx<|&b9S", ")rD~h^1kx<|&b9S", ")rD~h^1kx<|&b9S");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1070), "KKAfFgKzF.5a~k", "ahrz5n0>KvX`>R*I0M", "ahrz5n0>KvX`>R*I0M", "%R:\"t)l.O4:%o1]");
      fieldWriter0.next = fieldWriter0;
      // Undeclared exception!
      try { 
        fieldWriter0.next.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1070), "fn[>Dn7", "ahrz5n0>KvX`>R*I0M", (String) null, (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, (String) null, "", (String) null, "KKAfFgKzF.5a~k");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(371);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 1, "org.apache.commons.io.filefilter.NameFileFilter", "f6[E|mUXxOHj)]", (String) null, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@510fc648
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 686, ")rD~h^1kx<|&b9S", "RuntimeInvisibleAnnotations", ")rD~h^1kx<|&b9S", "RuntimeInvisibleAnnotations");
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.visitAnnotation("RuntimeInvisibleAnnotations", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-580), "wheel.asm.Type", "L", "wheel.asm.Type", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.visitAnnotation("L", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1070), "KKAfgKzF.5a~k", "ahrz5n0>KvX`>R*I0M", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      classWriter0.visit(65535, (-3929), "", "", "", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-580), "wheel.asm.Type", "L", "wheel.asm.Type", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, ">d|rzIvRP)aJ", ")rD~h^1kx<|&b9S", ">d|rzIvRP)aJ", ">d|rzIvRP)aJ");
      Attribute attribute0 = new Attribute(">d|rzIvRP)aJ");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3930));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "byte", "&tZ", ";\"i-e/", ";\"i-e/");
      fieldWriter0.visitAnnotation("byte", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1070), "KKAfFgKzF.5a~k", "ahrz5n0>KvX`>R*I0M", "ahrz5n0>KvX`>R*I0M", "%R:\"t)l.O4:%o1]");
      fieldWriter0.next = fieldWriter0;
      fieldWriter0.next.visitAnnotation("6bj}p9@9cK'I{].", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1070), "KKAfgKzF.5a~k", "ahrz5n0>KvX`>R*I0M", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      classWriter0.visit(65535, (-3929), "", "", "", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-580), "wheel.asm.Type", "L", "wheel.asm.Type", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1070), "KKAfFgKzF.5a~k", "ahrz5n0>KvX`>R*I0M", "ahrz5n0>KvX`>R*I0M", "%R:\"t)l.O4:%o1]");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-1070), "%R:\"t)l.O4:%o1]", "ahrz5n0>KvX`>R*I0M", "%R:\"t)l.O4:%o1]", "ConstantValue");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1070), "KKAfgKzF.5a~k", "ahrz5n0>KvX`>R*I0M", (String) null, (Object) null);
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2047, "%DNZm^", "ahrz5n0>KvX`>R*I0M", "ahrz5n0>KvX`>R*I0M", "%DNZm^");
      Attribute attribute0 = new Attribute("ahrz5n0>KvX`>R*I0M");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(622);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
