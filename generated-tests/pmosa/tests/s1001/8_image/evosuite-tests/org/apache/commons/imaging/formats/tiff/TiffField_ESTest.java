/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 17:19:10 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.util.regex.Pattern;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(283, 283, fieldTypeFloat0, 283, 283, byteArray0, byteOrder0, 283);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(282, 282, fieldTypeFloat0, 282, 282, byteArray0, byteOrder0, 282);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(282L, tiffField0.getCount());
      assertEquals(282, tiffField0.getDirectoryType());
      assertEquals(282, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(1128, tiffField0.getBytesLength());
      assertEquals(282, tiffField0.getTag());
      assertEquals(282, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(303, 303, fieldTypeFloat0, 303, 303, byteArray0, byteOrder0, 303);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(303L, tiffField0.getCount());
      assertNotNull(tiffElement0);
      assertEquals(303, tiffField0.getDirectoryType());
      assertEquals(303L, tiffElement0.offset);
      assertEquals(1212, tiffField0.getBytesLength());
      assertEquals(303, tiffField0.getSortHint());
      assertEquals(303, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)120;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte)114;
      byteArray0[5] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1878, 1878, fieldTypeByte0, 1878, 1878, byteArray0, byteOrder0, (-2527));
      String string0 = tiffField0.toString();
      assertEquals(1878, tiffField0.getDirectoryType());
      assertEquals(1878, tiffField0.getBytesLength());
      assertEquals((-2527), tiffField0.getSortHint());
      assertEquals("1878 (0x756: Unknown Tag): 0, 120, 0, 8, 114, 0 (1878 Undefined)", string0);
      assertEquals(1878, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-128);
      byteArray0[3] = (byte)2;
      byteArray0[4] = (byte)70;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-78);
      byteArray0[7] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, (-2843L), 2165L, byteArray0, byteOrder0, 18246);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(41490, 0);
      tiffField_OversizeValueElement0.getElementDescription();
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ASCII", string0);
      
      tiffField_OversizeValueElement0.getElementDescription(true);
      String string1 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string1);
      
      tiffField0.getByteOrder();
      assertEquals(2165, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(18246, tiffField0.getSortHint());
      assertEquals((-2843), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-551), (-551), fieldTypeFloat0, (-551), (-551), byteArray0, byteOrder0, (-551));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-551), (-551));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals((-551), tiffField0.getSortHint());
      assertEquals((-551), tiffField0.getDirectoryType());
      assertEquals((-551), tiffField0.getTag());
      assertEquals((-551), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(295, 295, fieldTypeLong0, 295, 255L, byteArray0, byteOrder0, 295);
      tiffField0.getIntArrayValue();
      assertEquals(295, tiffField0.getTag());
      assertEquals(295L, tiffField0.getCount());
      assertEquals(295, tiffField0.getSortHint());
      assertEquals(295, tiffField0.getDirectoryType());
      assertEquals(1180, tiffField0.getBytesLength());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "r`Cy@");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-96);
      byteArray0[4] = (byte)50;
      byteArray0[5] = (byte)72;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 1068L, 1068L, byteArray0, (ByteOrder) null, (byte)50);
      tiffField0.getOversizeValueElement();
      tiffField0.getDescriptionWithoutValue();
      tiffField0.getCount();
      tiffField0.getTagName();
      tiffField0.dump();
      tiffField0.getOversizeValueElement();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(296, "8L=Gsnz");
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte)40;
      byteArray0[3] = (byte) (-45);
      byteArray0[4] = (byte)113;
      TiffField tiffField0 = new TiffField(2145780647, 296, fieldTypeDouble0, 296, 296, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(296L, tiffField0.getCount());
      assertEquals(2145780647, tiffField0.getTag());
      assertEquals(2368, tiffField0.getBytesLength());
      assertEquals(296, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(296, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50730, "cwPqteMn<wE.|Cma");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      ByteOrder.nativeOrder();
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)51;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeAscii0, 1577L, 255L, byteArray0, byteOrder0, (byte)51);
      tiffField0.getCount();
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@7fc17ae6 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50730, "cwPqteMn<wE.|Cma");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)72;
      byteArray0[2] = (byte)72;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)0;
      TiffField tiffField0 = new TiffField(1215, 6, fieldTypeAscii0, 1215, 1L, byteArray0, byteOrder0, (byte) (-96));
      tiffField0.getOversizeValueElement();
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("1215 (0x4bf: Unknown Tag): ", string0);
      
      long long0 = tiffField0.getCount();
      assertEquals(1215L, long0);
      
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte) (-96);
      byteArray1[2] = (byte)1;
      TiffField tiffField1 = new TiffField(6, 455, fieldTypeAscii0, (byte)0, 0L, byteArray1, (ByteOrder) null, 6);
      String string1 = tiffField1.getTagName();
      assertEquals("Unknown Tag (0x6)", string1);
      
      tiffField0.dump();
      TiffElement tiffElement0 = tiffField1.getOversizeValueElement();
      assertNull(tiffElement0);
      
      TiffElement tiffElement1 = tiffField0.getOversizeValueElement();
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(1215, tiffField0.getBytesLength());
      assertEquals((-96), tiffField0.getSortHint());
      assertNotNull(tiffElement1);
      assertEquals(1L, tiffElement1.offset);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2146423161), "");
      TiffField tiffField0 = new TiffField(279, 1, fieldTypeRational0, 279, (-2146423161), byteArray0, byteOrder0, 2145711796);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2146423161), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(279L, tiffField0.getCount());
      assertEquals(279, tiffField0.getTag());
      assertEquals(2232, tiffField0.getBytesLength());
      assertEquals(2145711796, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte)97;
      byteArray0[2] = (byte)89;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)66, (byte)89, fieldTypeFloat0, (byte)8, (byte)66, byteArray0, byteOrder0, (byte)8);
      String string0 = tiffField0.toString();
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(89, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(66, tiffField0.getOffset());
      assertEquals("66 (0x42: Unknown Tag): 8.208249E-39, 0.0 (8 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(3036, 3036, fieldTypeLong0, 3036, 3991L, byteArray0, byteOrder0, 293);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(293, tiffField0.getSortHint());
      assertEquals(3036L, tiffField0.getCount());
      assertEquals(3991, tiffField0.getOffset());
      assertEquals(3036, tiffField0.getDirectoryType());
      assertEquals(12144, tiffField0.getBytesLength());
      assertEquals(3036, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(327, 327, fieldTypeFloat0.SRATIONAL, 327, 327, byteArray0, byteOrder0, 327);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte)114;
      byteArray0[5] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1878, 1878, fieldTypeByte0, 1878, 1878, byteArray0, byteOrder0, (-2527));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@49660428 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(279, 279, fieldTypeShort0, 279, 279, byteArray0, byteOrder0, 279);
      tiffField0.getIntValueOrArraySum();
      String string0 = File.separator;
      assertEquals("/", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-2003), 0, fieldTypeByte0, 775L, 1215L, byteArray0, (ByteOrder) null, (byte)50);
      tiffField0.getOversizeValueElement();
      tiffField0.getDescriptionWithoutValue();
      tiffField0.getCount();
      tiffField0.getTagName();
      TiffField tiffField1 = new TiffField(3, (byte)50, fieldTypeByte0, 3176L, 730L, byteArray0, (ByteOrder) null, (-2003));
      tiffField1.dump();
      tiffField0.getOversizeValueElement();
      TiffField tiffField2 = new TiffField(1, 0, fieldTypeByte0, 1, (-2680L), byteArray0, (ByteOrder) null, 1866);
      tiffField2.getIntArrayValue();
      TiffField tiffField3 = new TiffField(2338, (-1640), fieldTypeByte0, 2338, 3, byteArray0, (ByteOrder) null, 1);
      try { 
        tiffField3.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@5324984c
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "r`Cy@");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-72);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-96);
      byteArray0[4] = (byte)1;
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("r`Cy@");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)1, (byte) (-96), fieldTypeDouble0, (byte) (-72), (-639L), byteArray0, byteOrder0, 342);
      String string0 = tiffField0.getTagName();
      assertEquals((-96), tiffField0.getDirectoryType());
      assertEquals(342, tiffField0.getSortHint());
      assertEquals("InteroperabilityIndex", string0);
      assertEquals((-576), tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-639), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte)97;
      byteArray0[2] = (byte)89;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)89, 1770, fieldTypeFloat0, 1184L, (byte)66, byteArray0, byteOrder0, (byte)97);
      long long0 = tiffField0.getCount();
      assertEquals(1184L, long0);
      
      tiffField0.getDoubleArrayValue();
      int int0 = tiffField0.getDirectoryType();
      assertEquals(97, tiffField0.getSortHint());
      assertEquals(4736, tiffField0.getBytesLength());
      assertEquals(89, tiffField0.getTag());
      assertEquals(66, tiffField0.getOffset());
      assertEquals(1770, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34264, 34264, (FieldType) null, 34264, 600L, byteArray0, byteOrder0, (byte)0);
      int int0 = Double.SIZE;
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      int int0 = Double.SIZE;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-627), 64, fieldTypeShort0, 462L, 0L, byteArray0, byteOrder0, 1010);
      int int1 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int1);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(1010, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(64, tiffField0.getDirectoryType());
      assertEquals((-627), tiffField0.getTag());
      assertEquals(462L, tiffField0.getCount());
      assertEquals(924, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)66;
      byteArray0[1] = (byte)97;
      byteArray0[2] = (byte)89;
      int int0 = Double.SIZE;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(766, (-193), fieldTypeLong0, 766, (-193), byteArray0, byteOrder0, 0);
      tiffField0.getIntValueOrArraySum();
      tiffField0.toString();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@3085291e
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0.RATIONAL, 0, (byte)8, byteArray0, byteOrder0, 0);
      tiffField0.getIntArrayValue();
      tiffField0.dump();
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, (byte)8);
      tiffField0.getIntArrayValue();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@50994bd2
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)8, (byte)8, fieldTypeShort0, (byte)8, (byte)8, byteArray0, byteOrder0, (byte)8);
      tiffField0.getDoubleArrayValue();
      tiffField0.dump();
      tiffField0.getFieldType();
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(16, ":`Cy@");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1560), 2146759370, fieldTypeDouble0, 0L, 16, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals("-1560 (0xfffff9e8: Unknown Tag):  (0 :`Cy@)", string0);
      
      int int0 = Pattern.UNICODE_CASE;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField1 = new TiffField(16, 2880, fieldTypeAscii0, 4089L, 4L, byteArray0, byteOrder0, 50);
      String string1 = tiffField1.getStringValue();
      assertEquals(2880, tiffField1.getDirectoryType());
      assertNotNull(string1);
      assertEquals(50, tiffField1.getSortHint());
      assertEquals(4089L, tiffField1.getCount());
      assertEquals(4, tiffField1.getOffset());
      assertEquals(4089, tiffField1.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(22, "r`Cy@");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)97;
      byteArray0[1] = (byte)97;
      byteArray0[2] = (byte)97;
      byteArray0[3] = (byte)97;
      byteArray0[4] = (byte) (-3);
      byteArray0[5] = (byte)97;
      byteArray0[6] = (byte)97;
      byteArray0[7] = (byte)97;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-789), 3203, fieldTypeDouble0, 1744L, (-1L), byteArray0, byteOrder1, (byte)97);
      tiffField0.dump();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField1 = new TiffField(65535, (byte)97, fieldTypeFloat0, 1744L, (byte)97, byteArray0, byteOrder0, (byte) (-3));
      try { 
        tiffField1.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@321855f2 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)8;
      byteArray0[1] = (byte)8;
      byteArray0[2] = (byte)8;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4765, (-5971), fieldTypeShort0, 4765, 4765, byteArray0, byteOrder0, 2146429409);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {2056}, intArray0);
      
      String string0 = tiffField0.toString();
      assertEquals(2146429409, tiffField0.getSortHint());
      assertEquals(9530, tiffField0.getBytesLength());
      assertEquals((-5971), tiffField0.getDirectoryType());
      assertEquals("4765 (0x129d: Unknown Tag): 2056 (4765 SShort)", string0);
      assertEquals(4765, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldType.getFieldType(9);
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-2147390330), (-390), fieldTypeByte0, (-2147390330), 3902L, byteArray0, byteOrder0, 2147041506);
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField1 = new TiffField(9, 2147174968, fieldTypeLong0, 3902L, 5436L, byteArray0, byteOrder0, (-390));
      tiffField1.getDoubleArrayValue();
      tiffField1.toString();
      int int0 = Double.SIZE;
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      TiffField tiffField0 = new TiffField(305, 305, fieldTypeLong0, 3378L, 3378L, byteArray0, byteOrder0, (-1495));
      tiffField0.getDoubleArrayValue();
      int int0 = tiffField0.getSortHint();
      assertEquals(305, tiffField0.getDirectoryType());
      assertEquals(305, tiffField0.getTag());
      assertEquals(13512, tiffField0.getBytesLength());
      assertEquals(3378, tiffField0.getOffset());
      assertEquals(3378L, tiffField0.getCount());
      assertEquals((-1495), int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)8, 321, fieldTypeRational0, 321, (-4312), byteArray0, byteOrder1, (byte)8);
      tiffField0.dump();
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2568, tiffField0.getBytesLength());
      assertEquals(0, int0);
      assertEquals(8, tiffField0.getTag());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(321L, tiffField0.getCount());
      assertEquals(321, tiffField0.getDirectoryType());
      assertEquals((-4312), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)8, 279, fieldTypeRational0, 279, 20L, byteArray0, byteOrder0, 32896);
      tiffField0.getDoubleArrayValue();
      fieldTypeRational0.FLOAT.getValue(tiffField0);
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.nativeOrder();
      TiffField tiffField1 = new TiffField(5387, 279, fieldTypeRational0, 20L, 1652L, byteArray0, byteOrder2, 15);
      String string0 = tiffField0.toString();
      assertEquals("8 (0x8: Unknown Tag):  (279 Rational)", string0);
      
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(279, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(2232, tiffField0.getBytesLength());
      assertEquals(32896, tiffField0.getSortHint());
      assertEquals(20, tiffField0.getOffset());
  }
}
