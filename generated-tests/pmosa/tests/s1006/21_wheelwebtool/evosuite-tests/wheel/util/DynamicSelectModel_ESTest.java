/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 05:33:23 GMT 2018
 */

package wheel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.URI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.junit.runner.RunWith;
import wheel.ErrorPage;
import wheel.components.ActionExpression;
import wheel.components.Any;
import wheel.components.Component;
import wheel.components.ElExpression;
import wheel.components.StandaloneComponent;
import wheel.components.TextArea;
import wheel.util.DynamicSelectModel;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DynamicSelectModel_ESTest extends DynamicSelectModel_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.value("");
      dynamicSelectModel2.reset();
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.translator("");
      dynamicSelectModel2.getTopLevelComponent();
      dynamicSelectModel0.setTopLevelComponent((StandaloneComponent) null);
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.label("1t1H}Pu ;?OnzMs_K");
      dynamicSelectModel1.getTopLevelComponent();
      // Undeclared exception!
      try { 
        dynamicSelectModel4.getObjects();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression .values() to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      int int0 = 32;
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getValue(32);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ElExpression elExpression0 = null;
      DynamicSelectModel dynamicSelectModel0 = null;
      try {
        dynamicSelectModel0 = new DynamicSelectModel((ElExpression) null, (ElExpression) null, (ElExpression) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not create DynamicSelection model. Collection attribute was null or not an el-expression.
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration("g@)DOrKBm");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.translator("");
      MockJapaneseDate mockJapaneseDate0 = new MockJapaneseDate();
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel1.empty(mockJapaneseDate0);
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel2.collection("");
      DynamicSelectModel dynamicSelectModel5 = dynamicSelectModel4.empty("");
      DynamicSelectModel dynamicSelectModel6 = dynamicSelectModel5.empty("");
      dynamicSelectModel6.label("s! 3");
      ErrorPage errorPage0 = new ErrorPage();
      dynamicSelectModel3.setTopLevelComponent(errorPage0);
      dynamicSelectModel1.label("");
      dynamicSelectModel5.translator("");
      dynamicSelectModel2.getComponent();
      DynamicSelectModel dynamicSelectModel7 = dynamicSelectModel5.empty("");
      DynamicSelectModel dynamicSelectModel8 = dynamicSelectModel7.collection("");
      DynamicSelectModel dynamicSelectModel9 = dynamicSelectModel8.collection("s! 3");
      dynamicSelectModel9.label("");
      String string0 = "org.apache.commons.io.filefilter.CanWriteFileFilter";
      DynamicSelectModel dynamicSelectModel10 = dynamicSelectModel3.translator("org.apache.commons.io.filefilter.CanWriteFileFilter");
      // Undeclared exception!
      try { 
        dynamicSelectModel10.getValue((-105));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression s! 3 to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      String string0 = "3HyIX`m*mG>if0";
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("3HyIX`m*mG>if0");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getLabel((-2813));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      // Undeclared exception!
      try { 
        dynamicSelectModel0.getOptionCount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      dynamicSelectModel0.reset();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("5");
      // Undeclared exception!
      try { 
        dynamicSelectModel1.getObjects();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expression 5 evaluated to an object that is not an instance of Collection or Object[]. Can't build a dynamic ISelectModel
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration(" to create a dynamic ISelectModel.");
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.translator("");
      dynamicSelectModel2.validate();
      assertSame(dynamicSelectModel1, dynamicSelectModel2);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.enumeration((String) null);
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.collection("ZicB?M$%1Q");
      dynamicSelectModel2.validate();
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel0.enumeration((String) null);
      dynamicSelectModel3.translator("G@7syKbB0zLDmJ=K-");
      dynamicSelectModel0.getComponent();
      dynamicSelectModel3.enumeration((String) null);
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel1.label("9xMX}.>O8ZCvh[,");
      assertSame(dynamicSelectModel4, dynamicSelectModel0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ErrorPage errorPage0 = new ErrorPage();
      URI uRI0 = MockURI.create("");
      URI uRI1 = MockURI.relativize(uRI0, uRI0);
      MockURI.getRawFragment(uRI1);
      Any any0 = new Any(errorPage0, (CharSequence) null);
      DynamicSelectModel dynamicSelectModel0 = any0.selectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.translator("a'/~x_1f>#DHnB}");
      dynamicSelectModel0.setComponent(any0);
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel1.collection("");
      int int0 = (-1910);
      // Undeclared exception!
      try { 
        dynamicSelectModel2.getLabel((-1910));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.util.DynamicSelectModel", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DynamicSelectModel dynamicSelectModel0 = new DynamicSelectModel();
      DynamicSelectModel dynamicSelectModel1 = dynamicSelectModel0.collection("'.");
      String string0 = "LS";
      dynamicSelectModel0.getTopLevelComponent();
      dynamicSelectModel1.setTopLevelComponent((StandaloneComponent) null);
      dynamicSelectModel1.label("LS");
      String string1 = "";
      DynamicSelectModel dynamicSelectModel2 = dynamicSelectModel0.label("");
      DynamicSelectModel dynamicSelectModel3 = dynamicSelectModel2.enumeration("LS");
      DynamicSelectModel dynamicSelectModel4 = dynamicSelectModel3.enumeration("");
      DynamicSelectModel dynamicSelectModel5 = dynamicSelectModel4.translator("/6XbA9,!o\"0");
      dynamicSelectModel3.label("LS");
      dynamicSelectModel0.getComponent();
      dynamicSelectModel5.enumeration("5");
      // Undeclared exception!
      try { 
        dynamicSelectModel2.getObjects();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not evaluate expression 5.values() to create a dynamic ISelectModel.
         //
         verifyException("wheel.components.ElExpression", e);
      }
  }
}
