/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 25 09:43:25 GMT 2019
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileNotFoundException;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<String> class0 = String.class;
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      JavaClass javaClass1 = javaClass0.getSuperClass();
      Class2HTML class2HTML0 = new Class2HTML(javaClass1, "");
      String string0 = Class2HTML.referenceClass(1);
      assertEquals("<A HREF=\"java.lang.Object_cp.html#cp1\" TARGET=ConstantPool>StringBuilder</A>", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = Class2HTML.toHTML("");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = Class2HTML.referenceType("0yxR");
      assertEquals("<A HREF=\"0yxR.html\" TARGET=_top>0yxR</A>", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = Class2HTML.referenceType("");
      assertEquals("<A HREF=\".html\" TARGET=_top></A>", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      // Undeclared exception!
      try { 
        Class2HTML.referenceClass(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        Class2HTML.main((String[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Class2HTML.main(stringArray0);
      assertEquals(0, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        Class2HTML.toHTML((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        Class2HTML.referenceType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<String> class0 = String.class;
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      JavaClass javaClass1 = javaClass0.getSuperClass();
      Class2HTML class2HTML0 = new Class2HTML(javaClass1, "");
      // Undeclared exception!
      try { 
        Class2HTML.referenceClass((-2973));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid constant pool reference: -2973. Constant pool size is: 86
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String[] stringArray0 = new String[3];
      stringArray0[0] = "o-I+o<&<";
      stringArray0[1] = "6,M";
      stringArray0[2] = "";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance();
      Class<String> class0 = String.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, ".");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      String string0 = Class2HTML.toHTML("<A HREF=\"</A></LI>\n.html\" TARGET=_top><.A><.LI>\n</A>");
      assertEquals("&lt;A HREF=\"&lt;/A&gt;&lt;/LI&gt;\\n.html\" TARGET=_top&gt;&lt;.A&gt;&lt;.LI&gt;\\n&lt;/A&gt;", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "final";
      stringArray0[1] = "final";
      stringArray0[2] = "final";
      stringArray0[3] = "&gt;";
      stringArray0[4] = "-zip";
      stringArray0[5] = "&gt;";
      stringArray0[6] = "&gt;";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // &gt; (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String[] stringArray0 = new String[5];
      stringArray0[0] = "z8F&p";
      stringArray0[1] = "-z?I97";
      stringArray0[2] = "-z?I97";
      stringArray0[3] = "pXB<pKE9d:x|";
      stringArray0[4] = "-z?I97";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[6];
      stringArray0[0] = "public class java.io.ByteArrayInputStream extends java.io.InputStream\nfilename\t\tjava.io.ByteArrayInputStream\ncompiled from\t\tByteArrayInputStream.java\ncompiler version\t52.0\naccess flags\t\t33\nconstant pool\t\t75 entries\nACC_SUPER flag\t\ttrue\n\nAttribute(s):\n\torg.apache.bcel.classfile.SourceFile@0000000203\n\n4 fields:\n\tprotected byte[] buf\n\tprotected int pos\n\tprotected int mark\n\tprotected int count\n\n10 methods:\n\tpublic void <init>(byte[] buf)\n\tpublic void <init>(byte[] buf, int offset, int length)\n\tpublic synchronized int read()\n\tpublic synchronized int read(byte[] b, int off, int len)\n\tpublic synchronized long skip(long n)\n\tpublic synchronized int available()\n\tpublic boolean markSupported()\n\tpublic void mark(int readAheadLimit)\n\tpublic synchronized void reset()\n\tpublic void close()\n\t\tthrows Exceptions: java.io.IOException\n/";
      stringArray0[1] = "SU*@56`=%H{kX?";
      stringArray0[2] = "public class java.io.ByteArrayInputStream extends java.io.InputStream\nfilename\t\tjava.io.ByteArrayInputStream\ncompiled from\t\tByteArrayInputStream.java\ncompiler version\t52.0\naccess flags\t\t33\nconstant pool\t\t75 entries\nACC_SUPER flag\t\ttrue\n\nAttribute(s):\n\torg.apache.bcel.classfile.SourceFile@0000000203\n\n4 fields:\n\tprotected byte[] buf\n\tprotected int pos\n\tprotected int mark\n\tprotected int count\n\n10 methods:\n\tpublic void <init>(byte[] buf)\n\tpublic void <init>(byte[] buf, int offset, int length)\n\tpublic synchronized int read()\n\tpublic synchronized int read(byte[] b, int off, int len)\n\tpublic synchronized long skip(long n)\n\tpublic synchronized int available()\n\tpublic boolean markSupported()\n\tpublic void mark(int readAheadLimit)\n\tpublic synchronized void reset()\n\tpublic void close()\n\t\tthrows Exceptions: java.io.IOException\n/";
      stringArray0[3] = "-d";
      stringArray0[4] = "public class java.io.ByteArrayInputStream extends java.io.InputStream\nfilename\t\tjava.io.ByteArrayInputStream\ncompiled from\t\tByteArrayInputStream.java\ncompiler version\t52.0\naccess flags\t\t33\nconstant pool\t\t75 entries\nACC_SUPER flag\t\ttrue\n\nAttribute(s):\n\torg.apache.bcel.classfile.SourceFile@0000000203\n\n4 fields:\n\tprotected byte[] buf\n\tprotected int pos\n\tprotected int mark\n\tprotected int count\n\n10 methods:\n\tpublic void <init>(byte[] buf)\n\tpublic void <init>(byte[] buf, int offset, int length)\n\tpublic synchronized int read()\n\tpublic synchronized int read(byte[] b, int off, int len)\n\tpublic synchronized long skip(long n)\n\tpublic synchronized int available()\n\tpublic boolean markSupported()\n\tpublic void mark(int readAheadLimit)\n\tpublic synchronized void reset()\n\tpublic void close()\n\t\tthrows Exceptions: java.io.IOException\n/";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String[] stringArray0 = new String[19];
      stringArray0[0] = "-d";
      stringArray0[1] = "-d";
      stringArray0[2] = "-d";
      stringArray0[3] = "-d";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      Class<Integer> class0 = Integer.class;
      JavaClass javaClass0 = classLoaderRepository0.loadClass(class0);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "<init>");
  }
}
