/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 18:47:49 GMT 2018
 */

package us.codecraft.webmagic;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.LinkedHashSet;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import us.codecraft.webmagic.Site;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Site_ESTest extends Site_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Site site0 = new Site();
      Set<Integer> set0 = site0.getAcceptStatCode();
      Site site1 = site0.setAcceptStatCode(set0);
      assertTrue(site1.isUseGzip());
      assertEquals(5000, site1.getSleepTime());
      assertFalse(site1.isDisableCookieManagement());
      assertEquals(0, site1.getCycleRetryTimes());
      assertEquals(5000, site1.getTimeOut());
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(0, site1.getRetryTimes());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Site site0 = new Site();
      site0.getCharset();
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(5000, site0.getTimeOut());
      assertEquals(1000, site0.getRetrySleepTime());
      assertTrue(site0.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Site site0 = new Site();
      boolean boolean0 = site0.isDisableCookieManagement();
      assertTrue(site0.isUseGzip());
      assertFalse(boolean0);
      assertEquals(5000, site0.getTimeOut());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(0, site0.getCycleRetryTimes());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getSleepTime());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Site site0 = new Site();
      site0.toTask();
      assertEquals(5000, site0.getTimeOut());
      assertTrue(site0.isUseGzip());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getCycleRetryTimes());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Site site0 = new Site();
      boolean boolean0 = site0.isUseGzip();
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getTimeOut());
      assertTrue(boolean0);
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Site site0 = Site.me();
      site0.setRetrySleepTime((-3204));
      assertEquals((-3204), site0.getRetrySleepTime());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.setUseGzip(true);
      assertTrue(site0.isUseGzip());
      assertEquals(0, site1.getCycleRetryTimes());
      assertFalse(site1.isDisableCookieManagement());
      assertEquals(5000, site1.getTimeOut());
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(5000, site1.getSleepTime());
      assertEquals(0, site1.getRetryTimes());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.setDisableCookieManagement(false);
      assertTrue(site1.isUseGzip());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(5000, site1.getTimeOut());
      assertEquals(5000, site1.getSleepTime());
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(0, site1.getRetryTimes());
      assertEquals(0, site1.getCycleRetryTimes());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Site site0 = new Site();
      site0.getUserAgent();
      assertEquals(5000, site0.getSleepTime());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getCycleRetryTimes());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(5000, site0.getTimeOut());
      assertTrue(site0.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Site site0 = new Site();
      site0.getAllCookies();
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertTrue(site0.isUseGzip());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(5000, site0.getTimeOut());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Site site0 = new Site();
      String string0 = site0.toString();
      assertEquals(1000, site0.getRetrySleepTime());
      assertTrue(site0.isUseGzip());
      assertEquals("Site{domain='null', userAgent='null', cookies={}, charset='null', sleepTime=5000, retryTimes=0, cycleRetryTimes=0, timeOut=5000, acceptStatCode=[200], headers={}}", string0);
      assertFalse(site0.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Site site0 = Site.me();
      int int0 = site0.getSleepTime();
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getCycleRetryTimes());
      assertEquals(5000, int0);
      assertEquals(5000, site0.getTimeOut());
      assertEquals(1000, site0.getRetrySleepTime());
      assertTrue(site0.isUseGzip());
      assertEquals(0, site0.getRetryTimes());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Site site0 = Site.me();
      site0.setRetryTimes((-2147483645));
      assertEquals((-2147483645), site0.getRetryTimes());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Site site0 = Site.me();
      int int0 = site0.getTimeOut();
      assertEquals(1000, site0.getRetrySleepTime());
      assertTrue(site0.isUseGzip());
      assertEquals(5000, int0);
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Site site0 = Site.me();
      site0.getCookies();
      assertEquals(0, site0.getRetryTimes());
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(5000, site0.getTimeOut());
      assertTrue(site0.isUseGzip());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getSleepTime());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Site site0 = new Site();
      int int0 = site0.getRetrySleepTime();
      assertEquals(1000, int0);
      assertTrue(site0.isUseGzip());
      assertEquals(5000, site0.getTimeOut());
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(5000, site0.getSleepTime());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Site site0 = Site.me();
      site0.hashCode();
      assertTrue(site0.isUseGzip());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(5000, site0.getTimeOut());
      assertEquals(1000, site0.getRetrySleepTime());
      assertFalse(site0.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Site site0 = Site.me();
      Object object0 = new Object();
      boolean boolean0 = site0.equals(object0);
      assertTrue(site0.isUseGzip());
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
      assertFalse(boolean0);
      assertEquals(5000, site0.getTimeOut());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(1000, site0.getRetrySleepTime());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Site site0 = Site.me();
      int int0 = site0.getRetryTimes();
      assertTrue(site0.isUseGzip());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(5000, site0.getTimeOut());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(0, int0);
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getCycleRetryTimes());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Site site0 = Site.me();
      site0.getHeaders();
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getCycleRetryTimes());
      assertEquals(5000, site0.getTimeOut());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getRetryTimes());
      assertTrue(site0.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Site site0 = new Site();
      site0.getDomain();
      assertEquals(5000, site0.getTimeOut());
      assertTrue(site0.isUseGzip());
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(0, site0.getRetryTimes());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = site0.setCharset("DkSNHda@x*$fkm\"DllV");
      site1.hashCode();
      assertTrue(site1.isUseGzip());
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(5000, site1.getTimeOut());
      assertEquals(5000, site1.getSleepTime());
      assertEquals(0, site1.getRetryTimes());
      assertEquals(0, site1.getCycleRetryTimes());
      assertFalse(site1.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.setDomain(";3/IUqy2*");
      site1.hashCode();
      assertFalse(site1.isDisableCookieManagement());
      assertEquals(5000, site1.getSleepTime());
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(5000, site1.getTimeOut());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Site site0 = Site.me();
      site0.setUserAgent("");
      site0.hashCode();
      assertFalse(site0.isDisableCookieManagement());
      assertEquals(0, site0.getCycleRetryTimes());
      assertEquals(5000, site0.getTimeOut());
      assertTrue(site0.isUseGzip());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getSleepTime());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = site0.addCookie("*aUs?CHqv#fJBy8~aO", "*aUs?CHqv#fJBy8~aO", "*aUs?CHqv#fJBy8~aO");
      Site site2 = site1.addCookie("*aUs?CHqv#fJBy8~aO", "*aUs?CHqv#fJBy8~aO", "*aUs?CHqv#fJBy8~aO");
      assertEquals(5000, site2.getTimeOut());
      assertTrue(site2.isUseGzip());
      assertEquals(1000, site2.getRetrySleepTime());
      assertEquals(5000, site2.getSleepTime());
      assertEquals(0, site2.getRetryTimes());
      assertEquals(0, site2.getCycleRetryTimes());
      assertFalse(site2.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = new Site();
      boolean boolean0 = site1.equals(site0);
      assertEquals(0, site1.getRetryTimes());
      assertFalse(site1.isDisableCookieManagement());
      assertEquals(0, site1.getCycleRetryTimes());
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(5000, site1.getSleepTime());
      assertEquals(5000, site1.getTimeOut());
      assertTrue(boolean0);
      assertTrue(site1.isUseGzip());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Site site0 = Site.me();
      assertEquals(5000, site0.getTimeOut());
      
      site0.setTimeOut(1);
      Site site1 = new Site();
      boolean boolean0 = site0.equals(site1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Site site0 = Site.me();
      boolean boolean0 = site0.equals((Object) null);
      assertEquals(0, site0.getCycleRetryTimes());
      assertFalse(site0.isDisableCookieManagement());
      assertFalse(boolean0);
      assertTrue(site0.isUseGzip());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(5000, site0.getTimeOut());
      assertEquals(0, site0.getRetryTimes());
      assertEquals(1000, site0.getRetrySleepTime());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Site site0 = new Site();
      site0.setAcceptStatCode((Set<Integer>) null);
      site0.hashCode();
      assertTrue(site0.isUseGzip());
      assertEquals(5000, site0.getTimeOut());
      assertEquals(1000, site0.getRetrySleepTime());
      assertEquals(5000, site0.getSleepTime());
      assertEquals(0, site0.getRetryTimes());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = new Site();
      assertTrue(site1.equals((Object)site0));
      
      site1.setCharset("1F_^Jw");
      boolean boolean0 = site0.equals(site1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = Site.me();
      site1.setSleepTime((-1968526675));
      boolean boolean0 = site0.equals(site1);
      assertEquals((-1968526675), site1.getSleepTime());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Site site0 = new Site();
      site0.setCycleRetryTimes((-1073741823));
      Site site1 = new Site();
      boolean boolean0 = site1.equals(site0);
      assertEquals((-1073741823), site0.getCycleRetryTimes());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Site site0 = new Site();
      LinkedHashSet<Integer> linkedHashSet0 = new LinkedHashSet<Integer>();
      site0.setAcceptStatCode(linkedHashSet0);
      Site site1 = Site.me();
      boolean boolean0 = site1.equals(site0);
      assertTrue(site1.isUseGzip());
      assertEquals(5000, site1.getTimeOut());
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(5000, site1.getSleepTime());
      assertFalse(boolean0);
      assertEquals(0, site1.getRetryTimes());
      assertFalse(site1.isDisableCookieManagement());
      assertEquals(0, site1.getCycleRetryTimes());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = Site.me();
      assertTrue(site1.equals((Object)site0));
      
      site1.setCharset("]dq]<[");
      boolean boolean0 = site1.equals(site0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = site0.setCharset(", retryTimes=");
      Site site2 = new Site();
      assertFalse(site2.equals((Object)site1));
      
      site2.setCharset(", retryTimes=");
      boolean boolean0 = site2.equals(site0);
      assertTrue(site2.equals((Object)site0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Site site0 = new Site();
      site0.addCookie((String) null, (String) null);
      Site site1 = Site.me();
      boolean boolean0 = site1.equals(site0);
      assertEquals(0, site1.getRetryTimes());
      assertFalse(site1.isDisableCookieManagement());
      assertEquals(0, site1.getCycleRetryTimes());
      assertEquals(5000, site1.getSleepTime());
      assertEquals(1000, site1.getRetrySleepTime());
      assertFalse(boolean0);
      assertTrue(site1.isUseGzip());
      assertEquals(5000, site1.getTimeOut());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = new Site();
      Site site2 = site1.setRetryTimes((-2482));
      boolean boolean0 = site0.equals(site2);
      assertEquals((-2482), site1.getRetryTimes());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = new Site();
      assertTrue(site1.equals((Object)site0));
      
      site0.setUserAgent("P%*/WFlQA/yYX@");
      boolean boolean0 = site0.equals(site1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = Site.me();
      assertTrue(site1.equals((Object)site0));
      
      Site site2 = site0.addHeader("n#0!%~D+*E.89X:h", "n#0!%~D+*E.89X:h");
      boolean boolean0 = site1.equals(site2);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = new Site();
      assertTrue(site1.equals((Object)site0));
      
      site1.setUserAgent(", cycleRetryTimes=");
      boolean boolean0 = site0.equals(site1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Site site0 = new Site();
      site0.setDomain("}\t~LCLl8pmGEy");
      Site site1 = Site.me();
      boolean boolean0 = site0.equals(site1);
      assertEquals(1000, site1.getRetrySleepTime());
      assertEquals(0, site1.getRetryTimes());
      assertEquals(5000, site1.getTimeOut());
      assertTrue(site1.isUseGzip());
      assertFalse(boolean0);
      assertEquals(5000, site1.getSleepTime());
      assertEquals(0, site1.getCycleRetryTimes());
      assertFalse(site1.isDisableCookieManagement());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = Site.me();
      assertTrue(site1.equals((Object)site0));
      
      site1.setDomain("EIHq");
      boolean boolean0 = site0.equals(site1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = Site.me();
      assertTrue(site1.equals((Object)site0));
      
      Site site2 = site0.setDomain("jDGbCFDmPHh");
      Site site3 = site0.setUserAgent(";3/IUqy2*");
      site1.setDomain("jDGbCFDmPHh");
      site3.addCookie("0j_40AaEg0<e`3", "jDGbCFDmPHh", "0j_40AaEg0<e`3");
      site0.addHeader(";3/IUqy2*", "0j_40AaEg0<e`3");
      boolean boolean0 = site3.equals(site1);
      assertFalse(boolean0);
      
      int int0 = site2.getCycleRetryTimes();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = new Site();
      Site site2 = new Site();
      assertTrue(site2.equals((Object)site1));
      
      site2.setAcceptStatCode((Set<Integer>) null);
      boolean boolean0 = site2.equals(site0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Site site0 = Site.me();
      Site site1 = Site.me();
      Site site2 = site0.setUserAgent("jDGbCFDmPch");
      assertFalse(site2.equals((Object)site1));
      
      Site site3 = site1.setUserAgent("jDGbCFDmPch");
      boolean boolean0 = site0.equals(site3);
      assertTrue(site0.equals((Object)site1));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Site site0 = new Site();
      Site site1 = new Site();
      Site site2 = site1.setAcceptStatCode((Set<Integer>) null);
      assertFalse(site2.equals((Object)site0));
      
      site0.setAcceptStatCode((Set<Integer>) null);
      boolean boolean0 = site1.equals(site0);
      assertTrue(site1.equals((Object)site0));
      assertTrue(boolean0);
  }
}
