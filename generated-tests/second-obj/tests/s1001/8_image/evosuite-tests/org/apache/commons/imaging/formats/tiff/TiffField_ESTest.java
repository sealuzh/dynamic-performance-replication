/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 16:00:53 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.ObjectStreamConstants;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.net.URI;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.util.Locale;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      long long0 = 1020L;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1766, 1766, (FieldType) null, 1766, 1020L, (byte[]) null, byteOrder0, 1766);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, " for: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(16, 31, fieldTypeLong0, 16, 191L, byteArray0, byteOrder0, 16);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(31, tiffField0.getDirectoryType());
      assertEquals(16L, tiffField0.getCount());
      assertEquals("16 (0x10: Unknown Tag): ", string0);
      assertEquals(191, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)59;
      byteArray0[1] = (byte)59;
      byteArray0[3] = (byte)59;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)59, fieldTypeFloat0, 2679, (-96L), byteArray0, byteOrder0, (byte)59);
      String string0 = tiffField0.getValueDescription();
      assertEquals(59, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(10716, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(59, tiffField0.getDirectoryType());
      assertEquals((-96), tiffField0.getOffset());
      assertEquals(2679L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-37);
      byteArray0[1] = (byte) (-18);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 50, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.toString();
      assertEquals(50, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getOffset());
      assertEquals("50 (0x32: Unknown Tag): -37, -18 (50 Undefined)", string0);
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)17, (byte)17, fieldTypeFloat0, 5844L, 5844L, byteArray0, byteOrder0, (byte)17);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)17, 762);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(17, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(5844, tiffField0.getOffset());
      assertEquals(17, tiffField0.getTag());
      assertEquals(17, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(49, 49, fieldTypeRational0, 1517L, (-1L), byteArray0, byteOrder0, 14);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(14, 49);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(49, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(49, tiffField0.getTag());
      assertEquals(14, tiffField0.getSortHint());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[22];
      TiffField tiffField0 = new TiffField(339, 25, fieldTypeDouble0, 25, 339, byteArray0, (ByteOrder) null, 339);
      tiffField0.getValue();
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals(339, tiffField0.getTag());
      assertEquals(339, tiffField0.getSortHint());
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals(25L, tiffField0.getCount());
      assertEquals(25, tiffField0.getDirectoryType());
      assertEquals(339L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[270];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeLong0, 0L, 31, byteArray0, byteOrder0, 50);
      tiffField0.getIntArrayValue();
      String string0 = File.pathSeparator;
      assertEquals(":", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      int int0 = 7396;
      TiffField tiffField0 = new TiffField(7396, 7396, fieldTypeDouble0, 7396, 7396, byteArray0, (ByteOrder) null, 7396);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@4d971fac for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      System.setCurrentTimeMillis(64L);
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(644, 644, fieldTypeAscii0, 64L, 9632L, byteArray0, (ByteOrder) null, 1686);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2693, "rP+");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      TiffField tiffField0 = new TiffField(37, 2693, fieldTypeShort0, 37, 1676L, byteArray0, (ByteOrder) null, 37);
      String string0 = tiffField0.getValueDescription();
      assertEquals(37, tiffField0.getTag());
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(1676, tiffField0.getOffset());
      assertEquals(2693, tiffField0.getDirectoryType());
      assertEquals(74, tiffField0.getBytesLength());
      assertEquals(37L, tiffField0.getCount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(16, 31, fieldTypeLong0, 16, 193L, byteArray0, byteOrder0, 16);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@6df23fd8
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[243];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1289), (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)127, 65535, fieldTypeAscii0, 346L, (-2147483648L), byteArray0, byteOrder0, (byte) (-123));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(Integer.MAX_VALUE, " ,5m5cS");
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, Integer.MAX_VALUE, fieldTypeAscii0, Integer.MAX_VALUE, (byte)0, byteArray0, byteOrder0, Integer.MAX_VALUE);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      tiffField0.toString();
      assertEquals(0, tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getBytesLength());
      assertEquals(Integer.MAX_VALUE, tiffField0.getDirectoryType());
      assertEquals(2147483647L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(Integer.MAX_VALUE, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2647, "Transfomation");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2647, 2647, fieldTypeAscii0, 2647, 0L, byteArray0, byteOrder0, (byte)0);
      long long0 = tiffField0.getCount();
      assertEquals(2647L, long0);
      
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2647, tiffField0.getDirectoryType());
      assertEquals(2647, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2647, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte) (-18);
      byteArray0[3] = (byte) (-68);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(81, 81, fieldTypeLong0, 81, 81, byteArray0, byteOrder0, (byte)49);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(81, tiffField0.getTag());
      assertEquals(81, tiffField0.getOffset());
      assertEquals(49, tiffField0.getSortHint());
      assertEquals(324, tiffField0.getBytesLength());
      assertEquals(81, tiffField0.getDirectoryType());
      assertEquals(81L, tiffField0.getCount());
      assertEquals((-1125252303), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)10;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeLong0, 2, 2, byteArray0, byteOrder0, 2);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      
      String string0 = tiffField0.toString();
      assertEquals("2 (0x2: Unknown Tag):  (2 Long)", string0);
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-15);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-15), fieldTypeFloat0, 2679, (-96L), byteArray0, byteOrder0, (byte) (-9));
      tiffField0.getDoubleArrayValue();
      assertEquals((-96), tiffField0.getOffset());
      assertEquals((-9), tiffField0.getSortHint());
      assertEquals(2679L, tiffField0.getCount());
      assertEquals(0, tiffField0.getTag());
      assertEquals(10716, tiffField0.getBytesLength());
      assertEquals((-15), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[14];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[22];
      byteArray1[0] = (byte)122;
      TiffField tiffField0 = new TiffField(1842, (byte)122, fieldTypeLong0, 1842, (byte)122, byteArray1, (ByteOrder) null, 2142074369);
      int int0 = tiffField0.getSortHint();
      assertEquals(2142074369, int0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(122, tiffField0.getDirectoryType());
      assertEquals(1842, tiffField0.getTag());
      assertEquals(1842L, tiffField0.getCount());
      assertEquals(122, tiffField0.getOffset());
      assertEquals(7368, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3445, 3445, fieldTypeLong0, 2620L, (-325L), byteArray0, byteOrder0, 34023);
      String string0 = tiffField0.toString();
      assertEquals(34023, tiffField0.getSortHint());
      assertEquals(3445, tiffField0.getDirectoryType());
      assertEquals("3445 (0xd75: Unknown Tag): 0, 0 (2620 SLong)", string0);
      assertEquals((-325), tiffField0.getOffset());
      assertEquals(10480, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(26, "Text field not encoded as bytes.");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)77;
      CharBuffer charBuffer0 = CharBuffer.allocate(1760);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(3599, 3599, fieldTypeAscii0, 3599, 48L, byteArray0, byteOrder0, (byte)77);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: M for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-84);
      byteArray0[2] = (byte)48;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34732, (-1660), (FieldType) null, (-1660), (-202L), byteArray0, byteOrder0, 40);
      String string0 = tiffField0.getTagName();
      assertEquals("ImageLayer", string0);
      
      tiffField0.getByteOrder();
      assertEquals((-1660), tiffField0.getDirectoryType());
      assertEquals(40, tiffField0.getSortHint());
      assertEquals((-202), tiffField0.getOffset());
      assertEquals(34732, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)80;
      byteArray0[1] = (byte)80;
      byteArray0[2] = (byte)80;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)80;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(150, (byte)80, fieldTypeShort0, (byte)80, 434L, byteArray0, byteOrder0, 3372);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(3372, tiffField0.getSortHint());
      assertEquals(160, tiffField0.getBytesLength());
      assertEquals(80L, tiffField0.getCount());
      assertArrayEquals(new int[] {20560, 80, 80, 0}, intArray0);
      assertEquals(80, tiffField0.getDirectoryType());
      assertEquals(434, tiffField0.getOffset());
      assertEquals(150, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(65535, "kRp,{uKz*OnX_iXtw6");
      byte[] byteArray0 = new byte[9];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(65535, "ha&EJ@ZG7M2_");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational1 = FieldType.RATIONAL;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2838), (-2838), fieldTypeRational1, 0L, (-1110L), byteArray0, byteOrder0, (-95));
      String string0 = File.separator;
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-2838), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-95), tiffField0.getSortHint());
      assertEquals((-2838), tiffField0.getDirectoryType());
      assertEquals((-1110), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(65535, "kRp,{uKz*OnX_iXtw6");
      byte[] byteArray0 = new byte[9];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(65535, "ha&EJ@ZG7M2_");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational1 = FieldType.RATIONAL;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      int int0 = (-95);
      TiffField tiffField0 = new TiffField((-2838), (-2838), fieldTypeRational1, 65535, (-1110L), byteArray0, byteOrder0, (-95));
      String string0 = File.separator;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = "kRp,{uKz*OnX_iXtw6";
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(65538, "kRp,{uKz*OnX_iXtw6");
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)60;
      byteArray0[3] = (byte) (-40);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-40), (-2126221432), fieldTypeShort0, 4, (byte) (-40), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValueOrArraySum();
      try { 
        FieldType.getFieldType(0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 0 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)47;
      byteArray0[3] = (byte)33;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5634, 5634, fieldTypeRational0, 5634, 2L, byteArray0, byteOrder0, (byte)92);
      tiffField0.getIntArrayValue();
      assertEquals(5634, tiffField0.getDirectoryType());
      assertEquals(45072, tiffField0.getBytesLength());
      assertEquals(5634, tiffField0.getTag());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(92, tiffField0.getSortHint());
      assertEquals(5634L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte)122;
      byteArray0[3] = (byte)13;
      TiffField tiffField0 = new TiffField((-795), (-33), fieldTypeShort0, 1409L, (-795), byteArray0, (ByteOrder) null, 1506);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {122.0, 3328.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      
      int int0 = tiffField0.getSortHint();
      assertEquals(1506, int0);
      assertEquals(1409L, tiffField0.getCount());
      assertEquals(2818, tiffField0.getBytesLength());
      assertEquals((-33), tiffField0.getDirectoryType());
      assertEquals((-795), tiffField0.getTag());
      assertEquals((-795), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(17, 17, fieldTypeAscii0, 17, 17, byteArray0, byteOrder0, 17);
      tiffField0.getFieldTypeName();
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[224];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1845, 1845, fieldTypeDouble0, 821, 1845, byteArray0, byteOrder0, 317);
      int int0 = Short.BYTES;
      String string0 = tiffField0.getValueDescription();
      assertEquals(1845, tiffField0.getOffset());
      assertEquals(317, tiffField0.getSortHint());
      assertEquals(821L, tiffField0.getCount());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertNotNull(string0);
      assertEquals(1845, tiffField0.getTag());
      assertEquals(1845, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[17];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)92;
      byteArray0[2] = (byte)47;
      byteArray0[3] = (byte)33;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<GI0>u$n");
      TiffField tiffField0 = new TiffField(5634, 5634, fieldTypeRational0, 5634, 2L, byteArray0, byteOrder0, (byte)92);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[224];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(317, 317, fieldTypeDouble0, 821, 317, byteArray0, byteOrder0, 317);
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      int int0 = Short.BYTES;
      String string0 = File.separator;
      System.setCurrentTimeMillis(317);
      tiffField0.getDoubleArrayValue();
      System.setCurrentTimeMillis(2);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(13, "Exposure");
      byte[] byteArray0 = new byte[22];
      byteArray0[0] = (byte) (-92);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)58;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(13, 13, fieldTypeRational0, 13, 13, byteArray0, byteOrder0, 50935);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[37];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteOrder byteOrder0 = null;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(339, "{^`(:Eu)");
      int int0 = 786;
      TiffField tiffField0 = new TiffField(339, 339, fieldTypeRational0, 1L, 1L, byteArray0, (ByteOrder) null, 786);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[162];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat1 = FieldType.FLOAT;
      ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(336, "'2\u0007L");
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      int int0 = Byte.BYTES;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      int int1 = Byte.BYTES;
      FieldTypeFloat fieldTypeFloat2 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(842, 336, fieldTypeFloat0, 2081L, 0L, byteArray0, byteOrder0, (-714));
      TiffField tiffField1 = new TiffField((-2662), 842, fieldTypeLong0, 1L, (-2662), byteArray0, byteOrder2, 34118);
      assertEquals(4, tiffField1.getBytesLength());
      
      tiffField1.getIntValueOrArraySum();
      assertEquals(34118, tiffField1.getSortHint());
      assertEquals(1L, tiffField1.getCount());
      assertEquals((-2662), tiffField1.getOffset());
      assertEquals((-2662), tiffField1.getTag());
      assertEquals(842, tiffField1.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "1Cmo|4p,Qz|y{");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)50;
      TiffField tiffField0 = new TiffField(65535, (-14), fieldTypeRational0, 0L, (-1338L), byteArray0, (ByteOrder) null, 34024);
      int int0 = tiffField0.getSortHint();
      assertEquals(34024, int0);
      
      tiffField0.getDoubleArrayValue();
      int int1 = tiffField0.getDirectoryType();
      assertEquals((-1338), tiffField0.getOffset());
      assertEquals((-14), int1);
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[14];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      TiffField tiffField0 = new TiffField((-4), (byte)1, fieldTypeShort0, 1L, (-1067L), byteArray0, (ByteOrder) null, 19);
      int int0 = tiffField0.getSortHint();
      assertEquals(19, int0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      
      tiffField0.toString();
      tiffField0.getDoubleArrayValue();
      int int1 = tiffField0.getOffset();
      assertEquals((-4), tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1067), int1);
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[37];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-42), 1241, fieldTypeRational0, 16, (-3259), byteArray0, byteOrder0, (-42));
      ByteOrder.nativeOrder();
      tiffField0.getDoubleArrayValue();
      URI uRI0 = null;
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[58];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rP+");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((byte)114, "rWPfUY&l=P,F:");
      TiffField tiffField0 = new TiffField(65535, (-2527), fieldTypeByte0, 65535, (-2527), byteArray0, byteOrder0, (-2527));
      FileSystemHandling.shouldAllThrowIOExceptions();
      tiffField0.toString();
      Object object0 = new Object();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        FieldType.getFieldType((byte)114);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 114 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[270];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2608), "rP+");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(23, 3100, fieldTypeShort0, 3100, (-2608), byteArray0, byteOrder0, 3100);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      String string1 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x17)", string1);
      
      tiffField0.getTagInfo();
      long long0 = tiffField0.getCount();
      assertEquals((-2608), tiffField0.getOffset());
      assertEquals(3100L, long0);
      assertEquals(3100, tiffField0.getDirectoryType());
      assertEquals(3100, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[58];
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "rP+");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(65535, "rP+");
      TiffField tiffField0 = new TiffField((byte)114, (byte)114, fieldTypeAscii0, 1065L, (-1L), byteArray0, byteOrder0, (-141));
      tiffField0.dump();
      try { 
        fieldTypeAscii0.writeData(byteOrder0, byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown data type: LITTLE_ENDIAN
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[224];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder.nativeOrder();
      int int0 = Byte.BYTES;
      TiffField tiffField0 = new TiffField(1, 1845, fieldTypeDouble0.FLOAT, 1845, 1, byteArray0, byteOrder0, 1845);
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      int int1 = Byte.BYTES;
      tiffField0.dump();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      int int2 = tiffField0.getSortHint();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1845, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1845, int2);
      assertEquals(1845L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[270];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1845, 1845, fieldTypeDouble0, 848, 1845, byteArray0, byteOrder1, 334);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      TiffField tiffField1 = new TiffField(1, 1845, fieldTypeDouble0.FLOAT, 1845, 1, byteArray0, byteOrder0, 1845);
      ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField2 = new TiffField(1, (-1893), fieldTypeLong0, 7396L, (-370L), byteArray0, byteOrder1, 1845);
      String string0 = tiffField2.getValueDescription();
      assertEquals((-1893), tiffField2.getDirectoryType());
      assertNotNull(string0);
      
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(334, tiffField0.getSortHint());
      assertEquals((-1), tagInfo0.tag);
      
      long long0 = tiffField1.getCount();
      assertEquals(1, tiffField1.getOffset());
      assertEquals(1845L, long0);
      assertEquals(1, tiffField1.getTag());
  }
}
