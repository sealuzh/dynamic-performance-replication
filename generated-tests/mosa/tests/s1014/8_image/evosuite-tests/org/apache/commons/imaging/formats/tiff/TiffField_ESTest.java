/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 05:03:25 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2155, 2155, fieldTypeAscii0, 2155, 2155, byteArray0, byteOrder0, 2155);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@378dc429 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1566), (-1566), fieldTypeShort0, (-1566), (-1566), byteArray0, byteOrder0, (-1566));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals((-1566), tiffField0.getDirectoryType());
      assertEquals((-1566), tiffField0.getSortHint());
      assertEquals((-1566), tiffField0.getTag());
      assertEquals((-1566), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[50];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2161, 2161, fieldTypeShort0, 2161, 2161, byteArray0, byteOrder0, 2161);
      tiffField0.getDoubleArrayValue();
      assertEquals(2161, tiffField0.getTag());
      assertEquals(2161, tiffField0.getDirectoryType());
      assertEquals(4322, tiffField0.getBytesLength());
      assertEquals(2161, tiffField0.getSortHint());
      assertEquals(2161, tiffField0.getOffset());
      assertEquals(2161L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[147];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(3267, 3267, fieldTypeDouble0, 3267, 3267, byteArray0, byteOrder0, 3267);
      tiffField0.getDoubleArrayValue();
      String string0 = tiffField0.toString();
      assertEquals("3267 (0xcc3: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (3267 Double)", string0);
      assertEquals(3267, tiffField0.getSortHint());
      assertEquals(3267, tiffField0.getDirectoryType());
      assertEquals(3267, tiffField0.getOffset());
      assertEquals(26136, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(927, 50, fieldTypeByte0, 927, 927, byteArray0, byteOrder0, 40);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@af01a0d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2161, 2161, fieldTypeAscii0, 2161, 2161, byteArray0, byteOrder0, 2161);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(2161, tiffField0.getSortHint());
      assertEquals(2161, tiffField0.getDirectoryType());
      assertEquals("2161 (0x871: Unknown Tag): ", string0);
      assertEquals(2161, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2161, 2161, fieldTypeAscii0, 2161, 2161, byteArray0, byteOrder0, 2161);
      tiffField0.dump();
      assertEquals(2161, tiffField0.getSortHint());
      assertEquals(2161, tiffField0.getDirectoryType());
      assertEquals(2161, tiffField0.getTag());
      assertEquals(2161, tiffField0.getBytesLength());
      assertEquals(2161, tiffField0.getOffset());
      assertEquals(2161L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(106, 106, fieldTypeDouble0, 106, 106, byteArray0, byteOrder0, 106);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[50];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2161, 2161, fieldTypeShort0, 2161, 2161, byteArray0, byteOrder0, 2161);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2161L, tiffField0.getCount());
      assertEquals(2161, tiffField0.getDirectoryType());
      assertEquals(4322, tiffField0.getBytesLength());
      assertEquals(2161, tiffField0.getTag());
      assertEquals(2161, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2161, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2182, 2182, fieldTypeFloat0, 2182, 2182, byteArray0, byteOrder0, 2182);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2182, tiffField0.getTag());
      assertEquals(2182, int0);
      assertEquals(2182, tiffField0.getSortHint());
      assertEquals(2182L, tiffField0.getCount());
      assertEquals(8728, tiffField0.getBytesLength());
      assertEquals(2182, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[204];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2122, 2122, fieldTypeFloat0.LONG, 2122, 2122, byteArray0, byteOrder0, 2122);
      tiffField0.getDoubleArrayValue();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@8c93ec4
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[48];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2161, 2161, fieldTypeShort0, 2161, 2161, byteArray0, byteOrder0, 2161);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(2161L, tiffElement0.offset);
      assertEquals(2161, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(2161, tiffField0.getSortHint());
      assertEquals(2161, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[83];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1584, 1584, fieldTypeLong0, 1584, 1584, byteArray0, byteOrder0, 1584);
      String string0 = tiffField0.toString();
      assertEquals(1584, tiffField0.getSortHint());
      assertEquals(6336, tiffField0.getBytesLength());
      assertEquals(1584, tiffField0.getDirectoryType());
      assertEquals("1584 (0x630: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (1584 SLong)", string0);
      assertEquals(1584, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2155, 2155, fieldTypeAscii0, 2155, 2155, byteArray0, byteOrder0, 2155);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@5f0b5b16 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[128];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2182, 2182, fieldTypeFloat0.LONG, 2182, 2182, byteArray0, byteOrder0, 2182);
      tiffField0.getIntArrayValue();
      String string0 = tiffField0.getValueDescription();
      assertEquals(8728, tiffField0.getBytesLength());
      assertEquals(2182, tiffField0.getDirectoryType());
      assertEquals(2182, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(2182, tiffField0.getOffset());
      assertEquals(2182, tiffField0.getSortHint());
      assertEquals(2182L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2157, 2157, fieldTypeFloat0, 2157, 2157, byteArray0, byteOrder0, 2157);
      String string0 = tiffField0.toString();
      assertEquals("2157 (0x86d: Unknown Tag):  (2157 Float)", string0);
      
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2157, 2157);
      String string1 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(2157, tiffField0.getDirectoryType());
      assertEquals(2157, tiffField0.getOffset());
      assertEquals(2157, tiffField0.getSortHint());
      assertNull(string1);
      assertEquals(8628, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1586, 1586, fieldTypeLong0, 1586, 1586, byteArray0, byteOrder0, 1586);
      tiffField0.getFieldTypeName();
      assertEquals(1586, tiffField0.getOffset());
      assertEquals(1586, tiffField0.getDirectoryType());
      assertEquals(1586, tiffField0.getTag());
      assertEquals(1586, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2157, 2157, fieldTypeFloat0, 2157, 2157, byteArray0, byteOrder0, 2157);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getSortHint();
      assertEquals(8628, tiffField0.getBytesLength());
      assertEquals(2157, tiffField0.getOffset());
      assertEquals(2157, int0);
      assertEquals(2157, tiffField0.getTag());
      assertEquals(2157, tiffField0.getDirectoryType());
      assertEquals(2157L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeAscii0, 1, 2155, byteArray0, byteOrder0, 2155);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2155, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(2155, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[36];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2182, 2182, fieldTypeFloat0, 2182, 2182, byteArray0, byteOrder0, 2182);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0");
      assertEquals(8728, tiffField0.getBytesLength());
      assertEquals(2182, tiffField0.getSortHint());
      assertEquals(2182, tiffField0.getOffset());
      assertEquals(2182L, tiffField0.getCount());
      assertEquals(2182, tiffField0.getTag());
      assertEquals(2182, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1584, 1584, fieldTypeLong0, 1584, 1584, byteArray0, byteOrder0, 1584);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x630)", string0);
      assertEquals(1584, tiffField0.getDirectoryType());
      assertEquals(1584, tiffField0.getSortHint());
      assertEquals(1584, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(50255, 1215, fieldTypeRational0, 1215, 1215, byteArray0, byteOrder0, 50255);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50255, tiffField0.getTag());
      assertEquals(1215, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(50255, tiffField0.getSortHint());
      assertEquals(9720, tiffField0.getBytesLength());
      assertEquals(1215L, tiffField0.getCount());
      assertEquals(1215, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2182, 2182, fieldTypeFloat0, 2182, 2182, byteArray0, byteOrder0, 2182);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[40];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2161, 2161, fieldTypeShort0, 2161, 2161, byteArray0, byteOrder0, 2161);
      tiffField0.getIntArrayValue();
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(2161, tiffField0.getDirectoryType());
      assertEquals(2161, tiffField0.getSortHint());
      assertEquals(2161L, tiffField0.getCount());
      assertEquals(0, int0);
      assertEquals(2161, tiffField0.getOffset());
      assertEquals(2161, tiffField0.getTag());
      assertEquals(4322, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[42];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(80, 80, fieldTypeByte0, 80, (-23L), byteArray0, byteOrder0, 80);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-23), tiffField0.getOffset());
      assertEquals(80L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(80, tiffField0.getDirectoryType());
      assertEquals(80, tiffField0.getBytesLength());
      assertEquals(80, tiffField0.getTag());
      assertEquals(80, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1205, 1205, fieldTypeFloat0, 1205, 1205, byteArray0, byteOrder0, 1205);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1205, 1205);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(1205, tiffField0.getTag());
      assertEquals(1205, tiffField0.getSortHint());
      assertEquals(1205, tiffField0.getDirectoryType());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
      assertNotNull(string0);
      assertEquals(1205, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(2, (-2147220764), fieldTypeRational0, 891L, 4L, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.toString();
      tiffField0.getValueDescription();
      String string1 = tiffField0.toString();
      assertFalse(string1.equals((Object)string0));
      
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-2147220764), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
      assertEquals(7128, tiffField0.getBytesLength());
      assertEquals(891L, tiffField0.getCount());
      assertEquals(4, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[100];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(1121, 1121, fieldTypeLong0, 1121, 1121, byteArray0, byteOrder0, 1121);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(1121, tiffField0.getTag());
      assertEquals(1121, tiffField0.getSortHint());
      assertEquals(1121L, tiffField0.getCount());
      assertEquals(1121, tiffField0.getOffset());
      assertEquals(4484, tiffField0.getBytesLength());
      assertEquals(1121, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2182, 2182, fieldTypeFloat0, 1L, 2182, byteArray0, byteOrder0, 2182);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2182, tiffField0.getSortHint());
      assertEquals(2182, tiffField0.getDirectoryType());
      assertEquals(2182, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2182, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField((byte)7, (byte)7, fieldTypeRational0, 0L, (byte)11, byteArray0, byteOrder0, (byte)0);
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getTag());
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(34023, 34023, fieldTypeFloat0, 34023, 34023, byteArray0, byteOrder0, 34023);
      String string0 = tiffField0.getTagName();
      assertEquals("ImageColorIndicator", string0);
      
      String string1 = tiffField0.getValueDescription();
      assertEquals(34023, tiffField0.getTag());
      assertEquals(34023, tiffField0.getDirectoryType());
      assertEquals(34023, tiffField0.getSortHint());
      assertEquals(34023, tiffField0.getOffset());
      assertNotNull(string1);
      assertEquals(34023L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[173];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2176, 2176, fieldTypeFloat0, 2176, 2176, byteArray0, byteOrder0, 2176);
      tiffField0.getDoubleArrayValue();
      assertEquals(2176, tiffField0.getSortHint());
      assertEquals(2176, tiffField0.getDirectoryType());
      assertEquals(2176L, tiffField0.getCount());
      assertEquals(2176, tiffField0.getTag());
      assertEquals(2176, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2155, 2155, fieldTypeAscii0, 2155, 4318L, byteArray0, byteOrder0, 2155);
      String string0 = tiffField0.getStringValue();
      assertEquals(4318, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2155, tiffField0.getDirectoryType());
      assertEquals(2155, tiffField0.getTag());
      assertEquals(2155, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[40];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3317), 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 201);
      tiffField0.getIntArrayValue();
      tiffField0.getIntValueOrArraySum();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(201, tiffField0.getSortHint());
      assertEquals((-3317), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[27];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1331, 35, fieldTypeFloat0, 1L, 1614L, byteArray0, byteOrder0, 767);
      tiffField0.getDoubleArrayValue();
      tiffField0.getIntValueOrArraySum();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): 0.0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(24, (-2147220764), fieldTypeRational0, (byte)7, (byte)7, byteArray0, byteOrder0, (byte)7);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[173];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(2164, 2164, fieldTypeByte0, 2164, 2164, byteArray0, byteOrder0, 2164);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2164, tiffField0.getDirectoryType());
      assertEquals(2164, tiffField0.getTag());
      assertEquals(2164, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(2164, tiffField0.getOffset());
      assertEquals(2164L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField((byte) (-3), (byte)7, fieldTypeRational0, (byte)7, 2539L, byteArray0, byteOrder0, (byte)7);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[87];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 316, fieldTypeAscii0, 65535, 65535, byteArray0, byteOrder1, 2145574773);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2145574773, tiffField0.getSortHint());
      assertEquals(316, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1288), (-1288), fieldTypeShort0, 779L, (-1288), byteArray0, byteOrder0, 2087);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2087, tiffField0.getSortHint());
      assertEquals((-1288), tiffField0.getDirectoryType());
      assertEquals(779L, tiffField0.getCount());
      assertEquals((-1288), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-1288), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[218];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2286, 2286, fieldTypeFloat0, 2286, 2286, byteArray0, byteOrder0, 2286);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2286, tiffField0.getOffset());
      assertEquals(2286, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2286, tiffField0.getTag());
      assertEquals(2286, tiffField0.getSortHint());
      assertEquals(2286L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[215];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2286, 2286, fieldTypeFloat0.LONG, 2286, 2286, byteArray0, byteOrder0, 2286);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2286, tiffField0.getSortHint());
      assertEquals(2286, tiffField0.getDirectoryType());
      assertEquals(2286L, tiffField0.getCount());
      assertEquals(2286, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2286, tiffField0.getTag());
  }
}
