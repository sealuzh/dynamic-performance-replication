/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 05:57:02 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(840, "org.apache.commons.imaging.formats.tiff.TiffField");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte)26;
      byteArray0[5] = (byte) (-120);
      TiffField tiffField0 = new TiffField(0, 1531, fieldTypeAscii0.SRATIONAL, 6L, 920L, byteArray0, byteOrder0, 1253);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3106, 3106, fieldTypeByte0, 4L, 4L, byteArray0, byteOrder0, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(3106, tiffField0.getDirectoryType());
      assertTrue(boolean0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(3106, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(107, 107, fieldTypeShort0, 107, 107, byteArray0, byteOrder0, 107);
      tiffField0.dump();
      assertEquals(107, tiffField0.getTag());
      assertEquals(107, tiffField0.getDirectoryType());
      assertEquals(107, tiffField0.getSortHint());
      assertEquals(107, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1743), "0(NTyEm#1kroa)=");
      byte[] byteArray0 = new byte[5];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "0(NTyEm#1kroa)=");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1299), (-1743), fieldTypeRational0.SSHORT, 66842L, 66842L, byteArray0, byteOrder0, 1586);
      tiffField0.getValue();
      assertEquals(66842, tiffField0.getOffset());
      assertEquals((-1299), tiffField0.getTag());
      assertEquals(1586, tiffField0.getSortHint());
      assertEquals((-1743), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, (byte) (-93));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-93), tiffField0.getSortHint());
      assertEquals((-1), tagInfo0.length);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(840, "org.apache.commons.imaging.formats.tiff.TiffField");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 840, 840, byteArray0, byteOrder0, (byte) (-8));
      int int0 = tiffField0.getTag();
      assertEquals((-8), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(840, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(840, "org.apache.commons.imaging.formats.tiff.TiffField");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-6), (byte)25, fieldTypeAscii0.SBYTE, (byte)0, (byte)0, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getTag();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-6), int0);
      assertEquals(25, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(840, "org.apache.commons.imaging.formats.tiff.TiffField");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)34;
      TiffField tiffField0 = new TiffField(840, 840, fieldTypeAscii0, 840, (-1L), byteArray0, byteOrder0, 840);
      String string0 = tiffField0.getStringValue();
      assertEquals(840, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(840, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(840, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(3165, (-2590), fieldTypeShort0, 24L, (-1101L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-1101), tiffField0.getOffset());
      assertEquals((-2590), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(3165, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-28), 749, fieldTypeAscii0, (byte) (-1), (-28), byteArray0, byteOrder0, 50723);
      int int0 = tiffField0.getSortHint();
      assertEquals(749, tiffField0.getDirectoryType());
      assertEquals(50723, int0);
      assertEquals((-28), tiffField0.getOffset());
      assertEquals((-28), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 749, fieldTypeAscii0, (byte) (-1), 1, byteArray0, byteOrder0, 50742);
      int int0 = tiffField0.getOffset();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, int0);
      assertEquals(749, tiffField0.getDirectoryType());
      assertEquals(50742, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-262), "");
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1393), (-1393), fieldTypeAscii0, (-1393), (-1720L), byteArray0, byteOrder0, (byte)22);
      int int0 = tiffField0.getOffset();
      assertEquals((-1393), tiffField0.getDirectoryType());
      assertEquals((-1720), int0);
      assertEquals(22, tiffField0.getSortHint());
      assertEquals((-1393), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(840, "org.apache.commons.imaging.formats.tiff.TiffField");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-10);
      TiffField tiffField0 = new TiffField((byte)0, 6, fieldTypeAscii0.SHORT, 15976L, (-1299), byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(246, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1299), tiffField0.getOffset());
      assertEquals(6, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-52);
      TiffField tiffField0 = new TiffField((-62), 32, fieldTypeShort0, 1302L, (-1L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-62), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-13312), int0);
      assertEquals(32, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(40093, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-532), (-343), fieldTypeFloat0, 1L, (-1452L), byteArray0, byteOrder0, (-343));
      tiffField0.getIntValue();
      assertEquals((-343), tiffField0.getSortHint());
      assertEquals((-1452), tiffField0.getOffset());
      assertEquals((-532), tiffField0.getTag());
      assertEquals((-343), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)13;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, 3, fieldTypeByte0, 1L, (byte)13, byteArray0, byteOrder0, 4105);
      tiffField0.getIntValue();
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(13, tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals(4105, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-82);
      TiffField tiffField0 = new TiffField(68, (-1175), fieldTypeByte0, 1L, 344L, byteArray0, (ByteOrder) null, 641);
      tiffField0.getIntValue();
      assertEquals(68, tiffField0.getTag());
      assertEquals(344, tiffField0.getOffset());
      assertEquals(641, tiffField0.getSortHint());
      assertEquals((-1175), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(36, (String) null);
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1790, 36, fieldTypeFloat0, (-3159L), 160372L, byteArray0, byteOrder0, (byte)25);
      tiffField0.getFieldTypeName();
      assertEquals(25, tiffField0.getSortHint());
      assertEquals(1790, tiffField0.getTag());
      assertEquals(160372, tiffField0.getOffset());
      assertEquals(36, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(77, 77, fieldTypeRational0, 77, 77, byteArray0, byteOrder0, 77);
      tiffField0.getFieldTypeName();
      assertEquals(77, tiffField0.getDirectoryType());
      assertEquals(77, tiffField0.getOffset());
      assertEquals(77, tiffField0.getTag());
      assertEquals(77, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(73, 0, fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(73, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[41];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34665, 50686, fieldTypeAscii0, 34665, (-3608L), byteArray0, byteOrder0, 50686);
      tiffField0.getFieldType();
      assertEquals(34665, tiffField0.getTag());
      assertEquals(50686, tiffField0.getSortHint());
      assertEquals((-3608), tiffField0.getOffset());
      assertEquals(50686, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1743), "0(NTyEm#1kroa)=");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1743), 41, fieldTypeRational0, 13952L, 13952L, byteArray0, byteOrder0, 1253);
      tiffField0.getFieldType();
      assertEquals(1253, tiffField0.getSortHint());
      assertEquals(13952, tiffField0.getOffset());
      assertEquals((-1743), tiffField0.getTag());
      assertEquals(41, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[121];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "mf<IEz~Stdv!H");
      TiffField tiffField0 = new TiffField(194, 194, fieldTypeFloat0, 2105L, (-2096L), byteArray0, byteOrder0, 238);
      tiffField0.getFieldType();
      assertEquals((-2096), tiffField0.getOffset());
      assertEquals(194, tiffField0.getDirectoryType());
      assertEquals(194, tiffField0.getTag());
      assertEquals(238, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(909, 909, fieldTypeShort0, 1L, 1290L, byteArray0, byteOrder0, 641);
      tiffField0.getDoubleValue();
      assertEquals(641, tiffField0.getSortHint());
      assertEquals(1290, tiffField0.getOffset());
      assertEquals(909, tiffField0.getTag());
      assertEquals(909, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)99;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2802), 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, (-2802));
      tiffField0.getDoubleValue();
      assertEquals((-2802), tiffField0.getTag());
      assertEquals((-2802), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-88);
      TiffField tiffField0 = new TiffField(80, 62, fieldTypeRational0, 1L, (-2147483648L), byteArray0, byteOrder0, (byte)0);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(80, tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(62, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(840, "org.apache.commons.imaging.formats.tiff.TiffField");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 840, 840, byteArray0, byteOrder0, (byte) (-8));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(840, tiffField0.getOffset());
      assertEquals((-8), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(40093, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-532), (-343), fieldTypeFloat0, 1L, (-1452L), byteArray0, byteOrder0, (-343));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-343), tiffField0.getSortHint());
      assertEquals((-532), tiffField0.getTag());
      assertEquals((-343), int0);
      assertEquals((-1452), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0, byteArray0, byteOrder0, 1);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(840, "org.apache.commons.imaging.formats.tiff.TiffField");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 840, 840, byteArray0, byteOrder0, (byte) (-8));
      long long0 = tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals(840L, long0);
      assertEquals(840, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-8), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(73, 0, fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(73, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(40093, "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-532), 517, fieldTypeFloat0, 517, 2440L, byteArray0, (ByteOrder) null, 22);
      tiffField0.getBytesLength();
      assertEquals((-532), tiffField0.getTag());
      assertEquals(2440, tiffField0.getOffset());
      assertEquals(517, tiffField0.getDirectoryType());
      assertEquals(22, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-343), 2349, fieldTypeAscii0, (-343), (-343), byteArray0, (ByteOrder) null, 27);
      tiffField0.getBytesLength();
      assertEquals((-343), tiffField0.getTag());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(2349, tiffField0.getDirectoryType());
      assertEquals((-343), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1547, 1547, fieldTypeShort0, 1547, 1547, byteArray0, (ByteOrder) null, 500);
      tiffField0.getByteOrder();
      assertEquals(1547, tiffField0.getTag());
      assertEquals(1547, tiffField0.getDirectoryType());
      assertEquals(1547, tiffField0.getOffset());
      assertEquals(500, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(989, 30, fieldTypeRational0.SHORT, 80, 989, byteArray0, (ByteOrder) null, 817);
      tiffField0.getByteArrayValue();
      assertEquals(817, tiffField0.getSortHint());
      assertEquals(989, tiffField0.getOffset());
      assertEquals(30, tiffField0.getDirectoryType());
      assertEquals(989, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 1296L, 0, byteArray0, byteOrder0, (-2520));
      tiffField0.getByteArrayValue();
      assertEquals((-2520), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeLong0.DOUBLE, 31, 31, (byte[]) null, byteOrder0, 31);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2121), (-2121), fieldTypeShort0, (-2121), (-2121), byteArray0, byteOrder0, (-2121));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1737), 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, (-1737));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2083), (-2083), (FieldType) null, 2147483647L, (byte)124, (byte[]) null, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(29, 29, fieldTypeShort0, 29, 29, (byte[]) null, byteOrder0, 29);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-605), (-605), fieldTypeRational0, (-605), (-605), byteArray0, byteOrder0, (-605));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(46, 46, fieldTypeShort0, 1L, 46, byteArray0, (ByteOrder) null, 46);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(40094, 49, fieldTypeRational0, 1195L, 40094, byteArray0, byteOrder0, 80);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-4295), (-4295), fieldTypeRational0, (-4295), (-4295), byteArray0, byteOrder0, (-4295));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-1760), 1, fieldTypeLong0, 1, (-1760), byteArray0, (ByteOrder) null, (-1717986884));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(38, 38, fieldTypeShort0, 38, 38, (byte[]) null, byteOrder0, 38);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1712), (-1712), fieldTypeShort0, (-1712), (-1712), byteArray0, byteOrder0, (-1712));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1717986917), (-1717986917), fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, (-1717986917));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(29, 29, fieldTypeShort0, 29, 29, (byte[]) null, byteOrder0, 29);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1204, 1204, fieldTypeByte0, 1L, 1204, (byte[]) null, byteOrder0, 1204);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1301), (-1301), fieldTypeRational0, (-1301), (-1301), byteArray0, byteOrder0, (-1301));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(40091, 41, fieldTypeRational0, 3995L, 40091, (byte[]) null, byteOrder0, (-3253));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(77, (-1036), fieldTypeRational0, (-1036), (-1036), (byte[]) null, byteOrder0, 77);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3), (-3), fieldTypeShort0, (-3), (-3), byteArray0, byteOrder0, (-3));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(107, 107, fieldTypeShort0, 107, 107, byteArray0, byteOrder0, 107);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(29, 29, fieldTypeShort0, 29, 29, (byte[]) null, byteOrder0, 29);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-3032), (-3032), fieldTypeRational0, (-3032), (-3032), byteArray0, byteOrder0, (-3032));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[96];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-3730), (FieldType) null, 1780L, (-3730), byteArray0, byteOrder0, (-3730));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 50, 50, (byte[]) null, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-5367), (-5367), fieldTypeShort0, (-5367), (-5367), byteArray0, byteOrder0, (-5367));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(45, 45, (FieldType) null, 45, 45, byteArray0, byteOrder0, 45);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3), (-3), fieldTypeShort0, (-3), (-3), byteArray0, byteOrder0, (-3));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(77, 77, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 77);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[41];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50686, 50686, fieldTypeAscii0, (-784L), 50686, byteArray0, byteOrder0, 50686);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(517, 517, fieldTypeAscii0, (-517L), 2935L, byteArray0, (ByteOrder) null, 0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("nX|VTJ*z&`");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "org.apache.commons.imaging.formats.tiff.TiffField");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(38, 38, fieldTypeShort0, 38, 38, byteArray0, byteOrder0, 38);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2611, 49, fieldTypeShort0, 1L, 654L, byteArray0, byteOrder0, (-1804));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2193, 2193, fieldTypeShort0, (-3144L), 21, byteArray0, byteOrder0, 21);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(75, (-1824), fieldTypeRational0, 1L, (-1824), byteArray0, byteOrder0, 75);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(241, 50, (FieldType) null, (byte)124, 66842L, byteArray0, (ByteOrder) null, 50);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("nX|VTJ*z&`");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-619), 325, fieldTypeDouble0, 0, (-1L), byteArray0, (ByteOrder) null, (-619));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-619), tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals((-619), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(325, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(107, 107, fieldTypeShort0, 107, 107, byteArray0, byteOrder0, 107);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(107, tiffField0.getOffset());
      assertEquals(107, tiffField0.getDirectoryType());
      assertEquals(107, tiffField0.getTag());
      assertEquals(107, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(65535, 50, fieldTypeLong0, 50, (-1356), byteArray0, byteOrder0, (byte)46);
      tiffField0.getByteOrder();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(46, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-1356), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeFloat0, 0L, 36, (byte[]) null, byteOrder0, 36);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50, 65535, (FieldType) null, 50, 255L, byteArray0, byteOrder0, (-1978));
      tiffField0.getFieldType();
      assertEquals(255, tiffField0.getOffset());
      assertEquals((-1978), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(40093, "");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-532), 517, fieldTypeFloat0, 517, 2440L, byteArray0, (ByteOrder) null, 22);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-532), tiffField0.getTag());
      assertEquals(517, int0);
      assertEquals(2440, tiffField0.getOffset());
      assertEquals(22, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[200];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1829), 1532, fieldTypeFloat0, (-912L), 1899L, byteArray0, (ByteOrder) null, 3758);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[22];
      TiffField tiffField0 = new TiffField(37520, (byte) (-33), fieldTypeShort0.SLONG, 0L, 0L, byteArray0, byteOrder0, (byte) (-33));
      tiffField0.getOffset();
      assertEquals((-33), tiffField0.getSortHint());
      assertEquals(37520, tiffField0.getTag());
      assertEquals((-33), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[41];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34665, 50686, fieldTypeAscii0, 34665, (-3608L), byteArray0, byteOrder0, 50686);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(34665, tiffField0.getTag());
      assertEquals(1, tagInfo0.length);
      assertEquals(50686, tiffField0.getDirectoryType());
      assertEquals((-3608), tiffField0.getOffset());
      assertEquals(50686, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(749, 50723, fieldTypeAscii0.LONG, (-1332), (-1L), byteArray0, byteOrder0, 20);
      int int0 = tiffField0.getTag();
      assertEquals(20, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(749, int0);
      assertEquals(50723, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(32771, 32771, fieldTypeRational0, (-31L), (byte)0, byteArray0, byteOrder0, 32771);
      long long0 = tiffField0.getCount();
      assertEquals(32771, tiffField0.getSortHint());
      assertEquals(32771, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-31L), long0);
      assertEquals(32771, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2184), 330, (FieldType) null, (-823L), (-584L), byteArray0, byteOrder0, (byte) (-115));
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(70, 70, fieldTypeRational0, 70, 70, byteArray0, byteOrder0, 70);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(70, tiffField0.getDirectoryType());
      assertEquals("70 (0x46: Unknown Tag): ", string0);
      assertEquals(70, tiffField0.getOffset());
      assertEquals(70, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1552, 1552, fieldTypeShort0, 1552, 1552, byteArray0, (ByteOrder) null, 1552);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1L, byteArray0, byteOrder0, 34);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[35];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50686, 50686, fieldTypeLong0, 50686, 50686, byteArray0, byteOrder0, 50686);
      tiffField0.getIntValueOrArraySum();
      assertEquals(50686, tiffField0.getDirectoryType());
      assertEquals(50686, tiffField0.getOffset());
      assertEquals(50686, tiffField0.getSortHint());
      assertEquals(50686, tiffField0.getTag());
      assertEquals(50686L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(39, 39, fieldTypeLong0.FLOAT, 39, 39, byteArray0, byteOrder0, 39);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@570e0398 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(77, 77, fieldTypeRational0, 77, 77, byteArray0, byteOrder0, 77);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(77, tiffField0.getTag());
      assertEquals(77, tiffField0.getOffset());
      assertEquals(77, tiffField0.getSortHint());
      assertEquals(77, tiffField0.getDirectoryType());
      assertEquals(77L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[72];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeLong0.DOUBLE, 31, 31, byteArray0, byteOrder0, 31);
      tiffField0.getDoubleArrayValue();
      assertEquals(31, tiffField0.getDirectoryType());
      assertEquals(31L, tiffField0.getCount());
      assertEquals(31, tiffField0.getOffset());
      assertEquals(31, tiffField0.getTag());
      assertEquals(31, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[34];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(39, 39, fieldTypeLong0.FLOAT, 39, 39, byteArray0, byteOrder0, 39);
      tiffField0.getDoubleArrayValue();
      assertEquals(39, tiffField0.getTag());
      assertEquals(39, tiffField0.getSortHint());
      assertEquals(39L, tiffField0.getCount());
      assertEquals(39, tiffField0.getOffset());
      assertEquals(39, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[96];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeLong0, 31, 31, byteArray0, byteOrder0, 31);
      tiffField0.getDoubleArrayValue();
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(31, tiffField0.getTag());
      assertEquals(31, tiffField0.getOffset());
      assertEquals(31L, tiffField0.getCount());
      assertEquals(31, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(107, 107, fieldTypeShort0, 107, 107, byteArray0, byteOrder0, 107);
      tiffField0.getDoubleArrayValue();
      assertEquals(107, tiffField0.getTag());
      assertEquals(107L, tiffField0.getCount());
      assertEquals(107, tiffField0.getDirectoryType());
      assertEquals(107, tiffField0.getSortHint());
      assertEquals(107, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[200];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(1533, 1533, fieldTypeAscii0, 1533, 1533, byteArray0, byteOrder0, 1533);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@c0f4490 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[19];
      TiffField tiffField0 = new TiffField(77, 77, fieldTypeRational0, 77, 77, byteArray0, byteOrder0, 77);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(77, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals(77, tiffField0.getTag());
      assertEquals(77, tiffField0.getDirectoryType());
      assertEquals(77, tiffField0.getSortHint());
      assertEquals(77L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(77, 77, fieldTypeRational0, 77, 77, byteArray0, byteOrder0, 77);
      tiffField0.getDoubleArrayValue();
      assertEquals(77, tiffField0.getTag());
      assertEquals(77, tiffField0.getDirectoryType());
      assertEquals(77, tiffField0.getSortHint());
      assertEquals(77, tiffField0.getOffset());
      assertEquals(77L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(38, 38, fieldTypeShort0, 1L, 38, byteArray0, byteOrder0, 38);
      tiffField0.getDoubleArrayValue();
      assertEquals(38, tiffField0.getSortHint());
      assertEquals(38, tiffField0.getTag());
      assertEquals(38, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(38, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[72];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeLong0.DOUBLE, 31, 31, byteArray0, byteOrder0, 31);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@5d0ce4a3 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(107, 107, fieldTypeShort0, 107, 107, byteArray0, byteOrder0, 107);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(107, tiffField0.getTag());
      assertEquals(107, tiffField0.getSortHint());
      assertEquals(107L, tiffField0.getCount());
      assertEquals(107, tiffField0.getDirectoryType());
      assertEquals(107, tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[35];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1552, 1552, fieldTypeLong0, 1552, 1552, byteArray0, (ByteOrder) null, 1552);
      tiffField0.getIntArrayValue();
      assertEquals(1552L, tiffField0.getCount());
      assertEquals(1552, tiffField0.getSortHint());
      assertEquals(1552, tiffField0.getTag());
      assertEquals(1552, tiffField0.getOffset());
      assertEquals(1552, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(97, 97, fieldTypeRational0, 97, 97, byteArray0, byteOrder0, 97);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(77, 77, fieldTypeRational0, 77, 77, byteArray0, byteOrder0, 77);
      tiffField0.getIntArrayValue();
      assertEquals(77, tiffField0.getOffset());
      assertEquals(77, tiffField0.getDirectoryType());
      assertEquals(77, tiffField0.getTag());
      assertEquals(77, tiffField0.getSortHint());
      assertEquals(77L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, (-339));
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-339), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[41];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50686, 1335, fieldTypeAscii0, 0L, 1335, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getStringValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1335, tiffField0.getOffset());
      assertEquals(50686, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(1335, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(77, 77, fieldTypeRational0, 77, 77, byteArray0, byteOrder0, 77);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@499abba4
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50, 65535, (FieldType) null, 50, 255L, byteArray0, byteOrder0, (-1978));
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x32)", string0);
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(255, tiffField0.getOffset());
      assertEquals((-1978), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[20];
      TiffField tiffField0 = new TiffField(50740, 50740, fieldTypeShort0, 50740, 50740, byteArray0, (ByteOrder) null, 50740);
      String string0 = tiffField0.getTagName();
      assertEquals(50740, tiffField0.getDirectoryType());
      assertEquals(50740, tiffField0.getSortHint());
      assertEquals(50740, tiffField0.getTag());
      assertEquals("DNGPrivateData", string0);
      assertEquals(50740, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeRational0, 33, 33, byteArray0, byteOrder0, 33);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(39, 39, fieldTypeLong0.FLOAT, 39, 39, byteArray0, byteOrder0, 39);
      String string0 = tiffField0.toString();
      assertEquals(39, tiffField0.getOffset());
      assertEquals("39 (0x27: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0 (39 Float)", string0);
      assertEquals(39, tiffField0.getDirectoryType());
      assertEquals(39, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[163];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1, "mX6ds");
      TiffField tiffField0 = new TiffField(1, 34785, fieldTypeByte0, 34785, 34785, byteArray0, byteOrder0, 34785);
      String string0 = tiffField0.getValueDescription();
      assertEquals(34785, tiffField0.getOffset());
      assertEquals(34785, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(34785L, tiffField0.getCount());
      assertEquals(34785, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(840, "org.apache.commons.imaging.formats.tiff.TiffField");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0.UNDEFINED, 840, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(840L, tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[35];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50686, 1165, fieldTypeLong0.DOUBLE, 1165, (-2045L), byteArray0, byteOrder0, 37);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50686, tiffField0.getTag());
      assertEquals(37, tiffField0.getSortHint());
      assertEquals((-2045), tiffField0.getOffset());
      assertEquals(1165L, tiffField0.getCount());
      assertEquals(1165, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50709, 50709, fieldTypeLong0, 50709, 50709, byteArray0, byteOrder0, 50709);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50709, tiffField0.getOffset());
      assertEquals(50709L, tiffField0.getCount());
      assertEquals(50709, tiffField0.getTag());
      assertEquals(50709, tiffField0.getDirectoryType());
      assertEquals(50709, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[221];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(21, (-1717986885), fieldTypeFloat0, (-1717986885), 21, byteArray0, (ByteOrder) null, 21);
      assertEquals(1717987052, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getValueDescription();
      assertEquals(21, tiffField0.getSortHint());
      assertEquals((-1717986885), tiffField0.getDirectoryType());
      assertEquals((-1717986885L), tiffField0.getCount());
      assertEquals(21, tiffField0.getTag());
      assertEquals(21, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[176];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(972, 1827, fieldTypeShort0, 972, 972, byteArray0, byteOrder0, 972);
      String string0 = tiffField0.getValueDescription();
      assertEquals(972, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(972L, tiffField0.getCount());
      assertEquals(1944, tiffField0.getBytesLength());
      assertEquals(1827, tiffField0.getDirectoryType());
      assertEquals(972, tiffField0.getTag());
      assertEquals(972, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(34800, (-1789), fieldTypeFloat0.SLONG, 34800, (-1789), byteArray0, (ByteOrder) null, 34800);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(139200, tiffField0.getBytesLength());
      assertEquals(34800, tiffField0.getSortHint());
      assertEquals(34800, tiffField0.getTag());
      assertEquals((-1789), tiffField0.getOffset());
      assertEquals((-1789), tiffField0.getDirectoryType());
      assertEquals(34800L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[58];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (-3287), fieldTypeAscii0, 4286, (-3287), byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-3287), tiffField0.getDirectoryType());
      assertEquals(4286, tiffField0.getBytesLength());
      assertEquals((-3287), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 50, 50, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(28, (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, 28, fieldTypeAscii0, 28, 28, byteArray0, byteOrder0, 28);
      tiffField0.toString();
      assertEquals(28, tiffField0.getTag());
      assertEquals(28, tiffField0.getBytesLength());
      assertEquals(28, tiffField0.getDirectoryType());
      assertEquals(28L, tiffField0.getCount());
      assertEquals(28, tiffField0.getOffset());
      assertEquals(28, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      byte[] byteArray0 = new byte[189];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-562), fieldTypeLong0, 4L, 0L, byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)51, 2144917956);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-562), tiffField0.getDirectoryType());
      assertNull(string0);
      assertFalse(tiffField0.isLocalValue());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(73, 0, fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(73, (byte)49);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ", string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(73, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[173];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1717986904), (-1717986904), fieldTypeFloat0, (-1717986904), (-1717986904), byteArray0, (ByteOrder) null, (-1717986904));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1717986904), tiffField0.getOffset());
      assertEquals((-1717986904), tiffField0.getTag());
      assertEquals((-1717986904), tiffField0.getDirectoryType());
      assertEquals((-1717986904), tiffField0.getSortHint());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2394, 2394, (FieldType) null, 1803L, 2394, byteArray0, byteOrder0, 2932);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(105, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(105, (-107), fieldTypeShort0, 105, (-107), byteArray0, byteOrder0, (-107));
      int int0 = tiffField0.getSortHint();
      assertEquals(105, tiffField0.getTag());
      assertEquals((-107), tiffField0.getDirectoryType());
      assertEquals((-107), int0);
      assertEquals(210, tiffField0.getBytesLength());
      assertEquals((-107), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      byte[] byteArray0 = new byte[209];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(28, (-1717986885), fieldTypeFloat0, (-1717986885), (-1717986885), byteArray0, (ByteOrder) null, 28);
      String string0 = tiffField0.toString();
      assertEquals((-1717986885), tiffField0.getOffset());
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (-1717986885 Float)", string0);
      assertEquals((-1717986885), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(278, 258, fieldTypeRational0, 278, 70, (byte[]) null, byteOrder0, 70);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1552, 1552, fieldTypeShort0, 1552, 1552, byteArray0, (ByteOrder) null, 1552);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1552, tiffField0.getTag());
      assertEquals(1552, tiffField0.getSortHint());
      assertNotNull(tiffElement0);
      assertEquals(1552, tiffField0.getDirectoryType());
      assertEquals(1552L, tiffElement0.offset);
  }
}
