/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 19:10:57 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(609, (byte)57, fieldTypeLong0, 344L, (-2101L), byteArray0, byteOrder0, (byte)57);
      String string0 = tiffField0.getValueDescription();
      assertEquals(57, tiffField0.getDirectoryType());
      assertEquals(57, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-2101), tiffField0.getOffset());
      assertEquals(609, tiffField0.getTag());
      assertEquals(1376, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(28, (-1), fieldTypeAscii0.DOUBLE, (byte)16, (byte) (-22), byteArray0, byteOrder0, (byte)88);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-22), tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
      assertEquals(28, tagInfo0.tag);
      assertEquals(88, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1982292597), (-1982292597), fieldTypeRational0, (byte)0, (-1677L), byteArray0, byteOrder0, (-1982292597));
      int int0 = tiffField0.getTag();
      assertEquals((-1982292597), tiffField0.getDirectoryType());
      assertEquals((-1677), tiffField0.getOffset());
      assertEquals((-1982292597), int0);
      assertEquals((-1982292597), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1437, fieldTypeAscii0, 0, 1437, byteArray0, byteOrder0, (byte)37);
      String string0 = tiffField0.getStringValue();
      assertEquals(1437, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1437, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(37, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(4, (byte)0, fieldTypeShort0, 4, 2304L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(2304, tiffField0.getOffset());
      assertEquals(4, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1545), (-1545), fieldTypeByte0, (-1545), (-1545), byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getSortHint();
      assertEquals((-1545), tiffField0.getDirectoryType());
      assertEquals((-1545), tiffField0.getTag());
      assertEquals((-1545), tiffField0.getOffset());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2962, 2962, fieldTypeFloat0, 0L, 0L, byteArray0, byteOrder0, (byte)37);
      tiffField0.getOffset();
      assertEquals(2962, tiffField0.getTag());
      assertEquals(37, tiffField0.getSortHint());
      assertEquals(2962, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(448, 320, fieldTypeByte0, 448, 320, byteArray0, byteOrder0, 963);
      int int0 = tiffField0.getOffset();
      assertEquals(963, tiffField0.getSortHint());
      assertEquals(448, tiffField0.getTag());
      assertEquals(320, int0);
      assertEquals(320, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-51);
      byteArray0[4] = (byte)3;
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeRational0, 65L, (-6608L), byteArray0, byteOrder0, (-1717986917));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getSortHint());
      assertEquals((-6608), tiffField0.getOffset());
      assertEquals(68, int0);
      assertEquals(520, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte) (-48);
      TiffField tiffField0 = new TiffField((byte)87, 2073432487, fieldTypeShort0, 285, 285, byteArray0, byteOrder0, (byte)57);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(87, tiffField0.getTag());
      assertEquals(285, tiffField0.getOffset());
      assertEquals(57, tiffField0.getSortHint());
      assertEquals(570, tiffField0.getBytesLength());
      assertEquals((-12288), int0);
      assertEquals(2073432487, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[23];
      byteArray0[0] = (byte) (-82);
      TiffField tiffField0 = new TiffField(262, 0, fieldTypeShort0, 1L, 1885L, byteArray0, byteOrder0, (byte) (-82));
      tiffField0.getIntValue();
      assertEquals(262, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1885, tiffField0.getOffset());
      assertEquals((-82), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      TiffField tiffField0 = new TiffField(1802, 34021, fieldTypeByte0, 1, (-2147483648L), byteArray0, byteOrder0, 326);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(34021, tiffField0.getDirectoryType());
      assertEquals(326, tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(1802, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)57, 35, fieldTypeLong0, (byte)57, 8592L, byteArray0, byteOrder0, 1169);
      tiffField0.getFieldTypeName();
      assertEquals(57, tiffField0.getTag());
      assertEquals(8592, tiffField0.getOffset());
      assertEquals(1169, tiffField0.getSortHint());
      assertEquals(35, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1494), "");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(102, 86, fieldTypeByte0, (-1494), 137437598976L, byteArray0, byteOrder0, (byte)27);
      tiffField0.getFieldTypeName();
      assertEquals(102, tiffField0.getTag());
      assertEquals((-1354496), tiffField0.getOffset());
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-75), 7, (FieldType) null, (-75), 251L, byteArray0, byteOrder0, (byte) (-37));
      tiffField0.getFieldType();
      assertEquals((-75), tiffField0.getTag());
      assertEquals(251, tiffField0.getOffset());
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals((-37), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2697, 0, fieldTypeAscii0, 2697, (-1016L), byteArray0, byteOrder0, (byte)1);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1016), tiffField0.getOffset());
      assertEquals(2697, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1365), "Unknown: ");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1365), (-1365), fieldTypeDouble0, 4L, (-1365), byteArray0, (ByteOrder) null, (byte) (-33));
      tiffField0.getFieldType();
      assertEquals((-1365), tiffField0.getDirectoryType());
      assertEquals((-1365), tiffField0.getOffset());
      assertEquals((-33), tiffField0.getSortHint());
      assertEquals((-1365), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-1), 1, fieldTypeShort0, 1, 54, byteArray0, (ByteOrder) null, 54);
      tiffField0.getDoubleValue();
      assertEquals(54, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(54, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, (-1578), fieldTypeLong0.SRATIONAL, (byte)1, (-3434L), byteArray0, byteOrder0, 1174);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1174, tiffField0.getSortHint());
      assertEquals((-3434), tiffField0.getOffset());
      assertEquals((-1578), tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-115);
      TiffField tiffField0 = new TiffField(1802, 34021, fieldTypeByte0, 1, (-2147483648L), byteArray0, byteOrder0, 326);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1802, tiffField0.getTag());
      assertEquals(326, tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(34021, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2, (byte)0, fieldTypeRational0, 4L, (-13), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(2, tiffField0.getTag());
      assertEquals((-13), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeShort0, 0L, 1L, byteArray0, byteOrder0, (byte)38);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1), int0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(38, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1982292597), (-1982292597), fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, (-1982292597));
      tiffField0.getCount();
      assertEquals((-1982292597), tiffField0.getTag());
      assertEquals((-1982292597), tiffField0.getSortHint());
      assertEquals((-1982292597), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2429, 3562, fieldTypeByte0, (byte) (-52), (-515L), byteArray0, byteOrder0, 2);
      tiffField0.getCount();
      assertEquals((-515), tiffField0.getOffset());
      assertEquals(3562, tiffField0.getDirectoryType());
      assertEquals(2429, tiffField0.getTag());
      assertEquals(2, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4861, 4861, fieldTypeDouble0, 0L, 0L, byteArray0, byteOrder0, 50968);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, int0);
      assertEquals(50968, tiffField0.getSortHint());
      assertEquals(4861, tiffField0.getDirectoryType());
      assertEquals(4861, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1893), 1363, fieldTypeRational0, (-1893), (-229L), byteArray0, byteOrder0, 86);
      int int0 = tiffField0.getBytesLength();
      assertEquals(1363, tiffField0.getDirectoryType());
      assertEquals(86, tiffField0.getSortHint());
      assertEquals((-1893), tiffField0.getTag());
      assertEquals((-229), tiffField0.getOffset());
      assertEquals((-15144), int0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeLong0.UNDEFINED, 0L, 1L, byteArray0, (ByteOrder) null, 129);
      tiffField0.getByteOrder();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(129, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(448, 320, fieldTypeByte0, 448, 320, byteArray0, byteOrder0, 963);
      tiffField0.getByteOrder();
      assertEquals(448, tiffField0.getTag());
      assertEquals(320, tiffField0.getOffset());
      assertEquals(963, tiffField0.getSortHint());
      assertEquals(320, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(86, (-1893), fieldTypeRational0, 86, 0L, byteArray0, byteOrder0, (-1893));
      tiffField0.getByteArrayValue();
      assertEquals((-1893), tiffField0.getSortHint());
      assertEquals((-1893), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(688, tiffField0.getBytesLength());
      assertEquals(86, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, (-3765), 0, byteArray0, byteOrder0, 846);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1952, 1952, (FieldType) null, 1952, 1952, byteArray0, byteOrder0, (-1498));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2142657842, 50731, fieldTypeAscii0, (-1016L), (-2439L), byteArray0, byteOrder0, (byte) (-19));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2426), (-490), fieldTypeFloat0.DOUBLE, (-754L), (-224L), byteArray0, byteOrder0, 854);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(262, 40963, fieldTypeRational0, 50, 86, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-1982292597), fieldTypeRational0, (-222L), (-773L), byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-1), 1, fieldTypeShort0, 1, 86, byteArray0, (ByteOrder) null, 86);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-921), (-72), fieldTypeShort0, (-72), 319L, (byte[]) null, byteOrder0, (-72));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1893), 86, fieldTypeRational0, (-1L), 2304L, byteArray0, byteOrder0, 494);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-219), 1382, fieldTypeLong0, (-1L), (-1L), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1893), 1363, fieldTypeRational0, (-1893), (-229L), byteArray0, byteOrder0, 86);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1174, 340, fieldTypeLong0, (-3434L), (-3434L), byteArray0, byteOrder0, (byte)0);
      MockFileWriter mockFileWriter0 = new MockFileWriter("Y1E$~GS7$pC", false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(941, 2667, fieldTypeDouble0, 941, 2667, byteArray0, (ByteOrder) null, (byte) (-92));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(86, 86, fieldTypeRational0, 86, 86, byteArray0, byteOrder0, 86);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1450, (byte)73, fieldTypeRational0, 1074L, 448L, byteArray0, byteOrder0, 68);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(448, tiffField0.getOffset());
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(73, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(1450, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3619, 3619, fieldTypeLong0, 3619, 278L, byteArray0, byteOrder0, 0);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(14476, tiffField0.getBytesLength());
      assertEquals(3619, tiffField0.getTag());
      assertEquals(278, tiffField0.getOffset());
      assertEquals(3619, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(32844, 0, fieldTypeByte0, 0, 0L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(32844, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 2304L, 4L, byteArray0, byteOrder0, (byte) (-58));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, int0);
      assertEquals((-58), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(86, (-1893), fieldTypeRational0, 86, 0L, byteArray0, byteOrder0, (-1893));
      MockFileWriter mockFileWriter0 = new MockFileWriter("z35@Cx]g");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(86, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1893), tiffField0.getDirectoryType());
      assertEquals((-1893), tiffField0.getSortHint());
      assertEquals(688, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1982292597), (-1982292597), fieldTypeRational0, (byte)0, (-1677L), byteArray0, byteOrder0, (-1982292597));
      tiffField0.getValue();
      assertEquals((-1677), tiffField0.getOffset());
      assertEquals((-1982292597), tiffField0.getDirectoryType());
      assertEquals((-1982292597), tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1982292597), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1252, 7, fieldTypeRational0, (-594L), (-594L), byteArray0, byteOrder0, 48131);
      int int0 = tiffField0.getOffset();
      assertEquals(1252, tiffField0.getTag());
      assertEquals((-594), int0);
      assertEquals(48131, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(86, 86, fieldTypeAscii0, 86, 86, byteArray0, byteOrder0, 2298);
      tiffField0.getTagInfo();
      assertEquals(86, tiffField0.getTag());
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals(2298, tiffField0.getSortHint());
      assertEquals(86, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 65535, fieldTypeRational0, 2293L, (-2080L), byteArray0, byteOrder0, (-1982292597));
      int int0 = tiffField0.getTag();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-2080), tiffField0.getOffset());
      assertEquals((-1982292597), tiffField0.getSortHint());
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(86, 86, fieldTypeRational0, 86, 86, byteArray0, byteOrder0, (-1893));
      tiffField0.getCount();
      assertEquals(86, tiffField0.getTag());
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals((-1893), tiffField0.getSortHint());
      assertEquals(86, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(262, 40963, fieldTypeRational0, 50, 86, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getBytesLength();
      assertEquals(86, tiffField0.getOffset());
      assertEquals(40963, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(400, int0);
      assertEquals(262, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1802, 34021, fieldTypeByte0, 1, (-2147483648L), byteArray0, byteOrder0, 326);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(34021, tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals("1802 (0x70a: Unknown Tag): ", string0);
      assertEquals(326, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(136, 136, fieldTypeRational0, 136, 136, byteArray0, byteOrder0, (-1893));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(941, 942, fieldTypeRational0.LONG, 1L, 941, byteArray0, byteOrder0, (-598));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals(941, tiffField0.getOffset());
      assertEquals(941, tiffField0.getTag());
      assertEquals(942, tiffField0.getDirectoryType());
      assertEquals((-598), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "");
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, (int) (byte)6);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-3531), 0, fieldTypeLong0, 208L, 1434L, byteArray0, byteOrder0, (-1665));
      tiffField0.getIntValueOrArraySum();
      assertEquals(208L, tiffField0.getCount());
      assertEquals(832, tiffField0.getBytesLength());
      assertEquals((-1665), tiffField0.getSortHint());
      assertEquals((-3531), tiffField0.getTag());
      assertEquals(1434, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(136, 518, fieldTypeRational0.BYTE, 136, 136, byteArray0, byteOrder0, 518);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@6882a0c5 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(941, 942, fieldTypeRational0.IFD, 1L, 941, byteArray0, byteOrder0, (-598));
      tiffField0.getIntValueOrArraySum();
      assertEquals(941, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-598), tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(941, tiffField0.getTag());
      assertEquals(942, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(86, (-2146979661), fieldTypeRational0, (-2146979661), 86, byteArray0, byteOrder0, (-2146979661));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldTypeDouble0, 34026, 32L, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(272208, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(32, tiffField0.getOffset());
      assertEquals(34026L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)0, 2962, fieldTypeFloat0, ']', (byte)86, byteArray0, (ByteOrder) null, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(372, tiffField0.getBytesLength());
      assertEquals(93L, tiffField0.getCount());
      assertEquals(2962, tiffField0.getDirectoryType());
      assertEquals(86, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0, 344L, 344L, byteArray0, byteOrder0, 33550);
      tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(1376, tiffField0.getBytesLength());
      assertEquals(344, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(344L, tiffField0.getCount());
      assertEquals(33550, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(86, (-167), fieldTypeShort0, 104, 147456L, byteArray0, byteOrder0, 86);
      tiffField0.getDoubleArrayValue();
      assertEquals(104L, tiffField0.getCount());
      assertEquals((-167), tiffField0.getDirectoryType());
      assertEquals(208, tiffField0.getBytesLength());
      assertEquals(86, tiffField0.getTag());
      assertEquals(147456, tiffField0.getOffset());
      assertEquals(86, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1572, 104, fieldTypeRational0.SHORT, 1371L, 104, byteArray0, byteOrder0, 34021);
      tiffField0.getDoubleArrayValue();
      assertEquals(104, tiffField0.getOffset());
      assertEquals(1572, tiffField0.getTag());
      assertEquals(1371L, tiffField0.getCount());
      assertEquals(2742, tiffField0.getBytesLength());
      assertEquals(104, tiffField0.getDirectoryType());
      assertEquals(34021, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2147367162, (-2126), fieldTypeRational0, 86L, (-2147483648L), byteArray0, byteOrder0, 50936);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-2126), tiffField0.getDirectoryType());
      assertEquals(50936, tiffField0.getSortHint());
      assertEquals(2147367162, tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(688, tiffField0.getBytesLength());
      assertEquals(86L, tiffField0.getCount());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[23];
      TiffField tiffField0 = new TiffField(262, 0, fieldTypeShort0, 1L, 1885L, byteArray0, byteOrder0, (byte) (-82));
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-82), tiffField0.getSortHint());
      assertEquals(262, tiffField0.getTag());
      assertEquals(1885, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34026, 136, fieldTypeRational0.ASCII, 136, 0L, byteArray0, byteOrder0, (-1717986917));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@189d697f for: 34026 (0x84ea: BackgroundColorValue): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[212];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "");
      TiffField tiffField0 = new TiffField((-2958), 1900, fieldTypeFloat0, 1355, (-3451L), byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@37f87a34 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((byte)0, (byte)19, fieldTypeShort0, 1642L, (byte)28, byteArray0, (ByteOrder) null, (-1908874352));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(3284, tiffField0.getBytesLength());
      assertEquals(1642L, tiffField0.getCount());
      assertEquals(28, tiffField0.getOffset());
      assertEquals((-1908874352), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3789), (short)75, fieldTypeShort0, 1507, 0L, byteArray0, byteOrder0, (-2331));
      tiffField0.getIntArrayValue();
      assertEquals(75, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(3014, tiffField0.getBytesLength());
      assertEquals(1507L, tiffField0.getCount());
      assertEquals((-2331), tiffField0.getSortHint());
      assertEquals((-3789), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(86, 86, fieldTypeRational0, 86, 86, byteArray0, byteOrder0, 86);
      tiffField0.getIntArrayValue();
      assertEquals(86L, tiffField0.getCount());
      assertEquals(86, tiffField0.getTag());
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals(86, tiffField0.getSortHint());
      assertEquals(86, tiffField0.getOffset());
      assertEquals(688, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(609, (byte)57, fieldTypeLong0, 344L, (-2101L), byteArray0, byteOrder0, (byte)57);
      tiffField0.getIntArrayValue();
      assertEquals(1376, tiffField0.getBytesLength());
      assertEquals(344L, tiffField0.getCount());
      assertEquals(609, tiffField0.getTag());
      assertEquals(57, tiffField0.getDirectoryType());
      assertEquals((-2101), tiffField0.getOffset());
      assertEquals(57, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(136, (-1908874352), fieldTypeRational0.IFD, 1L, (-2888L), byteArray0, byteOrder0, 1227);
      tiffField0.getIntArrayValue();
      assertEquals(136, tiffField0.getTag());
      assertEquals(1227, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-2888), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-1908874352), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-61), (-61), fieldTypeRational0, 86, 86, byteArray0, byteOrder0, (-1893));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)40;
      byteArray0[1] = (byte)40;
      byteArray0[2] = (byte)40;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2141186041, "Y=*mDJL{n>BQ^%6,r)");
      TiffField tiffField0 = new TiffField((byte)40, (byte)40, fieldTypeAscii0, 448L, (-24856L), byteArray0, byteOrder0, (byte)40);
      String string0 = tiffField0.getStringValue();
      assertEquals(40, tiffField0.getTag());
      assertEquals(40, tiffField0.getSortHint());
      assertEquals((-24856), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(40, tiffField0.getDirectoryType());
      assertEquals(448, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2141186041, "Y=*mDJL{n>BQ^%6,r)");
      TiffField tiffField0 = new TiffField((byte)40, (byte)40, fieldTypeAscii0, 448L, (-24856L), byteArray0, byteOrder0, (byte)40);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@621710
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-61), (-61), fieldTypeRational0, 86, 86, byteArray0, byteOrder0, (-1893));
      String string0 = tiffField0.getTagName();
      assertEquals((-61), tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0xffffffc3)", string0);
      assertEquals((-1893), tiffField0.getSortHint());
      assertEquals(86, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, (-1), fieldTypeDouble0, (-3627L), 255L, byteArray0, byteOrder0, (byte) (-1));
      String string0 = tiffField0.getTagName();
      assertEquals("InteroperabilityIndex", string0);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(89, 32997, fieldTypeAscii0, (-1276L), (-1276L), byteArray0, byteOrder0, 317);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "_u/c<.it[w:_");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[14];
      TiffField tiffField0 = new TiffField(50732, (byte)40, fieldTypeFloat0, 2304L, 50732, byteArray0, (ByteOrder) null, (-271));
      tiffField0.dump();
      assertEquals(40, tiffField0.getDirectoryType());
      assertEquals(50732, tiffField0.getOffset());
      assertEquals(2304L, tiffField0.getCount());
      assertEquals(50732, tiffField0.getTag());
      assertEquals((-271), tiffField0.getSortHint());
      assertEquals(9216, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(86, 72, fieldTypeByte0, 72, 86, byteArray0, byteOrder0, 1038);
      String string0 = tiffField0.getValueDescription();
      assertEquals(86, tiffField0.getTag());
      assertEquals(72L, tiffField0.getCount());
      assertEquals(72, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(86, tiffField0.getOffset());
      assertEquals(72, tiffField0.getDirectoryType());
      assertEquals(1038, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[212];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "");
      TiffField tiffField0 = new TiffField((-2958), 1900, fieldTypeFloat0, 1355, (-3451L), byteArray0, byteOrder0, 0);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1900, tiffField0.getDirectoryType());
      assertEquals(5420, tiffField0.getBytesLength());
      assertEquals("-2958 (0xfffff472: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (1355 )", string0);
      assertEquals((-3451), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[35];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(17, (-118), fieldTypeDouble0, 17, 6153L, byteArray0, byteOrder0, 48322);
      String string0 = tiffField0.toString();
      assertEquals((-118), tiffField0.getDirectoryType());
      assertEquals("17 (0x11: GPSImgDirection): 0.0, 0.0, 0.0, 0.0 (17 Double)", string0);
      assertEquals(6153, tiffField0.getOffset());
      assertEquals(48322, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[54];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1717986918, 1770, fieldTypeByte0, 1770, 1770, byteArray0, byteOrder0, 73);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(1770L, tiffField0.getCount());
      assertEquals(1770, tiffField0.getBytesLength());
      assertEquals(1770, tiffField0.getDirectoryType());
      assertEquals(1717986918, tiffField0.getTag());
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(1770, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[212];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(26, 665, fieldTypeLong0, 981, 358L, byteArray0, byteOrder0, (-2423));
      String string0 = tiffField0.getValueDescription();
      assertEquals(981L, tiffField0.getCount());
      assertEquals(3924, tiffField0.getBytesLength());
      assertEquals((-2423), tiffField0.getSortHint());
      assertEquals(26, tiffField0.getTag());
      assertEquals(665, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(358, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[418];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1309, 1309, fieldTypeDouble0, 1309, 1309, byteArray0, byteOrder0, 1309);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1309L, tiffField0.getCount());
      assertEquals(1309, tiffField0.getTag());
      assertEquals(10472, tiffField0.getBytesLength());
      assertEquals(1309, tiffField0.getSortHint());
      assertEquals(1309, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1309, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[114];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2325, 2325, fieldTypeShort0, 2325, 2325, byteArray0, byteOrder0, 2325);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2325L, tiffField0.getCount());
      assertEquals(2325, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(4650, tiffField0.getBytesLength());
      assertEquals(2325, tiffField0.getSortHint());
      assertEquals(2325, tiffField0.getTag());
      assertEquals(2325, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[54];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(73, 73, fieldTypeShort0, 73, 73, byteArray0, byteOrder0, 73);
      String string0 = tiffField0.toString();
      assertEquals(146, tiffField0.getBytesLength());
      assertEquals(73, tiffField0.getOffset());
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(73, tiffField0.getDirectoryType());
      assertEquals("73 (0x49: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (73 Short)", string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[62];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(52, "@m!I7#SDX0<)(OPe");
      TiffField tiffField0 = new TiffField(17, 50934, fieldTypeAscii0, 52, 17, byteArray0, byteOrder0, 50934);
      tiffField0.toString();
      assertEquals(52L, tiffField0.getCount());
      assertEquals(52, tiffField0.getBytesLength());
      assertEquals(50934, tiffField0.getSortHint());
      assertEquals(17, tiffField0.getOffset());
      assertEquals(17, tiffField0.getTag());
      assertEquals(50934, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-19);
      byteArray0[1] = (byte) (-36);
      byteArray0[2] = (byte)1;
      byteArray0[3] = (byte)56;
      byteArray0[4] = (byte) (-19);
      byteArray0[5] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2697, 0, fieldTypeAscii0, 2697, (-1016L), byteArray0, byteOrder0, (byte)1);
      tiffField0.toString();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2697, tiffField0.getTag());
      assertEquals(2697, tiffField0.getBytesLength());
      assertEquals(2697L, tiffField0.getCount());
      assertEquals((-1016), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147398066), (-2147398066), fieldTypeFloat0, 1L, 1L, byteArray0, byteOrder0, (-1396));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1396), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-2147398066), tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-2147398066), tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-1), 1, fieldTypeShort0, 1, 54, byteArray0, (ByteOrder) null, 54);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1), tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(54, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(54, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-219), 1382, fieldTypeLong0, (-1L), (-1L), byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)57, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-219), tiffField0.getTag());
      assertNull(string0);
      assertEquals(1382, tiffField0.getDirectoryType());
      assertEquals((-4), tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(2, (byte)0, fieldTypeRational0, 4L, (-13), byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2, (-386));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SRational", string0);
      assertNotNull(string0);
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
      assertEquals((-13), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[35];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1, (-1134), fieldTypeLong0, 1, 1, byteArray0, byteOrder0, (-227));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1134), tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertTrue(boolean0);
      assertEquals((-227), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-314), (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2160, 2160, fieldTypeAscii0, 2160, 7460L, (byte[]) null, byteOrder0, 36);
      tiffField0.getFieldTypeName();
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(2160, tiffField0.getDirectoryType());
      assertEquals(2160, tiffField0.getTag());
      assertEquals(2160L, tiffField0.getCount());
      assertEquals(7460, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(86, 86, fieldTypeRational0, 86, 86, byteArray0, byteOrder0, (-1893));
      int int0 = tiffField0.getSortHint();
      assertEquals(86, tiffField0.getOffset());
      assertEquals((-1893), int0);
      assertEquals(86, tiffField0.getTag());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(86, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(28, (-1), fieldTypeAscii0.DOUBLE, (byte)16, (byte) (-22), byteArray0, byteOrder0, (byte)88);
      String string0 = tiffField0.toString();
      assertEquals(88, tiffField0.getSortHint());
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (16 Double)", string0);
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-22), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 2304L, 4L, byteArray0, byteOrder0, (byte) (-58));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(50, tiffField0.getTag());
      assertEquals((-58), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(4L, tiffElement0.offset);
      assertEquals(2304L, tiffField0.getCount());
      assertNotNull(tiffElement0);
  }
}
