/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 01:23:07 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassReader classReader0 = new ClassReader("java/lang/String");
      classReader0.getInterfaces();
      classReader0.getClassName();
      classReader0.getClassName();
      classReader0.getClassName();
      classReader0.getInterfaces();
      int int0 = (-786);
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      char[] charArray0 = new char[3];
      charArray0[0] = '1';
      charArray0[1] = 'Z';
      charArray0[2] = 'Z';
      classReader0.readConst(2, charArray0);
      classAdapter0.visitField(2, "D.I],#xQ8.Z\u0002(xk/", "mg1dI2rBopeJ@V", "java/lang/String", "");
      classAdapter0.visitInnerClass("java/lang/String", "D.I],#xQ8.Z\u0002(xk/", "i>qVlUzQp2N", (-840));
      classReader0.accept((ClassVisitor) classAdapter0, 275);
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort((-786));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Type");
      classReader0.getInterfaces();
      int int0 = (-2891);
      ClassWriter classWriter0 = new ClassWriter(280);
      classReader0.accept((ClassVisitor) classWriter0, (-820));
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, (-2891));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Type");
      classReader0.getInterfaces();
      classReader0.getSuperName();
      int int0 = ClassReader.SKIP_CODE;
      classReader0.getClassName();
      int int1 = classReader0.getAccess();
      ClassWriter classWriter0 = new ClassWriter(33);
      classReader0.copyPool(classWriter0);
      classReader0.getClassName();
      int int2 = classReader0.readByte(1);
      assertFalse(int2 == int1);
      
      char[] charArray0 = new char[17];
      charArray0[0] = '8';
      charArray0[1] = 'J';
      // Undeclared exception!
      try { 
        classReader0.readConst(1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "wheel.asm.ClassReader";
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "LineNumberTable");
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 292);
      classReader0.copyPool(classWriter0);
      int int0 = 4096;
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-1712), 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Type");
      classReader0.getInterfaces();
      classReader0.getSuperName();
      int int0 = ClassReader.SKIP_CODE;
      classReader0.getClassName();
      classReader0.getAccess();
      ClassWriter classWriter0 = new ClassWriter(33);
      classReader0.copyPool(classWriter0);
      classReader0.getClassName();
      classReader0.readByte(1);
      char[] charArray0 = new char[2];
      charArray0[0] = '8';
      charArray0[1] = 'J';
      // Undeclared exception!
      try { 
        classReader0.readConst(1, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      String string0 = "org.apache.commons.io.IOCase";
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.IOCase");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1531);
      // Undeclared exception!
      try { 
        classReader0.readClass(1, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassReader classReader0 = new ClassReader("java/lang/String");
      classReader0.getInterfaces();
      classReader0.getClassName();
      classReader0.getClassName();
      classReader0.getClassName();
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      int int0 = (-786);
      ClassWriter classWriter0 = new ClassWriter(2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.visitInnerClass("java/lang/String", "D.I],#xQ8.Z\u0002(xk/", "i>qVlUzQp2N", (-840));
      classReader0.accept((ClassVisitor) classAdapter0, 301);
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort((-786));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Handler");
      // Undeclared exception!
      try { 
        classReader0.getItem((-1422));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1422
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Type");
      int int0 = (-2891);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readConst(91, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Type");
      String string0 = classReader0.getClassName();
      assertEquals("wheel/asm/Type", string0);
      
      classReader0.getAccess();
      ClassWriter classWriter0 = new ClassWriter(33);
      classReader0.copyPool(classWriter0);
      assertEquals(33, classReader0.getAccess());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Type");
      classReader0.getInterfaces();
      classReader0.getSuperName();
      // Undeclared exception!
      try { 
        classReader0.readInt((-2891));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-6);
      byteArray0[1] = (byte)24;
      byte byte0 = (byte)91;
      byteArray0[2] = (byte)91;
      byteArray0[3] = (byte) (-82);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-107);
      byteArray0[6] = (byte) (-1);
      byteArray0[7] = (byte) (-1);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-6), (byte)91);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "";
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 0;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((byte[]) null, 5171, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(pushbackInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Stream closed
         //
         verifyException("java.io.PushbackInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassReader classReader0 = new ClassReader("java/lang/String");
      classReader0.getInterfaces();
      classReader0.getClassName();
      classReader0.getClassName();
      classReader0.getClassName();
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      int int0 = (-786);
      ClassWriter classWriter0 = new ClassWriter(2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.visitInnerClass("java/lang/String", "D.I],#xQ8.Z\u0002(xk/", "i>qVlUzQp2N", (-840));
      classReader0.accept((ClassVisitor) classAdapter0, 275);
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort((-786));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)35;
      byteArray0[1] = (byte)81;
      byteArray0[2] = (byte) (-95);
      byteArray0[3] = (byte) (-3);
      byteArray0[4] = (byte) (-90);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (-317), 292);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false, false, false).when(enumeration0).hasMoreElements();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      SequenceInputStream sequenceInputStream1 = new SequenceInputStream(sequenceInputStream0, sequenceInputStream0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(sequenceInputStream1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.FieldWriter");
      assertEquals(1734, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-2845));
      classReader0.accept((ClassVisitor) classWriter0, 2);
      int int0 = classReader0.readInt(2);
      assertEquals((-1161953280), int0);
      
      classReader0.accept((ClassVisitor) classWriter0, 64);
      short short0 = classReader0.readShort(201);
      assertEquals((short)23, short0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Type");
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(280);
      classReader0.accept((ClassVisitor) classWriter0, 0);
      int int0 = ClassReader.SKIP_CODE;
      classReader0.getClassName();
      classReader0.accept((ClassVisitor) classWriter0, (-2891));
      assertEquals(33, classReader0.getAccess());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)11;
      byteArray0[1] = (byte)19;
      byteArray0[2] = (byte)19;
      byteArray0[3] = (byte)20;
      byteArray0[4] = (byte)74;
      byteArray0[5] = (byte)36;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassReader classReader0 = new ClassReader("java/lang/String");
      classReader0.getInterfaces();
      classReader0.getClassName();
      classReader0.getClassName();
      classReader0.getClassName();
      classReader0.getInterfaces();
      classReader0.getInterfaces();
      int int0 = (-786);
      ClassWriter classWriter0 = new ClassWriter(2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      char[] charArray0 = new char[3];
      charArray0[0] = '1';
      charArray0[1] = 'Z';
      charArray0[2] = '';
      classReader0.readConst(2, charArray0);
      classAdapter0.visitField(2, "D.I],#xQ8.Z\u0002(xk/", "mg1dI2rBopeJ@V", "java/lang/String", "");
      classAdapter0.visitInnerClass("java/lang/String", "D.I],#xQ8.Z\u0002(xk/", "i>qVlUzQp2N", (-840));
      classReader0.accept((ClassVisitor) classAdapter0, 275);
      // Undeclared exception!
      try { 
        classWriter0.newConst((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)39;
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte)23;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte) (-83);
      byteArray0[5] = (byte) (-79);
      byteArray0[6] = (byte)8;
      byteArray0[7] = (byte)24;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 5, (byte)8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = 155;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((byte[]) null, 155, 155);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
