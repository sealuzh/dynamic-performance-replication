/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 08:57:21 GMT 2018
 */

package com.alibaba.fastjson.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.parser.JSONReaderScanner;
import com.alibaba.fastjson.parser.SymbolTable;
import java.io.ByteArrayInputStream;
import java.io.InputStreamReader;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.UnsupportedEncodingException;
import java.util.Calendar;
import java.util.LinkedHashSet;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONReaderScanner_ESTest extends JSONReaderScanner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = 1532;
      PipedReader pipedReader0 = new PipedReader(1532);
      JSONReaderScanner jSONReaderScanner0 = null;
      try {
        jSONReaderScanner0 = new JSONReaderScanner(pipedReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Pipe not connected
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      jSONReaderScanner0.close();
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      char[] charArray0 = new char[7];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("jk%}h7S(~!IX/(&%(G");
      SymbolTable symbolTable0 = new SymbolTable(1577);
      char[] charArray1 = new char[1];
      charArray1[0] = 'k';
      boolean boolean0 = jSONReaderScanner0.charArrayCompare(charArray1);
      assertEquals('j', jSONReaderScanner0.getCurrent());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      jSONReaderScanner0.sub_chars(48, 48);
      char char0 = jSONReaderScanner0.charAt(3862);
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
      assertEquals('\u001A', char0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("-");
      jSONReaderScanner0.tokenName();
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.isEOF();
      char char0 = jSONReaderScanner0.charAt(15);
      assertEquals(2, jSONReaderScanner0.token());
      assertEquals('\u001A', char0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      char char0 = jSONReaderScanner0.charAt(116);
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
      assertEquals('\u001A', char0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char[] charArray0 = new char[3];
      charArray0[0] = '+';
      charArray0[1] = 'V';
      charArray0[2] = '+';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 2801);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.arrayCopy(2801, charArray0, 2801, 2801);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      jSONReaderScanner0.isEOF();
      Locale locale0 = Locale.forLanguageTag("jv#+hs4rdg^`_;<i");
      jSONReaderScanner0.locale = locale0;
      locale0.getExtension('u');
      Locale.setDefault(jSONReaderScanner0.locale);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.sub_chars((-1327), (-1327));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1327
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'm';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 1672);
      jSONReaderScanner0.scanFieldSymbol(charArray0);
      char char0 = jSONReaderScanner0.charAt(2292);
      assertEquals((-1), jSONReaderScanner0.matchStat);
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("%?XZS./h4i9Uu9+w");
      jSONReaderScanner0.stringVal();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("2QrP],1U5cp4");
      jSONReaderScanner0.isEOF();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int int0 = Calendar.SUNDAY;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("$jkR&t]bH8@JbEnQw", 1);
      String string0 = jSONReaderScanner0.stringVal();
      assertEquals("", string0);
      
      String string1 = jSONReaderScanner0.subString(1, 1);
      assertEquals("j", string1);
      assertEquals('$', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      jSONReaderScanner0.charAt(19);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("&P7'fl^Q?ZbH");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("2QrP],1U5cp4");
      jSONReaderScanner0.scanInt('T');
      jSONReaderScanner0.isEOF();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.subString((-2925), (-2925));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2925
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("(");
      Locale locale0 = Locale.TAIWAN;
      jSONReaderScanner0.isEOF();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", (-1267));
      jSONReaderScanner0.calendar = null;
      jSONReaderScanner0.indexOf('`', 95);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("n bgz*");
      jSONReaderScanner0.indexOf('E', 1618);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "unclosed.str");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("unclosed.str", 16383);
      jSONReaderScanner0.next();
      jSONReaderScanner0.indexOf('n', 24576);
      jSONReaderScanner0.stringVal();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      SymbolTable symbolTable0 = new SymbolTable(63);
      jSONReaderScanner0.addSymbol(0, 0, 0, symbolTable0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("create asm serializer error, class ");
      char[] charArray0 = new char[2];
      charArray0[0] = '2';
      charArray0[1] = 'B';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 0);
      jSONReaderScanner0.scanFieldDate(charArray0);
      jSONReaderScanner0.sub_chars(0, 788);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'M';
      charArray0[1] = '(';
      int int0 = 1134;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 1134);
      int int1 = 2489;
      jSONReaderScanner0.bp = 2489;
      Locale locale0 = Locale.TAIWAN;
      Locale locale1 = locale0.stripExtensions();
      jSONReaderScanner0.locale = locale1;
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanStringArray(linkedHashSet0, '`');
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.CharArrayReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      String string0 = "&+=??tR\\Oz36f`%@";
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("&+=??tROz36f`%@");
      jSONReaderScanner0.nextIdent();
      int int0 = Calendar.FIELD_COUNT;
      jSONReaderScanner0.charAt(1587);
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.indexOf('\u001A', 3);
      InputStreamReader inputStreamReader0 = null;
      try {
        inputStreamReader0 = new InputStreamReader(byteArrayInputStream0, "|x$MNaEmu'B");
        fail("Expecting exception: UnsupportedEncodingException");
      
      } catch(Throwable e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      char[] charArray0 = new char[8];
      char char0 = '~';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, '~');
      jSONReaderScanner0.np = (-995);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.stringVal();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(";");
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.bytesValue();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 2;
      jSONReaderScanner0.stringVal();
      System.setCurrentTimeMillis(2);
      jSONReaderScanner0.close();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "{P*4C/>FYBbX");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("{?_Mx'X#<>!");
      char[] charArray0 = new char[7];
      jSONReaderScanner0.putChar('q');
      jSONReaderScanner0.isEOF();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(";");
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.bytesValue();
      char char0 = 'x';
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-16);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("pzQ'd*\"l ^t^CuvGN$", 66);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.bytesValue();
      jSONReaderScanner0.stringVal();
      jSONReaderScanner0.isEOF();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.floatValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("(ZwJO3h WcCskX-");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Fp|\"e]EuJ");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("iQD\"%hvWw&h\u0004", 0);
      jSONReaderScanner1.nextIdent();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("&+=??tROz3f`%@", (byte)0);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.scanType((String) null);
      jSONReaderScanner0.charAt(1562);
      jSONReaderScanner0.sp = (int) (byte)0;
      jSONReaderScanner0.nextToken(1654);
      char[] charArray0 = new char[6];
      charArray0[1] = '\u001A';
      charArray0[0] = '\u001A';
      charArray0[3] = '\u001A';
      charArray0[3] = '\u001A';
      charArray0[5] = 'Z';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 1654, 16383);
      jSONReaderScanner1.putChar('\u0000');
      jSONReaderScanner1.nextIdent();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "&+=??tROz3f`%@");
      jSONReaderScanner1.nextToken();
      JSONReaderScanner jSONReaderScanner2 = null;
      try {
        jSONReaderScanner2 = new JSONReaderScanner((String) null, 'Z');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-29);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("aL<'36upc:K", (byte) (-29));
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.bytesValue();
      jSONReaderScanner0.stringVal();
      jSONReaderScanner0.isEOF();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.floatValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("pzQ'd*ml ^t^C+vGN$", (byte)0);
      boolean boolean0 = jSONReaderScanner0.hasSpecial;
      jSONReaderScanner0.bytesValue();
      char[] charArray0 = new char[11];
      jSONReaderScanner0.hasSpecial = true;
      charArray0[0] = '3';
      jSONReaderScanner0.sbuf = charArray0;
      jSONReaderScanner0.stringVal();
      jSONReaderScanner0.isEOF();
      jSONReaderScanner0.matchStat = 74;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.floatValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(";");
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.bytesValue();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(";", 0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(";", 1562);
      jSONReaderScanner0.charAt(1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 38;
      System.setCurrentTimeMillis(397L);
      jSONReaderScanner0.nextToken(38);
      PipedReader pipedReader0 = new PipedReader();
      char[] charArray0 = new char[5];
      charArray0[0] = '\u001A';
      charArray0[1] = '\u001A';
      charArray0[2] = '\u001A';
      charArray0[3] = '\u001A';
      charArray0[4] = '\u001A';
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner(charArray0, 27, 13);
      jSONReaderScanner3.isBlankInput();
      jSONReaderScanner3.putChar('\u001A');
      // Undeclared exception!
      try { 
        jSONReaderScanner3.nextIdent();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // EOF error
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("D>");
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.numberString();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("", 0);
      jSONReaderScanner0.charAt(944);
      jSONReaderScanner0.nextToken(0);
      PipedReader pipedReader0 = new PipedReader();
      jSONReaderScanner1.nextIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("o[");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("iQD\"%hvWw&h\u0004", 0);
      jSONReaderScanner1.nextIdent();
      boolean boolean0 = jSONReaderScanner1.hasSpecial;
      jSONReaderScanner1.bytesValue();
      char char0 = Locale.PRIVATE_USE_EXTENSION;
      jSONReaderScanner1.stringVal();
      System.setCurrentTimeMillis((-561L));
      jSONReaderScanner0.indexOf('x', 'x');
      jSONReaderScanner0.pos = 0;
      jSONReaderScanner0.close();
      Locale locale0 = Locale.PRC;
      jSONReaderScanner0.setLocale((Locale) null);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.doubleValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-43);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("create asm serializer error, class ");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jSONReaderScanner0.scanIdent();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jSONReaderScanner0.charAt(192);
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.nextToken(192);
  }
}
