/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 08:02:37 GMT 2018
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.firebirdsql.jdbc.FBProcedureCall;
import org.firebirdsql.jdbc.FBProcedureParam;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBProcedureCall_ESTest extends FBProcedureCall_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(1153, "Mq1o7`S(&$|e7");
      assertEquals(1153, fBProcedureParam0.getPosition());
      
      List<FBProcedureParam> list0 = fBProcedureCall0.getOutputParams();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.addParam(837, "v>4imk=JcX");
      // Undeclared exception!
      try { 
        fBProcedureCall0.registerOutParam((-10), 837);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -11
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.hashCode();
      String string0 = fBProcedureCall0.getSQL(false);
      assertEquals("EXECUTE PROCEDURE null", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getInputParam(469);
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureParam0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(401, "hpSGrqiW-r?deqVgb");
      assertEquals(401, fBProcedureParam0.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(hpSGrqiW-r?deqVgb)", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParam(2149);
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(null)", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(13, "out");
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertEquals(13, fBProcedureParam0.getPosition());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      try { 
        fBProcedureCall0.mapOutParamIndexToPosition(193, false);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Specified parameter does not exist.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.getOutputParam(401);
      fBProcedureCall0.getSQL(true);
      try { 
        fBProcedureParam0.setValue(fBProcedureCall0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot set value of an non-existing parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall$NullParam", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      fBProcedureCall0.mapOutParamIndexToPosition((-2755));
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertNull(fBProcedureCall0.getName());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam(40, "V");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(40);
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.getInputParam(2149);
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2149, "`zn%iVA\"yF(+=Dw'!pI");
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertEquals(2149, fBProcedureParam0.getPosition());
      
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(null, `zn%iVA\"yF(+=Dw'!pI)", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      Object object0 = fBProcedureCall0.clone();
      boolean boolean0 = fBProcedureCall0.equals(object0);
      assertNotSame(object0, fBProcedureCall0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam();
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      Object object0 = fBProcedureCall0.clone();
      assertTrue(object0.equals((Object)fBProcedureCall0));
      assertNotSame(object0, fBProcedureCall0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = new FBProcedureParam((-230), "se");
      // Undeclared exception!
      try { 
        fBProcedureCall0.addOutputParam(fBProcedureParam0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -230
         //
         verifyException("java.util.Vector", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(18, "'3");
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      assertEquals(18, fBProcedureParam0.getPosition());
      
      Object object0 = fBProcedureCall0.clone();
      assertTrue(object0.equals((Object)fBProcedureCall0));
      assertNotSame(object0, fBProcedureCall0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(392, "J} 7`e");
      fBProcedureParam0.setIndex(392);
      fBProcedureCall0.addOutputParam(fBProcedureParam0);
      assertEquals("J} 7`e", fBProcedureParam0.getParamValue());
      
      fBProcedureCall0.equals("J} 7`e");
      fBProcedureCall0.registerOutParam(392, 0);
      List<FBProcedureParam> list0 = fBProcedureCall0.getOutputParams();
      assertEquals(393, list0.size());
      
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition((-24632774));
      assertEquals((-24632774), int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2195, "v>?4imBk=JcX");
      assertEquals(2195, fBProcedureParam0.getPosition());
      
      fBProcedureCall0.registerOutParam((-1), 2195);
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(2195, true);
      assertEquals(2195, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName("sA");
      fBProcedureCall0.getInputParams();
      fBProcedureCall0.hashCode();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall1);
      assertFalse(fBProcedureCall1.equals((Object)fBProcedureCall0));
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureCall fBProcedureCall1 = new FBProcedureCall();
      fBProcedureCall1.setName("l=jtB2[s");
      boolean boolean0 = fBProcedureCall0.equals(fBProcedureCall1);
      assertFalse(boolean0);
      
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(401, "hpSGrqiW-r?deqVgb");
      fBProcedureCall0.setName("hpSGrqiW-r?deqVgb");
      fBProcedureParam0.clone();
      fBProcedureCall0.registerOutParam((-1), 401);
      fBProcedureCall0.addParam(401, "hpSGrqiW-r?deqVgb");
      fBProcedureCall0.getSQL(true);
      Object object0 = fBProcedureCall0.clone();
      assertTrue(object0.equals((Object)fBProcedureCall0));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(401, "hpSGrqiW-r?deqVgb");
      fBProcedureCall0.setName("hpSGrqiW-r?deqVgb");
      fBProcedureParam0.clone();
      fBProcedureCall0.registerOutParam((-1), 4);
      fBProcedureCall0.addParam(4, "hpSGrqiW-r?deqVgb");
      try { 
        fBProcedureCall0.getSQL(true);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // Value of parameter -1 not set and it was not registered as output parameter.
         //
         verifyException("org.firebirdsql.jdbc.FBProcedureCall", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2450, ">?4imBk=JxX");
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(2450);
      assertEquals(2450, int0);
      
      Object object0 = new Object();
      fBProcedureParam0.setValue(object0);
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM null(>?4imBk=JxX)", string0);
      
      fBProcedureCall0.setName(">?4imBk=JxX");
      fBProcedureParam0.setValue(fBProcedureParam0);
      assertEquals(2450, fBProcedureParam0.getPosition());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2172, "v>?4imBk=JcX");
      assertEquals(2172, fBProcedureParam0.getPosition());
      
      int int0 = fBProcedureCall0.mapOutParamIndexToPosition(2172);
      assertEquals(2172, int0);
      
      fBProcedureCall0.registerOutParam((-1), 2172);
      int int1 = fBProcedureCall0.mapOutParamIndexToPosition((-1));
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(424, "hpSGrqiW-r?deqVgb");
      fBProcedureCall0.getName();
      fBProcedureParam0.setValue(fBProcedureCall0);
      fBProcedureParam0.setIndex(424);
      FBProcedureParam fBProcedureParam1 = new FBProcedureParam(424, "hpSGrqiW-r?deqVgb");
      fBProcedureCall0.registerOutParam(424, 424);
      fBProcedureCall0.addInputParam(fBProcedureParam0);
      assertEquals(424, fBProcedureParam0.getType());
      
      FBProcedureParam fBProcedureParam2 = fBProcedureCall0.getInputParam(424);
      assertFalse(fBProcedureParam2.equals((Object)fBProcedureParam1));
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FBProcedureCall fBProcedureCall0 = new FBProcedureCall();
      fBProcedureCall0.setName("mTxcepton ");
      String string0 = fBProcedureCall0.getSQL(true);
      assertEquals("SELECT * FROM mTxcepton ", string0);
      
      Object object0 = fBProcedureCall0.clone();
      FBProcedureParam fBProcedureParam0 = fBProcedureCall0.addParam(2160, "InDFhF)*W'&u,[B");
      assertEquals(2160, fBProcedureParam0.getPosition());
      assertEquals("InDFhF)*W'&u,[B", fBProcedureParam0.getParamValue());
      
      fBProcedureCall0.setName("SELECT * FROM mTxcepton ");
      assertNotSame(fBProcedureCall0, object0);
  }
}
