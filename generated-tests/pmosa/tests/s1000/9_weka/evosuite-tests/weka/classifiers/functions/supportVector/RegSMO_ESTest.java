/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 14:03:32 GMT 2018
 */

package weka.classifiers.functions.supportVector;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import java.util.Random;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.util.MockRandom;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;
import weka.attributeSelection.PrincipalComponents;
import weka.classifiers.functions.SMOreg;
import weka.classifiers.functions.supportVector.Kernel;
import weka.classifiers.functions.supportVector.PrecomputedKernelMatrixKernel;
import weka.classifiers.functions.supportVector.RegSMO;
import weka.classifiers.functions.supportVector.SMOset;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.SparseInstance;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RegSMO_ESTest extends RegSMO_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      MockRandom mockRandom0 = new MockRandom();
      regSMO0.m_random = (Random) mockRandom0;
      regSMO0.m_nCacheHits = 0;
      regSMO0.m_nEvals = 0;
      regSMO0.globalInfo();
      mockRandom0.longs();
      regSMO0.toString();
      regSMO0.getTechnicalInformation();
      regSMO0.getOptions();
      regSMO0.getEpsilon();
      regSMO0.epsilonTipText();
      try { 
        regSMO0.takeStep(3139, 639, 0, 301.8707189, 3139);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_nCacheHits = 2146125306;
      regSMO0.takeStep(2146125306, 2146125306, 2146125306, 2146125306, 2146125306);
      try { 
        regSMO0.init((Instances) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // SVM not initialized in optimizer. Use RegOptimizer.setSVMReg()
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.getOptions();
      PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic(1338);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.toString();
      regSMO0.getTechnicalInformation();
      regSMO0.m_classIndex = (-310);
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic((-2595));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      String[] stringArray0 = new String[1];
      stringArray0[0] = ";T,O!EbG|U1-+";
      regSMO0.setOptions(stringArray0);
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(814, 580.6, 814, 6.283185307179586, 814, 637.435138031637, 6.283185307179586, 814, 814, 637.435138031637, 814);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      boolean boolean0 = regSMO0.findOptimalPointOnLine(0, 0, 0, 0, 0, (-765.726), 0, (-765.726), 1.0E-10, (-1), (-2105.389601));
      assertFalse(boolean0);
      
      String string0 = regSMO0.getRevision();
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
      assertEquals("8034", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setEpsilon(329.4743314);
      double[] doubleArray0 = new double[8];
      regSMO0.m_nEvals = (-2981);
      doubleArray0[0] = 523.833015531;
      doubleArray0[1] = 3145.16655311;
      doubleArray0[2] = 329.4743314;
      doubleArray0[3] = 0.0;
      doubleArray0[4] = (double) Integer.MAX_VALUE;
      doubleArray0[5] = 329.4743314;
      doubleArray0[6] = 329.4743314;
      doubleArray0[7] = (double) 468;
      regSMO0.m_alphaStar = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(Integer.MAX_VALUE, Integer.MAX_VALUE, 329.4743314, 329.4743314, 468, 468, (-2683.837594), 329.4743314, 468, 3145.16655311, 468);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(19, 19, (-1920.130235978402), (-1920.130235978402), 19, (-1920.130235978402), 19, 19, 19, 1562.73851, (-1115.9806439529661));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      regSMO0.m_alpha = doubleArray0;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.getEpsilon();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 1.0E-12, 1, 1, 2, 1, 1, 0, 1, 2, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.getEpsilon();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, 1.0E-75, 1, 1.0E-12, 1, (-1.0), (-1.0), 2, 1.0E-12, 1.0E-75, 785.97624708);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.getOptions();
      regSMO0.getOptions();
      regSMO0.globalInfo();
      SMOreg sMOreg0 = new SMOreg();
      Kernel kernel0 = sMOreg0.getKernel();
      regSMO0.m_kernel = kernel0;
      regSMO0.getTechnicalInformation();
      regSMO0.getRevision();
      MockRandom mockRandom0 = (MockRandom)regSMO0.m_random;
      regSMO0.m_alphaStar = null;
      regSMO0.m_random = (Random) mockRandom0;
      regSMO0.getTechnicalInformation();
      Instances instances0 = null;
      try { 
        regSMO0.buildClassifier((Instances) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // SVM not initialized in optimizer. Use RegOptimizer.setSVMReg()
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.epsilonTipText();
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      int int0 = 2146048736;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2146048736, (-2105.389601), (-2105.389601), (-2105.389601), 2146048736, 2146048736, 2146048736, 2146048736, 2639.14681342895, 2639.14681342895, 919.7);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_alpha1 = (-1.0E100);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 0, (-1.0E100), 0, 0, 1385.7, (-1.0E100), 1385.7, 1385.7, 2237.530781807, 1.0E-10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_classIndex = 39;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 0, 0, 0, 0, 39, 0, 39, 1.0E-10, 39, (-2105.389601));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 0, 0, 2325.2133307392, (-2143635110), (-2143635110), 0, 2325.2133307392, 2325.2133307392, 1.7976931348623157E308, 97.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      String string0 = regSMO0.getRevision();
      assertEquals("8034", string0);
      
      regSMO0.getTechnicalInformation();
      regSMO0.listOptions();
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      String[] stringArray0 = new String[8];
      regSMO0.m_epsilon = 1111.4;
      stringArray0[0] = "%7";
      int int0 = 673;
      double double0 = 3263.4067105;
      double double1 = 1.0E-12;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(673, 673, 3263.4067105, 3263.4067105, 0, 1.0E-12, (-3748.537889285), 1.0E-12, 3263.4067105, 1.0E-12, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      SMOreg sMOreg0 = regSMO0.m_SVM;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1456960656, 1456960656, 1, 1.7976931348623157E308, 1456960656, 1456960656, 1456960656, 2, 1456960656, 1887.0387370443343, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.globalInfo();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Implementation of SMO for support vector regression as described in :\n\nA.J. Smola, B. Schoelkopf (1998). A tutorial on support vector regression.";
      stringArray0[1] = "Implementation of SMO for support vector regression as described in :\n\nA.J. Smola, B. Schoelkopf (1998). A tutorial on support vector regression.";
      stringArray0[2] = "Implementation of SMO for support vector regression as described in :\n\nA.J. Smola, B. Schoelkopf (1998). A tutorial on support vector regression.";
      stringArray0[3] = "Implementation of SMO for support vector regression as described in :\n\nA.J. Smola, B. Schoelkopf (1998). A tutorial on support vector regression.";
      regSMO0.setOptions(stringArray0);
      RegSMO regSMO1 = new RegSMO();
      SMOreg sMOreg0 = regSMO1.m_SVM;
      regSMO0.m_SVM = null;
      regSMO0.epsilonTipText();
      regSMO0.getTechnicalInformation();
      try { 
        regSMO0.wrapUp();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.getOptions();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-370), (-0.4375), 0.9, 10.0, (-370), (-0.4375), 0.9, 1.0, (-0.4375), 10.0, 0.9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.m_alpha = null;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.setSMOReg((SMOreg) null);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 0, 1, 1, 2, 0, 1, 10.0, 1, 2, 15.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1587, (-302.0079), 4724.111170482178, 1587, 1587, (-302.0079), 1587, 1587, (-0.5), 2490.9999997509, 4724.111170482178);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setEpsilonParameter((-1951.2211675325873));
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-1951.2211675325873);
      doubleArray0[1] = (-1951.2211675325873);
      doubleArray0[2] = (-1951.2211675325873);
      regSMO0.m_alpha = doubleArray0;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.setSMOReg((SMOreg) null);
      regSMO0.getEpsilon();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, (-1951.2211675325873), (-1951.2211675325873), (-1536.1), 1, (-1951.2211675325873), (-1951.2211675325873), (-3473.6255911143526), 3005.623454377283, 1609.9, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[2];
      regSMO0.m_alpha = doubleArray0;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.m_alphaStar = doubleArray0;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 0, 1, 1, 2, 1, 1, 0, 1, 2, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setSeed((-1498));
      int int0 = (-1822);
      double double0 = 0.0;
      int int1 = 122;
      double double1 = 0.95;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(122, 0.9999999999, 1609.9, 0.95, 4, 0.0, (-1822), (-1435.009), 0.95, 2401.1647117541, (-1822));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      SMOreg sMOreg0 = regSMO0.m_SVM;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 1, (-909.2948137224), 2, 611, 0, 0.0, 2, 2, 2, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.getEpsilon();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, 0, 1.0E-12, (-9.763237E-8), 2, 0, (-9.763237E-8), 0, (-9.763237E-8), 838.165, (-1452.1217187));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      String[] stringArray0 = new String[9];
      regSMO0.m_epsilon = 1111.4;
      stringArray0[0] = "%7";
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(673, 673, 3263.4067105, 3263.4067105, 0, 1.0E-12, 79.633, 1.0E-12, 3263.4067105, 1.0E-12, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      regSMO0.m_alpha = doubleArray0;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, (-886.9653844837585), 0, 1, 2, 1, (-886.9653844837585), 0, 0, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.setEpsilonParameter((-1951.2211675325873));
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-1951.2211675325873);
      doubleArray0[1] = (-1951.2211675325873);
      doubleArray0[2] = (-1951.2211675325873);
      regSMO0.m_alpha = doubleArray0;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.setSMOReg((SMOreg) null);
      regSMO0.getEpsilon();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, (-1951.2211675325873), 0, (-1951.2211675325873), 2, 1609.9, 2, 228.3, 1.0E-12, 2045.154945, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1105, 497.0, (-12.865569235367012), 497.0, 1105, (-12.865569235367012), 1105, 497.0, 2.0, 2.0, 5.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.getOptions();
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.setSMOReg((SMOreg) null);
      regSMO0.getEpsilon();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-2481), 3223.092267, (-3473.6255911143526), 2401.6272117541002, (-2774), (-2481), 2, 2045.154945, 777.74347, 1, 9.999999999E-13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.getRevision();
      regSMO0.getTechnicalInformation();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 79.633, 3263.4067105, 0, 0, 0, 0, 1282.8323997847922, 0.1, 4608.66123, 1282.8323997847922);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.getOptions();
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.setSMOReg((SMOreg) null);
      regSMO0.getEpsilon();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, 1609.9, 5.70001, 3180.1098429, 2, 977.6, 1579.95953558, 3180.1098429, 2045.1549447954844, 15.0, 1.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(237, (-12.865569235367012), 237, 2482.279314, 237, 237, 1.0E-10, 237, 10.0, 237, 237);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      regSMO0.m_alpha = doubleArray0;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.setSMOReg((SMOreg) null);
      regSMO0.getEpsilon();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, (-587.510065824567), 0.1, 1.0E-12, 949, 4227.921010388913, 15.0, 339.82, (-1575.987784563339), 2.0, 1441.30420706);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.epsilonTipText();
      SMOset sMOset0 = new SMOset(35);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(35, 0.0, 0.0, 2.0, 420, (-893.831673966), 2401.3978785404393, 2292.4591589, 420, 309.9390007, (-893.831673966));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      regSMO0.m_alpha = doubleArray0;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.setSMOReg((SMOreg) null);
      regSMO0.getEpsilon();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 1.0E-12, (-1575.987784563339), 0.1, 2, 1, 1609.9, 1, 0.1, 2, 15.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      regSMO0.m_alpha = doubleArray0;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.m_alphaStar = regSMO0.m_alpha;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, 0, 1, 7.747759999999999E-8, 0, 1, 7.747759999999999E-8, 1, 0, 1, 7.747759999999999E-8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      regSMO0.m_alpha = doubleArray0;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.setSMOReg((SMOreg) null);
      regSMO0.getEpsilon();
      regSMO0.m_nCacheHits = 2;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, 977.6, 1658.471, 0.099999999999, 1, 2100.1308623162026, (-99.0), 5.0, 1.0, 1744.0, (-1575.987784563339));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      regSMO0.m_alpha = doubleArray0;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.setSMOReg((SMOreg) null);
      regSMO0.getEpsilon();
      regSMO0.findOptimalPointOnLine(0, 1022.084126834, 0.1, 1658.570999999999, 0, 251.8639213321, 1.0, 2, 0.1, (-1928.741682258274), (-1575.987784563339));
      // Undeclared exception!
      try { 
        regSMO0.secondChoiceHeuristic(1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      regSMO0.m_alpha = doubleArray0;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.setSMOReg((SMOreg) null);
      regSMO0.getEpsilon();
      double double0 = 0.1;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, (-587.510065824567), 0.1, 0.31944968900513016, 949, 4227.921010388913, 15.0, 339.82, (-1575.987784563339), 2.0, 1441.30420706);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      regSMO0.m_alpha = doubleArray0;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.setSMOReg((SMOreg) null);
      regSMO0.getEpsilon();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 1609.9, 1.0E-12, 535.76944, 2, 674.6617, 1530.9576, 5.70001, 0.1, 977.6, 2726.94693324);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.getRevision();
      regSMO0.getTechnicalInformation();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(48, 48, 1.0, 3.5, 48, 3.5, 1.0E-12, 1.0E-12, 1.0, 1.0, 1.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)69;
      byteArray0[1] = (byte)98;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      byteArray0[2] = (byte) (-12);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) (byte) (-12);
      regSMO0.m_alphaStar = doubleArray0;
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (double) (byte)69;
      doubleArray1[1] = (double) (byte)69;
      doubleArray1[2] = (double) (byte)98;
      doubleArray1[3] = (double) (byte) (-12);
      doubleArray1[4] = (double) (byte)69;
      doubleArray1[5] = (double) (byte)98;
      doubleArray1[6] = (double) (byte)98;
      PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
      regSMO0.m_kernel = (Kernel) precomputedKernelMatrixKernel0;
      precomputedKernelMatrixKernel0.m_ChecksTurnedOff = false;
      regSMO0.m_alpha = doubleArray1;
      regSMO0.m_alpha1 = (double) (byte)98;
      regSMO0.m_bModelBuilt = false;
      int int0 = regSMO0.secondChoiceHeuristic((-2120));
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[1];
      regSMO0.m_alphaStar = doubleArray0;
      PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
      regSMO0.secondChoiceHeuristic(0);
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      regSMO0.m_alpha = doubleArray0;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.setSMOReg((SMOreg) null);
      regSMO0.getEpsilon();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 10.0, 15.0, 436.9589849351, 2, 0.1, 1738.3, (-5301.124288422886), (-3.0), 1.278E-7, 2625.781);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[8];
      regSMO0.m_alpha = doubleArray0;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 0, 1, 1, 0, 0, 0, 4.799741717849595, 2, 4.799741717849595, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      regSMO0.getOptions();
      regSMO0.getTechnicalInformation();
      regSMO0.setEpsilon(10.0);
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine((-370), (-0.4375), 0.9, 10.0, (-370), (-0.4375), 0.9, 1.0, (-0.4375), 10.0, 0.9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)69;
      byteArray0[1] = (byte)98;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      RegSMO regSMO0 = new RegSMO();
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.setSMOReg((SMOreg) null);
      regSMO0.getEpsilon();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(40, 766.7364373092589, 2.045154945E-7, 15.0, 2500, 554.12583577, (byte)98, 1.7976931348623157E308, 0.1, 1.7976931348623157E308, 7.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)69;
      byteArray0[1] = (byte)80;
      byteArray0[2] = (byte)69;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      RegSMO regSMO0 = new RegSMO();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (double) (byte)69;
      doubleArray0[1] = (double) (byte)69;
      doubleArray0[2] = (double) (byte)80;
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = doubleArray0;
      PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
      regSMO0.secondChoiceHeuristic(1764);
      SparseInstance sparseInstance0 = new SparseInstance((byte)69, regSMO0.m_alphaStar);
      BinarySparseInstance binarySparseInstance0 = new BinarySparseInstance((Instance) sparseInstance0);
      String string0 = "";
      PrincipalComponents principalComponents0 = new PrincipalComponents();
      try { 
        principalComponents0.transformedHeader();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Principal components hasn't been built yet
         //
         verifyException("weka.attributeSelection.PrincipalComponents", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)69;
      byteArray0[1] = (byte)80;
      byteArray0[2] = (byte)69;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      RegSMO regSMO0 = new RegSMO();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      regSMO0.m_C = (double) (byte)80;
      double[] doubleArray0 = new double[6];
      regSMO0.m_alphaStar = doubleArray0;
      doubleArray0[0] = (double) (byte)69;
      doubleArray0[1] = (double) (byte)69;
      doubleArray0[2] = (double) (byte)80;
      regSMO0.m_alpha = doubleArray0;
      PrecomputedKernelMatrixKernel precomputedKernelMatrixKernel0 = new PrecomputedKernelMatrixKernel();
      regSMO0.secondChoiceHeuristic(1764);
      try { 
        regSMO0.init((Instances) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // SVM not initialized in optimizer. Use RegOptimizer.setSVMReg()
         //
         verifyException("weka.classifiers.functions.supportVector.RegOptimizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[1];
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = regSMO0.m_alphaStar;
      regSMO0.m_target = regSMO0.m_alphaStar;
      regSMO0.optimize();
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = (-617.4792798882576);
      doubleArray0[1] = 1.0E-10;
      doubleArray0[2] = 968.98;
      doubleArray0[3] = 3.3982E-8;
      doubleArray0[4] = (-2328.1700868467);
      doubleArray0[5] = (-1422.55);
      doubleArray0[6] = 417.61597544;
      doubleArray0[7] = (-788.0);
      doubleArray0[8] = 3261.463417763;
      regSMO0.m_alpha2 = (-788.0);
      regSMO0.m_alphaStar = doubleArray0;
      double[] doubleArray1 = new double[5];
      doubleArray1[2] = (-1817.1366314129953);
      doubleArray1[4] = (-2.0);
      regSMO0.m_alpha = doubleArray1;
      double[] doubleArray2 = new double[1];
      regSMO0.m_target = doubleArray2;
      regSMO0.optimize();
      regSMO0.getOptions();
      assertEquals(1.0E-12, regSMO0.getEpsilon(), 0.01);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[3];
      doubleArray0[1] = 722.260193;
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.m_alpha = doubleArray0;
      regSMO0.m_target = regSMO0.m_alphaStar;
      try { 
        regSMO0.optimize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      regSMO0.m_alpha = doubleArray0;
      SMOreg sMOreg0 = new SMOreg();
      sMOreg0.getCapabilities();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.getEpsilon();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(0, 1.0E-12, 1, 1, 2, 1, 1, 0, 1, 2, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      regSMO0.m_alpha = doubleArray0;
      SMOreg sMOreg0 = new SMOreg();
      sMOreg0.getCapabilities();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.getEpsilon();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, (-1326.11762), (-2215.1821), (-2215.1821), 1, 2, (-222.164794577), 1.0E-12, 2, 1.0E-12, 236.9999999763);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[7];
      regSMO0.m_alpha = doubleArray0;
      SMOreg sMOreg0 = new SMOreg();
      regSMO0.m_alphaStar = doubleArray0;
      regSMO0.getEpsilon();
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(1, 1.0E-12, 0, 0, 2, 1959.0, 1.0E-12, 1, (-4407.82426), 1, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[9];
      regSMO0.m_alpha = doubleArray0;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.m_alphaStar = regSMO0.m_alpha;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, 0, 0, 2.62915, 0, 1, 2.62915, 0, 0, 1, 2.62915);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[11];
      regSMO0.m_alpha = doubleArray0;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.m_alphaStar = regSMO0.m_alpha;
      // Undeclared exception!
      try { 
        regSMO0.findOptimalPointOnLine(2, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.classifiers.functions.supportVector.RegSMO", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      RegSMO regSMO0 = new RegSMO();
      double[] doubleArray0 = new double[9];
      regSMO0.m_alpha = doubleArray0;
      SMOreg sMOreg0 = regSMO0.m_SVM;
      regSMO0.m_alphaStar = regSMO0.m_alpha;
      byte[] byteArray0 = new byte[5];
      regSMO0.setEpsilon(2);
      byteArray0[1] = (byte)0;
      SystemInUtil.addInputLine("");
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean1 = regSMO0.findOptimalPointOnLine((byte)1, (-1.0E-6), 1.0E-22, 2541.66477238201, 2, 2, (byte)1, (-3868.5106), 455.224, 0.4625, 455.224);
      assertTrue(boolean1 == boolean0);
  }
}
