/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 05:05:35 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)23;
      TiffField tiffField0 = new TiffField((-1073741823), (byte)23, fieldTypeDouble0.SHORT, 267L, (-1L), byteArray0, byteOrder0, 37377);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1073741823), tiffField0.getTag());
      assertEquals(37377, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(23, tiffField0.getDirectoryType());
      assertEquals(23, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(34118, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2334), 1, fieldTypeFloat0, 1, (-493L), byteArray0, byteOrder0, (-1261));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1261), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2334), tiffField0.getTag());
      assertEquals((-493), tiffField0.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)27, (-1586), fieldTypeLong0, 232L, (byte)27, byteArray0, (ByteOrder) null, (byte) (-33));
      String string0 = tiffField0.toString();
      assertEquals(27, tiffField0.getOffset());
      assertEquals((-33), tiffField0.getSortHint());
      assertEquals((-1586), tiffField0.getDirectoryType());
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (232 Long)", string0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1982292597), (-741), fieldTypeDouble0, (byte)23, (-741), byteArray0, byteOrder0, 1580);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-741), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-741), tiffField0.getDirectoryType());
      assertEquals(1580, tiffField0.getSortHint());
      assertEquals((-1982292597), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (byte) (-119), fieldTypeFloat0, 1L, (-1800L), byteArray0, byteOrder0, (byte)116);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tagInfo0.tag);
      assertEquals(116, tiffField0.getSortHint());
      assertEquals((-1800), tiffField0.getOffset());
      assertEquals((-119), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(83, "ExifOffset");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34665, 83, fieldTypeRational0.DOUBLE, (-17179869184L), 1L, byteArray0, byteOrder0, 4046);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(83, tiffField0.getDirectoryType());
      assertEquals(4046, tiffField0.getSortHint());
      assertEquals(34665, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tagInfo0.length);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0.BYTE, 7392L, (-768L), byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals((-768), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4540, (byte) (-72), fieldTypeShort0, 3L, 24L, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getTag();
      assertEquals((-72), tiffField0.getDirectoryType());
      assertEquals(4540, int0);
      assertEquals(24, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-86);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(67, 2981, fieldTypeAscii0, 167296L, 2147483647L, byteArray0, byteOrder0, (byte) (-86));
      String string0 = tiffField0.getStringValue();
      assertEquals((-86), tiffField0.getSortHint());
      assertEquals(2981, tiffField0.getDirectoryType());
      assertEquals(67, tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1223), 7, fieldTypeLong0, 4L, (-18896L), byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals((-18896), tiffField0.getOffset());
      assertEquals((-1223), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(4293, "?G:hG*~rpJ=");
      byte[] byteArray0 = new byte[4];
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1717986917), (-1665), fieldTypeDouble0, (-1717986917), (-1L), byteArray0, byteOrder0, (byte) (-73));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals((-73), int0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1665), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 2127031422, fieldTypeRational0, 2127031422, (byte)0, byteArray0, byteOrder0, 1024);
      int int0 = tiffField0.getOffset();
      assertEquals(3, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(1024, tiffField0.getSortHint());
      assertEquals(2127031422, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, (byte)4, fieldTypeRational0, 3894, 1, byteArray0, byteOrder0, 1382);
      int int0 = tiffField0.getOffset();
      assertEquals(1382, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-287), 4381, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte)2);
      tiffField0.getIntValueOrArraySum();
      assertEquals(4381, tiffField0.getDirectoryType());
      assertEquals((-287), tiffField0.getTag());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1739, "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-115);
      byteArray0[4] = (byte)72;
      TiffField tiffField0 = new TiffField((-1982292597), 555, fieldTypeRational0, (-1982292597), (-2195L), byteArray0, byteOrder0, (byte)59);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1982292597), tiffField0.getTag());
      assertEquals((-26796942), int0);
      assertEquals(59, tiffField0.getSortHint());
      assertEquals((-2195), tiffField0.getOffset());
      assertEquals(555, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2143439422, 50, fieldTypeByte0, 1L, 2143439422, byteArray0, byteOrder0, 370);
      tiffField0.getIntValue();
      assertEquals(2143439422, tiffField0.getTag());
      assertEquals(370, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(2143439422, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40960, (byte)0, fieldTypeRational0.BYTE, (byte)1, (-1L), byteArray0, byteOrder0, 32766);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(40960, tiffField0.getTag());
      assertEquals(32766, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(94, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1739, 1739, fieldTypeLong0, 94, 16L, byteArray0, byteOrder0, 1327);
      tiffField0.getFieldTypeName();
      assertEquals(1739, tiffField0.getTag());
      assertEquals(1739, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getOffset());
      assertEquals(1327, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(50, "");
      TiffField tiffField0 = new TiffField(50, (-1982292597), fieldTypeRational0, (-2147483648L), 1850L, byteArray0, byteOrder0, 50);
      tiffField0.getFieldTypeName();
      assertEquals(1850, tiffField0.getOffset());
      assertEquals((-1982292597), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-49), (byte) (-49), fieldTypeByte0, (byte)23, (byte)50, byteArray0, byteOrder0, (-3835));
      tiffField0.getFieldType();
      assertEquals((-49), tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
      assertEquals((-49), tiffField0.getDirectoryType());
      assertEquals((-3835), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte) (-15), "");
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeDouble0, (-1520L), (-1520L), byteArray0, byteOrder0, 65535);
      tiffField0.getFieldType();
      assertEquals((-1520), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)23, 50, fieldTypeDouble0, 406664L, (-741), byteArray0, byteOrder0, 50);
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-741), tiffField0.getOffset());
      assertEquals(23, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 632, fieldTypeDouble0, 1L, (byte) (-15), byteArray0, byteOrder0, (-1073741823));
      tiffField0.getDoubleValue();
      assertEquals(632, tiffField0.getDirectoryType());
      assertEquals((-15), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-1073741823), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)23;
      TiffField tiffField0 = new TiffField((byte)88, (-2147222427), fieldTypeDouble0.FLOAT, (byte)1, 3624L, byteArray0, byteOrder0, 2798);
      tiffField0.getDoubleValue();
      assertEquals(88, tiffField0.getTag());
      assertEquals((-2147222427), tiffField0.getDirectoryType());
      assertEquals(2798, tiffField0.getSortHint());
      assertEquals(3624, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-86);
      TiffField tiffField0 = new TiffField((-619), 36, fieldTypeLong0, 1, 32L, byteArray0, byteOrder0, (byte) (-86));
      tiffField0.getDoubleValue();
      assertEquals(32, tiffField0.getOffset());
      assertEquals((-619), tiffField0.getTag());
      assertEquals((-86), tiffField0.getSortHint());
      assertEquals(36, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-618), 0, fieldTypeByte0, (byte)23, 1L, byteArray0, byteOrder0, (-43));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-618), tiffField0.getTag());
      assertEquals((-43), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-15), fieldTypeDouble0, (-1520L), 3, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-15), int0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2599), "cAbGf=(&Gg]G1mS");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-2599), fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, (-1054));
      tiffField0.getCount();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2599), tiffField0.getDirectoryType());
      assertEquals((-1054), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(3, 0, fieldTypeDouble0, 1L, 0, byteArray0, byteOrder0, (-1589));
      tiffField0.getCount();
      assertEquals(3, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1589), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1932, 842, fieldTypeRational0, (-2147483648L), (-2147483648L), byteArray0, byteOrder0, 842);
      tiffField0.getCount();
      assertEquals(1932, tiffField0.getTag());
      assertEquals(842, tiffField0.getSortHint());
      assertEquals(842, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)93, (byte)78, fieldTypeLong0, 4550L, 1L, byteArray0, byteOrder0, (-1370));
      tiffField0.getBytesLength();
      assertEquals(93, tiffField0.getTag());
      assertEquals((-1370), tiffField0.getSortHint());
      assertEquals(78, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(1062);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1062, 1062, fieldTypeLong0, (-604L), (-3732L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getBytesLength();
      assertEquals(1062, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-3732), tiffField0.getOffset());
      assertEquals(1062, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, (-1865L), byteArray0, byteOrder0, 32932);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getTag());
      assertEquals(32932, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1865), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldTypeAscii0, 406664L, (byte) (-1), byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteArrayValue();
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2599), "cAbGf=(&Gg]G1mS");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-2599), fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, (-1054));
      tiffField0.getByteArrayValue();
      assertEquals((-2599), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1054), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2021, (-589), (FieldType) null, 65105, 1L, byteArray0, byteOrder0, 2021);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeDouble0, (-1520L), (-1520L), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)55, (byte) (-60), fieldTypeShort0, (-854L), (byte)58, byteArray0, byteOrder0, (-1982292597));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[38];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(2451, 0, fieldTypeShort0.FLOAT, (-1236L), 7320L, byteArray0, byteOrder0, 32803);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[38];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(652, "BlackLevelDeltaH");
      TiffField tiffField0 = new TiffField((-121), 1626, fieldTypeDouble0, (-2137), (-121), byteArray0, byteOrder0, 652);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-806), (-806), fieldTypeAscii0, (-806), 929L, byteArray0, byteOrder0, (byte) (-60));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), 916, fieldTypeDouble0, (-478L), (byte)0, byteArray0, byteOrder0, (-1717986917));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(850, "^v");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(164, 0, fieldTypeByte0, 0, (-1L), byteArray0, byteOrder0, 164);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(3, 0, fieldTypeDouble0, 1L, 0, byteArray0, byteOrder0, (-1589));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-2456), (byte)12, (FieldType) null, 3078L, 807L, byteArray0, byteOrder0, (byte)12);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(740, (-1982292597), fieldTypeShort0, (-1550L), (-8L), byteArray0, byteOrder0, (-196));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1, (FieldType) null, 701L, 701L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((-1), (-3102), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeLong0).BYTE).ASCII, 0L, 344L, (byte[]) null, byteOrder0, 38);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 2127031422, fieldTypeRational0, 2127031422, (byte)0, byteArray0, byteOrder0, 1024);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeDouble0, (-1520L), (-1520L), byteArray0, byteOrder0, 2114);
      MockPrintStream mockPrintStream0 = new MockPrintStream("D\"Y`^A>F");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1223), 7, fieldTypeLong0, 4L, (-18896L), byteArray0, (ByteOrder) null, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-104), (-104), fieldTypeByte0, (-104), (-104), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(64, 2147380941, fieldTypeDouble0, (-2279L), 2147483647L, (byte[]) null, byteOrder0, 9);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(pipedOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeDouble0, (-1520L), (-1520L), byteArray0, byteOrder0, 65535);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1520), tiffField0.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)23, 50, fieldTypeDouble0, 406664L, (-741), byteArray0, byteOrder0, 50);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals((-741), tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(23, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1317, "wJ6TC$T6+#LVA3z");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(3430, 3430, fieldTypeAscii0, (-1375L), 0L, byteArray0, (ByteOrder) null, (byte)95);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(3430, tiffField0.getTag());
      assertEquals(95, tiffField0.getSortHint());
      assertEquals(3430, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2143439422, 50, fieldTypeByte0, 1L, 2143439422, byteArray0, byteOrder0, 370);
      tiffField0.toString();
      assertEquals(370, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(2143439422, tiffField0.getTag());
      assertEquals(2143439422, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-2324), 265, (FieldType) null, 265, (byte)0, byteArray0, byteOrder0, 2147357064);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(265, tiffField0.getDirectoryType());
      assertEquals((-2324), tiffField0.getTag());
      assertEquals(2147357064, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2599), "cAbGf=(&Gg]G1mS");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-2599), fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, (-1054));
      MockFile mockFile0 = new MockFile("+h");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, true);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(44L, mockFile0.length());
      assertEquals((-1054), tiffField0.getSortHint());
      assertEquals((-2599), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-1), fieldTypeAscii0, 406664L, (byte) (-1), byteArray0, byteOrder0, (byte)0);
      tiffField0.getValue();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 3894, fieldTypeRational0, 1932, (-5382L), byteArray0, byteOrder0, 842);
      int int0 = tiffField0.getOffset();
      assertEquals(842, tiffField0.getSortHint());
      assertEquals((-5382), int0);
      assertEquals(3894, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1395), "i#'=-PfSwLpx|3sCY<z");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-342), (-342), fieldTypeByte0, (-342), 1098L, byteArray0, (ByteOrder) null, 0);
      int int0 = tiffField0.getTag();
      assertEquals((-342), tiffField0.getDirectoryType());
      assertEquals((-342), int0);
      assertEquals(1098, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)2, (-1250), fieldTypeByte0, (byte)0, (byte)2, byteArray0, byteOrder0, (byte)0);
      tiffField0.getBytesLength();
      assertEquals(2, tiffField0.getOffset());
      assertEquals((-1250), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)2, (-1250), fieldTypeByte0, (byte)0, (byte)2, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2143439422, 50, fieldTypeByte0, 1L, 2143439422, byteArray0, byteOrder0, 370);
      tiffField0.getIntValue();
      assertEquals(370, tiffField0.getSortHint());
      assertEquals(2143439422, tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(2143439422, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(827, (byte) (-13), fieldTypeLong0, 1099, (-1815L), byteArray0, byteOrder0, (-4788));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1815), tiffField0.getOffset());
      assertEquals(827, tiffField0.getTag());
      assertEquals((-4788), tiffField0.getSortHint());
      assertEquals((-13), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1739, "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1982292597), 555, fieldTypeRational0, (-1982292597), (-2195L), byteArray0, byteOrder0, (byte)59);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder0, 55);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@22cd85c4 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1248), "\"pWhkx gam'TxN");
      TiffField tiffField0 = new TiffField(50341, (-3055), fieldTypeAscii0, 4L, 15456L, byteArray0, byteOrder0, 473);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@53de3da for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((byte) (-19), (-958), fieldTypeFloat0, (byte)60, 255L, byteArray0, byteOrder0, (byte) (-19));
      tiffField0.getDoubleArrayValue();
      assertEquals((-19), tiffField0.getSortHint());
      assertEquals((-19), tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
      assertEquals((-958), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(827, (byte) (-13), fieldTypeLong0, 1099, (-1815L), byteArray0, byteOrder0, (-4788));
      tiffField0.getDoubleArrayValue();
      assertEquals((-4788), tiffField0.getSortHint());
      assertEquals(827, tiffField0.getTag());
      assertEquals((-1815), tiffField0.getOffset());
      assertEquals((-13), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(265, 2088, fieldTypeDouble0, (byte)0, 453L, byteArray0, byteOrder0, 265);
      tiffField0.getDoubleArrayValue();
      assertEquals(265, tiffField0.getTag());
      assertEquals(265, tiffField0.getSortHint());
      assertEquals(453, tiffField0.getOffset());
      assertEquals(2088, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1739, "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1982292597), 555, fieldTypeRational0, (-1982292597), (-2195L), byteArray0, byteOrder0, (byte)59);
      assertEquals(1321528408, tiffField0.getBytesLength());
      
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(59, tiffField0.getSortHint());
      assertEquals((-1982292597), tiffField0.getTag());
      assertEquals(555, tiffField0.getDirectoryType());
      assertEquals((-2195), tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-287), 4381, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte)2);
      tiffField0.getDoubleArrayValue();
      assertEquals((-287), tiffField0.getTag());
      assertEquals(4381, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-1073741823), (byte)23, fieldTypeDouble0.SSHORT, 267L, (-1L), byteArray0, byteOrder0, 37377);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1073741823), tiffField0.getTag());
      assertEquals(37377, tiffField0.getSortHint());
      assertEquals(534, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(23, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(827, (byte) (-13), fieldTypeLong0, 1099, (-1815L), byteArray0, byteOrder0, (-4788));
      tiffField0.getIntArrayValue();
      assertEquals(4396, tiffField0.getBytesLength());
      assertEquals((-4788), tiffField0.getSortHint());
      assertEquals((-13), tiffField0.getDirectoryType());
      assertEquals((-1815), tiffField0.getOffset());
      assertEquals(827, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1431), 50, fieldTypeShort0, 4L, 4L, byteArray0, byteOrder0, (byte)0);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-1431), tiffField0.getTag());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2147357064, "a5B\u0006nOe *");
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "a5B\u0006nOe *");
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField(1739, 32909, fieldTypeRational0, 32909, 32909, byteArray0, byteOrder0, 1739);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2599), "cAbGf=(&Gg]G1mS");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-2599), fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, (-1054));
      tiffField0.getIntArrayValue();
      assertEquals((-1054), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-2599), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-287), 4381, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte)2);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-287), tiffField0.getTag());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(4381, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)23, (-741), fieldTypeByte0, (byte)23, (-741), byteArray0, byteOrder0, 50);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@7b70efec for: 23 (0x17: GPSDestBearingRef): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(502, 35, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeRational0).FLOAT).ASCII, 1649, 606L, byteArray0, (ByteOrder) null, (-2928));
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(35, tiffField0.getDirectoryType());
      assertEquals(502, tiffField0.getTag());
      assertEquals((-2928), tiffField0.getSortHint());
      assertEquals(1649, tiffField0.getBytesLength());
      assertEquals(606, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(894, 37379, fieldTypeFloat0, 37379, 8464L, byteArray0, byteOrder0, (byte) (-51));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [F@cd07a0a
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(50, (byte)0, fieldTypeDouble0, 4L, 2363L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getTagName();
      assertEquals(2363, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x32)", string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      Double double0 = new Double(817);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = fieldTypeRational0.writeData(double0, byteOrder0);
      TiffField tiffField0 = new TiffField(7, (-2147154933), fieldTypeRational0.DOUBLE, 1L, (-17178781632L), byteArray0, byteOrder0, 7);
      String string0 = tiffField0.getTagName();
      assertEquals("GPSTimeStamp", string0);
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getTag());
      assertEquals(1087552, tiffField0.getOffset());
      assertEquals((-2147154933), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[220];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(27, 633, fieldTypeDouble0.FLOAT, 633, 2680L, byteArray0, byteOrder0, 633);
      String string0 = tiffField0.getValueDescription();
      assertEquals(633L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (55)", string0);
      assertEquals(633, tiffField0.getSortHint());
      assertEquals(2532, tiffField0.getBytesLength());
      assertEquals(2680, tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals(633, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[72];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(50, (-1), fieldTypeLong0.SBYTE, 5216L, 5216L, byteArray0, byteOrder0, 50);
      tiffField0.dump();
      assertEquals(5216, tiffField0.getOffset());
      assertEquals(5216L, tiffField0.getCount());
      assertEquals(5216, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(850, "^v");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-3558), fieldTypeByte0, 65535, 4534L, byteArray0, byteOrder0, (byte)50);
      MockPrintStream mockPrintStream0 = new MockPrintStream("D\"Y`^A>F");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "D\"Y`^A>F");
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getBytesLength());
      assertEquals(4534, tiffField0.getOffset());
      assertEquals((-3558), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(315, 2143439422, fieldTypeDouble0, 24L, (-1520L), byteArray0, byteOrder0, 4540);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2143439422, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(4540, tiffField0.getSortHint());
      assertEquals(315, tiffField0.getTag());
      assertEquals((-1520), tiffField0.getOffset());
      assertEquals(24L, tiffField0.getCount());
      assertEquals(192, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[220];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(633, 633, fieldTypeDouble0.LONG, 633, 633, byteArray0, byteOrder0, 633);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2532, tiffField0.getBytesLength());
      assertEquals(633, tiffField0.getOffset());
      assertEquals(633L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(633, tiffField0.getDirectoryType());
      assertEquals(633, tiffField0.getSortHint());
      assertEquals(633, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(894, 37379, fieldTypeFloat0, 37379, 8464L, byteArray0, byteOrder0, (byte) (-51));
      String string0 = tiffField0.getValueDescription();
      assertEquals(37379L, tiffField0.getCount());
      assertEquals(149516, tiffField0.getBytesLength());
      assertEquals(37379, tiffField0.getDirectoryType());
      assertEquals(8464, tiffField0.getOffset());
      assertEquals((-51), tiffField0.getSortHint());
      assertEquals(894, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[108];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-459), 637, fieldTypeShort0, 637, (-459), byteArray0, byteOrder0, (-459));
      tiffField0.dump();
      assertEquals(1274, tiffField0.getBytesLength());
      assertEquals((-459), tiffField0.getSortHint());
      assertEquals((-459), tiffField0.getTag());
      assertEquals((-459), tiffField0.getOffset());
      assertEquals(637L, tiffField0.getCount());
      assertEquals(637, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4540, (byte) (-72), fieldTypeShort0, 3L, 24L, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-72), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(4540, tiffField0.getTag());
      assertEquals(6, tiffField0.getBytesLength());
      assertEquals(24, tiffField0.getOffset());
      assertEquals(3L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[58];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField('b', 50345, fieldTypeShort0.ASCII, 529, 1L, byteArray0, byteOrder0, (-1982292588));
      tiffField0.dump();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(529, tiffField0.getBytesLength());
      assertEquals(50345, tiffField0.getDirectoryType());
      assertEquals(98, tiffField0.getTag());
      assertEquals((-1982292588), tiffField0.getSortHint());
      assertEquals(529L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (byte)0, fieldTypeAscii0, 0L, (-2732L), byteArray0, byteOrder0, 42);
      tiffField0.dump();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(42, tiffField0.getSortHint());
      assertEquals((-2732), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-2745), "=#5Pf7X");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2367), (-1), fieldTypeByte0, 0L, (-2367), byteArray0, byteOrder0, (-2137));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-1), 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-2137), tiffField0.getSortHint());
      assertEquals((-2367), tiffField0.getOffset());
      assertNull(string0);
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-2367), tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50833, 50833, fieldTypeDouble0, 50833, 50833, byteArray0, byteOrder0, (-1395));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, (byte) (-28));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(50833, tiffField0.getTag());
      assertEquals(406664, tiffField0.getBytesLength());
      assertEquals(50833, tiffField0.getDirectoryType());
      assertEquals((-1395), tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: CurrentICCProfile, fieldType: Double", string0);
      assertNotNull(string0);
      assertEquals(50833, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (byte)0, fieldTypeAscii0, 0L, (-2732L), byteArray0, byteOrder0, 42);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(42, tiffField0.getSortHint());
      assertEquals((-2732), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "8PYHW<>[*9ie\"");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 0L, 0, byteArray0, (ByteOrder) null, 0);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.allocate(41993);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(41993, 41993, fieldTypeByte0, 41993, 41993, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(41993, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(41993, tiffField0.getTag());
      assertEquals(41993, tiffField0.getBytesLength());
      assertEquals(41993, int0);
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-287), 4381, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte)2);
      int int0 = tiffField0.getSortHint();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2, int0);
      assertEquals(4381, tiffField0.getDirectoryType());
      assertEquals((-287), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2143439422, 50, fieldTypeByte0, 1L, 2143439422, byteArray0, byteOrder0, 370);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("2143439422 (0x7fc24a3e: Unknown Tag): ", string0);
      assertEquals(1L, tiffField0.getCount());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(370, tiffField0.getSortHint());
      assertEquals(2143439422, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)23, 50, fieldTypeDouble0, 406664L, (-741), byteArray0, byteOrder0, 50);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(23, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-741L), tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(50, tiffField0.getDirectoryType());
  }
}
