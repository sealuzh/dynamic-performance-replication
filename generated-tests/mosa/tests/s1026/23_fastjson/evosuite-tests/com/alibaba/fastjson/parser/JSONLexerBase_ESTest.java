/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 17:17:15 GMT 2018
 */

package com.alibaba.fastjson.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.parser.Feature;
import com.alibaba.fastjson.parser.JSONLexerBase;
import com.alibaba.fastjson.parser.JSONReaderScanner;
import com.alibaba.fastjson.parser.JSONScanner;
import com.alibaba.fastjson.parser.SymbolTable;
import java.io.CharArrayReader;
import java.io.File;
import java.io.InputStream;
import java.io.LineNumberReader;
import java.io.PipedReader;
import java.io.PushbackReader;
import java.io.StringReader;
import java.math.BigDecimal;
import java.time.ZonedDateTime;
import java.time.chrono.ChronoLocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.GregorianCalendar;
import java.util.HashSet;
import java.util.Locale;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONLexerBase_ESTest extends JSONLexerBase_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("2e6ZITja4GL74x}D", 41);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.integerValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("syntax error, expect [, actual ");
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.nextToken(0);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.isRef();
      jSONReaderScanner0.isEnabled(0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("0Eh\u0007E", (-696));
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0Eh\u0007E", 41);
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      assertEquals((-2), jSONReaderScanner0.matchStat);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      char[] charArray0 = new char[9];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 0);
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.nextToken(12);
      jSONReaderScanner0.isRef();
      boolean boolean0 = jSONReaderScanner0.isEnabled(117);
      assertEquals(20, jSONReaderScanner0.token());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("zy4NLA[Q");
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.nextToken(66);
      boolean boolean0 = jSONReaderScanner0.isEnabled(2576);
      assertEquals('y', jSONReaderScanner0.getCurrent());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("syntax error, expect [, actual ");
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.nextToken(0);
      jSONReaderScanner0.isRef();
      jSONReaderScanner0.isEnabled(0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("\"@RA*Eeje{QIjdz2");
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.scanBoolean('V');
      assertEquals(989, jSONReaderScanner0.getFeatures());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("syntax error, expect [, actual ");
      char[] charArray0 = new char[2];
      charArray0[0] = '!';
      jSONReaderScanner0.scanFieldDouble(charArray0);
      charArray0[1] = '_';
      jSONReaderScanner0.scanFieldInt(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.integerValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&^sA_MNT%4gt?");
      char[] charArray0 = new char[0];
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue(true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // null, 
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("]6?6yV");
      // Undeclared exception!
      try { 
        jSONScanner0.nextTokenWithColon(3451);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match : - ], info : pos 0, json : ]6?6yV
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&A_MNT%4gt?");
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanIdent();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Class<Object> class0 = Object.class;
      jSONReaderScanner0.newCollectionByType(class0);
      assertEquals(18, jSONReaderScanner0.token());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&^sA_MNT%4gt?");
      jSONReaderScanner0.scanIdent();
      long long0 = jSONReaderScanner0.longValue();
      assertEquals(27039L, long0);
      
      Number number0 = jSONReaderScanner0.integerValue();
      assertEquals(989, jSONReaderScanner0.getFeatures());
      assertEquals(27039, number0);
      assertEquals(0, jSONReaderScanner0.matchStat);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&^sA_MNT%4gt?");
      char[] charArray0 = new char[0];
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanFieldUUID(charArray0);
      assertEquals((-1), jSONReaderScanner0.matchStat);
      
      JSONLexerBase.readString(charArray0, 0);
      JSONScanner jSONScanner0 = new JSONScanner("ID0W&^sA_MNT%4gt?", (-1));
      assertEquals((-1), jSONScanner0.getFeatures());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&^sA_MNT%4gt?");
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.nextToken(0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.doubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[3] = '\u0000';
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("*g}UbV1:*.[VY0s}ZM", '\u0000');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanSymbol((SymbolTable) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 0, 0);
      assertEquals(0, jSONReaderScanner0.matchStat);
      
      jSONReaderScanner0.scanInt('H');
      assertEquals(0, jSONReaderScanner0.getFeatures());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(">#^k7>LW", 3451);
      jSONReaderScanner0.scanInt('_');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0Eh\u0007E", 76);
      jSONReaderScanner0.scanInt('#');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&^sA_MNT%4gt?");
      JSONScanner jSONScanner0 = new JSONScanner("ID0W&^sA_MNT%4gt?");
      jSONScanner0.resetStringPosition();
      jSONScanner0.scanNumber();
      char char0 = File.pathSeparatorChar;
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("true");
      SymbolTable symbolTable0 = new SymbolTable(8192);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.scanSymbol(symbolTable0, 'T');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 2485, 2490);
      jSONReaderScanner0.scanLong('e');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("", 2283);
      jSONReaderScanner0.scanInt(']');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("syntax error, expect [, actual ");
      jSONReaderScanner0.tokenName();
      jSONReaderScanner0.scanLong('b');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("syntax error, expect [, actual ", (-1));
      jSONReaderScanner1.scanInt(']');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("*fd\"m^k[2]");
      jSONScanner0.scanString();
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0Eh\u0007E", 69);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d\"");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(stringReader0);
      jSONReaderScanner0.indexOf('>', 39);
      JSONScanner jSONScanner0 = new JSONScanner("d\"", (-1));
      jSONScanner0.isRef();
      jSONScanner0.scanUUID('y');
      // Undeclared exception!
      try { 
        jSONScanner0.setTimeZone('\"', '>', ' ');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("syntax error, expect [, actual ");
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.nextToken(0);
      jSONReaderScanner0.isRef();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSONLexerBase.readString((char[]) null, 0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0Eh\u0007E", 69);
      jSONReaderScanner0.scanDate('5');
      JSONScanner jSONScanner0 = null;
      try {
        jSONScanner0 = new JSONScanner((String) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("06=Eh\u0007E", 69);
      jSONReaderScanner0.scanInt('\u0016');
      Collection<String> collection0 = new HashSet<String>();
      jSONReaderScanner0.putChar('\u0016');
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("A6E");
      int int0 = Calendar.APRIL;
      jSONReaderScanner0.scanDouble('\'');
      jSONReaderScanner0.skipWhitespace();
      JSONScanner jSONScanner0 = new JSONScanner("A6E");
      jSONScanner0.scanFieldDouble(charArray0);
      jSONReaderScanner0.nextIdent();
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, 3);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0Eh\u0007E", 69);
      jSONReaderScanner0.longValue();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("", 2048);
      jSONReaderScanner0.nextToken(76);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("syntax error, expect [, actual ");
      int int0 = 0;
      char[] charArray0 = new char[2];
      jSONReaderScanner0.close();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("new", 117);
      jSONReaderScanner0.nextToken(57);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("null", 374);
      jSONScanner0.scanNumber();
      jSONScanner0.nextToken();
      SymbolTable symbolTable0 = new SymbolTable(117);
      char[] charArray0 = new char[1];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 117, 31);
      jSONReaderScanner0.isRef();
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArrayReader0, 0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 'b');
      char[] charArray0 = new char[6];
      charArray0[0] = 'b';
      charArray0[2] = 'b';
      jSONReaderScanner0.scanFieldDate(charArray0);
      jSONReaderScanner0.nextToken((int) 'b');
      jSONReaderScanner0.isRef();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanHex();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. \u0000
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d\"");
      char[] charArray0 = new char[6];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 24, 735);
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanDate('D');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("error, exp", 5);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("x");
      jSONReaderScanner0.longValue();
      int int0 = Calendar.DAY_OF_WEEK;
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("PZJ", 0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanTrue();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse true
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      char[] charArray0 = new char[7];
      String string0 = "1.2.46";
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("1.2.46");
      jSONReaderScanner0.scanFieldDate(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("=&eQOxFfA2j-Fi", (-2));
      jSONReaderScanner1.nextIdent();
      Feature feature0 = Feature.SupportNonPublicField;
      jSONReaderScanner1.config(feature0, true);
      jSONReaderScanner0.scanFloat('J');
      // Undeclared exception!
      try { 
        jSONReaderScanner1.decimalValue(true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      int int0 = 8;
      JSONScanner jSONScanner0 = new JSONScanner("undefined", 8);
      jSONScanner0.scanNumber();
      jSONScanner0.nextToken();
      SymbolTable symbolTable0 = new SymbolTable(345);
      // Undeclared exception!
      try { 
        jSONScanner0.scanSymbol(symbolTable0, 'N');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("x");
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 0, 0);
      jSONReaderScanner0.scanFieldDate(charArray0);
      jSONReaderScanner1.isBlankInput();
      jSONReaderScanner1.stringVal();
      jSONReaderScanner0.longValue();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken((-1));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("id0w");
      char[] charArray0 = new char[1];
      charArray0[0] = 'G';
      jSONReaderScanner0.matchField(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner(charArray0, 0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 116, 972);
      jSONReaderScanner0.isRef();
      // Undeclared exception!
      try { 
        jSONReaderScanner1.scanHex();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. G
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0Eh");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      long long0 = JSONLexerBase.MULTMIN_RADIX_TEN;
      int int0 = Calendar.DAY_OF_WEEK;
      int int1 = Calendar.TUESDAY;
      jSONReaderScanner0.nextToken(83);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(" =+r7r.h[41? _W");
      jSONReaderScanner1.nextIdent();
      JSONScanner jSONScanner0 = new JSONScanner(" =+r7r.h[41? _W", 83);
      char[] charArray0 = new char[3];
      charArray0[0] = '%';
      charArray0[1] = '%';
      charArray0[2] = '%';
      jSONScanner0.matchField(charArray0);
      jSONReaderScanner1.scanDecimal('%');
      jSONScanner0.getCurrent();
      JSONScanner jSONScanner1 = new JSONScanner("0Eh", (-1));
      jSONScanner1.scanInt('y');
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("syntax error, expect [, actual ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[8];
      charArray0[0] = 'l';
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.nextToken(8);
      long long0 = JSONLexerBase.MULTMIN_RADIX_TEN;
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.subString(125, 8);
      jSONReaderScanner0.scanBoolean(';');
      BigDecimal bigDecimal0 = new BigDecimal(8);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d\"");
      char[] charArray0 = new char[1];
      charArray0[0] = '2';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("d\"");
      jSONReaderScanner0.scanFieldLong(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("scan null error");
      jSONScanner0.charArrayCompare(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.matchField2(charArray0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&^sA_MNT%4gt?");
      char[] charArray0 = new char[1];
      charArray0[0] = 'F';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 0, (-4776));
      jSONReaderScanner1.scanFieldLong(charArray0);
      jSONReaderScanner0.pos();
      jSONReaderScanner1.scanFieldDecimal(charArray0);
      SymbolTable symbolTable0 = null;
      try {
        symbolTable0 = new SymbolTable(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1185263
         //
         verifyException("com.alibaba.fastjson.parser.SymbolTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      char char0 = File.pathSeparatorChar;
      JSONScanner jSONScanner0 = new JSONScanner("@");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("@");
      Locale locale0 = jSONScanner0.getLocale();
      jSONReaderScanner0.setLocale(locale0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanSymbol((SymbolTable) null, '^');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      char char0 = 'b';
      char char1 = 'C';
      char char2 = 'j';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("6", 9999999);
      char[] charArray0 = new char[6];
      charArray0[0] = '8';
      charArray0[1] = 'b';
      SymbolTable symbolTable0 = new SymbolTable(12);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFieldStringArray(charArray0, 112, symbolTable0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d\"");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("d\"", 89);
      jSONReaderScanner0.scanDouble('g');
      jSONReaderScanner0.skipWhitespace();
      SymbolTable symbolTable0 = new SymbolTable('g');
      jSONReaderScanner0.scanSymbolUnQuoted(symbolTable0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken(7);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("e:-`urT`qY>ar");
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("e:-`urT`qY>ar", 0);
      jSONReaderScanner1.scanFieldFloatArray(charArray0);
      jSONReaderScanner1.putChar('m');
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner1.scanIdent();
      jSONReaderScanner1.scanFieldUUID(charArray0);
      jSONReaderScanner1.scanFieldString(charArray0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("e:-`urT`qY>ar");
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      SymbolTable symbolTable0 = null;
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("Zrm&u'-DFX^a$P", 1154);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanSymbol((SymbolTable) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("o");
      jSONReaderScanner0.longValue();
      int int0 = Calendar.DAY_OF_WEEK;
      int int1 = Calendar.TUESDAY;
      jSONReaderScanner0.nextIdent();
      JSONScanner jSONScanner0 = new JSONScanner("PZJ");
      jSONScanner0.info();
      jSONReaderScanner0.integerValue();
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 2485, 2490);
      jSONReaderScanner0.matchStat = 2490;
      jSONReaderScanner0.pos();
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      SymbolTable symbolTable0 = new SymbolTable(83);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanNullOrNew();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse null or new
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      char[] charArray0 = new char[2];
      JSONScanner jSONScanner0 = new JSONScanner("syntax error, expect [, actual ");
      Feature feature0 = Feature.UseObjectArray;
      jSONScanner0.config(feature0, true);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0/^sA_2MNT%4gt?");
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.isRef();
      jSONReaderScanner0.isEnabled(0);
      Object object0 = new Object();
      Object object1 = new Object();
      jSONReaderScanner0.numberString();
      jSONReaderScanner0.scanBoolean(']');
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      SymbolTable symbolTable0 = new SymbolTable(2231);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("error parse true", 923);
      jSONReaderScanner0.scanDate('k');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("_hpFZdLW!CB3DT1Px/x", 2231);
      jSONReaderScanner1.scanInt('6');
      jSONReaderScanner0.isRef();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanHex();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. e
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0Eh\u0007E", 69);
      jSONReaderScanner0.longValue();
      JSONScanner jSONScanner0 = new JSONScanner("0Eh\u0007E");
      // Undeclared exception!
      try { 
        jSONScanner0.nextTokenWithColon();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match : - 0, info : pos 0, json : 0Eh\u0007E
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("null", 374);
      jSONScanner0.scanNumber();
      JSONScanner jSONScanner1 = new JSONScanner("null", 6);
      jSONScanner0.isRef();
      jSONScanner1.scanUUID('J');
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 0);
      SymbolTable symbolTable0 = new SymbolTable(6);
      // Undeclared exception!
      try { 
        jSONScanner0.decimalValue(true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&^sA_MNT%4gt?");
      JSONScanner jSONScanner0 = new JSONScanner("ID0W&^sA_MNT%4gt?");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("ID0W&^sA_MNT%4gt?", 0);
      char char0 = 'g';
      jSONReaderScanner1.scanDouble('g');
      jSONReaderScanner0.skipWhitespace();
      jSONReaderScanner0.nextToken(7);
      SymbolTable symbolTable0 = null;
      try {
        symbolTable0 = new SymbolTable((-2166));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.SymbolTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&^sA_MNT%4gt?");
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.longValue();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "ID0W&^sA_MNT%4gt?");
      JSONScanner jSONScanner0 = new JSONScanner("WriteEnumUsingName", 0);
      jSONScanner0.nextToken();
      char char0 = 'G';
      jSONReaderScanner0.nextToken(14);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("", 101);
      jSONReaderScanner0.scanInt('G');
      // Undeclared exception!
      try { 
        jSONReaderScanner1.scanHex();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. \u0000
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("x");
      char[] charArray0 = new char[0];
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.nextToken((int) '{');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextToken(0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // EOF error
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 0, 0);
      jSONReaderScanner0.scanFieldDate(charArray0);
      jSONReaderScanner1.isBlankInput();
      jSONReaderScanner1.stringVal();
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.nextToken(11);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[5] = '|';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 103);
      jSONReaderScanner0.scanFieldDate(charArray0);
      jSONReaderScanner0.nextToken(103);
      jSONReaderScanner0.isRef();
      jSONReaderScanner0.scanInt('8');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanHex();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("syntax error, expect [, actual ");
      jSONReaderScanner0.isBlankInput();
      char[] charArray0 = new char[2];
      charArray0[0] = 'l';
      charArray0[1] = ';';
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.nextToken(0);
      jSONReaderScanner0.nextIdent();
      JSONScanner jSONScanner0 = new JSONScanner("syntax error, expect [, actual ", 103);
      char[] charArray1 = new char[4];
      charArray1[0] = 'g';
      charArray1[1] = 'M';
      jSONScanner0.bytesValue();
      charArray1[2] = 'M';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray1, 0, 0);
      jSONReaderScanner1.isBlankInput();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.nextTokenWithChar('X');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match X - e, info : 
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&A_MNT%4gt?");
      char[] charArray0 = new char[0];
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner0.scanFieldLong(charArray0);
      jSONReaderScanner0.scanFieldInt(charArray0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.nextToken(0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 68, 41);
      jSONReaderScanner0.scanFieldLong(charArray0);
      SymbolTable symbolTable0 = new SymbolTable(68);
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 2485, 2490);
      jSONReaderScanner0.matchStat = 2490;
      jSONReaderScanner0.pos();
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      SymbolTable symbolTable0 = new SymbolTable(83);
      jSONReaderScanner0.isEnabled(83);
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[1] = 'u';
      charArray0[2] = 'u';
      charArray0[3] = 'u';
      String string0 = "tn 3ND%L";
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("tn 3ND%L");
      jSONReaderScanner0.scanFieldInt(charArray0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      char char0 = '|';
      JSONReaderScanner jSONReaderScanner1 = null;
      try {
        jSONReaderScanner1 = new JSONReaderScanner(charArray0, (-2), 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.CharArrayReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[1] = 'u';
      charArray0[2] = 'u';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 624);
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.scanFieldSymbol(charArray0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      char[] charArray0 = new char[7];
      char char0 = '\\';
      charArray0[0] = '\\';
      charArray0[1] = ' ';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("1.2.46");
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.nextIdent();
      JSONScanner jSONScanner0 = null;
      try {
        jSONScanner0 = new JSONScanner((String) null, (-4299));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&A_MNT%4gt?");
      jSONReaderScanner0.indexOf('h', 40);
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("ID0W&A_MNT%4gt?", 1788);
      jSONReaderScanner0.scanSymbol((SymbolTable) null);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0Eh\u0007E", 69);
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.intValue();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(",I]");
      jSONReaderScanner1.scanFloat(',');
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(".");
      jSONReaderScanner0.info();
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanLong('x');
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner0.scanFieldString(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(".", (-1));
      jSONReaderScanner1.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanNumber();
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&^sA_MNT%4gt?");
      JSONScanner jSONScanner0 = new JSONScanner("ID0W&^sA_MNT%4gt?");
      String string0 = "3.H'7zSi)R?')";
      StringReader stringReader0 = new StringReader("3.H'7zSi)R?')");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(stringReader0, 0);
      jSONReaderScanner0.scanNumber();
      char[] charArray0 = new char[0];
      jSONReaderScanner1.scanFieldFloat(charArray0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("ID0W&^sA_MNT%4gt?");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.integerValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("I0W&^A_3MN%4t?");
      char[] charArray0 = new char[0];
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanFieldUUID(charArray0);
      char char0 = File.pathSeparatorChar;
      JSONScanner jSONScanner0 = new JSONScanner("I0W&^A_3MN%4t?");
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.nextToken(0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("I0W&^A_3MN%4t?");
      jSONReaderScanner0.scanDecimal(':');
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("I0W&^A_3MN%4t?", (-1910055585));
      jSONReaderScanner0.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanNumber();
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("syntax error, expect [, actual ");
      jSONReaderScanner0.tokenName();
      jSONReaderScanner0.pos();
      char[] charArray0 = new char[2];
      charArray0[0] = 'd';
      char char0 = 'u';
      charArray0[1] = 'u';
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      SymbolTable symbolTable0 = null;
      try {
        symbolTable0 = new SymbolTable(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1185263
         //
         verifyException("com.alibaba.fastjson.parser.SymbolTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("", 70);
      Class<Object> class0 = Object.class;
      jSONScanner0.scanFieldStringArray(charArray0, class0);
      jSONScanner0.scanLong('l');
      Integer integer0 = new Integer(70);
      jSONScanner0.getFeatures();
      jSONScanner0.isEnabled(272, 70);
      // Undeclared exception!
      try { 
        jSONScanner0.nextTokenWithChar('l');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // not match l - \u001A, info : pos 0, json : 
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("{_$)UJ", (-2163));
      jSONScanner0.stringVal();
      jSONScanner0.isEnabled(98, 1);
      jSONScanner0.scanLong('b');
      jSONScanner0.indexOf('b', 98);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("syntax error, expect [, actual ");
      jSONReaderScanner0.isBlankInput();
      char[] charArray0 = new char[2];
      charArray0[1] = ';';
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.nextToken(0);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.scanLong('i');
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.nextToken(17);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("syntax error, expect [, actual ", 17);
      jSONReaderScanner1.isRef();
      // Undeclared exception!
      try { 
        jSONReaderScanner1.scanHex();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. s
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("null", 374);
      jSONScanner0.scanNumber();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSONScanner jSONScanner1 = new JSONScanner("null", 6);
      jSONScanner0.isRef();
      jSONScanner1.scanUUID('J');
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 0);
      boolean boolean0 = true;
      SymbolTable symbolTable0 = new SymbolTable(6);
      jSONScanner0.scanIdent();
      // Undeclared exception!
      try { 
        jSONScanner1.scanSymbol(symbolTable0, '[');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("syntax error, expect [, actual ");
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.nextToken(19);
      JSONReaderScanner jSONReaderScanner1 = null;
      try {
        jSONReaderScanner1 = new JSONReaderScanner((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      char[] charArray0 = new char[4];
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 64);
      jSONReaderScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner0.scanFieldString(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(")seKp2*juJOZUQ5<C", (-1842572883));
      jSONReaderScanner1.scanFieldFloat(charArray0);
      jSONReaderScanner0.scanNumber();
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      String string0 = "syntax error, expect [, actual ";
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("syntax error, expect [, actual ");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("syntax error, expect [, actual ");
      char[] charArray0 = new char[0];
      jSONReaderScanner1.scanFieldDate(charArray0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("/x", 38);
      // Undeclared exception!
      try { 
        jSONReaderScanner2.nextIdent();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("0Eh=E", (-696));
      jSONScanner0.isBlankInput();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0Eh=E", (-696));
      jSONReaderScanner0.scanBoolean('\\');
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("syntax error, expect [, actual ");
      SymbolTable symbolTable0 = new SymbolTable(93);
      jSONReaderScanner0.addSymbol(109, 41, 109, symbolTable0);
      jSONReaderScanner0.isBlankInput();
      char[] charArray0 = new char[2];
      charArray0[0] = 'l';
      charArray0[1] = ';';
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.nextToken(0);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.scanLong('i');
      jSONReaderScanner0.nextToken();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("\"", 664);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("miw", 44);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.scanSymbol(symbolTable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("06=Eh\u0007E", 69);
      jSONReaderScanner0.scanInt('#');
      Class<MockHijrahDate> class0 = MockHijrahDate.class;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.newCollectionByType(class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate cannot be cast to java.util.Collection
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      char[] charArray0 = new char[1];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("}^^%", (-513));
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("8`zS!$W", 81);
      jSONScanner0.scanFieldLong(charArray0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&^sA_MNT%4gt?");
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.nextToken(20);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("..", 78);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.doubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d\"");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(stringReader0);
      JSONScanner jSONScanner0 = new JSONScanner("d\"", 670);
      char[] charArray0 = jSONReaderScanner0.sub_chars(1553, 670);
      jSONReaderScanner0.subString(23, 1553);
      jSONScanner0.scanFieldFloatArray(charArray0);
      jSONReaderScanner0.scanBoolean('U');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.integerValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("-3K`}>!&}mK");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("-3K`}>!&}mK");
      jSONReaderScanner1.scanDouble('~');
      jSONReaderScanner0.nextToken(4);
      jSONReaderScanner0.nextIdent();
      Integer integer0 = new Integer((-2571));
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("null", 374);
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 0);
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanFieldUUID(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("null", 32);
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanIdent();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("null");
      jSONReaderScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner1.scanDate('P');
      jSONReaderScanner0.close();
      jSONReaderScanner0.isRef();
      jSONReaderScanner0.isEnabled(0);
      JSONReaderScanner jSONReaderScanner2 = null;
      try {
        jSONReaderScanner2 = new JSONReaderScanner((String) null, 552);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("8.sjwG", (-1441));
      jSONReaderScanner0.scanLong('\"');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("d\"");
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(charArray0, 1431, 5);
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanDate('l');
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner("8.sjwG", 11);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-11);
      byteArray0[1] = (byte) (-11);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("com.alibaba.fastjson.TypeRexerence");
      jSONReaderScanner0.scanFloat('A');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanHex();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. c
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0Eh\u0007E", 76);
      jSONReaderScanner0.subString(1006, 1006);
      jSONReaderScanner0.scanBoolean('m');
      JSONScanner jSONScanner0 = new JSONScanner("0Eh\u0007E", 83);
      // Undeclared exception!
      try { 
        jSONScanner0.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&^sA_MNT%4gt?");
      char[] charArray0 = new char[0];
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner0.charAt(36);
      JSONScanner jSONScanner0 = new JSONScanner("ID0W&^sA_MNT%4gt?");
      jSONScanner0.scanType("D0W");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue(false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // For input string: \"&^sA\", 
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("false", 373);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      jSONReaderScanner0.scanBoolean('u');
      TimeZone.getTimeZone("%n");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanHex();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. f
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TreeSet");
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanIdent();
      long long0 = JSONLexerBase.MULTMIN_RADIX_TEN;
      char[] charArray0 = new char[8];
      jSONReaderScanner0.isRef();
      SymbolTable symbolTable0 = new SymbolTable(149);
      Class<Object> class0 = Object.class;
      jSONReaderScanner0.scanEnum(class0, symbolTable0, '\u0000');
      jSONReaderScanner0.getCalendar();
      jSONReaderScanner0.isEnabled(188);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0Eh\u0007E");
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanIdent();
      try { 
        jSONReaderScanner0.longValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // 0Eh\u0007E
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("d\"");
      jSONReaderScanner0.longValue();
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue(false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      int int0 = 70;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("synt@x error, position at ", 70);
      SymbolTable symbolTable0 = new SymbolTable(6);
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      jSONReaderScanner0.isEnabled((-2245));
      JSONReaderScanner jSONReaderScanner1 = null;
      try {
        jSONReaderScanner1 = new JSONReaderScanner((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("0Eh\u0007E", (-696));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0Eh\u0007E");
      jSONScanner0.isBlankInput();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0Eh\u0007E", (-696));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "true");
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFloat('A');
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      char[] charArray0 = new char[7];
      String string0 = "1.2.46";
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("1.2.46");
      jSONReaderScanner0.scanFieldDate(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("=&eQOxFfA2j-Fi", (-2));
      jSONReaderScanner1.nextIdent();
      jSONReaderScanner0.scanFloat('J');
      // Undeclared exception!
      try { 
        jSONReaderScanner1.decimalValue(true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d\"");
      char[] charArray0 = new char[6];
      charArray0[0] = ')';
      charArray0[1] = '8';
      charArray0[2] = 'P';
      charArray0[3] = '{';
      char[] charArray1 = new char[9];
      charArray1[0] = '-';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 95);
      jSONReaderScanner0.nextToken(10);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.scanLong('P');
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.nextToken(975);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("d\"", 1342);
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        jSONReaderScanner1.scanHex();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. d
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[3];
      charArray0[0] = '{';
      charArray0[1] = ')';
      charArray0[2] = ')';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 34, 69);
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.nextIdent();
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0%mfW");
      jSONReaderScanner0.scanLong('y');
      char[] charArray0 = new char[1];
      charArray0[0] = 'y';
      jSONReaderScanner0.matchField(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("yntax");
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.nextToken(15);
      JSONReaderScanner jSONReaderScanner2 = null;
      try {
        jSONReaderScanner2 = new JSONReaderScanner((String) null, (-1));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("}^^%", (-513));
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("lt=xa8)xA&94oj>401");
      jSONReaderScanner1.matchField(charArray0);
      jSONReaderScanner0.scanFloat('v');
      // Undeclared exception!
      try { 
        jSONReaderScanner1.scanHex();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. t
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d\"");
      char[] charArray0 = new char[6];
      charArray0[0] = ')';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 7146);
      jSONReaderScanner0.scanFieldDate(charArray0);
      jSONReaderScanner0.nextToken(3881);
      jSONReaderScanner0.isRef();
      jSONReaderScanner0.scanInt('8');
      jSONReaderScanner0.putChar(')');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanHex();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. \u0000
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&^sA_MNT%4gt?");
      char[] charArray0 = new char[0];
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanIdent();
      StringReader stringReader0 = new StringReader("ID0W&^sA_MNT%4gt?");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(stringReader0, 44);
      jSONReaderScanner1.scanFieldUUID(charArray0);
      jSONReaderScanner1.scanFieldString(charArray0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(",I]");
      jSONReaderScanner2.scanFieldSymbol(charArray0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      char char0 = 'h';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(")ava.t/*e.Period");
      jSONReaderScanner0.isRef();
      SymbolTable symbolTable0 = new SymbolTable('h');
      Class<Object> class0 = Object.class;
      jSONReaderScanner0.scanEnum(class0, symbolTable0, 'h');
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar('h', 'h', (-1), (-1), (-1), 'h');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanSymbolUnQuoted(symbolTable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal identifier : )
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("+e%}");
      char[] charArray0 = new char[2];
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 0);
      jSONReaderScanner1.scanDouble('\u0000');
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("+e%}", 0);
      jSONReaderScanner2.nextIdent();
      JSONScanner jSONScanner0 = new JSONScanner("PZJ");
      jSONScanner0.info();
      jSONReaderScanner2.integerValue();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("d\"");
      jSONReaderScanner0.longValue();
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFieldUUID(charArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&A_MNT%4gt?");
      char[] charArray0 = new char[0];
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.subString(17, 928);
      jSONReaderScanner0.scanString('w');
      jSONReaderScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner0.scanFieldLong(charArray0);
      jSONReaderScanner0.scanFieldInt(charArray0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.nextToken(0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0/^sA_2MNT%4gt?");
      char[] charArray0 = new char[0];
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanFieldUUID(charArray0);
      int int0 = 798;
      JSONScanner jSONScanner0 = new JSONScanner("ID0/^sA_2MNT%4gt?", 798);
      char[] charArray1 = new char[10];
      SymbolTable symbolTable0 = new SymbolTable(31);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanSymbol(symbolTable0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("d\"");
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.scanLong('w');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("d\"");
      jSONReaderScanner1.nextToken((-1));
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("com.alibaba.fastjson.parser.JSONReaderScanner", (-2501));
      jSONReaderScanner0.isRef();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanHex();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. \"
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      long long0 = JSONLexerBase.MULTMIN_RADIX_TEN;
      char[] charArray0 = new char[7];
      charArray0[2] = '3';
      charArray0[1] = '3';
      charArray0[2] = '3';
      charArray0[3] = '3';
      charArray0[4] = '3';
      charArray0[5] = '3';
      charArray0[6] = '3';
      JSONScanner jSONScanner0 = new JSONScanner("nid0w", 798);
      jSONScanner0.scanLong('3');
      Integer integer0 = new Integer(798);
      jSONScanner0.charArrayCompare(charArray0);
      // Undeclared exception!
      try { 
        jSONScanner0.nextToken(119);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse new
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      long long0 = JSONLexerBase.MULTMIN_RADIX_TEN;
      jSONReaderScanner0.scanIdent();
      char[] charArray0 = new char[7];
      charArray0[2] = 'D';
      charArray0[1] = 'D';
      charArray0[2] = 'D';
      charArray0[3] = 'D';
      charArray0[4] = 'D';
      charArray0[5] = 'D';
      charArray0[6] = 'F';
      jSONReaderScanner0.scanFieldUUID(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("nid0w", 798);
      jSONScanner0.scanLong('D');
      Integer integer0 = new Integer(798);
      Class<Feature> class0 = Feature.class;
      jSONScanner0.scanFieldStringArray(charArray0, class0);
      jSONScanner0.scanStringArray((Collection<String>) null, 'n');
      jSONScanner0.isEnabled((-2), 119);
      jSONScanner0.charArrayCompare(charArray0);
      Class<MockHijrahDate> class1 = MockHijrahDate.class;
      jSONScanner0.scanFieldStringArray(charArray0, class1);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 13, 13);
      Calendar calendar0 = MockCalendar.getInstance();
      jSONReaderScanner0.calendar = calendar0;
      ArrayList<String> arrayList0 = new ArrayList<String>();
      arrayList0.spliterator();
      jSONReaderScanner0.scanStringArray(arrayList0, '[');
      jSONReaderScanner0.scanFieldDouble(charArray0);
      jSONReaderScanner0.charArrayCompare(charArray0);
      jSONReaderScanner0.charArrayCompare(charArray0);
      jSONReaderScanner0.subString(13, 13);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 45, 45);
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanFieldUUID(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("Sc6n$UqN5k>", (-1));
      jSONReaderScanner1.scanDouble('~');
      jSONReaderScanner0.skipWhitespace();
      jSONReaderScanner1.nextToken((-1));
      jSONReaderScanner0.nextIdent();
      Integer integer0 = new Integer(1691);
      jSONReaderScanner0.scanFieldSymbol(charArray0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("java.time.Period", 'h');
      jSONReaderScanner0.isRef();
      jSONReaderScanner0.getCalendar();
      jSONReaderScanner0.scanDecimal('h');
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("d\"");
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.nextToken((-464));
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("hAUw+wV]");
      jSONReaderScanner1.isRef();
      char[] charArray0 = new char[2];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      jSONReaderScanner1.scanDate('f');
      jSONReaderScanner0.scanInt('\"');
      jSONReaderScanner1.scanDouble('f');
      jSONReaderScanner1.setToken(0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("n");
      char[] charArray0 = new char[0];
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanFieldUUID(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("oracle");
      jSONReaderScanner0.scanFieldInt(charArray0);
      jSONReaderScanner1.scanFieldBoolean(charArray0);
      BigDecimal bigDecimal0 = new BigDecimal((long) 0);
      JSONScanner jSONScanner0 = new JSONScanner("oracle");
      JSONScanner jSONScanner1 = null;
      try {
        jSONScanner1 = new JSONScanner(charArray0, (-574));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&^sA_MNT%4gt?");
      char[] charArray0 = new char[0];
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner0.scanFieldString(charArray0);
      JSONScanner jSONScanner0 = new JSONScanner("null", (-1));
      jSONScanner0.scanFieldUUID(charArray0);
      jSONScanner0.nextToken();
      jSONReaderScanner0.scanFieldDate(charArray0);
      jSONScanner0.scanString();
      char[] charArray1 = new char[0];
      int int0 = (-3545);
      JSONScanner jSONScanner1 = new JSONScanner(charArray1, int0);
      jSONScanner1.matchField2(charArray1);
      jSONScanner0.scanFieldDate(charArray1);
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("d\"");
      jSONReaderScanner0.longValue();
      char[] charArray0 = new char[5];
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue(false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("undefined");
      TimeZone timeZone0 = TimeZone.getTimeZone("b");
      Locale locale0 = Locale.SIMPLIFIED_CHINESE;
      timeZone0.observesDaylightTime();
      timeZone0.getDisplayName(true, 0, locale0);
      jSONReaderScanner0.setTimeZone(timeZone0);
      char[] charArray0 = new char[1];
      charArray0[0] = 'X';
      Class<MockMinguoDate> class0 = MockMinguoDate.class;
      jSONReaderScanner0.scanFieldStringArray(charArray0, class0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "dmb0.TYmkwI");
      JSONScanner jSONScanner0 = new JSONScanner("cc", 0);
      jSONScanner0.isBlankInput();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("(N>V9!Q", 0);
      char[] charArray0 = new char[6];
      charArray0[0] = 'h';
      charArray0[1] = 'h';
      charArray0[2] = '\\';
      charArray0[3] = '\\';
      charArray0[4] = '\\';
      charArray0[5] = '\\';
      jSONScanner0.scanFieldDouble(charArray0);
      jSONReaderScanner0.nextIdent();
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("QID0W&^sA_MNT%4gt?");
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.longValue();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "QID0W&^sA_MNT%4gt?");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("false");
      char[] charArray0 = new char[4];
      charArray0[0] = 'R';
      charArray0[1] = 'R';
      charArray0[2] = 'R';
      JSONScanner jSONScanner0 = new JSONScanner("false", 0);
      jSONScanner0.scanFieldSymbol(charArray0);
      jSONReaderScanner0.scanDecimal('n');
      jSONScanner0.scanFalse();
      jSONScanner0.scanFieldBoolean(charArray0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0%mfW");
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.scanLong('j');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("yntax");
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.nextToken(15);
      int int0 = 1207;
      JSONScanner jSONScanner0 = new JSONScanner("fS7,5I_@]FI~!,5b", (-4804));
      char[] charArray0 = new char[4];
      charArray0[0] = 'j';
      charArray0[1] = 'j';
      charArray0[2] = 'j';
      charArray0[3] = 'j';
      jSONScanner0.scanFieldUUID(charArray0);
      // Undeclared exception!
      try { 
        jSONScanner0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      String string0 = "error parse true";
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("error parse true", 4);
      jSONReaderScanner0.next();
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, 4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str.lit
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("8.sjwG", (-1441));
      jSONReaderScanner0.tokenName();
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.scanLong('e');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("vMS\"8", 120);
      JSONScanner jSONScanner0 = new JSONScanner(".");
      char[] charArray0 = new char[8];
      charArray0[0] = 'e';
      charArray0[1] = 'e';
      charArray0[2] = 'e';
      charArray0[3] = 'e';
      charArray0[4] = 'e';
      charArray0[5] = 'e';
      charArray0[6] = 'e';
      charArray0[7] = 'e';
      jSONScanner0.scanFieldSymbol(charArray0);
      jSONReaderScanner0.scanDecimal('p');
      // Undeclared exception!
      try { 
        jSONScanner0.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("java.time.Period", 'h');
      jSONReaderScanner0.isRef();
      SymbolTable symbolTable0 = new SymbolTable('h');
      Class<Object> class0 = Object.class;
      jSONReaderScanner0.scanEnum(class0, symbolTable0, 'h');
      jSONReaderScanner0.getCalendar();
      jSONReaderScanner0.scanSymbolUnQuoted(symbolTable0);
      jSONReaderScanner0.scanDecimal('h');
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = ';';
      charArray0[1] = '{';
      charArray0[2] = 'A';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 43);
      jSONReaderScanner0.nextToken(127);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      char[] charArray0 = new char[0];
      char char0 = File.pathSeparatorChar;
      JSONScanner jSONScanner0 = new JSONScanner("@");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("@");
      Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFieldStringArray(charArray0, class0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.time.chrono.ChronoLocalDate
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      String string0 = "d\"";
      StringReader stringReader0 = new StringReader("d\"");
      char[] charArray0 = new char[6];
      charArray0[0] = ')';
      charArray0[3] = '{';
      char[] charArray1 = new char[9];
      charArray1[0] = '-';
      charArray1[1] = '8';
      charArray1[2] = '{';
      charArray1[4] = '{';
      charArray1[5] = '{';
      int int0 = 11;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray1, 5, 11);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.longValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      char[] charArray0 = new char[0];
      char char0 = File.pathSeparatorChar;
      JSONScanner jSONScanner0 = new JSONScanner("I0W&^A_3MN%4t?");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("I0W&^A_3MN%4t?");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanSymbol((SymbolTable) null, '^');
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0Eh");
      jSONReaderScanner0.scanFieldInt(charArray0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanDecimal('\\');
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d\"");
      char[] charArray0 = new char[6];
      charArray0[0] = ')';
      charArray0[1] = '8';
      charArray0[3] = '{';
      charArray0[4] = 'A';
      charArray0[5] = '8';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 11, 91);
      jSONReaderScanner0.longValue();
      char[] charArray1 = new char[2];
      charArray1[0] = ')';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 0, 4);
      jSONReaderScanner1.scanFieldString(charArray0);
      jSONReaderScanner1.scanFieldBoolean(charArray1);
      jSONReaderScanner1.isBlankInput();
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(charArray1, 17, 17);
      jSONReaderScanner0.nextToken(16);
      jSONReaderScanner2.sub_chars(11, 31);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0%mfW");
      jSONReaderScanner0.scanLong('y');
      char[] charArray0 = new char[1];
      jSONReaderScanner0.scanFieldUUID(charArray0);
      char char0 = '\'';
      jSONReaderScanner0.scanInt('\'');
      String string0 = "}^^%";
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("\u0000\u0000\u0000\u0000\u0000", 0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.indexOf('N', (-505));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -505
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("8.sjwG", (-1441));
      jSONReaderScanner0.scanLong('\"');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("d\"");
      jSONReaderScanner1.isBlankInput();
      jSONReaderScanner1.nextToken((-464));
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("hAUw+wV]");
      jSONReaderScanner2.isRef();
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner("is", (-1));
      char[] charArray0 = new char[2];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      JSONReaderScanner jSONReaderScanner4 = new JSONReaderScanner(charArray0, 512, 144);
      jSONReaderScanner4.scanFieldUUID(charArray0);
      jSONReaderScanner0.scanDate('\"');
      JSONReaderScanner jSONReaderScanner5 = new JSONReaderScanner("d\"", 120);
      jSONReaderScanner0.scanInt('\"');
      // Undeclared exception!
      try { 
        jSONReaderScanner2.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("syntax error, expect [, actual ");
      jSONReaderScanner0.isBlankInput();
      char[] charArray0 = new char[8];
      charArray0[0] = 'l';
      charArray0[1] = ';';
      jSONReaderScanner0.nextToken(0);
      jSONReaderScanner0.nextIdent();
      JSONScanner jSONScanner0 = new JSONScanner("syntax error, expect [, actual ", 103);
      JSONScanner jSONScanner1 = new JSONScanner("S(\"mPKcP\"6<");
      jSONScanner1.info();
      jSONScanner0.scanFieldDouble(charArray0);
      jSONReaderScanner0.nextIdent();
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = ']';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 1209, 105);
      jSONReaderScanner0.intValue();
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.nextToken(23);
      jSONReaderScanner0.isRef();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSONLexerBase.readString(charArray0, 0);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ti)+`#hv", 117);
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.scanBoolean('m');
      char[] charArray0 = new char[2];
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 1283);
      jSONReaderScanner0.skipWhitespace();
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner1.nextToken(117);
      jSONReaderScanner0.scanInt('m');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanNullOrNew();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse null or new
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '.';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 3985, 3237);
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.subString(816, 673);
      jSONReaderScanner0.scanBoolean('.');
      jSONReaderScanner0.scanFloat('.');
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("8.sjwG", (-1441));
      jSONReaderScanner0.scanLong('\"');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("d\"");
      jSONReaderScanner1.isBlankInput();
      int int0 = (-464);
      jSONReaderScanner1.nextToken((-464));
      jSONReaderScanner1.scanDouble('\"');
      String string0 = "hAUw+wV]";
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("hAUw+wV]");
      jSONReaderScanner2.isRef();
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner("is", (-1));
      char[] charArray0 = new char[2];
      charArray0[0] = '\"';
      charArray0[1] = '\"';
      jSONReaderScanner3.scanFieldUUID(charArray0);
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner1.scanIdent();
      JSONReaderScanner jSONReaderScanner4 = null;
      try {
        jSONReaderScanner4 = new JSONReaderScanner(charArray0, (-464));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.CharArrayReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'A';
      charArray0[1] = '8';
      charArray0[2] = 'A';
      charArray0[3] = 'P';
      charArray0[4] = ')';
      charArray0[5] = 'P';
      charArray0[6] = ')';
      charArray0[7] = 'A';
      charArray0[8] = '8';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("\"", (-926));
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString('7');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("o@acle.sbl.");
      jSONReaderScanner0.scanLong('a');
      jSONReaderScanner0.matchField(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("o@acle.sbl.");
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.subString(2475, 0);
      jSONReaderScanner0.scanBoolean('a');
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("scan");
      try { 
        jSONReaderScanner0.integerValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"e.sbl.\u0000\u0000\u0000\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      char[] charArray0 = new char[7];
      charArray0[0] = 'A';
      charArray0[1] = ')';
      charArray0[2] = 'A';
      charArray0[3] = ')';
      charArray0[4] = ']';
      charArray0[5] = ')';
      charArray0[6] = '8';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 224);
      jSONReaderScanner0.scanDouble(')');
      jSONReaderScanner0.skipWhitespace();
      SymbolTable symbolTable0 = new SymbolTable(224);
      jSONReaderScanner0.scanSymbolUnQuoted(symbolTable0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 6, (-1));
      jSONReaderScanner1.nextToken(6);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("A");
      // Undeclared exception!
      try { 
        jSONReaderScanner1.floatValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '.';
      charArray0[1] = 'g';
      charArray0[2] = 'c';
      charArray0[3] = 'm';
      charArray0[4] = 'Q';
      charArray0[5] = 'b';
      JSONScanner jSONScanner0 = new JSONScanner(charArray0, 0, 0);
      jSONScanner0.isEnabled(0, 0);
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("syntax error, expect [, actual ");
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[8];
      charArray0[0] = 'l';
      JSONScanner jSONScanner0 = new JSONScanner("syntax error, expect [, actual ", 8);
      Class<Feature> class0 = Feature.class;
      jSONScanner0.scanFieldStringArray(charArray0, class0);
      jSONScanner0.scanLong('l');
      jSONScanner0.getFeatures();
      jSONScanner0.isEnabled(7, 34);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("a(2ah%y|a", 10);
      jSONReaderScanner0.scanInt('h');
      jSONReaderScanner0.charAt(8);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("}^^%", (-513));
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.scanFieldIntArray(charArray0);
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0/^sA_2MNT%4gt?");
      jSONReaderScanner0.scanString('@');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("7D`+J)uT_", 89);
      jSONReaderScanner0.scanDouble('g');
      char char0 = 'j';
      char char1 = 'T';
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("^sA_2M");
      // Undeclared exception!
      try { 
        jSONReaderScanner1.scanDecimal('j');
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&^sA_MNT%4gt?");
      JSONScanner jSONScanner0 = new JSONScanner("ID0W&^sA_MNT%4gt?");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("ID0W&^sA_MNT%4gt?", 0);
      jSONReaderScanner1.scanDouble('g');
      jSONReaderScanner0.nextToken(7);
      jSONReaderScanner0.nextToken(89);
      jSONReaderScanner1.nextIdent();
      JSONScanner jSONScanner1 = new JSONScanner("fJ!7Foew^@9T}52`g[", 351);
      jSONReaderScanner0.scanDouble('g');
      jSONReaderScanner0.scanDecimal('~');
      jSONScanner1.info();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.integerValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d\"");
      char[] charArray0 = new char[6];
      charArray0[0] = ')';
      charArray0[1] = '8';
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray1 = new char[3];
      charArray1[0] = ')';
      charArray1[1] = '8';
      charArray1[2] = ')';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray1, 6, 6);
      jSONReaderScanner0.scanFieldDate(charArray0);
      jSONReaderScanner0.isBlankInput();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("d\"", (-2786));
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.nextToken(18);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("rh-tsCiL*GX|=3<nh>1");
      jSONReaderScanner2.isRef();
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner(charArray0, 333, 14);
      // Undeclared exception!
      try { 
        jSONReaderScanner3.decimalValue(true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      char[] charArray0 = new char[18];
      charArray0[0] = 'h';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("-3K`}>!&}mK");
      jSONReaderScanner0.scanLong('y');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("{c~:`{,1*Fy~~");
      jSONReaderScanner1.isBlankInput();
      jSONReaderScanner1.nextToken((-1));
      jSONReaderScanner0.isRef();
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("-3K`}>!&}mK", 192);
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner("{c~:`{,1*Fy~~");
      // Undeclared exception!
      try { 
        jSONReaderScanner3.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      char char0 = '{';
      int int0 = (-2551);
      char[] charArray0 = new char[4];
      charArray0[0] = 'D';
      charArray0[1] = '%';
      charArray0[2] = '8';
      charArray0[3] = '8';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 43);
      jSONReaderScanner0.nextToken((-2551));
      jSONReaderScanner0.nextIdent();
      char char1 = 'b';
      jSONReaderScanner0.scanLong('1');
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.nextToken(366);
      char[] charArray1 = new char[3];
      charArray1[0] = char1;
      charArray1[1] = char0;
      jSONReaderScanner0.scanFieldLong(charArray0);
      String string0 = "34";
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(string0, int0);
      jSONReaderScanner0.isRef();
      jSONReaderScanner0.scanHex();
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QlUR]q]X_:/_J=");
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0, 41);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(lineNumberReader0);
      jSONReaderScanner0.scanIdent();
      int int0 = Calendar.TUESDAY;
      lineNumberReader0.readLine();
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.nextToken(3);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("QlUR]q]X_:/_J=");
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      char[] charArray0 = new char[9];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 0);
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.nextToken(2);
      jSONReaderScanner0.isRef();
      SymbolTable symbolTable0 = new SymbolTable(2);
      jSONReaderScanner0.scanSymbolWithSeperator(symbolTable0, ',');
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d\"");
      char[] charArray0 = new char[6];
      charArray0[0] = ')';
      charArray0[2] = '\u0000';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 5, 42);
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.nextToken(5);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("hAUw+wV]");
      jSONReaderScanner0.isRef();
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("is", '\u0000');
      jSONReaderScanner2.scanFieldUUID(charArray0);
      jSONReaderScanner1.scanFieldDouble(charArray0);
      jSONReaderScanner2.scanDate('V');
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner("is", (-1846248386));
      jSONReaderScanner0.scanInt('p');
      // Undeclared exception!
      try { 
        jSONReaderScanner1.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("0Eh\u0007E", (-696));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0Eh\u0007E");
      jSONScanner0.isBlankInput();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0Eh\u0007E", (-696));
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[1] = '\\';
      charArray0[2] = '\\';
      charArray0[3] = '\\';
      jSONScanner0.scanFieldDouble(charArray0);
      jSONReaderScanner0.nextIdent();
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test155()  throws Throwable  {
      String string0 = "0Eh\\7E";
      JSONScanner jSONScanner0 = new JSONScanner("0Eh\u0007E", (-696));
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0Eh\u0007E", (-696));
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanDouble(',');
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test156()  throws Throwable  {
      int int0 = 69;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0Eh\u0007E", 69);
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanIdent();
      char[] charArray0 = new char[8];
      charArray0[0] = '>';
      jSONReaderScanner0.nextIdent();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 69);
      jSONReaderScanner0.scanDouble('S');
      jSONReaderScanner0.skipWhitespace();
      SymbolTable symbolTable0 = new SymbolTable(int0);
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        jSONReaderScanner1.decimalValue(boolean0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test157()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("o@acle.sbl.");
      int int0 = Calendar.APRIL;
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("o@acle.sbl.", 3);
      jSONReaderScanner1.scanFieldDecimal(charArray0);
      SymbolTable symbolTable0 = new SymbolTable(2035);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("o@acle.sbl.", (-1));
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner("o@acle.sbl.", 41);
      jSONReaderScanner0.scanSymbol(symbolTable0);
  }

  @Test(timeout = 4000)
  public void test158()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0Eh\u0007E", 69);
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanIdent();
      char[] charArray0 = new char[8];
      charArray0[0] = '>';
      jSONReaderScanner0.nextToken(1702);
      jSONReaderScanner0.nextIdent();
      JSONScanner jSONScanner0 = new JSONScanner("0Eh\u0007E", (-1035));
      SymbolTable symbolTable0 = new SymbolTable(1039);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("f.&VH#zMbZA[8c~a6", 1039);
      jSONReaderScanner1.scanBoolean('W');
      char[] charArray1 = new char[3];
      charArray1[0] = '>';
      charArray1[1] = '>';
      charArray1[2] = '{';
      jSONReaderScanner0.scanFieldInt(charArray1);
      jSONReaderScanner0.scanUUID('5');
  }

  @Test(timeout = 4000)
  public void test159()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("8.sjwG", (-1441));
      jSONReaderScanner0.scanLong('\"');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("d\"");
      jSONReaderScanner1.isBlankInput();
      jSONReaderScanner1.nextToken((-464));
      jSONReaderScanner1.isRef();
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("is", (-1));
      char[] charArray0 = new char[2];
      charArray0[0] = '\"';
      JSONScanner jSONScanner0 = new JSONScanner("is");
      jSONScanner0.scanFieldDouble(charArray0);
      jSONReaderScanner0.nextIdent();
      JSONLexerBase.readString(charArray0, 0);
  }

  @Test(timeout = 4000)
  public void test160()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '8';
      charArray0[1] = '8';
      charArray0[2] = 'D';
      charArray0[3] = '8';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 43);
      jSONReaderScanner0.nextToken((-1441561131));
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.scanLong('8');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("D", 43);
      jSONReaderScanner1.isBlankInput();
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.nextToken(2567);
      jSONReaderScanner0.scanFieldLong(charArray0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("<:Le=:%7;Cn*.09", (-2));
      // Undeclared exception!
      try { 
        jSONReaderScanner2.scanHex();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal state. <
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test161()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(", info : ");
      char[] charArray0 = new char[2];
      charArray0[0] = '.';
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.info();
      jSONReaderScanner0.scanFieldUUID(charArray0);
      char char0 = File.pathSeparatorChar;
      jSONReaderScanner0.isBlankInput();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("");
      // Undeclared exception!
      try { 
        jSONReaderScanner1.subString(576, (-89091621));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -89091621
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test162()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("8.sjwG", (-1441));
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("d\"");
      int int0 = 5;
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      SymbolTable symbolTable0 = null;
      try {
        symbolTable0 = new SymbolTable((-1441));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.SymbolTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test163()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("x");
      char[] charArray0 = new char[0];
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanInt('4');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("PZJ", (-1));
      jSONReaderScanner0.indexOf('S', 1771);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)78;
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      byteArray0[1] = (byte) (-22);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(charArray0, 1005, (-1));
      jSONReaderScanner0.longValue();
      char[] charArray1 = new char[7];
      charArray1[0] = '4';
      charArray1[1] = '4';
      charArray1[2] = 'S';
      charArray1[3] = 'S';
      charArray1[4] = 'l';
      charArray1[5] = 'l';
      charArray1[6] = 'l';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray1);
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner(charArrayReader0, 1005);
      jSONReaderScanner3.scanDate('S');
      JSONReaderScanner jSONReaderScanner4 = null;
      try {
        jSONReaderScanner4 = new JSONReaderScanner((String) null, 79);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test164()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "(Ff8|Lg/e/");
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 16);
      jSONReaderScanner0.getTimeZone();
  }

  @Test(timeout = 4000)
  public void test165()  throws Throwable  {
      char[] charArray0 = new char[12];
      charArray0[2] = 's';
      charArray0[4] = '9';
      char char0 = File.pathSeparatorChar;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0Eh\u0007E");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanSymbol((SymbolTable) null, '\u0000');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test166()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 125);
      jSONReaderScanner0.skipWhitespace();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("_hpFZdLW!CB3DT1Px/x", 0);
      jSONReaderScanner0.indexOf('k', 117);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-11);
      byteArray0[1] = (byte) (-11);
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-11);
      byteArray1[1] = (byte)7;
      jSONReaderScanner1.scanFieldLong(charArray0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("nsE5_(ELeeOq", 0);
      jSONReaderScanner2.scanDecimal('.');
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner("+'yJX28");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanSymbol((SymbolTable) null, '!');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test167()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONScanner jSONScanner0 = new JSONScanner("_hpFZdLW!CB3DT1Px/x", (-2481));
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("_hpFZdLW!CB3DT1Px/x", (-2481));
      jSONReaderScanner0.scanDecimal('(');
      jSONScanner0.getCurrent();
      MockDate mockDate0 = new MockDate();
      jSONScanner0.isEOF();
  }

  @Test(timeout = 4000)
  public void test168()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 125);
      jSONReaderScanner0.skipWhitespace();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("_hpFZdLW!CB3DT1Px/x", 0);
      jSONReaderScanner0.indexOf('k', 117);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-11);
      byteArray0[1] = (byte) (-11);
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-11);
      byteArray1[1] = (byte)7;
      jSONReaderScanner1.scanFieldLong(charArray0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("nsE5_(ELeeOq", 0);
      JSONScanner jSONScanner0 = new JSONScanner("nsE5_(ELeeOq");
      jSONScanner0.info();
      jSONScanner0.scanFieldDouble(charArray0);
      jSONReaderScanner1.nextIdent();
  }

  @Test(timeout = 4000)
  public void test169()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "jvpi");
      JSONScanner jSONScanner0 = new JSONScanner("error parse null", 741);
      jSONScanner0.setToken(741);
      jSONScanner0.longValue();
      // Undeclared exception!
      try { 
        jSONScanner0.decimalValue(false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test170()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("d\"");
      jSONReaderScanner0.longValue();
      char[] charArray0 = new char[0];
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanIdent();
      char char0 = 'A';
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanDate('A');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test171()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("Zrm&u'-DFX^a$P");
      char[] charArray0 = new char[2];
      charArray0[0] = '.';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 3985, 3237);
      jSONReaderScanner0.longValue();
      jSONReaderScanner1.scanIdent();
      jSONReaderScanner1.scanBoolean('.');
      jSONReaderScanner1.intValue();
  }

  @Test(timeout = 4000)
  public void test172()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0Eh\u0007E");
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.longValue();
      char[] charArray0 = new char[8];
      jSONReaderScanner0.isRef();
      SymbolTable symbolTable0 = new SymbolTable(149);
      Class<Object> class0 = Object.class;
      jSONReaderScanner0.scanEnum(class0, symbolTable0, '\u0000');
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1), 149, 149);
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      jSONReaderScanner0.isEnabled(188);
      jSONReaderScanner0.intValue();
  }

  @Test(timeout = 4000)
  public void test173()  throws Throwable  {
      char[] charArray0 = new char[0];
      StringReader stringReader0 = new StringReader("oracle.sql.");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(stringReader0);
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanIdent();
      try { 
        jSONReaderScanner0.longValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // e.sql.\u0000\u0000\u0000\u0000
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test174()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(":Eh\u0007{", 87);
      jSONReaderScanner0.longValue();
      SymbolTable symbolTable0 = new SymbolTable(87);
      jSONReaderScanner0.scanSymbol(symbolTable0, '{');
      jSONReaderScanner0.scanIdent();
      char[] charArray0 = new char[8];
      charArray0[0] = '\\';
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.isRef();
      jSONReaderScanner0.isEnabled(87);
      Object object0 = new Object();
      Object object1 = new Object();
      jSONReaderScanner0.numberString();
      jSONReaderScanner0.scanBoolean('c');
  }

  @Test(timeout = 4000)
  public void test175()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(".");
      jSONReaderScanner0.info();
      jSONReaderScanner0.longValue();
      int int0 = Calendar.DAY_OF_WEEK;
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("", 0);
      int int1 = Calendar.TUESDAY;
      jSONReaderScanner0.nextIdent();
      JSONScanner jSONScanner0 = new JSONScanner("PZJ");
      jSONScanner0.info();
      // Undeclared exception!
      try { 
        jSONReaderScanner1.integerValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test176()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "0Eh");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("0Eh");
      char[] charArray0 = new char[0];
      char[] charArray1 = new char[10];
      jSONReaderScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner0.scanFieldLong(charArray0);
      jSONReaderScanner0.scanFieldInt(charArray1);
      char[] charArray2 = new char[0];
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanDecimal('J');
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test177()  throws Throwable  {
      StringReader stringReader0 = new StringReader("d\"");
      char[] charArray0 = new char[6];
      charArray0[0] = ')';
      charArray0[3] = '{';
      char[] charArray1 = new char[9];
      charArray1[0] = '-';
      charArray1[1] = '8';
      charArray1[4] = '{';
      charArray1[5] = '{';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray1, 11, 11);
      jSONReaderScanner0.nextToken();
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanDate(')');
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("d\"", 11);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test178()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("e:-`urT`qY>ar");
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("e:-`urT`qY>ar", 0);
      jSONReaderScanner1.scanFieldFloatArray(charArray0);
      jSONReaderScanner1.indexOf('k', 40);
      jSONReaderScanner1.scanFieldFloatArray(charArray0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("java.time.Period", 110);
      jSONReaderScanner2.scanFieldFloatArray2(charArray0);
      char[] charArray1 = new char[2];
      jSONReaderScanner2.scanFieldFloatArray(charArray0);
      jSONReaderScanner1.scanFieldFloatArray2(charArray0);
      jSONReaderScanner2.scanFieldUUID(charArray1);
      jSONReaderScanner1.scanFieldLong(charArray1);
      JSONScanner jSONScanner0 = new JSONScanner("6Lfu=AIr(duc/H", 110);
      jSONScanner0.scanFieldDouble(charArray0);
      jSONReaderScanner0.nextIdent();
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray1, 67);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test179()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "EA{JZwwW/<;");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&A_MNT%4gt?");
      char[] charArray0 = new char[0];
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.subString('w', 928);
      jSONReaderScanner0.scanString('w');
      char[] charArray1 = new char[0];
      jSONReaderScanner0.scanFieldFloatArray(charArray1);
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.np = 928;
      jSONReaderScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner0.scanFieldLong(charArray0);
      jSONReaderScanner0.scanFieldInt(charArray0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      jSONReaderScanner0.scanDecimal('a');
      JSONScanner jSONScanner0 = new JSONScanner("45M g{4-");
      jSONScanner0.scanFieldDouble(charArray1);
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      jSONReaderScanner0.skipWhitespace();
      // Undeclared exception!
      try { 
        jSONScanner0.addSymbol(1046, 0, (-4072), (SymbolTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test180()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("new", 125);
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanIdent();
      char char0 = '9';
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFieldUUID((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test181()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("F'PT|Dw`Q");
      jSONReaderScanner0.scanNumber();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)69;
      byteArray0[2] = (byte)81;
      byteArray0[3] = (byte)125;
      byteArray0[4] = (byte)115;
      byteArray0[5] = (byte)100;
      byteArray0[6] = (byte) (-41);
      byteArray0[7] = (byte)31;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      SymbolTable symbolTable0 = null;
      try {
        symbolTable0 = new SymbolTable(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1185263
         //
         verifyException("com.alibaba.fastjson.parser.SymbolTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test182()  throws Throwable  {
      String string0 = "ID0W&^sA_MNT%4gt?";
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&^sA_MNT%4gt?");
      char[] charArray0 = new char[0];
      jSONReaderScanner0.longValue();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ID0W&^sA_MNT%4gt?");
      jSONReaderScanner0.scanFieldString(charArray0);
      jSONReaderScanner0.isBlankInput();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)14;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      jSONReaderScanner0.scanLong(']');
      char[] charArray1 = new char[1];
      charArray1[0] = ']';
      jSONReaderScanner0.scanFieldIntArray(charArray1);
      jSONReaderScanner0.nextToken(366);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("null", (byte)14);
      jSONReaderScanner1.stringVal();
      jSONReaderScanner1.scanDecimal(']');
      JSONReaderScanner jSONReaderScanner2 = null;
      try {
        jSONReaderScanner2 = new JSONReaderScanner((String) null, (byte)14);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test183()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0/^sA_2MNT%4gt?");
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.isRef();
      jSONReaderScanner0.isEnabled(0);
      Object object0 = new Object();
      jSONReaderScanner0.next();
      jSONReaderScanner0.numberString();
      char[] charArray0 = new char[9];
      charArray0[0] = ']';
      charArray0[1] = 's';
      charArray0[4] = ']';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("0/^s", 0);
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      jSONReaderScanner1.skipComment();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanSymbol((SymbolTable) null, 'u');
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test184()  throws Throwable  {
      char[] charArray0 = new char[12];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("false");
      jSONReaderScanner0.matchField(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("false");
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner1.scanFieldUUID(charArray0);
      jSONReaderScanner1.scanIdent();
      jSONReaderScanner0.subString(9, 2299);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("|E\"05<n=");
      jSONReaderScanner2.scanBoolean('H');
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner("<(s8PUJ*fPu Q");
      jSONReaderScanner3.scanFieldFloatArray2(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner3.integerValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test185()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("setter not found, class ");
      jSONReaderScanner0.info();
      char[] charArray0 = new char[2];
      charArray0[0] = '(';
      charArray0[1] = 'g';
      jSONReaderScanner0.matchField(charArray0);
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanLong('8');
      jSONReaderScanner0.scanIdent();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(")seKp2*juJOZUQ5<C", (-2366));
      jSONReaderScanner1.scanFieldBoolean(charArray0);
      jSONReaderScanner1.scanNumber();
      jSONReaderScanner0.skipWhitespace();
  }

  @Test(timeout = 4000)
  public void test186()  throws Throwable  {
      char[] charArray0 = new char[0];
      StringReader stringReader0 = new StringReader("oracle.sql.");
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0, 41);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(lineNumberReader0);
      jSONReaderScanner0.scanIdent();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("[I{j'9u|+0?Stv{", 0);
      jSONReaderScanner1.nextToken(0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("ID0W");
      jSONReaderScanner1.scanFieldDecimal(charArray0);
      SymbolTable symbolTable0 = null;
      try {
        symbolTable0 = new SymbolTable((-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.SymbolTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test187()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("o");
      jSONReaderScanner0.longValue();
      int int0 = Calendar.DAY_OF_WEEK;
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("PZJ", 0);
      int int1 = Calendar.TUESDAY;
      jSONReaderScanner1.nextIdent();
      JSONScanner jSONScanner0 = new JSONScanner("PZJ");
      char[] charArray0 = new char[8];
      charArray0[0] = 'k';
      charArray0[2] = 'V';
      charArray0[3] = 'U';
      charArray0[4] = 'B';
      charArray0[5] = 'D';
      charArray0[6] = '\\';
      charArray0[7] = 'V';
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, 76);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed.str.lit
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test188()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("WDU?H)k@712.oW'o?_x");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("6Xq4", 0);
      jSONReaderScanner0.scanDouble('\'');
      jSONReaderScanner0.skipWhitespace();
      char[] charArray0 = new char[9];
      charArray0[0] = '\'';
      charArray0[1] = '\'';
      jSONScanner0.scanFieldDouble(charArray0);
      jSONReaderScanner0.nextIdent();
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray0, (-1));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test189()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0W&^sA_MNT%4gt?");
      jSONReaderScanner0.longValue();
      StringReader stringReader0 = new StringReader("ID0W&^sA_MNT%4gt?");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(stringReader0, 103);
      char[] charArray0 = new char[5];
      charArray0[0] = '$';
      charArray0[1] = '8';
      charArray0[2] = 'v';
      charArray0[3] = '%';
      charArray0[4] = '}';
      jSONReaderScanner1.scanFieldUUID(charArray0);
      jSONReaderScanner1.scanFieldFloatArray2(charArray0);
      int int0 = Calendar.DAY_OF_WEEK;
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("dvpR|t6Q+&p#f6q", 91);
      int int1 = Calendar.TUESDAY;
      jSONReaderScanner1.scanFieldString(charArray0);
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner(charArray0, 484);
      jSONReaderScanner3.nextIdent();
      JSONReaderScanner jSONReaderScanner4 = new JSONReaderScanner(charArray0, 12, 0);
      jSONReaderScanner4.scanFieldDate(charArray0);
      JSONReaderScanner jSONReaderScanner5 = new JSONReaderScanner("PZJ", 0);
      JSONReaderScanner jSONReaderScanner6 = new JSONReaderScanner("dvpR|t6Q+&p#f6q");
      jSONReaderScanner2.scanFloat('<');
  }

  @Test(timeout = 4000)
  public void test190()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("o");
      jSONReaderScanner0.longValue();
      char[] charArray0 = new char[3];
      charArray0[0] = 'T';
      charArray0[1] = '/';
      charArray0[2] = 'x';
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanFieldSymbol(charArray0);
      jSONReaderScanner0.scanFieldInt(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("scan");
      jSONReaderScanner1.scanFieldDate(charArray0);
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.stringVal();
      jSONReaderScanner1.longValue();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-2743), (-1251), (-640));
      ZonedDateTime zonedDateTime0 = mockGregorianCalendar0.toZonedDateTime();
      GregorianCalendar gregorianCalendar0 = MockGregorianCalendar.from(zonedDateTime0);
      jSONReaderScanner1.calendar = (Calendar) gregorianCalendar0;
      jSONReaderScanner0.nextToken(15);
      jSONReaderScanner1.resetStringPosition();
      // Undeclared exception!
      try { 
        jSONReaderScanner1.skipComment();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // invalid comment
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test191()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("E?z^Qx;'UHXi");
      char[] charArray0 = new char[0];
      long long0 = JSONLexerBase.MULTMIN_RADIX_TEN;
      jSONReaderScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner0.resetStringPosition();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("E?z^Qx;'UHXi", 97);
      jSONReaderScanner0.scanFieldFloatArray2(charArray0);
      jSONReaderScanner1.scanFieldUUID(charArray0);
      jSONReaderScanner0.scanFieldLong(charArray0);
      jSONReaderScanner0.scanFieldInt(charArray0);
      jSONReaderScanner0.scanFieldBoolean(charArray0);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("toString");
      // Undeclared exception!
      try { 
        jSONReaderScanner2.nextToken((-1));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse true
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test192()  throws Throwable  {
      char[] charArray0 = new char[0];
      StringReader stringReader0 = new StringReader("QlUR]q]X_:/_J=");
      LineNumberReader lineNumberReader0 = new LineNumberReader(stringReader0, 41);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(lineNumberReader0);
      jSONReaderScanner0.scanIdent();
      int int0 = Calendar.DAY_OF_WEEK;
      int int1 = Calendar.TUESDAY;
      JSONScanner jSONScanner0 = new JSONScanner("\":\"");
      jSONScanner0.intValue();
      jSONScanner0.scanFieldBigInteger(charArray0);
      JSONScanner jSONScanner1 = new JSONScanner("\":\"", 0);
      jSONScanner1.info();
      Integer integer0 = new Integer(0);
      jSONScanner1.scanFieldDouble(charArray0);
      char[] charArray1 = new char[3];
      charArray1[0] = ')';
      charArray1[1] = '!';
      charArray1[2] = 'P';
      JSONLexerBase.readString(charArray1, 0);
  }

  @Test(timeout = 4000)
  public void test193()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("TreeSet");
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanIdent();
      long long0 = JSONLexerBase.MULTMIN_RADIX_TEN;
      jSONReaderScanner0.scanInt('N');
      char[] charArray0 = new char[2];
      charArray0[0] = 'G';
      charArray0[1] = 'N';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 1269, 4);
      jSONReaderScanner0.longValue();
      char[] charArray1 = new char[9];
      charArray1[0] = 'N';
      charArray1[1] = 'G';
      charArray1[2] = 'N';
      charArray1[3] = 'G';
      charArray1[4] = 'N';
      charArray1[5] = 'G';
      charArray1[6] = 'G';
      charArray1[7] = 'N';
      charArray1[8] = 'N';
      jSONReaderScanner1.scanFieldFloatArray2(charArray1);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(charArray0, 92, 1);
      jSONReaderScanner2.scanIdent();
      jSONReaderScanner0.subString(114, 4);
      jSONReaderScanner0.scanDouble('G');
      jSONReaderScanner1.scanBoolean('G');
      jSONReaderScanner0.integerValue();
  }

  @Test(timeout = 4000)
  public void test194()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(".");
      jSONReaderScanner0.info();
      jSONReaderScanner0.longValue();
      jSONReaderScanner0.scanLong('x');
      jSONReaderScanner0.scanIdent();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(".", 26085);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(".");
      char[] charArray0 = new char[9];
      charArray0[0] = 'x';
      charArray0[1] = 'x';
      charArray0[2] = 'x';
      charArray0[3] = 'x';
      charArray0[4] = 'x';
      charArray0[5] = 'x';
      charArray0[6] = ']';
      charArray0[7] = 'x';
      charArray0[8] = 'x';
      jSONReaderScanner1.scanFieldFloat(charArray0);
      jSONReaderScanner1.scanFloat('X');
      JSONScanner jSONScanner0 = new JSONScanner(".");
      jSONScanner0.info();
      SymbolTable symbolTable0 = new SymbolTable(24);
      jSONReaderScanner0.scanSymbol(symbolTable0);
      jSONScanner0.bytesValue();
  }

  @Test(timeout = 4000)
  public void test195()  throws Throwable  {
      StringReader stringReader0 = new StringReader("QlUR]q]X_:/_J=");
      int int0 = Calendar.TUESDAY;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("k");
      jSONReaderScanner0.nextToken();
      char[] charArray0 = new char[0];
      jSONReaderScanner0.matchStat();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanSymbolUnQuoted((SymbolTable) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal identifier : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test196()  throws Throwable  {
      char[] charArray0 = new char[0];
      StringReader stringReader0 = new StringReader("QlUR]q]X_:/_J=");
      int int0 = Calendar.TUESDAY;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("QlUR]q]X_:/_J=", 3);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("gqN~xfyTK*;.TEkq-o");
      jSONReaderScanner1.nextToken();
      jSONReaderScanner1.scanFloat('2');
      JSONScanner jSONScanner0 = new JSONScanner("unclosed.str", 0);
      jSONScanner0.scanFieldLong(charArray0);
      jSONReaderScanner1.scanSymbol((SymbolTable) null);
  }

  @Test(timeout = 4000)
  public void test197()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ID0/^sA_2MNT%4gt?");
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("7D`+J)uT_", 89);
      jSONReaderScanner0.scanDouble('g');
      jSONReaderScanner0.skipWhitespace();
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("7D`+J)uT_", 78);
      int int0 = Calendar.TUESDAY;
      char[] charArray0 = new char[9];
      charArray0[0] = 'g';
      charArray0[1] = 'g';
      charArray0[2] = 'g';
      charArray0[3] = 'g';
      charArray0[4] = 'g';
      charArray0[5] = 'g';
      charArray0[6] = 'g';
      charArray0[7] = 'g';
      charArray0[8] = 'g';
      jSONReaderScanner2.scanFieldString(charArray0);
      jSONReaderScanner0.nextIdent();
      MockDate mockDate0 = new MockDate(0, (-866), 16, 200, 200);
      JSONReaderScanner jSONReaderScanner3 = new JSONReaderScanner("fieldName", 4);
      JSONReaderScanner jSONReaderScanner4 = new JSONReaderScanner("cNB", 89);
      jSONReaderScanner3.scanFloat('~');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue(false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // For input string: \"ID0\", 
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test198()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("'U", 374);
      // Undeclared exception!
      try { 
        jSONScanner0.nextToken();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Feature.AllowSingleQuotes is false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test199()  throws Throwable  {
      int int0 = 11;
      String string0 = "n%*!x&?Ut\"3H+*";
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("n%*!x&?Ut\"3H+*");
      JSONScanner jSONScanner0 = new JSONScanner("(nl$,H:");
      int int1 = 89;
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("J/", 1338);
      jSONReaderScanner0.scanDouble('6');
      PipedReader pipedReader0 = new PipedReader();
      PushbackReader pushbackReader0 = new PushbackReader(pipedReader0, 3024);
      LineNumberReader lineNumberReader0 = new LineNumberReader(pushbackReader0);
      JSONReaderScanner jSONReaderScanner2 = null;
      try {
        jSONReaderScanner2 = new JSONReaderScanner(lineNumberReader0, 1338);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Pipe not connected
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test200()  throws Throwable  {
      JSONScanner jSONScanner0 = new JSONScanner("illegal stat, textLength is zero");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("8PP8", (-797));
      jSONReaderScanner0.scanDouble('P');
      jSONReaderScanner0.skipWhitespace();
      char[] charArray0 = new char[5];
      charArray0[0] = 'P';
      charArray0[1] = '\'';
      charArray0[2] = 'P';
      charArray0[3] = '\'';
      charArray0[4] = '\'';
      JSONScanner jSONScanner1 = null;
      try {
        jSONScanner1 = new JSONScanner(charArray0, (-797));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }
}
