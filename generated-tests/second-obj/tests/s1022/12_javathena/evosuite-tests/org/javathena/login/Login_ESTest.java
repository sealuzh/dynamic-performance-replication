/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 08:51:01 GMT 2018
 */

package org.javathena.login;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.net.InetAddress;
import java.net.Proxy;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.Calendar;
import javolution.util.FastComparator;
import javolution.util.FastMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockInetAddress;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteLocalAddress;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.javathena.core.data.Auth_data;
import org.javathena.core.data.SessionType;
import org.javathena.core.data.Socket_data;
import org.javathena.core.utiles.ACO;
import org.javathena.login.Login;
import org.javathena.login.UserManagement;
import org.javathena.login.parse.FromChar;
import org.javathena.login.parse.FromClient;
import org.javathena.utiles.ConfigurationManagement;
import org.javathena.utiles.sql.MySQLConfig;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Login_ESTest extends Login_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Login login0 = new Login();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      login_ConnectionListener0.run();
      login_ConnectionListener0.close();
      Login.display_title();
      login0.getOut();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Login.getDbManagemtType();
      Login login0 = new Login();
      // Undeclared exception!
      try { 
        login0.parse_console(")");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_id("alive");
      Login.mmo_auth_syncXML();
      MySQLConfig.setLogin_server_db("conf/subnet_athena.conf");
      // Undeclared exception!
      try { 
        login0.do_initXML();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         //  : Content is not allowed in prolog.
         //
         verifyException("com.thoughtworks.xstream.io.xml.DomDriver", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Login login0 = new Login();
      login0.auth_max = 477;
      FileSystemHandling.shouldAllThrowIOExceptions();
      Login.getPASSWORDENC();
      // Undeclared exception!
      try { 
        Login.login_log("conf/subnet_athena.conf");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      login0.auth_max = 477;
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("7");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Login.mmo_auth_initXML();
      Login login0 = new Login();
      Login.mmo_auth_syncTXT();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "`en");
      Login login0 = new Login();
      int int0 = login0.getAuth_max();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Login login0 = new Login();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.close();
      Login.mmo_auth_syncTXT();
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Login login0 = new Login();
      int int0 = login0.check_ipmask(0, "");
      assertEquals(0, int0);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Login login0 = new Login();
      ConfigurationManagement.setAuth_before_save_file(1866);
      Login.mmo_auth_initTXT();
      login0.check_auth_sync();
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      MockSocket mockSocket0 = null;
      try {
        mockSocket0 = new MockSocket(inetAddress0, (-1463));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // port out of range:-1463
         //
         verifyException("java.net.InetSocketAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Login login0 = new Login();
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("conf/subnet_athena.conf");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Login login0 = new Login();
      StringWriter stringWriter0 = new StringWriter();
      StringWriter stringWriter1 = stringWriter0.append('&');
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter1);
      PrintWriter printWriter0 = mockPrintWriter0.append((CharSequence) "conf/subnet_athena.conf");
      login0.setOut(printWriter0);
      PrintWriter printWriter1 = login0.getOut();
      assertNotNull(printWriter1);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = Login.MAX_SERVERS;
      Login login0 = new Login();
      login0.setAuth_max(30);
      assertEquals(30, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Login login0 = new Login();
      login0.getLog_fp();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "G]9(gZW]|");
      Login.End login_End0 = login0.new End();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save/account.txt");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      int int0 = Login.mmo_auth_initTXT();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Login login0 = new Login();
      Socket_data socket_data0 = new Socket_data((Socket) null);
      socket_data0.setName("p$.HwcOef{");
      // Undeclared exception!
      try { 
        Login.codingKeyAdministration(socket_data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Login.login_log("`en");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      mockSocket0.getLocalSocketAddress();
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      SessionType sessionType0 = SessionType.SESSION_HTTP;
      socket_data0.setType(sessionType0);
      Login.getMd5Data(socket_data0);
      Login login0 = new Login();
      // Undeclared exception!
      try { 
        login0.parse_admin(638, socket_data0, login0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Login login0 = new Login();
      InetAddress inetAddress0 = MockInetAddress.getByName("conf/subnet_athena.conf");
      login0.check_ip(inetAddress0);
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Login login0 = new Login();
      ConfigurationManagement.setAuth_before_save_file(2);
      login0.do_initTXT();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      Login.mmo_auth_initXML();
      login0.getOut();
      Login.setPASSWORDENC(100000000);
      login0.check_ipmask((-2103777884), "- with a remote administration with the DEFAULT password.");
      int int0 = login0.parse_console("- with the accounts file name: '%s'.");
      assertEquals(100000000, login0.getPASSWORDENC());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Login login0 = new Login();
      login0.getAuth_num();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)31;
      try { 
        MockInetAddress.getByAddress(byteArray0);
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Not IPv4: [0, 31, 0]
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockInetAddress", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/conf/inter_athena.conf");
      FileSystemHandling.createFolder(evoSuiteFile0);
      EvoSuiteFile evoSuiteFile1 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/conf/inter_athena.conf");
      FileSystemHandling.createFolder(evoSuiteFile1);
      Login login0 = new Login();
      MySQLConfig.setLogin_server_db("conf/subnet_athena.conf");
      Login.do_initSQL();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.close();
      FileSystemHandling.appendLineToFile(evoSuiteFile1, "conf/subnet_athena.conf");
      login_ConnectionListener0.run();
      login_ConnectionListener0.run();
      FromChar fromChar0 = new FromChar();
      Login.getDbManagemtType();
      // Undeclared exception!
      try { 
        login0.parse_console("J");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.utiles.sql.MySQLConfig", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-56);
      byteArray0[1] = (byte) (-41);
      Login.showTab(byteArray0);
      Login login0 = new Login();
      int[] intArray0 = login0.getServer_fd();
      assertEquals(0, login0.getAuth_max());
      assertNotNull(intArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Login login0 = new Login();
      ConfigurationManagement.setAuth_before_save_file(2);
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login0.yesNoOnOffToBoolean("OFF");
      MockFileWriter mockFileWriter0 = new MockFileWriter("7-T,u3n-J@ LPAP>", false);
      SessionType sessionType0 = SessionType.SESSION_HTTP;
      InetAddress inetAddress0 = MockInetAddress.anyLocalAddress();
      MockSocket mockSocket0 = null;
      try {
        mockSocket0 = new MockSocket(inetAddress0, 2, inetAddress0, 10);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Remote address/port is not opened: org.evosuite.runtime.vnet.EndPointInfo@7e7d6509
         //
         verifyException("org.evosuite.runtime.vnet.VirtualNetwork", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_db("conf/subnet_athena.conf");
      Login.mmo_auth_initTXT();
      Auth_data auth_data0 = UserManagement.addUserTXT((String) null, "SHUTDOWN", "SHUTDOWN", 'V');
      assertEquals(2000000, (int)auth_data0.getAccount_id());
      
      login0.do_initTXT();
      assertEquals(0, login0.getAuth_max());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      MockSocket mockSocket0 = new MockSocket(proxy0);
      mockSocket0.getLocalSocketAddress();
      Socket_data socket_data0 = new Socket_data(mockSocket0);
      socket_data0.setEof((-2049917885));
      Login.getMd5Data(socket_data0);
      Login login0 = new Login();
      login0.save_config_in_log();
      login0.do_initXML();
      Login.getPASSWORDENC();
      Login.login_log((String) null);
      Login.mmo_auth_initTXT();
      Login.mmo_auth_syncTXT();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      // Undeclared exception!
      try { 
        Login.codingKey(socket_data0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      login_ConnectionListener0.close();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "conf/subnet_athena.conf");
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      MockSocket mockSocket0 = new MockSocket();
      ACO aCO0 = ACO.ALLOW_DENY;
      ConfigurationManagement.setAccess_order(aCO0);
      FromClient fromClient0 = new FromClient();
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      int int0 = FromChar.REQUEST_ACCOUNT_REG2;
      login0.parse_console("status");
      Login login1 = new Login();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("conf/subnet_athena.conf");
      MockFile mockFile0 = new MockFile("5O]X[8Z;Yp ", "vMAq(89<sTE.\" VckKR");
      MockPrintWriter mockPrintWriter1 = new MockPrintWriter(mockFile0);
      login0.setOut(mockPrintWriter1);
      Login.mmo_auth_syncTXT();
      Login.getPASSWORDENC();
      // Undeclared exception!
      try { 
        login1.do_init();
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      UserManagement.addUserTXT("exit", "exit", "exit", '8');
      Login login0 = new Login();
      login0.do_initXML();
      Login.login_log("conf/subnet_athena.conf");
      int int0 = Calendar.UNDECIMBER;
      UserManagement.addAccountIdCount();
      Login.mmo_auth_syncTXT();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      ConfigurationManagement.setAccess_allow("conf/subnet_athena.conf");
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      login_ConnectionListener0.run();
      login_ConnectionListener0.close();
      int[] intArray0 = new int[8];
      intArray0[6] = 30;
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      login0.check_ipmask((-1841295717), "tTQ");
      login0.parse_console("help");
      MockInetAddress.getByName("F*3#l6\u0001F");
      MockInetAddress.anyLocalAddress();
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "help");
      FromChar fromChar0 = new FromChar();
      // Undeclared exception!
      try { 
        login0.yesNoOnOffToBoolean("z:_i>EAQ.Bdq@CL&k?\"");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // anw doit etre egale a yes/no/on/off
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      ConfigurationManagement.setAccess_allow("conf/subnet_athena.conf");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      MySQLConfig.setLogin_server_pw("5O]X[8Z;Yp ");
      int int0 = FromChar.REQUEST_ACCOUNT_REG2;
      ConfigurationManagement.setAccess_denynum(2);
      login0.parse_console("5O]X[8Z;Yp ");
      login0.do_initXML();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("5O]X[8Z;Yp ");
      login0.setOut(mockPrintWriter0);
      Login.mmo_auth_syncTXT();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      // Undeclared exception!
      try { 
        login0.parse_console("exit");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      login_ConnectionListener0.close();
      int[] intArray0 = new int[8];
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save");
      FileSystemHandling.shouldThrowIOException(evoSuiteFile0);
      MockSocket mockSocket0 = new MockSocket();
      MockInetSocketAddress.createUnresolved("l<(1}P#n!%qhCXX-4", 10);
      Login login1 = new Login();
      Login login2 = new Login();
      // Undeclared exception!
      try { 
        login2.parse_console("quit");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Socket_data socket_data0 = null;
      // Undeclared exception!
      try { 
        Login.version((Socket_data) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Login login0 = new Login();
      ACO aCO0 = ACO.ALLOW_DENY;
      ConfigurationManagement.setAccess_order(aCO0);
      FromClient fromClient0 = new FromClient();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("WUsQ:1]3Q^O9io");
      mockPrintWriter0.println((long) 31002);
      Login.mmo_auth_syncTXT();
      login0.save_config_in_log();
      login0.getOut();
      Login.setPASSWORDENC((-1790434824));
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      int int0 = FromClient.CODING_KEY_ADMINISTRATION;
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Login login0 = new Login();
      ACO aCO0 = ACO.MUTUAL_FAILTURE;
      ConfigurationManagement.setAccess_order(aCO0);
      FromClient fromClient0 = new FromClient();
      login0.do_initXML();
      Login.login_log((String) null);
      int int0 = FromClient.CODING_KEY_ADMINISTRATION;
      Login.mmo_auth_initTXT();
      Socket_data socket_data0 = new Socket_data((Socket) null);
      login0.setAuth_max(117);
      Login.setPASSWORDENC(31002);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.run();
      login_ConnectionListener0.close();
      NetworkHandling.sendMessageOnTcp((EvoSuiteLocalAddress) null, "conf/subnet_athena.conf");
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      MockSocket mockSocket0 = new MockSocket();
      ACO aCO0 = ACO.ALLOW_DENY;
      ConfigurationManagement.setAccess_order(aCO0);
      FromClient fromClient0 = new FromClient();
      ConfigurationManagement.setAccess_allow("conf/subnet_athena.conf");
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      int int0 = Calendar.DST_OFFSET;
      login0.parse_console("status");
      MySQLConfig.setLogin_server_pw("Interrupted whilst waiting for a free item in the pool : ");
      int int1 = login0.auth_max;
      Login.login_log("ON");
      login0.yesNoOnOffToBoolean("ON");
      Login.setPASSWORDENC(31002);
      login0.setAuth_max((-188100385));
      Login.getDbManagemtType();
      Login login1 = new Login();
      Socket_data socket_data0 = new Socket_data(mockSocket0, fromClient0);
      ConfigurationManagement.lesslessAuth_before_save_file();
      Login.getMd5Data(socket_data0);
      // Undeclared exception!
      try { 
        login0.parse_admin(516, socket_data0, login1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.core.data.Socket_data", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Login login0 = new Login();
      FastMap<Integer, Auth_data> fastMap0 = new FastMap<Integer, Auth_data>("conf/subnet_athena.conf");
      FastComparator<Integer> fastComparator0 = (FastComparator<Integer>) mock(FastComparator.class, new ViolatedAssumptionAnswer());
      FastMap<Integer, Auth_data> fastMap1 = fastMap0.setKeyComparator(fastComparator0);
      UserManagement.setAuth_dats(fastMap1);
      String string0 = "YES";
      login0.yesNoOnOffToBoolean(string0);
      Login.getPASSWORDENC();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      login_Timer_interval_check_auth_sync0.cancel();
      // Undeclared exception!
      try { 
        login_Timer_interval_check_auth_sync0.run();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.javathena.login.Login", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Login login0 = new Login();
      MySQLConfig.setLogin_server_ip("Ban Hy GM");
      login0.do_initTXT();
      login0.yesNoOnOffToBoolean("OFF");
      Login login1 = new Login();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login1.new Timer_interval_check_auth_sync();
      MySQLConfig.setLogin_server_pw("Console command : '%s'");
      int int0 = FromChar.REQUEST_ACCOUNT_REG2;
      login1.parse_console("  'shutdown|exit|qui|end'");
      MySQLConfig.setLogin_server_pw("Console command : '%s'");
      int int1 = FromClient.PACKAGE_TO_SMALL;
      // Undeclared exception!
      try { 
        login0.parse_console("end");
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Proxy proxy0 = Proxy.NO_PROXY;
      UserManagement.addUserTXT((String) null, "exit", "eIak\"]jIQWX", 'R');
      UserManagement.addUserTXT("f(alse", " is configured for an implicit Collection, but field is of type ", "exit", 'R');
      Login login0 = new Login();
      login0.do_initXML();
      Login.login_log("eIak\"]jIQWX");
      int int0 = Calendar.UNDECIMBER;
      Login.mmo_auth_syncTXT();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Login login0 = new Login();
      ConfigurationManagement.setAuth_before_save_file(2);
      login0.do_initTXT();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/12_javathena/save");
      FileSystemHandling.createFolder(evoSuiteFile0);
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      login0.parse_console("x\"P\"tfU[X#U9@;RB;");
      MySQLConfig.setLogin_server_pw("8nmK&ZZe8H;'*iTN~");
      MockSocket mockSocket0 = new MockSocket();
      MySQLConfig.setLogin_server_pw("73.w[dP ");
      int int0 = FromChar.REQUEST_ACCOUNT_REG2;
      login0.parse_console("alive");
      login0.do_initXML();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)20;
      byteArray0[2] = (byte) (-18);
      byteArray0[3] = (byte)20;
      MockInetAddress.getByAddress(byteArray0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Login login0 = new Login();
      login0.do_initTXT();
      ConfigurationManagement.setAccess_allow("conf/subnet_athena.conf");
      MySQLConfig.setLogin_server_pw("conf/subnet_athena.conf");
      Login.ConnectionListener login_ConnectionListener0 = login0.new ConnectionListener();
      login_ConnectionListener0.close();
      login_ConnectionListener0.close();
      login_ConnectionListener0.run();
      login_ConnectionListener0.run();
      login_ConnectionListener0.close();
      MySQLConfig.setLogin_server_pw("NO");
      login0.check_ipmask(2000000, "2hb+HUKYC");
      Login login1 = new Login();
      Login login2 = new Login();
      Login login3 = new Login();
      Login.mmo_auth_syncTXT();
      login3.parse_console("identity");
      login3.yesNoOnOffToBoolean("NO");
      Login login4 = new Login();
      Login login5 = new Login();
      Login.login_log("\u001B[0;44m");
      Login.login_log("127.0.0.1");
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Login login0 = new Login();
      ACO aCO0 = ACO.ALLOW_DENY;
      ConfigurationManagement.setAccess_order(aCO0);
      FromClient fromClient0 = new FromClient();
      login0.do_initXML();
      Login.login_log((String) null);
      int int0 = FromClient.CODING_KEY_ADMINISTRATION;
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login0.new Timer_interval_check_auth_sync();
      Login.mmo_auth_initTXT();
      Socket_data socket_data0 = new Socket_data((Socket) null);
      Login.logUnknownPackets(socket_data0);
      // Undeclared exception!
      login0.do_initXML();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Login login0 = new Login();
      ACO aCO0 = ACO.ALLOW_DENY;
      ConfigurationManagement.setAccess_order(aCO0);
      FromClient fromClient0 = new FromClient();
      UserManagement.addUserTXT("", ".EO%5fFdW", "", '`');
      login0.do_initXML();
      Login.login_log("error_3");
      int int0 = Calendar.UNDECIMBER;
      Login.mmo_auth_syncTXT();
      Login login1 = new Login();
      Login.Timer_interval_check_auth_sync login_Timer_interval_check_auth_sync0 = login1.new Timer_interval_check_auth_sync();
      // Undeclared exception!
      try { 
        Login.mmo_auth_initTXT();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
