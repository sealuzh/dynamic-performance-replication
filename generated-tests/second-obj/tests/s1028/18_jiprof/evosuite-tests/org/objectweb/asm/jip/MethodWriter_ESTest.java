/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 13:27:44 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.FileDescriptor;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.FieldVisitor;
import org.objectweb.asm.jip.FieldWriter;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;
import org.objectweb.asm.jip.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)M#Cr3", "DdrxIyFZ)M#Cr3", "DdrxIyFZ)M#Cr3", stringArray0, false, false);
      int[] intArray0 = new int[1];
      intArray0[0] = (-2212);
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 1, 170);
      assertEquals(169, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      int[] intArray0 = new int[1];
      intArray0[0] = 1060;
      int[] intArray1 = new int[4];
      intArray1[0] = 54;
      intArray1[1] = 1060;
      intArray1[2] = 1060;
      intArray1[3] = 1060;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray1, 54, 1060);
      assertEquals(1060, int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(262144);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "'5_/It4tL", "'5_/It4tL", "'5_/It4tL", (String[]) null, false, false);
      methodWriter0.visitMaxs(262144, (-704));
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-225));
      String[] stringArray0 = new String[3];
      stringArray0[0] = "L";
      stringArray0[1] = "L";
      stringArray0[2] = "L";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, Integer.MAX_VALUE, "L", "L", "L", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2189));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      methodWriter0.visitMethodInsn(2, "DdrxIyFZ)MCr3", "['w~F67WY8", "DdrxIyFZ)MCr3");
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(1, label0);
      boolean boolean0 = ClassReader.RESIZE;
      Label label1 = new Label();
      int int0 = Frame.SHORT;
      assertEquals(16777228, int0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-128), "wB%f*F}H", "wB%f*F}H", "DdrxIyFZ)MCr3", stringArray0, false, false);
      methodWriter0.visitMethodInsn(2870, "DdrxIyFZ)MCr3", "wB%f*F}H", "wB%f*F}H");
      methodWriter0.visitIntInsn(16, 2);
      methodWriter0.visitVarInsn(162, (-2450));
      int int0 = methodWriter0.getSize();
      assertEquals(52, int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      // Undeclared exception!
      try { 
        MethodWriter.writeShort((byte[]) null, 1506, 3524);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(179);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1854), "=X1L[<&=_Dg1e7", "=X1L[<&=_Dg1e7", "AnnotationDefault", (String[]) null, false, false);
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1496);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "w{/MF\"[)*8";
      stringArray0[1] = "0G~}J";
      stringArray0[2] = "w{/MF\"[)*8";
      stringArray0[3] = "0G~}J";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 557, "0G~}J", "w{/MF\"[)*8", "w{/MF\"[)*8", stringArray0, false, true);
      int int0 = methodWriter0.getSize();
      assertEquals(32, int0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1496);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "w{/MF\"[)*8";
      stringArray0[1] = "0G~}J";
      stringArray0[2] = "w{/MF\"[)*8";
      stringArray0[3] = "0G~}J";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 557, "0G~}J", "w{/MF\"[)*8", "w{/MF\"[)*8", stringArray0, false, false);
      methodWriter0.getSize();
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331648);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "java/lang/Class";
      stringArray0[2] = "";
      stringArray0[3] = "t0vB%xktFz4q|";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 50331648, "", "java/lang/Class", "", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-645), "java/lang/Class", "java/lang/Class", "buQSi", stringArray0, false, false);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String string0 = "RuntimeInvisibleParameterAnnotations";
      String string1 = "JSR/RET are not supported with computeFrames option";
      boolean boolean0 = true;
      String[] stringArray0 = null;
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 8, "<init>", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", (String[]) null, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 172;
      intArray0[1] = 952;
      intArray0[2] = (-619);
      intArray0[3] = (-3080);
      intArray0[4] = 187;
      intArray0[5] = 1018;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 1018, 172);
      assertEquals((-3003), int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(470);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "X;uvlS:;";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2433), "X;uvlS:;", "X;uvlS:;", "X;uvlS:;", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.signature = "5%.KacE=F^D";
      methodWriter0.visitLocalVariable("Signature", "X;uvlS:;", "X;uvlS:;", label0, label0, 2);
      methodWriter0.visitLineNumber((-2433), label0);
      Attribute attribute0 = new Attribute("5%.KacE=F^D");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        methodWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(72);
      String[] stringArray0 = new String[0];
      Item item0 = new Item();
      item0.set(72);
      classWriter0.newMethod("DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", true);
      item0.set((-1331.755568));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 191, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", (String) null, stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitVarInsn(2, 1);
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = new ByteVector();
      ByteVector byteVector2 = byteVector0.putInt(4);
      ByteVector byteVector3 = byteVector2.put12(4, 1);
      methodWriter0.put(byteVector3);
      methodWriter0.visitLabel(label0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-134));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331659);
      int int0 = Frame.VALUE;
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 253, "DdrxIyFZ)MCr3", "java/lang/Throwable", "DdrxIyFZ)MCr3", stringArray0, false, false);
      methodWriter0.visitInsn(2);
      methodWriter0.visitIincInsn(2, (-772));
      int int1 = Type.INT;
      ByteVector byteVector0 = new ByteVector();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      int int2 = Frame.ELEMENT_OF;
      methodWriter1.visitIntInsn((-62), 5);
      Integer.getInteger("DdrxIyFZ)MCr3", (-772));
      Attribute attribute0 = new Attribute("Kp2hJp_zP&9FLXN0");
      Attribute attribute1 = attribute0.next;
      methodWriter1.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2189));
      String[] stringArray0 = new String[0];
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      classWriter0.newUTF8("DdrxIyFZ)MCr3");
      methodWriter0.visitVarInsn(2, 1);
      methodWriter0.visitTypeInsn(1, "[8w~F6*WY8");
      boolean boolean0 = ClassReader.FRAMES;
      methodWriter0.visitIincInsn(1, 1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Item item0 = classWriter0.key3;
      classWriter0.visitOuterClass("Annot4tionDefault", "[8w~F6*WY8", "e/49");
      Edge edge0 = new Edge();
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      boolean boolean0 = true;
      String string0 = "DdxwyFZ)Mr3";
      classWriter0.newDouble((-1342.159035407798));
      String[] stringArray0 = new String[0];
      boolean boolean1 = ClassReader.WRITER;
      boolean boolean2 = true;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdxwyFZ)Mr3", "DdxwyFZ)Mr3", "DdxwyFZ)Mr3", stringArray0, true, true);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putByte((-2212));
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2189));
      String[] stringArray0 = new String[0];
      classWriter0.newClassItem("DdrxIyFZ)MCr3");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, true);
      methodWriter0.visitMethodInsn(185, "DdrxIyFZ)MCr3", "['w~F67WY8", "DdrxIyFZ)MCr3");
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(185, label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331667);
      int int0 = Type.CHAR;
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 242, "DdrxIyFZ)MCr3", "java/lang/Throwable", "DdrxIyFZ)MCr3", stringArray0, false, false);
      methodWriter0.visitMaxs(242, 242);
      Item item0 = classWriter0.newClassItem("DdrxIyFZ)MCr3");
      item0.set(2);
      methodWriter0.visitFieldInsn(65280, "EoX4e-bgPCe-Hzr(XX", "java/lang/Throwable", "EoX4e-bgPCe-Hzr(XX");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdxwyFZ)Mr3", "DdxwyFZ)Mr3", "DdxwyFZ)Mr3", stringArray0, false, false);
      methodWriter0.classReaderOffset = 54;
      classWriter0.firstMethod = methodWriter0;
      methodWriter0.visitVarInsn(167, 1);
      classWriter0.firstMethod.visitVarInsn(54, 2);
      classWriter0.firstMethod.visitVarInsn(54, 54);
      methodWriter0.visitFieldInsn(167, "DdxwyFZ)Mr3", "DdxwyFZ)Mr3", "AwoMY`(nlb*Ud)(<");
      Attribute attribute0 = new Attribute("AwoMY`(nlb*Ud)(<");
      Label label0 = new Label();
      Label[] labelArray0 = new Label[0];
      classWriter0.firstMethod.visitTableSwitchInsn((byte)66, 50331648, label0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331608);
      ClassWriter classWriter1 = new ClassWriter(50331608);
      classWriter0.newFloat(1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Class";
      stringArray0[1] = "";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      stringArray0[2] = "java/lang/Class";
      stringArray0[3] = "java/lang/Class";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "&IJAaYH5d", "x;T}\\zbOQ)LA+8f", "", stringArray0, false, true);
      methodWriter0.visitAnnotationDefault();
      Label label0 = new Label();
      int[] intArray0 = new int[3];
      intArray0[0] = 50331608;
      intArray0[1] = 2;
      intArray0[2] = 1;
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertArrayEquals(new int[] {50331608, 2, 1}, intArray0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331659);
      int int0 = Type.BYTE;
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 253, "DdrxIyFZ)MCr3", "java/lang/Throwable", "DdrxIyFZ)MCr3", stringArray0, false, false);
      methodWriter0.visitInsn(2);
      methodWriter0.visitIincInsn(2, (-772));
      int int1 = Type.INT;
      ByteVector byteVector0 = new ByteVector(3);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      int int2 = Frame.ELEMENT_OF;
      methodWriter1.visitIntInsn((-62), 5);
      Integer.getInteger("DdrxIyFZ)MCr3", (-772));
      methodWriter1.visitLdcInsn("LocalVariableTypeTable");
      methodWriter1.visitTypeInsn(2, "LocalVariableTypeTable");
      methodWriter0.visitAnnotationDefault();
      int int3 = methodWriter1.getSize();
      assertEquals(54, int3);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)M#Cr3", "DdrxIyFZ)M#Cr3", "DdrxIyFZ)M#Cr3", stringArray0, true, false);
      methodWriter0.getSize();
      int[] intArray0 = new int[18];
      intArray0[0] = (-2212);
      MethodWriter.getNewOffset(intArray0, intArray0, 1, 170);
      methodWriter0.visitLdcInsn("DdrxIyFZ)M#Cr3");
      methodWriter0.visitMultiANewArrayInsn("DdrxIyFZ)M#Cr3", (-2212));
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@3e5ec9ff
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      String[] stringArray0 = new String[0];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByte((-2212));
      methodWriter0.visitTypeInsn(1, "DdrxIyFZ)MCr3");
      byteVector0.putShort((-463));
      methodWriter0.visitAnnotationDefault();
      methodWriter0.put(byteVector1);
      methodWriter0.visitVarInsn(1, 2);
      Label label0 = new Label();
      Edge edge0 = new Edge();
      methodWriter0.visitLocalVariable("DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", label0, label0, (-69));
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Label label1 = edge0.successor;
      assertNull(label1);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      String[] stringArray0 = new String[0];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)M#Cr3", "DdrxIyFZ)M#Cr3", "DdrxIyFZ)M#Cr3", stringArray0, true, false);
      methodWriter0.visitEnd();
      methodWriter0.getSize();
      methodWriter0.visitFieldInsn(1, "DdrxIyFZ)M#Cr3", "y-j", "Iqx~j$qI0%I(");
      methodWriter0.visitAnnotationDefault();
      classWriter0.newClass("52r@i)M6Z%lWg]k");
      methodWriter0.visitMultiANewArrayInsn("y-j", 54);
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      label1.next = label0;
      methodWriter0.visitLocalVariable("aSU+Qq,!", ":_)+2}|rIU", "Iqx~j$qI0%I(", label1, label1, (-935));
      assertSame(label0, label1);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331648);
      ClassWriter classWriter1 = new ClassWriter(50331648);
      classWriter0.newFloat(1);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Class";
      stringArray0[1] = "";
      stringArray0[2] = "java/lang/Class";
      stringArray0[3] = "java/lang/Class";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "&IJAaYH5d", "x;T}\\zbOQ)LA+8f", "", stringArray0, false, true);
      Label label0 = new Label();
      methodWriter0.visitIincInsn(216, 172);
      int int0 = methodWriter0.getSize();
      assertEquals(56, int0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Item item0 = new Item(255);
      item0.strVal3 = "java/lang/Object";
      item0.set(0);
      ClassWriter classWriter0 = new ClassWriter(255);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 255, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      methodWriter0.visitIntInsn(1, 2);
      methodWriter0.visitVarInsn(2, 9);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Item item0 = new Item((-2231));
      item0.intVal = (-2231);
      item0.strVal3 = "java/lang/Object";
      item0.set((-2231));
      ClassWriter classWriter0 = new ClassWriter((-2231));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2231), "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      methodWriter0.visitIntInsn(191, 2);
      Label label0 = new Label();
      Label label1 = new Label();
      methodWriter0.visitTryCatchBlock(label1, label1, label0, "DdrxqyFZ)MCr3");
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn((-55), 9);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -55
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      String[] stringArray0 = new String[0];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2212), "Ljava/lang/Syntheticd", "Ljava/lang/Syntheticd", "Ljava/lang/Syntheticd", stringArray0, false, false);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      methodWriter0.visitIntInsn((-2212), 2);
      methodWriter0.visitVarInsn(170, 2);
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      methodWriter0.visitTryCatchBlock(label1, label1, label1, (String) null);
      assertSame(label0, label1);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331636);
      String[] stringArray0 = new String[0];
      boolean boolean0 = ClassReader.SIGNATURES;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 286, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, false, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitVarInsn(1, 2);
      boolean boolean1 = ClassReader.WRITER;
      methodWriter0.visitMaxs((-1424), 1);
      Label label0 = new Label();
      methodWriter1.visitJumpInsn(50331636, label0);
      methodWriter0.visitIincInsn((-1674367901), 16);
      methodWriter0.visitMultiANewArrayInsn("DdrxIyFZ)MCr3", 16);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((byte)40, "DdrxIyFZ)MCr3", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2186));
      FileSystemHandling.shouldAllThrowIOExceptions();
      String[] stringArray0 = new String[0];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      classWriter0.newUTF8("DdrxIyFZ)MCr3");
      methodWriter0.visitVarInsn(2, 1);
      methodWriter0.visitTypeInsn(1, "[8w~F6*WY8");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      methodWriter0.visitIntInsn(167, 255);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Item item0 = classWriter0.key3;
      methodWriter0.visitIincInsn(3709, 1);
      methodWriter0.visitFieldInsn(167, "%a)U'(D]M'xW(a", "org.objectweb.asm.jip.Type", ".jar");
      classWriter0.visitAnnotation("org.objectweb.asm.jip.Type", false);
      // Undeclared exception!
      try { 
        MethodWriter.readShort((byte[]) null, (byte)20);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2186));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      methodWriter0.visitVarInsn(2, 1);
      classWriter0.index = 256;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      methodWriter0.visitFieldInsn((-2186), "DdrxIyFZ)MCr3", "]MY@v7d;<#Bs", "[8w~F6*WY8");
      methodWriter0.visitInsn(2);
      methodWriter0.getSize();
      int int0 = Type.CHAR;
      assertFalse(int0 == int1);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331648);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      ClassWriter classWriter1 = new ClassWriter(50331648);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      Item item0 = classWriter0.newFloat(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean0);
      
      stringArray0[2] = "";
      stringArray0[3] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "&IJAaYH5d", "x;T}\\zbOQ)LA+8f", "", stringArray0, false, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter0.visitMultiANewArrayInsn("[(fl{+>~RY_4F/c[GFu", 50331648);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter0.visitIincInsn(1, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter0.visitLdcInsn("\"NymE`DIIf");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(70);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "", "", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame(1, (-1193), stringArray0, 70, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(2, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn((-1193), "G?");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331608);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      ClassWriter classWriter1 = new ClassWriter(50331608);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      Item item0 = classWriter0.newFloat(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Class";
      stringArray0[1] = "java/lang/Class";
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean0);
      
      stringArray0[2] = "java/lang/Class";
      stringArray0[3] = "java/lang/Class";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "&IJAaYH5d", "x;T}\\zbOQ)LA+8f", "java/lang/Class", stringArray0, false, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label[] labelArray0 = new Label[2];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      methodWriter0.visitTableSwitchInsn(2909, 2, label0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      Label label1 = label0.next;
      assertNull(label1);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2186));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2186), "DdrxIyFZ)M^", "DdrxIyFZ)M^", "DdrxIyFZ)M^", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(2, "DdrxIyFZ)M^", "DdrxIyFZ)M^", "DdrxIyFZ)M^");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("DdrxIyFZ)M^", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitMultiANewArrayInsn("DdrxIyFZ)M^", 926);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitFrame((-1796915122), (-381), (Object[]) null, 1, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(285212681);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertSame(byteVector0, byteVector1);
      
      classWriter0.invalidFrames = false;
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor1);
      assertSame(methodWriter0, methodWriter1);
      assertNotSame(annotationVisitor1, annotationVisitor0);
      assertFalse(annotationVisitor1.equals((Object)annotationVisitor0));
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-771));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[6];
      stringArray0[0] = "RuntimeVisibleAnnotations";
      stringArray0[1] = "RuntimeVisibleAnnotations";
      stringArray0[2] = "::L2~hK_+.PCpQ&<<";
      stringArray0[3] = "RuntimeVisibleAnnotations";
      stringArray0[4] = "::L2~hK_+.PCpQ&<<";
      stringArray0[5] = "B";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1676, "::L2~hK_+.PCpQ&<<", "::L2~hK_+.PCpQ&<<", "RuntimeVisibleAnnotations", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("v00OXk0Xm)", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(16, int0);
      
      methodWriter0.visitIntInsn(251, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = Frame.BASE_KIND;
      assertFalse(int1 == int0);
      assertEquals(267386880, int1);
      
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("y-j", true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitMultiANewArrayInsn("", (-2212));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-350));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      Item item0 = classWriter0.newClassItem("DdrxIy&FZ)MCr3");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 144, "DdrxIy&FZ)MCr3", "DdrxIy&FZ)MCr3", "DdrxIy&FZ)MCr3", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DdrxIy&FZ)MCr3");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("java/lang/dyn/Dynamic", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteArray0);
      
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2);
      
      methodWriter0.visitMaxs(90, 201);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2196));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)M#Cr3", "DdrxIyFZ)M#Cr3", "DdrxIyFZ)M#Cr3", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      classWriter0.visitOuterClass("i3(&=sP!", "gk|bm5MT#gEp\"!", "i3(&=sP!");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitIntInsn(2, 2969);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newFieldItem("DdrxIyFZ)M#Cr3", "gk|bm5MT#gEp\"!", "gk|bm5MT#gEp\"!");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((byte)0, 1, stringArray0, 1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(16, int0);
      
      methodWriter0.visitFieldInsn(1, "DdrxIyFZ)MCr3", "y-j", "DdrxIyFZ)MCr3");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame((-272), 253, stringArray0, (-2212), stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      int int0 = (-2212);
      ClassWriter classWriter0 = new ClassWriter((-2212));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = true;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      String string0 = "y-j";
      int int1 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int1 == int0);
      assertEquals(16, int1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitIntInsn(251, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdxwyFZ)Mr3", "DdxwyFZ)Mr3", "DdxwyFZ)Mr3", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putShort((-2212));
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.visitVarInsn(167, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = classWriter0.addType("DdxwyFZ)Mr3");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, int0);
      
      int int1 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int1 == int0);
      assertEquals(35, int1);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2175));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.key2;
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2175), "DdrxIyFZ)MN^", "DdrxIyFZ)MN^", "DdrxIyFZ)MN^", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      int int0 = Frame.KIND;
      assertEquals(251658240, int0);
      
      methodWriter0.visitFieldInsn(2, "DdrxIyFZ)MN^", "DdrxIyFZ)MN^", "DdrxIyFZ)MN^");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(2, 49);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(170, 15);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = Frame.TOP;
      assertFalse(int1 == int0);
      assertEquals(16777216, int1);
      
      Attribute attribute0 = new Attribute("DdrxIyFZ)MN^");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(125, (-1530));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331648);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      ClassWriter classWriter1 = new ClassWriter(50331648);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Class";
      stringArray0[1] = "AwoMY`(nlb*Ud)(<";
      Item item0 = classWriter0.newClassItem("X;uvlS:;");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      stringArray0[2] = "x;T}\\zbOQ)LA+8f";
      stringArray0[3] = "java/lang/Class";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "AwoMY`(nlb*Ud)(<", "x;T}\\zbOQ)LA+8f", "AwoMY`(nlb*Ud)(<", stringArray0, false, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Attribute attribute0 = new Attribute("x;T}\\zbOQ)LA+8f");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "AwoMY`(nlb*Ud)(<");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertNotSame(label0, label1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(label0.equals((Object)label1));
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter0.visitVarInsn(48, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter0.visitFieldInsn((-1479), "x;T}\\zbOQ)LA+8f", "AwoMY`(nlb*Ud)(<", "java/lang/Class");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter0.visitTypeInsn((-1984247854), "mw[k5N!mrgN");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter0.visitTryCatchBlock(label0, label1, label1, "AgS");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-67), "kwh*#dQV`KT", "[8:;Y>..u^p0-,c", "[8:;Y>..u^p0-,c", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMethodInsn((-128), "kwh*#dQV`KT", "kwh*#dQV`KT", "8]%M81'");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      methodWriter0.visitIntInsn(185, (-496));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(256, (-496));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(52, int0);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "[8:;Y>..u^p0-,c");
      assertFalse(boolean0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331648);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFloat(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/QClas*";
      stringArray0[1] = "java/lang/QClas*";
      stringArray0[2] = "java/lang/QClas*";
      stringArray0[3] = "java/lang/QClas*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/QClas*", "x;T}\\zbOQ)LA+8f", "java/lang/QClas*", stringArray0, false, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      item0.set(2, "java/lang/dyn/Dynamic", "java/lang/QClas*", "java/lang/QClas*");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = new ByteVector(1);
      assertNotNull(byteVector1);
      assertFalse(byteVector1.equals((Object)byteVector0));
      
      ByteVector byteVector2 = byteVector1.putShort(2);
      assertNotNull(byteVector2);
      assertNotSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertNotSame(byteVector2, byteVector0);
      assertFalse(byteVector1.equals((Object)byteVector0));
      assertFalse(byteVector2.equals((Object)byteVector0));
      
      methodWriter0.put(byteVector2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertNotSame(byteVector2, byteVector0);
      assertFalse(byteVector1.equals((Object)byteVector0));
      assertFalse(byteVector2.equals((Object)byteVector0));
      
      Attribute attribute0 = new Attribute("java/lang/QClas*");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331648);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFloat(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Class";
      stringArray0[1] = "AwoMY`(nlb*Ud)(<";
      stringArray0[2] = "x;T}\\zbOQ)LA+8f";
      stringArray0[3] = "java/lang/Class";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "AwoMY`(nlb*Ud)(<", "x;T}\\zbOQ)LA+8f", "AwoMY`(nlb*Ud)(<", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Attribute attribute0 = new Attribute("");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "AwoMY`(nlb*Ud)(<");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(48, 1144);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(50331648, "x;T}\\zbOQ)LA+8f", "AwoMY`(nlb*Ud)(<", "java/lang/Class");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331648);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      ClassWriter classWriter1 = new ClassWriter(50331648);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "R";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      stringArray0[1] = "java/lang/Class";
      stringArray0[2] = "java/lang/Class";
      stringArray0[3] = "zd1823P'qfY}k,";
      stringArray0[4] = "R";
      Item item0 = classWriter0.newFieldItem("RuntimeInvisibleParameterAnnotations", "R", "RuntimeInvisibleParameterAnnotations");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      stringArray0[5] = "&IJAaYH5d";
      stringArray0[6] = "java/lang/Class";
      stringArray0[7] = "java/lang/Class";
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1024, "R", "java/lang/Class", "%n6", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter0.visitMethodInsn(2, "t03%xktFz4|", "dQ|7AH2h{@!#2B_4u", "R");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {2}, intArray0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("java/lang/Class", false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {2}, intArray0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331648);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Class";
      stringArray0[1] = "java/lang/Class";
      String string0 = "X;uvlS:;";
      stringArray0[2] = "x/T}\\zb%OQ)LA+8f";
      stringArray0[3] = "java/lang/Class";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/Class", "x/T}\\zb%OQ)LA+8f", "java/lang/Class", stringArray0, false, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "java/lang/Class");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label0, label1);
      assertFalse(label0.equals((Object)label1));
      
      methodWriter0.visitVarInsn(48, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn((-1479), "x/T}\\zb%OQ)LA+8f", "java/lang/Class", "java/lang/Class");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(48, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-32768));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Ljava/lang/Synthetic;";
      classWriter0.invalidFrames = true;
      stringArray0[1] = "Ljava/lang/Synthetic;";
      stringArray0[2] = "Ljava/lang/Synthetic;";
      stringArray0[3] = "Ljava/lang/Synthetic;";
      stringArray0[4] = "Ljava/lang/Synthetic;";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 83, "Ljava/lang/Synthetic;", "Ljava/lang/Synthetic;", "Ljava/lang/Synthetic;", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(1787, "Ljava/lang/Synthetic;", "`$gSb:H6uECH<", "H(&kW");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-350));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      byte[] byteArray0 = new byte[18];
      byteArray0[1] = (byte)0;
      byteArray0[15] = (byte)0;
      Item item0 = classWriter0.newClassItem("DdrxIy&FZ)MCr3");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 144, "DdrxIy&FZ)MCr3", "DdrxIy&FZ)MCr3", "DdrxIy&FZ)MCr3", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DdrxIy&FZ)MCr3");
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      methodWriter0.visitFieldInsn((byte)0, "DdrxIy&FZ)MCr3", "DdrxIy&FZ)MCr3", "DdrxIy&FZ)MCr3");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame((byte)0, (byte)0, stringArray0, 1, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-350));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      byte[] byteArray0 = new byte[18];
      byteArray0[1] = (byte)0;
      byteArray0[15] = (byte)0;
      Item item0 = classWriter0.newClassItem("DdrxIy&FZ)MCr3");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 144, "DdrxIy&FZ)MCr3", "DdrxIy&FZ)MCr3", "DdrxIy&FZ)MCr3", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      boolean boolean2 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DdrxIy&FZ)MCr3");
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      
      methodWriter0.visitFieldInsn((byte)0, "DdrxIy&FZ)MCr3", "DdrxIy&FZ)MCr3", "DdrxIy&FZ)MCr3");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((byte)0, (byte)0, stringArray0, 1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331648);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "java)?ang/C~ass";
      stringArray0[2] = "";
      stringArray0[3] = "t0vB%xktFz4q|";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 50331648, "", "java)?ang/C~ass", "", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMethodInsn(1, "java)?ang/C~ass", "t0vB%xktFz4q|", "t0vB%xktFz4q|");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(1, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(2, (-770));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn((-2044), (-2128));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(62, int0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2259));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "DdrxIyFZ)MCr3");
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.put12(2, 1);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector0.putUTF8("DdrxIyFZ)MCr3");
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      methodWriter0.visitTypeInsn(1, "DdrxIyFZ)MCr3");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      String string0 = label0.toString();
      assertNotNull(string0);
      assertEquals("L12", string0);
      
      methodWriter0.visitLocalVariable("DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", label0, label0, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector3 = byteVector0.putUTF8("`SFiCI&%Qi3");
      assertNotNull(byteVector3);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector3, byteVector2);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector0);
      
      ByteVector byteVector4 = byteVector2.putInt(15);
      assertNotNull(byteVector4);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector2, byteVector3);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector4);
      assertSame(byteVector4, byteVector1);
      assertSame(byteVector4, byteVector0);
      assertSame(byteVector4, byteVector3);
      assertSame(byteVector4, byteVector2);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      
      methodWriter0.visitTypeInsn(64, "U$D'q,)h8-tz7Gh7U");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("l0uaA(xW\"0`Xw=02C", 595);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdxwyFZ)Mr3", "DdxwyFZ)Mr3", "DdxwyFZ)Mr3", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.classReaderOffset = 53;
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      assertFalse(boolean0);
      
      classWriter0.firstMethod = methodWriter0;
      methodWriter0.visitVarInsn(167, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod.visitVarInsn(53, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod.visitVarInsn(53, 53);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(138, "DdxwyFZ)Mr3", "RuntimeVisibleAnnotations", "AwoMY`(nlb*Ud)(<");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        MethodWriter.getNewOffset((int[]) null, (int[]) null, 127, 643);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdxwyFZ)Mr3", "DdxwyFZ)Mr3", "DdxwyFZ)Mr3", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.classReaderOffset = 54;
      boolean boolean0 = FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      assertFalse(boolean0);
      
      classWriter0.firstMethod = methodWriter0;
      methodWriter0.visitVarInsn(167, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.firstMethod.visitVarInsn(54, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = label0.frame;
      assertNull(frame0);
      
      methodWriter0.visitLineNumber(2, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      classWriter0.firstMethod.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(classWriter0.firstMethod, methodWriter0);
      
      int int0 = classWriter0.firstMethod.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(classWriter0.firstMethod, methodWriter0);
      assertEquals(6, int0);
      
      classWriter0.firstMethod.visitTryCatchBlock(label0, label0, (Label) null, (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.firstMethod.visitVarInsn(54, 54);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(167, "DdxwyFZ)Mr3", "RuntimeVisibleAnnotations", "AwoMY`(nlb*Ud)(<");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        MethodWriter.getNewOffset((int[]) null, (int[]) null, 127, 643);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdxwyFZ)Mr3", "DdxwyFZ)Mr3", "DdxwyFZ)Mr3", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.classReaderOffset = 0;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      classWriter0.firstMethod = methodWriter0;
      Item item0 = classWriter0.newLong(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      classWriter0.firstMethod.visitInsn(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2186));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2186), "DdrxIyFZ)M^", "DdrxIyFZ)M^", "DdrxIyFZ)M^", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.signature = "DdrxIyFZ)M^";
      methodWriter0.visitFieldInsn(2, "DdrxIyFZ)M^", "DdrxIyFZ)M^", "DdrxIyFZ)M^");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.classReaderLength = 178;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      methodWriter0.visitFieldInsn(178, "DdrxIyFZ)M^", "RuntimenvisibeAnnotations", "RuntimenvisibeAnnotations");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visitOuterClass("DdrxIyFZ)M^", "<it>", "<it>");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMethodInsn(1, "Exceptions", "Exceptions", "<it>");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2200));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      int int0 = classWriter0.newMethod("DdrxIyFZ)MCr3", "IJAaYH5d", "IJAaYH5d", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(5, int0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 191, "IJAaYH5d", "DdrxIyFZ)MCr3", (String) null, stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitVarInsn(2, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int1 == int0);
      assertEquals(27, int1);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = new byte[0];
      boolean boolean0 = label0.resolve(methodWriter0, (-2200), byteArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertFalse(boolean0);
      
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-134));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)M#Cr3", "DdrxIyFZ)M#Cr3", "DdrxIyFZ)M#Cr3", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      classWriter0.visitOuterClass("", "gk|bm5MT#gEp\"!", "zt'");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(16, int0);
      
      methodWriter0.visitFieldInsn(1, "DdrxIyFZ)M#Cr3", "y-j", "Iqx~j$qI0%I(");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "DdrxIyFZ)M#Cr3", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 14
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitTypeInsn(1, "[8w~F6*WY8");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(2);
      assertNotNull(byteVector0);
      
      methodWriter0.visitIntInsn(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector1 = byteVector0.putShort((-463));
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.visitFieldInsn(256, "[8w~F6*WY8", "+%\b68-{7&q@Rm<", "DdrxIyFZ)MCr3");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector2 = new ByteVector();
      assertNotNull(byteVector2);
      assertFalse(byteVector2.equals((Object)byteVector0));
      assertFalse(byteVector2.equals((Object)byteVector1));
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertFalse(byteVector0.equals((Object)byteVector2));
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("+%\b68-{7&q@Rm<", "+%\b68-{7&q@Rm<", "EC4~]#+", label0, label0, 256);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int[] intArray0 = new int[0];
      Label[] labelArray0 = new Label[8];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      Label label1 = label0.successor;
      assertNull(label1);
      
      labelArray0[5] = null;
      labelArray0[6] = label0;
      labelArray0[7] = label0;
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331648);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFloat(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/QClas*";
      stringArray0[1] = "java/lang/QClas*";
      stringArray0[2] = "java/lang/QClas*";
      stringArray0[3] = "java/lang/QClas*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/QClas*", "x;T}\\zbOQ)LA+8f", "java/lang/QClas*", stringArray0, false, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      item0.set(2, "java/lang/dyn/Dynamic", "java/lang/QClas*", "java/lang/QClas*");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putLong(3931L);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector1.putShort(2);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(21, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1392510721, (-3157));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331648);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      ClassWriter classWriter1 = new ClassWriter(50331648);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Class";
      stringArray0[1] = "AwoMY`(nlb*Ud)(<";
      Item item0 = classWriter0.newClassItem("X;uvlS:;");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      stringArray0[2] = "x;T}\\zbOQ)LA+8f";
      stringArray0[3] = "java/lang/Class";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "AwoMY`(nlb*Ud)(<", "x;T}\\zbOQ)LA+8f", "AwoMY`(nlb*Ud)(<", stringArray0, false, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Attribute attribute0 = new Attribute("x;T}\\zbOQ)LA+8f");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2186));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      int int0 = classWriter0.newUTF8("DdrxIyFZ)MCr3");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, int0);
      
      methodWriter0.visitTypeInsn(1, "Xuhthtb;f!.b!-TVRZ");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(2, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.index = 256;
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      methodWriter0.visitInsn(178);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331648);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Class";
      stringArray0[1] = "java/lang/Class";
      stringArray0[2] = "x/T}\\zb%OQ)LA+8f";
      stringArray0[3] = "java/lang/Class";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/Class", "x/T}\\zb%OQ)LA+8f", "java/lang/Class", stringArray0, false, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Item item0 = classWriter0.newInteger(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitTypeInsn(1, "java/lang/Class");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "java/lang/Class");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label0, label1);
      assertFalse(label0.equals((Object)label1));
      
      methodWriter0.visitFieldInsn((-1479), "x/T}\\zb%OQ)LA+8f", "java/lang/Class", "java/lang/Class");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(48, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 17
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(267386880);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 253, "DdrxIyFZ)MCr3", "java/lang/Throwable", "org.objectweb.asm.jip.MethodWriter", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMethodInsn((-122), "org.objectweb.asm.jip.MethodWriter", "7>5PY59f", "LiZeNumberTable");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLocalVariable("7>5PY59f", "RuntimeInvisibleParameterAnnotations", (String) null, label0, label0, 3);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(2, 253);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("r|E^&u^=Z1W]]", (-122));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort((byte[]) null, 1916);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(16, int0);
      
      methodWriter0.visitFieldInsn(1, "DdrxIyFZ)MCr3", "y-j", "Iqx~j$qI0%I(");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "DdrxIyFZ)MCr3", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331667);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = Type.CHAR;
      assertEquals(2, int0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 242, "DdrxIyFZ)MCr3", "java/lang/Throwable", "DdrxIyFZ)MCr3", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMaxs(242, 242);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newClassItem("DdrxIyFZ)MCr3");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      item0.set(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Object[] objectArray0 = new Object[1];
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 2, objectArray0, 242, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2186));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2186), "DdrxIyFZ)M^", "DdrxIyFZ)M^", "DdrxIyFZ)M^", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(2, "DdrxIyFZ)M^", "DdrxIyFZ)M^", "DdrxIyFZ)M^");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      methodWriter0.visitTypeInsn((-5755), "Exceptions");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn((-968), (-2186));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "L");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs((-5755), (-2186));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Object object0 = label0.info;
      assertNull(object0);
      
      methodWriter0.visitLdcInsn("Exceptions");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(1, (-1314));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      String string0 = label0.toString();
      assertNotNull(string0);
      assertEquals("L10", string0);
      
      String string1 = label0.toString();
      assertNotNull(string1);
      assertTrue(string1.equals((Object)string0));
      assertEquals("L10", string1);
      
      methodWriter0.visitLocalVariable("L10", "[8w~F6*WY8", "L10", label0, label0, (-463));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(180, (-891));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      label1.inputStackTop = (-891);
      methodWriter0.visitTryCatchBlock(label1, label0, label1, "h7.^f!pV");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      assertSame(label1, label0);
      
      methodWriter0.visitLineNumber((-463), label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label0, label1);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(92, int0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331648);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/Class";
      stringArray0[1] = "java/lang/Class";
      stringArray0[2] = "x/T}\\zb%OQ)LA+8f";
      stringArray0[3] = "java/lang/Class";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/Class", "x/T}\\zb%OQ)LA+8f", "java/lang/Class", stringArray0, false, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "java/lang/Class");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label0, label1);
      assertFalse(label0.equals((Object)label1));
      
      int int0 = classWriter0.newClass("java/lang/QClas*");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(6, int0);
      
      methodWriter0.visitMultiANewArrayInsn(")G!T$-[1[K", 32);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label2 = new Label();
      assertNotNull(label2);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      
      Label label3 = label2.getFirst();
      assertNotNull(label3);
      assertNotSame(label2, label1);
      assertSame(label2, label3);
      assertNotSame(label2, label0);
      assertNotSame(label3, label1);
      assertNotSame(label3, label0);
      assertSame(label3, label2);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      assertFalse(label3.equals((Object)label1));
      assertFalse(label3.equals((Object)label0));
      
      methodWriter0.visitLocalVariable("IJAaYH5d", "R!L#_r_J", "q[P5P)(L7[t&j", label3, label2, 25);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label2, label1);
      assertSame(label2, label3);
      assertNotSame(label2, label0);
      assertNotSame(label3, label1);
      assertNotSame(label3, label0);
      assertSame(label3, label2);
      assertFalse(label2.equals((Object)label1));
      assertFalse(label2.equals((Object)label0));
      assertFalse(label3.equals((Object)label1));
      assertFalse(label3.equals((Object)label0));
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2237));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2 == boolean1);
      assertFalse(boolean2);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      ByteVector byteVector0 = new ByteVector(1);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putUTF8("DdrxIyFZ)MCr3");
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.visitTypeInsn(1, "DdrxIyFZ)MCr3");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      label0.position = (-2303);
      methodWriter0.exceptionCount = 15;
      String string0 = label0.toString();
      assertNotNull(string0);
      assertEquals("L12", string0);
      
      methodWriter0.visitLocalVariable("DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", label0, label0, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLocalVariable("L12", "DdrxIyFZ)MCr3", "L12", label0, label0, (-463));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = label0.getFirst();
      assertNotNull(label1);
      assertSame(label1, label0);
      assertSame(label0, label1);
      
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label1;
      methodWriter0.visitTableSwitchInsn((-257), 15, label1, labelArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(label1, label0);
      assertSame(label0, label1);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2173));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdxIZ)MCr3", "DdxIZ)MCr3", "DdxIZ)MCr3", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      int int0 = classWriter0.newUTF8("DdxIZ)MCr3");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(1, int0);
      
      methodWriter0.visitVarInsn(2, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(1, "DdxIZ)MCr3");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.key3;
      assertNotNull(item0);
      
      methodWriter0.visitMethodInsn(1, "DdxIZ)MCr3", "DdxIZ)MCr3", "DdxIZ)MCr3");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitOuterClass("DdxIZ)MCr3", "Annot4tionDefault", "DdxIZ)MCr3");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 167;
      intArray0[8] = (-2173);
      intArray0[0] = 167;
      intArray0[4] = 167;
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.info = (Object) item0;
      label0.info = (Object) label0;
      int int1 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int1 == int0);
      assertEquals(41, int1);
      
      Label label1 = label0.successor;
      assertNull(label1);
      
      methodWriter0.visitJumpInsn(167, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int2 = Frame.KIND;
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals(251658240, int2);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 167, stringArray0, 5095, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2186));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2186), "DdrxIyFZ)M^", "DdrxIyFZ)M^", "DdrxIyFZ)M^", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.signature = "DdrxIyFZ)M^";
      methodWriter0.visitFieldInsn(2, "DdrxIyFZ)M^", "DdrxIyFZ)M^", "DdrxIyFZ)M^");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.classReaderLength = 178;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      classWriter0.visitSource("Synthetic", "DdrxIyFZ)M^");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(2, 7, (Object[]) null, (-2186), (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-2186), "R9Yz*hKf;C Pvy^<C\"", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331648);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = false;
      String[] stringArray0 = new String[0];
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "java/lang/Throwable", "DdrxIyFZ)MCr3", "java/lang/Throwable", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame(253, 2, stringArray0, 2, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLineNumber((-1424), label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassWriter classWriter1 = new ClassWriter(512);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      methodWriter0.visitJumpInsn(1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putLong(253);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteVector1);
      assertNotSame(classWriter0, classWriter1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      ByteVector byteVector2 = byteVector0.putShort(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteVector2);
      assertNotSame(classWriter0, classWriter1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      methodWriter0.visitMaxs((-1424), 239);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      
      byte[] byteArray0 = new byte[5];
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Item item0 = new Item();
      assertNotNull(item0);
      
      item0.intVal = (-2231);
      item0.strVal3 = "DdrxIyFZ)MCr3";
      item0.set((-2231));
      ClassWriter classWriter0 = new ClassWriter((-2231));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 206, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs((-2231), (-2231));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.put12(2, 262144);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector1.put12(2, (-12));
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      
      ByteVector byteVector3 = byteVector1.putInt(186);
      assertNotNull(byteVector3);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector2);
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
      
      methodWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(16, int0);
      
      methodWriter0.visitMaxs((-2231), 16);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-359));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean1 = ClassReader.ANNOTATIONS;
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      
      String[] stringArray0 = new String[0];
      Item item0 = classWriter0.newClassItem("DdrxIy&FZ)MCr3");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      Item item1 = classWriter0.newClassItem("DdrxIy&FZ)MCr3");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item1);
      assertSame(item1, item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 148, "DdrxIy&FZ)MCr3", "DdrxIy&FZ)MCr3", "DdrxIy&FZ)MCr3", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean2 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "DdrxIy&FZ)MCr3");
      assertFalse(boolean2 == boolean1);
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
      
      classWriter0.firstMethod = methodWriter0;
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2189));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMethodInsn(185, "DdrxIyFZ)MCr3", "['w~F67WY8", "DdrxIyFZ)MCr3");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(185, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      int int0 = Frame.SHORT;
      assertEquals(16777228, int0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)M#Cr3", "DdrxIyFZ)M#Cr3", "DdrxIyFZ)M#Cr3", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-86);
      boolean boolean0 = label0.resolve(methodWriter0, 1, byteArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertArrayEquals(new byte[] {(byte)0, (byte) (-86)}, byteArray0);
      assertFalse(boolean0);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      assertEquals(0, pipedInputStream0.available());
      assertNotNull(pipedInputStream0);
      
      methodWriter0.visitLdcInsn("gk|bm5MT#gEp\"!");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(97, (byte) (-86), stringArray0, 183, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.put12(183, 183);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector0.putByte(186);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(44, int0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String string0 = "DdrxIyFZ)MCr3";
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 393, "DdrxIyFZ)MCr3", "AnnotationDefault", "XuVr`bO", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      String string1 = "RuntimeVisibleParameterAnnotations";
      methodWriter0.visitMethodInsn(186, "java/lang/dyn/Dynamic", "RuntimeVisibleParameterAnnotations", "1");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte byte0 = (byte)101;
      byte byte1 = (byte)60;
      methodWriter0.visitIntInsn((byte)101, (byte)44);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte byte2 = (byte) (-10);
      methodWriter0.visitVarInsn(2, (byte)101);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = 205;
      ClassWriter classWriter1 = new ClassWriter(205);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      byte[] byteArray0 = classWriter1.toByteArray();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteArray0);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      // Undeclared exception!
      try { 
        label0.getOffset();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Label offset position has not been resolved yet
         //
         verifyException("org.objectweb.asm.jip.Label", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2186));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2186), "DdrxIyFZ)M^", "DdrxIyFZ)M^", "DdrxIyFZ)M^", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(2, "DdrxIyFZ)M^", "DdrxIyFZ)M^", "DdrxIyFZ)M^");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.classReaderLength = 178;
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      methodWriter0.visitFieldInsn(178, "DdrxIyFZ)M^", "RuntimenvisibeAnnotations", "RuntimenvisibeAnnotations");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visitOuterClass("DdrxIyFZ)M^", "<it>", "<it>");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      Item item0 = new Item();
      assertNotNull(item0);
      
      item0.set((-2212));
      item0.set((-3528.927189));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 191, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitIntInsn((-2212), (-134));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(2, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(37, int0);
      
      ByteVector byteVector0 = new ByteVector(1523);
      assertNotNull(byteVector0);
      
      methodWriter0.visitIntInsn(167, 1523);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitInsn(191);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitIincInsn(2826, 167);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter0.visitMethodInsn(2, "<CXqXH", "<CXqXH", "DdrxIyFZ)MCr3");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter0, methodWriter1);
      
      methodWriter1.visitInsn((-757));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      int int0 = (-2212);
      ClassWriter classWriter0 = new ClassWriter((-2212));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String string0 = "DdrxIyFZ)MCr3";
      String[] stringArray0 = new String[0];
      int int1 = classWriter0.newMethod("DdrxIyFZ)MCr3", "IJAaYH5d", "IJAaYH5d", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertFalse(int1 == int0);
      assertEquals(5, int1);
      
      int int2 = 191;
      boolean boolean0 = false;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 191, "IJAaYH5d", "DdrxIyFZ)MCr3", "IJAaYH5d", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(2, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putLong((-152));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.classReaderOffset = (-2212);
      ByteVector byteVector2 = byteVector1.putLong(0L);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      ByteVector byteVector3 = byteVector1.putShort(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteVector3);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector3);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector3, byteVector1);
      assertSame(byteVector3, byteVector0);
      assertSame(byteVector3, byteVector2);
      
      ByteVector byteVector4 = byteVector0.putShort((-2212));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteVector4);
      assertSame(byteVector0, byteVector4);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector3);
      assertSame(byteVector4, byteVector3);
      assertSame(byteVector4, byteVector0);
      assertSame(byteVector4, byteVector1);
      assertSame(byteVector4, byteVector2);
      
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector4);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-128), "wB%f*F}H", "wB%f*F}H", "DdrxIyFZ)MCr3", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitMethodInsn(2870, "DdrxIyFZ)MCr3", "wB%f*F}H", "wB%f*F}H");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(27, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.classReaderOffset = 62;
      methodWriter0.visitVarInsn(162, 62);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(6, int0);
      
      // Undeclared exception!
      try { 
        methodWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331648);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.newFloat(1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[4];
      stringArray0[0] = "java/lang/QClas*";
      item0.hashCode = 50331648;
      stringArray0[1] = "x;T}\\zbOQ)LA+8f";
      stringArray0[2] = "java/lang/QClas*";
      stringArray0[3] = "java/lang/QClas*";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "java/lang/QClas*", "x;T}\\zbOQ)LA+8f", "java/lang/QClas*", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      item0.set(2, "java/lang/dyn/Dynamic", "x;T}\\zbOQ)LA+8f", "x;T}\\zbOQ)LA+8f");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putShort(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.signature = "java/lang/QClas*";
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("x;T}\\zbOQ)LA+8f", 50331648);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(21, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.newUTF8("java/lang/dyn/Dynamic");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(6, int0);
      
      methodWriter0.visitVarInsn(2, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitJumpInsn(91, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIntInsn(6, 66);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = Frame.BASE_KIND;
      assertFalse(int1 == int0);
      assertEquals(267386880, int1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("java/lang/QClas*", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitVarInsn(267386880, 376);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int2 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(77, int2);
      
      methodWriter0.visitMultiANewArrayInsn("java/lang/QClas*", 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2259));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putByte((-2259));
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.visitTypeInsn(1, "DdrxIyFZ)MCr3");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitVarInsn(1, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      String string0 = label0.toString();
      assertNotNull(string0);
      assertEquals("L14", string0);
      
      methodWriter0.visitLocalVariable("DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", label0, label0, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLocalVariable("L14", "DdrxIyFZ)MCr3", "L14", label0, label0, (-463));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(180, "L14", "DdrxIyFZ)MCr3", "L14");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = edge0.successor;
      assertNull(label1);
      
      methodWriter0.visitLdcInsn("DdrxIyFZ)MCr3");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLineNumber(2, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLineNumber((-1607), label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2212), "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", (String) null, stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(20, int0);
      
      methodWriter0.visitFieldInsn(1, "DdrxIyFZ)MCr3", "y-j", "H#?C?5VKvI4zG");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "DdrxIyFZ)MCr3", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2186));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2186), "DdrxIyFZ)M^", "DdrxIyFZ)M^", "DdrxIyFZ)M^", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(2, "DdrxIyFZ)M^", "DdrxIyFZ)M^", "DdrxIyFZ)M^");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("DdrxIyFZ)M^", 926);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitMultiANewArrayInsn("DdrxIyFZ)M^", 24117248);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter0.visitFrame((-1796915122), (-381), (Object[]) null, 1, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putInt(285212681);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      methodWriter0.put(byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(methodWriter0, methodWriter1);
      assertSame(byteVector0, byteVector1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitTypeInsn(2, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2259));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      boolean boolean2 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      ByteVector byteVector0 = new ByteVector(1);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.put12(2, 1);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector0.putUTF8("DdrxIyFZ)MCr3");
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      methodWriter0.visitTypeInsn(1, "DdrxIyFZ)MCr3");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      methodWriter0.exceptionCount = 1;
      String string0 = label0.toString();
      assertNotNull(string0);
      assertEquals("L12", string0);
      
      methodWriter0.visitLocalVariable("DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", label0, label0, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(180, "L12", "DdrxIyFZ)MCr3", "L12");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("c1e[");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
      
      methodWriter0.visitMaxs(2, 15);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2189));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      Item item0 = classWriter0.newClassItem("Ljava/lang/Synthetic;");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 65, "RuntimeVisibleParameterAnnotations", "Ljava/lang/Synthetic;", "RuntimeVisibleParameterAnnotations", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIincInsn((-32768), (-2189));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RuntimeVisibleParameterAnnotations");
      assertFalse(boolean0);
      
      methodWriter0.visitFieldInsn(144, "e4+^HoB0CX9SYW2NJk", "Ljava/lang/Synthetic;", "Ljava/lang/Synthetic;");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(16777225, 65, stringArray0, 2245, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(2245, (-2189), stringArray0, 255, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2186));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int0 = classWriter0.newUTF8("DdrxIyFZ)MCr3");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, int0);
      
      methodWriter0.visitVarInsn(2, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.index = 256;
      String string0 = "AwoMY`(nlb*Ud)(<";
      Item item0 = classWriter0.newClassItem("AwoMY`(nlb*Ud)(<");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      methodWriter0.visitIincInsn(3097, 166);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Integer integer0 = Integer.getInteger("DdrxIyFZ)MCr3", 258);
      assertNotNull(integer0);
      assertFalse(integer0.equals((Object)int0));
      assertEquals(258, (int)integer0);
      
      methodWriter0.visitLdcInsn("`mx`=Nf7");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "gp ])Ko+f2BPR&Ho?");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-512), label0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -512
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2186));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int0 = classWriter0.newUTF8("DdrxIyFZ)MCr3");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, int0);
      
      methodWriter0.visitVarInsn(2, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.index = 256;
      methodWriter0.visitFieldInsn((-462), "`mx`=Nf7", "Deprecaed", "`mx`=Nf7");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(178, "DdrxIyFZ)MCr3", "]MY@v7d;<#Bs", "DdrxIyFZ)MCr3");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(178);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331659);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = Type.BYTE;
      assertEquals(3, int0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 253, "DdrxIyFZ)MCr3", "java/lang/Throwable", "DdrxIyFZ)MCr3", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitInsn(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn(2, (-772));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int1 = Type.INT;
      assertFalse(int1 == int0);
      assertEquals(5, int1);
      
      ByteVector byteVector0 = new ByteVector(3);
      assertNotNull(byteVector0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      int int2 = Frame.ELEMENT_OF;
      assertFalse(int2 == int1);
      assertFalse(int2 == int0);
      assertEquals((-268435456), int2);
      
      methodWriter1.visitIntInsn((-62), 5);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitFrame((-688), 50331659, stringArray0, 5, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      Integer integer0 = Integer.getInteger("DdrxIyFZ)MCr3", (-772));
      assertNotNull(integer0);
      assertFalse(integer0.equals((Object)int2));
      assertFalse(integer0.equals((Object)int1));
      assertFalse(integer0.equals((Object)int0));
      assertEquals((-772), (int)integer0);
      
      methodWriter1.visitLdcInsn("LocalVariableTypeTable");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitTypeInsn(2, "LocalVariableTypeTable");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter1.visitFrame(50331659, 1, stringArray0, 1, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.put(byteVector0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2186));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = null;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2186), "DdrxIyFZ)M^", "DdrxIyFZ)M^", "DdrxIyFZ)M^", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      String[] stringArray1 = new String[1];
      stringArray1[0] = "DdrxIyFZ)M^";
      classWriter0.visit((-2186), 41, "DdrxIyFZ)M^", "DdrxIyFZ)M^", "8+F%oEw~", stringArray1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.signature = "DdrxIyFZ)M^";
      classWriter0.visitOuterClass("DdrxIyFZ)M^", ";kB)16v", ".dQU@eQ?YBh#Mb\"4h*");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = 64;
      methodWriter0.visitMultiANewArrayInsn("EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", 64);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(2, "DdrxIyFZ)M^", "DdrxIyFZ)M^", "DdrxIyFZ)M^");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.put12(187, 187);
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      Attribute attribute0 = new Attribute((String) null);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Item item0 = new Item((-2231));
      assertNotNull(item0);
      
      item0.intVal = (-2231);
      item0.strVal3 = "java/lang/Object";
      item0.set((-2231));
      item0.set((-2231));
      ClassWriter classWriter0 = new ClassWriter((-2231));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 206, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs((-2231), (-2231));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      label0.frame = frame0;
      methodWriter0.visitLabel(label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTypeInsn(22, "IJAaYH5d");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "org.objectweb.asm.jip.MethodWriter");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLineNumber(1, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      edge0.successor = label0;
      edge0.info = 22;
      Edge edge1 = edge0.next;
      assertNull(edge1);
      
      methodWriter0.visitVarInsn(22, 206);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(59, int0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2186));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(2, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.index = 256;
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      methodWriter0.visitFieldInsn(178, "DdrxIyFZ)MCr3", "]MY@v7d;<#Bs", "[8w~F6*WY8");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(178);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(39, int0);
      
      int int1 = Type.CHAR;
      assertFalse(int1 == int0);
      assertEquals(2, int1);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitTypeInsn(1, "DdrxIyFZ)MCr3");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      label0.info = (Object) (-1963);
      String string0 = label0.toString();
      assertNotNull(string0);
      assertEquals("L11", string0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      Label label2 = edge0.successor;
      assertNull(label2);
      
      methodWriter0.visitTryCatchBlock(label0, label1, (Label) null, "DdrxIyFZ)MCr3");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitVarInsn(2, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, (-948));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2186));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-96);
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertArrayEquals(new byte[] {(byte) (-96), (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertFalse(boolean0);
      
      byteArray0[1] = (byte) (-104);
      byteArray0[2] = (byte)92;
      methodWriter0.classReaderOffset = 60;
      byteArray0[3] = (byte) (-96);
      byteArray0[4] = (byte)76;
      byteArray0[5] = (byte) (-65);
      Item item0 = classWriter0.newFieldItem("C$%v<ADVm0o;", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      byteArray0[6] = (byte)24;
      byteArray0[7] = (byte)73;
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertArrayEquals(new byte[] {(byte) (-96), (byte) (-104), (byte)92, (byte) (-96), (byte)76, (byte) (-65), (byte)24, (byte)73}, byteArray0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      methodWriter0.visitVarInsn(2, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean2 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      methodWriter0.visitFieldInsn(176, "DdrxIyFZ)MCr3", "]MY@v7d;<#Bs", "[8w~F6*WY8");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(176);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(6, int0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((byte)76, "]MY@v7d;<#Bs", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitTypeInsn(1, "DdrxIyFZ)MCr3");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(1, (-1314));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      byte[] byteArray0 = new byte[5];
      boolean boolean1 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      label0.line = (-1963);
      String string0 = label0.toString();
      assertNotNull(string0);
      assertEquals("L11", string0);
      
      int int0 = classWriter0.newClass("L11");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(4, int0);
      
      label0.info = (Object) (-257);
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      Label label2 = label1.getFirst();
      assertNotNull(label2);
      assertNotSame(label1, label0);
      assertSame(label1, label2);
      assertNotSame(label2, label0);
      assertSame(label2, label1);
      assertFalse(label1.equals((Object)label0));
      assertFalse(label2.equals((Object)label0));
      
      Label label3 = label2.successor;
      assertNull(label3);
      
      methodWriter0.visitLocalVariable("SourceDebugExtension", "JSR/RET are not supported with computeFrames option", "DdrxIyFZ)MCr3", label2, label2, 202);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label1, label0);
      assertSame(label1, label2);
      assertNotSame(label2, label0);
      assertSame(label2, label1);
      assertFalse(label1.equals((Object)label0));
      assertFalse(label2.equals((Object)label0));
      
      Attribute attribute0 = new Attribute("L11");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Integer integer0 = (Integer)label0.info;
      assertNotNull(integer0);
      assertFalse(integer0.equals((Object)int0));
      assertEquals((-257), (int)integer0);
      
      methodWriter0.visitLdcInsn(integer0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label0, label1);
      assertNotSame(label0, label2);
      assertFalse(integer0.equals((Object)int0));
      assertFalse(label0.equals((Object)label1));
      assertFalse(label0.equals((Object)label2));
      
      methodWriter0.visitLineNumber((-1314), label2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label1, label0);
      assertSame(label1, label2);
      assertNotSame(label2, label0);
      assertSame(label2, label1);
      assertFalse(label1.equals((Object)label0));
      assertFalse(label2.equals((Object)label0));
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331659);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = Frame.VALUE;
      assertEquals(8388607, int0);
      
      String[] stringArray0 = new String[0];
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "java/lang/Throwable");
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "DdrxIyFZ)MCr3", "java/lang/Throwable", "DdrxIyFZ)MCr3", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.classReaderLength = 8388607;
      int int1 = Type.INT;
      assertFalse(int1 == int0);
      assertEquals(5, int1);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertNotNull(methodWriter1);
      assertSame(methodWriter1, methodWriter0);
      
      methodWriter1.visitIntInsn((-62), (-62));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertSame(methodWriter1, methodWriter0);
      
      Item item0 = classWriter0.newClassItem("java/lang/Throwable");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      item0.set(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      item0.set(2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitFrame(4, 4, stringArray0, 70, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2190));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DxIZ)MKr3", "DxIZ)MKr3", "DxIZ)MKr3", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int0 = classWriter0.newUTF8("DxIZ)MKr3");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, int0);
      
      methodWriter0.visitVarInsn(2, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(1, "DxIZ)MKr3");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.key3;
      assertNotNull(item0);
      
      methodWriter0.visitMethodInsn(1, "DxIZ)MKr3", "DxIZ)MKr3", "DxIZ)MKr3");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int[] intArray0 = new int[9];
      intArray0[1] = 1;
      Item item1 = classWriter0.newClassItem("StackMapTable");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item1);
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      
      intArray0[1] = 167;
      intArray0[8] = (-2190);
      intArray0[0] = 167;
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      label0.info = (Object) item0;
      label0.info = (Object) label0;
      item0.intVal = 251658240;
      int int1 = Frame.SHORT;
      assertFalse(int1 == int0);
      assertEquals(16777228, int1);
      
      Label label1 = label0.successor;
      assertNull(label1);
      
      methodWriter0.visitJumpInsn(167, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int2 = Frame.KIND;
      assertFalse(int2 == int0);
      assertFalse(int2 == int1);
      assertEquals(251658240, int2);
      
      classWriter0.visitInnerClass("DxIZ)MKr3", "DxIZ)MKr3", "DxIZ)MKr3", (-2190));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(1, 167, stringArray0, 1, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2212));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdxoMFpZ)Mr3", "DdxoMFpZ)Mr3", "DdxoMFpZ)Mr3", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.classReaderOffset = 54;
      methodWriter0.visitVarInsn(167, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.firstMethod.visitVarInsn(54, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-1);
      Integer integer0 = new Integer((byte) (-1));
      assertNotNull(integer0);
      assertEquals((-1), (int)integer0);
      
      int int0 = 65535;
      // Undeclared exception!
      try { 
        classWriter0.firstMethod.visitFrame((byte) (-1), 65535, stringArray0, (-2008), stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2186));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "DdrxIXFZ)MCr3";
      stringArray0[1] = "DdrxIXFZ)MCr3";
      stringArray0[2] = "XuVr`]bO";
      stringArray0[3] = "DdrxIXFZ)MCr3";
      stringArray0[4] = "DdrxIXFZ)MCr3";
      stringArray0[5] = "DdrxIXFZ)MCr3";
      stringArray0[6] = "DdrxIXFZ)MCr3";
      stringArray0[7] = "DdrxIXFZ)MCr3";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1335, "DdrxIXFZ)MCr3", "DdrxIXFZ)MCr3", "DdrxIXFZ)MCr3", stringArray0, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      byte[] byteArray0 = new byte[3];
      methodWriter0.visitLdcInsn("DdrxIXFZ)MCr3");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = ClassReader.FRAMES;
      assertTrue(boolean0);
      
      methodWriter0.visitIntInsn(1, (byte)0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(68, "XuVr`]bO", "^>", "kwh*#dQV`KT");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("DdrxIXFZ)MCr3", (-2186));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn((byte)0, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFrame(3, 1485, stringArray0, 2, stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(81, int0);
      
      methodWriter0.visitCode();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      classWriter0.version = 57;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.exceptionCount = 2;
      Label label0 = new Label();
      assertNotNull(label0);
      
      String string0 = label0.toString();
      assertNotNull(string0);
      assertEquals("L10", string0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      label0.addToSubroutine(1, 4);
      edge0.next = edge0;
      Edge edge1 = edge0.next.next;
      assertNotNull(edge1);
      assertSame(edge1, edge0);
      
      edge0.next.next = edge1;
      Edge edge2 = label0.successors;
      assertNull(edge2);
      
      edge0.next.next = null;
      edge0.successor = label0;
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      methodWriter0.visitMultiANewArrayInsn("L10", 4);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTryCatchBlock(label0, label1, label1, "DdrxIyFZ)MCr3");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      
      String string1 = label1.toString();
      assertNotNull(string1);
      assertNotSame(label1, label0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(label1.equals((Object)label0));
      assertEquals("L12", string1);
      
      byte[] byteArray0 = new byte[20];
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      FieldVisitor fieldVisitor0 = classWriter0.visitField(2895, "L12", "DdrxIyFZ)MCr3", "L10", (Object) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(fieldVisitor0);
      
      byteArray0[1] = (byte) (-66);
      boolean boolean0 = label1.resolve(methodWriter0, 57, byteArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(label1, label0);
      assertFalse(label1.equals((Object)label0));
      assertFalse(boolean0);
      
      methodWriter0.visitFrame(1485, 2, stringArray0, 4, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = methodWriter0.getSize();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(66, int0);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2186));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = "DdrxIXFZ)MCr3";
      stringArray0[1] = "DdrxIXFZ)MCr3";
      stringArray0[2] = "XuVr`bO";
      stringArray0[3] = "DdrxIXFZ)MCr3";
      stringArray0[4] = "DdrxIXFZ)MCr3";
      stringArray0[5] = "DdrxIXFZ)MCr3";
      stringArray0[6] = "DdrxIXFZ)MCr3";
      stringArray0[7] = "DdrxIXFZ)MCr3";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1335, "DdrxIXFZ)MCr3", "DdrxIXFZ)MCr3", "DdrxIXFZ)MCr3", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      byte[] byteArray0 = new byte[3];
      byteArray0[2] = (byte) (-86);
      boolean boolean0 = label0.resolve(methodWriter0, (-2186), byteArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte) (-86)}, byteArray0);
      assertFalse(boolean0);
      
      methodWriter0.visitLdcInsn("DdrxIXFZ)MCr3");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = ClassReader.FRAMES;
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
      
      methodWriter0.visitIntInsn(1, (byte)0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitJumpInsn(164, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      String string0 = "kwh*#dQV`KT";
      methodWriter0.visitFieldInsn(68, "XuVr`bO", "^>", "kwh*#dQV`KT");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("DdrxIXFZ)MCr3", (-2186));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "DdrxIXFZ)MCr3");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn((byte) (-86), 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 1485, stringArray0, 2, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2189));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      Item item0 = classWriter0.newClassItem("DdrxIyFZ)MCr3");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      byte[] byteArray0 = new byte[0];
      boolean boolean0 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertArrayEquals(new byte[] {}, byteArray0);
      assertFalse(boolean0);
      
      methodWriter0.visitVarInsn(17, (-1717));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item1 = classWriter0.key3;
      assertNotNull(item1);
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      
      Edge edge1 = new Edge();
      assertNotNull(edge1);
      assertFalse(edge1.equals((Object)edge0));
      
      Integer integer0 = new Integer((-66));
      assertNotNull(integer0);
      assertEquals((-66), (int)integer0);
      
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      assertFalse(fileDescriptor0.valid());
      assertNotNull(fileDescriptor0);
      
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      assertFalse(fileDescriptor0.valid());
      assertNotNull(mockFileInputStream0);
      
      item1.set((-1256.3F));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      
      methodWriter0.visitFrame((-2189), 1, stringArray0, (-1717), stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn((-11), "DdrxIyFZ)M^", "java/lang/Object", "DdrxIyFZ)M^");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(4, "me|y", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 13
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", "DdrxIyFZ)MCr3", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.exceptionCount = 2;
      Label label0 = new Label();
      assertNotNull(label0);
      
      String string0 = label0.toString();
      assertNotNull(string0);
      assertEquals("L11", string0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      label0.addToSubroutine(1, 4);
      edge0.next = edge0;
      Edge edge1 = edge0.next.next;
      assertNotNull(edge1);
      assertSame(edge1, edge0);
      
      Label label1 = new Label();
      assertNotNull(label1);
      assertFalse(label1.equals((Object)label0));
      
      label0.visitSubroutine(label1, 2, 57);
      assertNotSame(label0, label1);
      assertNotSame(label1, label0);
      assertFalse(label0.equals((Object)label1));
      assertFalse(label1.equals((Object)label0));
      
      Edge edge2 = label0.successors;
      assertNull(edge2);
      
      edge0.next.next.info = 2958;
      edge0.next.next.info = 57;
      edge0.successor = label0;
      Label label2 = new Label();
      assertNotNull(label2);
      assertFalse(label2.equals((Object)label0));
      assertFalse(label2.equals((Object)label1));
      
      methodWriter0.visitMultiANewArrayInsn("L11", 4);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTryCatchBlock(label0, label2, label2, "DdrxIyFZ)MCr3");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotSame(label2, label0);
      assertNotSame(label2, label1);
      assertNotSame(label0, label1);
      assertNotSame(label0, label2);
      assertFalse(label2.equals((Object)label0));
      assertFalse(label2.equals((Object)label1));
      assertFalse(label0.equals((Object)label1));
      assertFalse(label0.equals((Object)label2));
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs((-1734), 2958);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(50331629);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = Frame.CHAR;
      assertEquals(16777227, int0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.objectweb.asm.jip.MethodWriter");
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
      
      String string0 = "wg6I<8Xq@9p?Ez|t)";
      boolean boolean2 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wg6I<8Xq@9p?Ez|t)");
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
      
      String[] stringArray0 = new String[0];
      boolean boolean3 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "DdrxIyFZ)MCr3", "wg6I<8Xq@9p?Ez|t)", "DdrxIyFZ)MCr3", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(8, 17);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Item item0 = classWriter0.newMethodItem("wg6I<8Xq@9p?Ez|t)", "DdrxIyFZ)MCr3", "wg6I<8Xq@9p?Ez|t)", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      methodWriter0.visitEnd();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(17, 8);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(8, "DdrxIyFZ)MCr3", "RuntimeVisibleAnnotations", "ubWb");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(2, 48);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2186));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2186), "DdrxIyFZ)M^", "DdrxIyFZ)M^", "DdrxIyFZ)M^", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "4Ca*<?w";
      classWriter0.visit((-2186), 25, "4Ca*<?w", "DdrxIyFZ)M^", "8+F%oEw~", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.signature = "DdrxIyFZ)M^";
      methodWriter0.visitFieldInsn(2, "DdrxIyFZ)M^", "DdrxIyFZ)M^", "DdrxIyFZ)M^");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitInsn(2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.classReaderLength = 178;
      ByteVector byteVector0 = new ByteVector(2);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putShort((-1743));
      assertNotNull(byteVector1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      
      ByteVector byteVector2 = byteVector1.put11(1, 3363);
      assertNotNull(byteVector2);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      methodWriter0.put(byteVector2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      
      methodWriter0.visitTypeInsn(178, "DdrxIyFZ)M^");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn((-1743), "RM:&[l#2b'");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }
}
