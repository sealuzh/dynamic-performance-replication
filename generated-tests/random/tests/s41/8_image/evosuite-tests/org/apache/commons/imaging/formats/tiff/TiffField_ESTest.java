/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 02:33:15 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-780), (-780), fieldTypeShort0, 1401, 4L, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-780), tiffField0.getDirectoryType());
      assertEquals(1, int0);
      assertEquals((-780), tiffField0.getTag());
      assertEquals(2802, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)104;
      byteArray0[4] = (byte)97;
      TiffField tiffField0 = new TiffField(1000, 1000, fieldTypeRational0, 1000, 0L, byteArray0, (ByteOrder) null, 2811);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1, int0);
      assertEquals(1000, tiffField0.getTag());
      assertEquals(8000, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2811, tiffField0.getSortHint());
      assertEquals(1000, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2136582715, 3423, fieldTypeRational0, 4103L, 2136582715, byteArray0, byteOrder0, (-2146964303));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2146964303), tiffField0.getSortHint());
      assertEquals("", string0);
      assertEquals(2136582715, tiffField0.getTag());
      assertEquals(32824, tiffField0.getBytesLength());
      assertEquals(2136582715, tiffField0.getOffset());
      assertEquals(3423, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)120;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldType0, 1, (-2L), byteArray0, byteOrder0, 755);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-2), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(755, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-47);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1087, 355, fieldTypeLong0, 492L, 32L, byteArray0, byteOrder0, 607);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1968, tiffField0.getBytesLength());
      assertEquals(607, tiffField0.getSortHint());
      assertEquals(1087, tiffField0.getTag());
      assertEquals(355, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(7, "7'GwS<OU&E3mKd");
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1246, 7, fieldTypeLong0, 0L, 7, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(1246, tiffField0.getTag());
      assertEquals(7, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1000, 1000, fieldTypeRational0, 1000, 0L, byteArray0, (ByteOrder) null, 2811);
      tiffField0.getCount();
      assertEquals(1000, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1000, tiffField0.getDirectoryType());
      assertEquals(2811, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4527, 4527, fieldTypeAscii0, 50L, 50L, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getByteArrayValue();
      assertEquals(50, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(4527, tiffField0.getTag());
      assertEquals(4527, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(33405, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33405, 33405, fieldTypeByte0, 1870L, (-381L), (byte[]) null, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 42034, fieldTypeLong0, (-1907L), 0L, byteArray0, byteOrder0, (byte) (-34));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(33922, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3873, 50714, fieldTypeRational0, (-3179L), (-2476L), byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeByte0, 92L, (-601L), (byte[]) null, byteOrder0, (-3620));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2062), 1, fieldTypeFloat0, 32L, (-2062), byteArray0, byteOrder0, 9);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 4L, 0L, byteArray0, byteOrder0, (byte)0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1000, 1000, fieldTypeRational0, 1000, 0L, byteArray0, (ByteOrder) null, 2811);
      tiffField0.getFieldType();
      assertEquals(1000, tiffField0.getDirectoryType());
      assertEquals(2811, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1000, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1087, 355, fieldTypeLong0, 492L, 32L, byteArray0, byteOrder0, 607);
      tiffField0.getValue();
      assertEquals(32, tiffField0.getOffset());
      assertEquals(355, tiffField0.getDirectoryType());
      assertEquals(1087, tiffField0.getTag());
      assertEquals(1968, tiffField0.getBytesLength());
      assertEquals(607, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(65535, " ");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(819, 65000, fieldTypeAscii0, 65535, 819, byteArray0, byteOrder0, 1480);
      int int0 = tiffField0.getOffset();
      assertEquals(819, tiffField0.getTag());
      assertEquals(65000, tiffField0.getDirectoryType());
      assertEquals(819, int0);
      assertEquals(1480, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 32773, fieldTypeAscii0, 50, 50, byteArray0, byteOrder0, (byte)21);
      tiffField0.getTagInfo();
      assertEquals(21, tiffField0.getSortHint());
      assertEquals(32773, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-780), (-780), fieldTypeShort0, 1401, 4L, byteArray0, byteOrder0, 1);
      fieldTypeShort0.getValue(tiffField0);
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-780), tiffField0.getTag());
      assertEquals(2802, tiffField0.getBytesLength());
      assertEquals((-780), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2136582715, 3423, fieldTypeRational0, 4103L, 2136582715, byteArray0, byteOrder0, (-2146964303));
      int int0 = tiffField0.getBytesLength();
      assertEquals(3423, tiffField0.getDirectoryType());
      assertEquals(32824, int0);
      assertEquals((-2146964303), tiffField0.getSortHint());
      assertEquals(2136582715, tiffField0.getOffset());
      assertEquals(2136582715, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1284, 34676, fieldTypeShort0, 4L, 34676, byteArray0, byteOrder0, 262);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(7, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 7, fieldTypeFloat0, 7, (-2593L), byteArray0, byteOrder0, (byte) (-98));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4425, 4425, fieldTypeByte0, 4425, 4425, byteArray0, byteOrder0, (byte) (-68));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@778933d6 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-780), (-780), fieldTypeShort0, 1401, 4L, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-780), tiffField0.getTag());
      assertEquals(2802, tiffField0.getBytesLength());
      assertEquals((-780), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2147076077), "6k*JP&VGh#S*mQ");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147076077), (-2147076077), fieldTypeDouble0, 556L, 4L, byteArray0, byteOrder0, (byte) (-2));
      tiffField0.getDoubleArrayValue();
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-2147076077), tiffField0.getDirectoryType());
      assertEquals((-2147076077), tiffField0.getTag());
      assertEquals(4448, tiffField0.getBytesLength());
      assertEquals((-2), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(40961, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeFloat0, 40961, 40961, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(7, tiffField0.getTag());
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(40961, tiffField0.getOffset());
      assertEquals(163844, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147014457, 1044, fieldTypeLong0, 1044, 2147014457, byteArray0, byteOrder0, (-1609));
      tiffField0.getDoubleArrayValue();
      assertEquals(1044, tiffField0.getDirectoryType());
      assertEquals((-1609), tiffField0.getSortHint());
      assertEquals(2147014457, tiffField0.getTag());
      assertEquals(2147014457, tiffField0.getOffset());
      assertEquals(4176, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1696, "V");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1696, 1696, fieldTypeShort0, 1696, (-1L), byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getDoubleArrayValue();
      assertEquals(1696, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(1696, tiffField0.getTag());
      assertEquals(3392, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.allocate(71);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 50, (-869L), byteArray0, byteOrder0, (-2147483645));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@467f386a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1000, 1000, fieldTypeRational0, 1000, 0L, byteArray0, (ByteOrder) null, 2811);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(8000, tiffField0.getBytesLength());
      assertEquals(1000L, tiffField0.getCount());
      assertEquals(1000, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1000, tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(2811, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(457, "OversizeValueElement, tag: ");
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "OversizeValueElement, tag: ");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-248), (-184), fieldTypeDouble0, 0L, 457, byteArray0, byteOrder0, (byte)4);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@f32ad05 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(34016, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeShort0, 34016, (-1L), byteArray0, byteOrder0, (byte)50);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getTag());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(34016L, tiffField0.getCount());
      assertEquals(68032, tiffField0.getBytesLength());
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeRational0, 8, 1133L, byteArray0, byteOrder0, (-4342));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(833, 833, fieldTypeLong0, 833, 833, byteArray0, byteOrder0, 65111);
      tiffField0.getIntArrayValue();
      assertEquals(833L, tiffField0.getCount());
      assertEquals(65111, tiffField0.getSortHint());
      assertEquals(3332, tiffField0.getBytesLength());
      assertEquals(833, tiffField0.getOffset());
      assertEquals(833, tiffField0.getDirectoryType());
      assertEquals(833, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, (-1760), fieldTypeRational0, 1L, (-1760), byteArray0, byteOrder0, (-1651));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2136582715, 3423, fieldTypeRational0, 4103L, 2136582715, byteArray0, byteOrder0, (-2146964303));
      tiffField0.getIntArrayValue();
      assertEquals(3423, tiffField0.getDirectoryType());
      assertEquals(32824, tiffField0.getBytesLength());
      assertEquals((-2146964303), tiffField0.getSortHint());
      assertEquals(4103L, tiffField0.getCount());
      assertEquals(2136582715, tiffField0.getTag());
      assertEquals(2136582715, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(65535, " ");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)79;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-101);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(819, 65000, fieldTypeAscii0, 65535, 819, byteArray0, byteOrder0, 1480);
      String string0 = tiffField0.getStringValue();
      assertEquals(1480, tiffField0.getSortHint());
      assertEquals(819, tiffField0.getOffset());
      assertEquals(65000, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(819, tiffField0.getTag());
      assertEquals(65535, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(65535, " ");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(819, 65000, fieldTypeAscii0, 65535, 819, byteArray0, byteOrder0, 1480);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@51c728b6
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1000, 1000, fieldTypeRational0, 1000, 0L, byteArray0, (ByteOrder) null, 2811);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2811, tiffField0.getSortHint());
      assertEquals("Unknown Tag (0x3e8)", string0);
      assertEquals(1000, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(33405, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33405, 33405, fieldTypeByte0, 1870L, (-381L), (byte[]) null, byteOrder0, 1);
      String string0 = tiffField0.getTagName();
      assertEquals(33405, tiffField0.getDirectoryType());
      assertEquals("Model2", string0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-381), tiffField0.getOffset());
      assertEquals(33405, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 2073432487, fieldTypeByte0, 255L, 0L, byteArray0, byteOrder0, (byte) (-32));
      MockFile mockFile0 = new MockFile("A>w!0Sshc=Il");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2073432487, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(53L, mockFile0.length());
      assertEquals(255, tiffField0.getBytesLength());
      assertEquals((-32), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 4L, 0L, byteArray0, byteOrder0, (byte)0);
      MockFile mockFile0 = new MockFile("T6Options", "T6Options");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(0, tiffField0.getOffset());
      assertEquals(44L, mockFile0.length());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1087, 355, fieldTypeLong0, 492L, 32L, byteArray0, byteOrder0, 607);
      String string0 = tiffField0.getValueDescription();
      assertEquals(355, tiffField0.getDirectoryType());
      assertEquals(492L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(1087, tiffField0.getTag());
      assertEquals(32, tiffField0.getOffset());
      assertEquals(1968, tiffField0.getBytesLength());
      assertEquals(607, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1590, fieldTypeLong0, 0, 2367L, byteArray0, byteOrder0, (byte)77);
      String string0 = tiffField0.toString();
      assertEquals(1590, tiffField0.getDirectoryType());
      assertEquals(2367, tiffField0.getOffset());
      assertEquals("0 (0x0: Unknown Tag):  (0 Long)", string0);
      assertEquals(77, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.allocate(2370);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeShort0, 32L, (-1L), byteArray0, byteOrder0, (byte)7);
      tiffField0.dump();
      assertEquals(64, tiffField0.getBytesLength());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(32L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(4, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.allocate(71);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0, 50, (-869L), byteArray0, byteOrder0, (-2147483645));
      String string0 = tiffField0.getValueDescription();
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-869), tiffField0.getOffset());
      assertEquals((-2147483645), tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)21;
      byteArray0[1] = (byte)65;
      byteArray0[2] = (byte)39;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 32773, fieldTypeAscii0, 50, 50, byteArray0, byteOrder0, (byte)21);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50, tiffField0.getTag());
      assertEquals(32773, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(50, tiffField0.getOffset());
      assertEquals(21, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147267667), (-2147267667), fieldTypeLong0, 1L, (-2364L), byteArray0, byteOrder0, 71);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-2147267667), tiffField0.getDirectoryType());
      assertEquals((-2364), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(71, tiffField0.getSortHint());
      assertEquals((-2147267667), tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(833, 833, fieldTypeLong0, 833, 833, byteArray0, byteOrder0, 65111);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2146885296, 65111);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(833, tiffField0.getOffset());
      assertEquals(65111, tiffField0.getSortHint());
      assertEquals(833, tiffField0.getTag());
      assertNull(string0);
      assertEquals(833, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(833, 833, fieldTypeLong0, 833, 833, byteArray0, byteOrder0, 65111);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2146885296, 65111);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Long", string0);
      assertNotNull(string0);
      assertEquals(833, tiffField0.getDirectoryType());
      assertEquals(65111, tiffField0.getSortHint());
      assertEquals(833, tiffField0.getOffset());
      assertEquals(833, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4969), (-1032), fieldTypeShort0, (-4969), (-7628L), byteArray0, byteOrder0, (byte)10);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(10, tiffField0.getSortHint());
      assertEquals((-4969), tiffField0.getTag());
      assertEquals((-1032), tiffField0.getDirectoryType());
      assertEquals((-4969L), tiffField0.getCount());
      assertEquals((-7628), tiffField0.getOffset());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 42034, fieldTypeLong0, (-1907L), 0L, byteArray0, byteOrder0, (byte) (-34));
      tiffField0.getFieldTypeName();
      assertEquals((-7628), tiffField0.getBytesLength());
      assertEquals(42034, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-34), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1000, 1000, fieldTypeRational0, 1000, 0L, byteArray0, (ByteOrder) null, 2811);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1000, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1000, tiffField0.getTag());
      assertEquals(2811, tiffField0.getSortHint());
      assertEquals(8000, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(833, 833, fieldTypeLong0, 833, 833, byteArray0, byteOrder0, 65111);
      int int0 = tiffField0.getSortHint();
      assertEquals(833, tiffField0.getOffset());
      assertEquals(65111, int0);
      assertEquals(833, tiffField0.getDirectoryType());
      assertEquals(833, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 42034, fieldTypeLong0, (-1907L), 0L, byteArray0, byteOrder0, (byte) (-34));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(42034, tiffField0.getDirectoryType());
      assertEquals("0 (0x0: Unknown Tag): ", string0);
      assertEquals((-7628), tiffField0.getBytesLength());
      assertEquals((-34), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(8, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(8, (-422), fieldTypeFloat0, 8, 8, byteArray0, byteOrder0, (byte)0);
      tiffField0.dump();
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(8, tiffField0.getOffset());
      assertEquals((-422), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(8L, tiffField0.getCount());
      assertEquals(8, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 42034, fieldTypeLong0, (-1907L), 0L, byteArray0, byteOrder0, (byte) (-34));
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1907L), tiffField0.getCount());
      assertEquals((-34), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(42034, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4527, 4527, fieldTypeAscii0, 50L, 50L, byteArray0, byteOrder0, (byte) (-1));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(4527, tiffField0.getTag());
      assertEquals(50L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(4527, tiffField0.getDirectoryType());
  }
}
