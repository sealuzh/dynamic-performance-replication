/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 16:44:27 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.FileNotFoundException;
import java.io.PipedInputStream;
import java.lang.reflect.Member;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.AnnotationWriter;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.FieldWriter;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodVisitor;
import org.objectweb.asm.jip.MethodWriter;
import org.objectweb.asm.jip.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-90);
      byteArray0[1] = (byte) (-89);
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, (byte) (-90));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -90
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(28);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "@&C|pg t)5(", "@&C|pg t)5(", "@&C|pg t)5(", stringArray0, false, false);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2632);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "nq1%e8&!F5N]M+e";
      stringArray0[1] = "nq1%e8&!F5N]M+e";
      stringArray0[2] = "nq1%e8&!F5N]M+e";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 2, "nq1%e8&!F5N]M+e", "nq1%e8&!F5N]M+e", "nq1%e8&!F5N]M+e", stringArray0, true, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int int0 = 16777222;
      ClassWriter classWriter0 = new ClassWriter(16777222);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, (-2058), "", "", "", stringArray0, true, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 2195;
      intArray0[1] = 343;
      intArray0[2] = 32767;
      intArray0[3] = 248;
      intArray0[4] = 127;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 2195, 248);
      assertEquals((-4485), int0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3440);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, 1, 1037);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-17));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-17), "0oY", "0oY", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, false, false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1024, "f?\"'V@J|>3u+dzZ8/z", "byte", "LineNumberTable", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 0, "RuntimeVisibleAnnotations", "LineNumberTable", "LineNumberTable", stringArray0, false, false);
      methodWriter0.visitIntInsn(1024, 1024);
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[1] = 343;
      intArray0[3] = 248;
      intArray0[4] = 343;
      int int0 = MethodWriter.getNewOffset(intArray0, intArray0, 0, 248);
      assertEquals(496, int0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3615));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "Synthetic";
      stringArray0[1] = "Synthetic";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 249, "o*^zaG?+3", "o*^zaG?+3", "Synthetic", stringArray0, false, false);
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      methodWriter0.visitJumpInsn((-3615), label1);
      assertSame(label0, label1);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3010));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3010), "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", stringArray0, false, false);
      methodWriter0.visitFieldInsn(2, "org.objectweb.asm.jip.MethodWriter", "f/'0cvFT`@$D)GI(Jxe", "<init>");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(178);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.MethodWriter", "Ljava/lang/Synthetic;", "org.objectweb.asm.jip.MethodWriter", stringArray0, false, false);
      methodWriter0.visitIincInsn(178, 178);
      int int0 = methodWriter0.getSize();
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.threshold = 1024;
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1024, "byte", "byte", "LineNumberTable", stringArray0, false, false);
      methodWriter0.visitFrame(1, 0, stringArray0, 12, stringArray0);
      methodWriter0.visitIntInsn(54, 12);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Exceptions", "AnnotationDefault", "f?\"'V@J|>3u+dz+Z8/z", (String[]) null, false, false);
      Edge edge0 = new Edge();
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 185, (Object[]) null, 185, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1024, "byte", "byte", "LineNumberTable", stringArray0, false, false);
      int int0 = 54;
      int int1 = 12;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 8, stringArray0, 12, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      classWriter0.newInteger(2);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1360), "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String) null, (String[]) null, true, true);
      classWriter0.toByteArray();
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(4947, "", "e~y#k<", "e~y#k<", stringArray0);
      boolean boolean0 = ClassReader.SIGNATURES;
      Label label0 = new Label();
      methodVisitor0.visitTryCatchBlock(label0, label0, label0, "MJh>H");
      classWriter0.newUTF8("e~y#k<");
      Frame frame0 = new Frame();
      Label label1 = frame0.owner;
      // Undeclared exception!
      try { 
        methodVisitor0.visitLineNumber(1, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777222);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 191, "java/lang/Throwable", "", "<init>", stringArray0, false, false);
      methodWriter0.visitAnnotation("java/lang/Throwable", false);
      methodWriter0.visitIntInsn(16777222, 1000);
      methodWriter0.getSize();
      methodWriter0.visitIntInsn(1000, 2409);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(191);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.MethodWriter", "Ljava/lang/Synthetic;", "org.objectweb.asm.jip.MethodWriter", stringArray0, false, false);
      methodWriter0.visitFrame((-1425), 2, stringArray0, 8, stringArray0);
      methodWriter0.visitIntInsn((-87), 4056);
      methodWriter0.visitIincInsn(3019, 191);
      int int0 = methodWriter0.getSize();
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(178);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.MethodWriter", "Ljava/lang/Synthetic;", "org.objectweb.asm.jip.MethodWriter", stringArray0, false, false);
      methodWriter0.visitIincInsn(3019, 178);
      int int0 = methodWriter0.getSize();
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 12, "LineNumberTable", "<init>", "LineNumberTable", (String[]) null, false, false);
      Edge edge0 = new Edge();
      edge0.next = edge0;
      Label label0 = edge0.next.successor;
      Label label1 = new Label();
      methodWriter0.visitLabel(label1);
      methodWriter0.visitFrame(2, 0, (Object[]) null, 1, (Object[]) null);
      Label label2 = label1.successor;
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(1, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2286, "65#AVawP/", "<init>", "java/lang/Throwable", (String[]) null, false, false);
      methodWriter0.visitAnnotation("65#AVawP/", true);
      methodWriter0.visitIntInsn(2286, 1);
      methodWriter0.getSize();
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-17));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-17), "0oY", "0oY", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, false, false);
      methodWriter0.visitMultiANewArrayInsn("9`@7!XQj&9f^@[b", 1113);
      methodWriter0.visitFrame(2, (-348), (Object[]) null, 1113, (Object[]) null);
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-24));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cv\"T`@$D)GI(Jxe", "f/'0cv\"T`@$D)GI(Jxe", "f/'0cv\"T`@$D)GI(Jxe", (String[]) null, true, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.classReaderOffset = 2;
      classWriter0.visitSource("f/'0cv\"T`@$D)GI(Jxe", "f/'0cv\"T`@$D)GI(Jxe");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-1778), "f/'0cv\"T`@$D)GI(Jxe", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 19
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, false, false);
      methodWriter0.visitVarInsn(7, (-2669));
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitFieldInsn(17, "<init{", "f/'0cvFT`@$D)GI(Jxe", "oB$z@Jg");
      methodWriter0.next = methodWriter1;
      String[] stringArray0 = new String[18];
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter0.next.visitIntInsn(17, (-2006091854));
      // Undeclared exception!
      try { 
        methodWriter0.next.visitFrame(4, (-2669), stringArray0, 2, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newLong(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, false, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.next = methodWriter1;
      Edge edge0 = new Edge();
      methodWriter0.next.visitAnnotation("oB$z@Jg", false);
      methodWriter0.visitEnd();
      methodWriter0.next.visitIincInsn((-1202), (-1202));
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(74);
      String[] stringArray0 = new String[6];
      stringArray0[0] = ";u5xDmY<S#S`";
      stringArray0[1] = "jT1?A<y{`<";
      stringArray0[2] = "jT1?A<y{`<";
      stringArray0[3] = "jT1?A<y{`<";
      stringArray0[4] = "jT1?A<y{`<";
      stringArray0[5] = ";u5xDmY<S#S`";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ";u5xDmY<S#S`", "jT1?A<y{`<", "jT1?A<y{`<", stringArray0, false, false);
      methodWriter0.visitVarInsn(1985, 74);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "SourceFile";
      stringArray0[1] = "SourceFile";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(4947, "<init{", "e~y#k<", "e~y#k<", stringArray0);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      methodWriter0.getSize();
      methodWriter0.visitAnnotation("RuntimeVisibleParameterAnnotations", false);
      boolean boolean0 = ClassReader.SIGNATURES;
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "SourceFile");
      classWriter0.newNameTypeItem("RuntimeVisibleParameterAnnotations", "SourceFile");
      methodWriter0.visitLabel(label0);
      assertSame(methodWriter0, methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "3JjyPR(ZC]%#Z:f?", "3JjyPR(ZC]%#Z:f?", "3JjyPR(ZC]%#Z:f?", (String[]) null, false, false);
      methodWriter0.visitLdcInsn("java/la1g/Throwable");
      methodWriter0.visitIntInsn(1, 0);
      methodWriter0.visitFrame(31, 2229, (Object[]) null, (-1290), (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 12, "LineNumberTable", "<init>", "LineNumberTable", (String[]) null, false, false);
      Edge edge0 = new Edge();
      edge0.next = edge0;
      Label label0 = edge0.successor;
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(4, "Exceptions", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String string0 = "<init>";
      boolean boolean0 = false;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 12, "<init>", "<init>", "<init>", (String[]) null, false, false);
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      int[] intArray0 = new int[0];
      Label label1 = edge0.successor;
      Label label2 = new Label();
      label2.line = 0;
      Label[] labelArray0 = new Label[7];
      labelArray0[0] = null;
      Label label3 = edge0.successor;
      edge0.successor = label2;
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label2, intArray0, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      Item item0 = new Item(2);
      ClassWriter classWriter1 = new ClassWriter(1);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "2:xtg?");
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 37, "f/'0vFT`@$D)GI(J", "f/'0vFT`@$D)GI(J", "3Jjy(Z]Pa:l?", (String[]) null, true, false);
      Edge edge0 = new Edge();
      Label label0 = new Label();
      ByteVector byteVector0 = new ByteVector();
      label0.status = 2;
      label0.info = (Object) methodWriter0;
      label0.info = (Object) edge0;
      Edge edge1 = new Edge();
      methodWriter0.visitFieldInsn(2, "b,", "3Jjy(Z]Pa:l?", "float");
      methodWriter0.visitJumpInsn(37, label0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 12, "3JjyPR(ZC]%#Z:f?", "3JjyPR(ZC]%#Z:f?", "f/'0vFT`@$D)GI(Jxe", (String[]) null, false, false);
      Edge edge0 = new Edge();
      Edge edge1 = new Edge();
      FieldWriter fieldWriter0 = classWriter0.lastField;
      methodWriter0.visitInsn(0);
      methodWriter0.visitIntInsn((-1255), 2);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 0, "RuntimeVisbleAnnotations", "LineNumberTable", "LineNumberTable", stringArray0, false, false);
      methodWriter0.visitMaxs(1, 1);
      methodWriter0.visitIntInsn(8, 1);
      methodWriter0.visitFrame(2, 1, stringArray0, 2, stringArray0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LqneNumberTable", "<int>", "LqneNumberTable", (String[]) null, false, false);
      Edge edge0 = new Edge();
      Edge edge1 = edge0.next;
      methodWriter0.visitFrame(2, 0, (Object[]) null, (-1818246639), (Object[]) null);
      edge0.info = 2;
      edge0.next = null;
      Label label0 = edge0.successor;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(4, 2, (Object[]) null, (-1996665060), (Object[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`$D)GI(xe", "f/'0cvFT`$D)GI(xe", "f/'0cvFT`$D)GI(xe", (String[]) null, true, true);
      methodWriter0.visitInsn(2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      methodWriter0.visitFieldInsn(2, "f/'0cvFT`$D)GI(xe", "<init>", "oB$z@Jg");
      int int0 = Type.LONG;
      methodWriter0.classReaderOffset = 7;
      classWriter0.visitInnerClass("5%um?)U,X,kued", (String) null, "L", 7);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)2;
      FileSystemHandling.shouldAllThrowIOExceptions();
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitParameterAnnotation((-1839), "Ljava/lang/Synthetic;", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LineNumberTable", "<init>", "LineNumberTable", (String[]) null, false, false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      Edge edge0 = new Edge();
      Edge edge1 = new Edge();
      Label label0 = edge0.successor;
      classWriter0.invalidFrames = false;
      Label label1 = new Label();
      Label[] labelArray0 = new Label[1];
      methodWriter0.visitIincInsn(2, 0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-12));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "ak\"0)$;}", "f/'0vFT`@$D)GI(Jxe", "JjyPR(ZC]%#Z:f?", (String[]) null, true, false);
      Label label0 = new Label();
      methodWriter0.visitMethodInsn(1, "f/'0vFT`@$D)GI(Jxe", "ak\"0)$;}", "ak\"0)$;}");
      byte[] byteArray0 = classWriter0.toByteArray();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, (String) null);
      int int0 = Type.FLOAT;
      methodWriter0.visitLdcInsn(2);
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, (-12));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -12
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-16));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "<init>", "f/'0cvFT`@$D)GrI(Jxe", "<init>", (String[]) null, false, false);
      Label label0 = new Label();
      label0.toString();
      Frame frame0 = new Frame();
      Frame frame1 = new Frame();
      methodWriter0.visitJumpInsn(1, label0);
      methodWriter0.visitVarInsn(180, 180);
      methodWriter0.visitLocalVariable("<init>", "L10", "L10", label0, label0, (-273));
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "3iJjyPR(ZC]%Z:f?", "3iJjyPR(ZC]%Z:f?", "f/'0vFT`@$D)GI(Jxe", (String[]) null, false, false);
      methodWriter0.visitMethodInsn(186, (String) null, ",H2;.d7aozfv->ghV", "jB");
      int int0 = Frame.BASE_KIND;
      methodWriter0.visitIntInsn(0, 0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "boolean", "<int>", "boolean", (String[]) null, false, false);
      Edge edge0 = new Edge();
      Edge edge1 = edge0.next;
      Label label0 = edge0.successor;
      edge0.successor = null;
      methodWriter0.visitFrame(2, 0, (Object[]) null, (-1818246639), (Object[]) null);
      edge0.info = 2;
      edge0.next = null;
      methodWriter0.visitMethodInsn(178, "boolean", "boolean", "<int>");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-29), ".class", "f?\"'V@J|>3u+dzZ8/z", ".class", stringArray0, false, false);
      methodWriter0.visitVarInsn(1, 1);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      Attribute attribute0 = new Attribute(".class");
      Attribute attribute1 = new Attribute(".class");
      Attribute attribute2 = new Attribute("f?\"'V@J|>3u+dzZ8/z");
      assertFalse(attribute2.isCodeAttribute());
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter((-46));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RNl.7B~pu`0u)");
      classWriter0.typeTable = null;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, false, false);
      methodWriter0.next = methodWriter0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      methodWriter0.visitInsn(185);
      methodWriter0.next.visitVarInsn(185, 1);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "byte", "byte", "LineNumberTable", stringArray0, false, false);
      methodWriter0.visitFrame(1, (-75), stringArray0, 12, stringArray0);
      methodWriter0.visitCode();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitIntInsn((-75), (byte) (-27));
      methodWriter0.visitMaxs((-2742), 210);
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter2.visitIntInsn(12, (-75));
      methodWriter2.getSize();
      methodWriter2.visitAnnotation("nq1%e8&!F5N]M+e", false);
      classWriter0.visitAnnotation("LineNumberTable", true);
      Label label0 = new Label();
      int[] intArray0 = new int[1];
      intArray0[0] = (-2049);
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter2.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertSame(methodWriter2, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      classWriter0.visitInnerClass("f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", 0);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.next = methodWriter1;
      String[] stringArray0 = new String[3];
      methodWriter0.visitEnd();
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(186, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LineNumberTable", "<init>", "LineNumberTable", (String[]) null, false, false);
      Edge edge0 = new Edge();
      Edge edge1 = new Edge();
      edge0.info = 2;
      edge0.next = edge1;
      Label label0 = edge0.successor;
      edge0.next = edge1;
      Label label1 = new Label();
      methodWriter0.visitFrame(68, 4, (Object[]) null, 1545, (Object[]) null);
      methodWriter0.visitLocalVariable("o5[t]T 3R(iMET\".", "<init>", "o5[t]T 3R(iMET\".", label1, label1, 1971);
      Label label2 = edge0.next.successor;
      methodWriter0.visitFieldInsn(1144, "<init>", "Signature", "}Kmn#!rw");
      Attribute attribute0 = new Attribute("}Kmn#!rw");
      methodWriter0.visitCode();
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      MethodWriter methodWriter1 = (MethodWriter)classWriter0.visitMethod(4911, "f/'0cvFTq`@$D)GI(Jxe", "f/'0cvFTq`@$D)GI(Jxe", "f/'0cvFTq`@$D)GI(Jxe", (String[]) null);
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      classWriter0.newNameTypeItem("f/'0cvFTq`@$D)GI(Jxe", "b9E@2d{LEDn");
      methodWriter1.visitFrame((-1889), 4911, (Object[]) null, 268435491, (Object[]) null);
      MethodWriter methodWriter3 = classWriter0.firstMethod;
      methodWriter3.visitIntInsn(268435491, 1920);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.put12(4911, (-1889));
      methodWriter1.put(byteVector0);
      Label label0 = new Label();
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1977);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'acvFT`@$D)GI(Jxe", "f/'acvFT`@$D)GI(Jxe", "f/'acvFT`@$D)GI(Jxe", (String[]) null, true, false);
      methodWriter0.visitMethodInsn(119, "f/'acvFT`@$D)GI(Jxe", "X3e)@8z fY[yR", "X3e)@8z fY[yR");
      methodWriter0.visitMultiANewArrayInsn("<init>", 1);
      methodWriter0.visitIntInsn(31, 31);
      methodWriter0.visitFrame(93, 73, (Object[]) null, (-342), (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1977);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      methodWriter0.visitIntInsn(1977, 19);
      methodWriter0.visitFieldInsn(19, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe");
      Label label0 = new Label();
      methodWriter0.visitMethodInsn(19, "X3e)@8z fY[yR", "k&A", "f/'0cvFT`3@$D)GI(Jxe");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      // Undeclared exception!
      try { 
        methodWriter1.visitInsn(1977);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1977
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      classWriter0.visitSource("<inSits{", "3JjyPR(ZC]%#Z:f?");
      int int0 = Frame.CHAR;
      methodWriter0.visitInsn(1);
      methodWriter0.visitIntInsn(16777227, 167);
      methodWriter0.visitFrame(248, 167, (Object[]) null, 65535, (Object[]) null);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-2031), 16777227, (Object[]) null, 2, (Object[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newLong(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.next = methodWriter1;
      String[] stringArray0 = new String[18];
      stringArray0[0] = "f/'0cvFT`@$D)GI(Jxe";
      Edge edge0 = new Edge();
      methodWriter1.visitInsn(0);
      methodWriter0.next.visitAnnotation("oB$z@Jg", false);
      methodWriter0.visitEnd();
      methodWriter0.next.visitIincInsn((-1202), (-1202));
      assertSame(methodWriter0.next, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-29), ".class", "f?\"'V@J|>3u+dzZ8/z", ".class", stringArray0, false, false);
      methodWriter0.visitVarInsn(169, 1);
      methodWriter0.visitIntInsn(1964, 1219);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      Attribute attribute0 = new Attribute(".class");
      Attribute attribute1 = new Attribute(".class");
      Attribute attribute2 = attribute0.next;
      methodWriter1.visitAttribute(attribute1);
      assertTrue(attribute1.isUnknown());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(10);
      String string0 = "f/'0cvFTq`@$D)GI(Jxe";
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(4911, "f/'0cvFTq`@$D)GI(Jxe", "f/'0cvFTq`@$D)GI(Jxe", "f/'0cvFTq`@$D)GI(Jxe", (String[]) null);
      classWriter0.newNameTypeItem("f/'0cvFTq`@$D)GI(Jxe", "b9E@2d{LEDn");
      // Undeclared exception!
      try { 
        methodVisitor0.visitVarInsn(1124075009, (-9));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      methodWriter0.visitVarInsn(0, 0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "d5iGjewyw?xYe{d,> ");
      methodWriter0.visitFieldInsn(2, "d5iGjewyw?xYe{d,> ", "B", "Synthetic");
      methodWriter0.visitIntInsn(2, 0);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.visitTypeInsn(17, "Synthetic");
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "f/'0cvFT`@$D)GI(Jxe");
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitVarInsn(2, 73);
      classWriter0.visitSource("LocalVariableTypeTable", "+JZ!_)Uy!");
      Edge edge0 = new Edge();
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(73, ":e%dj|J:S9W=TAiqt", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 19
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-89));
      boolean boolean0 = ClassReader.RESIZE;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "float", "f/'0vFT`@$D0)GI(Jxe", "float", (String[]) null, true, true);
      methodWriter0.visitVarInsn(25, 2);
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem("f/'0vFT`@$D0)GI(Jxe", (String) null, "double", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LqneNumberTable", "<int>", "LqneNumberTable", (String[]) null, false, false);
      Edge edge0 = new Edge();
      Edge edge1 = edge0.next;
      methodWriter0.visitFrame(2, 0, (Object[]) null, (-1818246639), (Object[]) null);
      edge0.info = 2;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      edge0.next = null;
      Label label0 = edge0.successor;
      methodWriter0.visitInsn(4);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(4, 2, (Object[]) null, (-1996665060), (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "SourceFile";
      stringArray0[1] = "SourceFile";
      MethodWriter methodWriter0 = (MethodWriter)classWriter0.visitMethod(4947, "<(Tint{", "e~y#k<", "e~y#k<", stringArray0);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "SourceFile");
      methodWriter1.visitFrame(2, 20, stringArray0, 1, stringArray0);
      methodWriter1.visitIntInsn((-2), 4947);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putUTF8("ev");
      methodWriter0.put(byteVector1);
      assertSame(byteVector0, byteVector1);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      classWriter0.version = (-29);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-29), ".class", "f?\"'V@J|>3u+dzZ8/z", "qmQ|,TQe} hT|&dcBlA", stringArray0, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame((-29), Integer.MAX_VALUE, stringArray0, Integer.MAX_VALUE, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = 3019;
      methodWriter0.visitIincInsn(1, 0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      int int1 = methodWriter1.getSize();
      assertEquals(51, int1);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(int1 == int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      methodWriter1.visitLabel(label0);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitJumpInsn((-29), label0);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = new Edge();
      assertFalse(edge1.equals((Object)edge0));
      assertNotNull(edge1);
      
      int int2 = 66;
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(66, "]MJ-.C#3Gn}xETXp", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 19
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3035));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-3035), "f/'0cvFT`@$D)GI(JxRe", "f/'0cvFT`@$D)GI(JxRe", "f/'0cvFT`@$D)GI(JxRe", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      classWriter0.visit(2, (-3035), "Ev])T^^eDN", "!<init>", "aK@@)K`(yf`owc}", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(2, "org.objectweb.asm.jip.MethodWriter", "f/'0cvFT`@$D)GI(JxRe", "!<init>");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitCode();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitFrame(2, 8, (Object[]) null, 0, (Object[]) null);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter1.visitIntInsn(1, 2889);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn(0, 65535);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Frame frame1 = new Frame();
      assertFalse(frame1.equals((Object)frame0));
      assertNotNull(frame1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      int int0 = methodWriter1.getSize();
      assertEquals(48, int0);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(0, "f/'0cvFT`@$D)GI(Jxe", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 19
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitVarInsn(170, 2);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter1.getSize();
      assertEquals(35, int0);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      methodWriter0.visitMultiANewArrayInsn("a75wYX-- t", 170);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label0 = frame0.owner;
      assertNull(label0);
      
      Attribute attribute0 = new Attribute("Wg`hB=");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      int int1 = methodWriter0.getSize();
      assertEquals(39, int1);
      assertSame(methodWriter0, methodWriter1);
      assertFalse(int1 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.key;
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "3JjyPR(ZC]%#Z:f?", "!0r$=Ga!],", "f/'0vFT`@$D)GI(Jxe", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3JjyPR(ZC]%#Z:f?");
      assertFalse(boolean0);
      
      methodWriter0.visitFieldInsn(2, "f/'0vFT`@$D)GI(Jxe", "!0r$=Ga!],", "3JjyPR(ZC]%#Z:f?");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassWriter classWriter1 = new ClassWriter(1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter1);
      
      ClassWriter classWriter2 = new ClassWriter(3);
      assertFalse(classWriter2.equals((Object)classWriter0));
      assertFalse(classWriter2.equals((Object)classWriter1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter2);
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
      
      methodWriter0.visitMultiANewArrayInsn("3$c\"<", 2);
      assertNotSame(classWriter0, classWriter1);
      assertNotSame(classWriter0, classWriter2);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(classWriter0.equals((Object)classWriter2));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(3, (-492), (Object[]) null, 4080, (Object[]) null);
      assertNotSame(classWriter0, classWriter1);
      assertNotSame(classWriter0, classWriter2);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(classWriter0.equals((Object)classWriter2));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(76, "1^YT oh*Xpu!", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "SourceFile";
      stringArray0[1] = "SourceFile";
      MethodWriter methodWriter0 = (MethodWriter)classWriter0.visitMethod(4947, "<init{", "e~y#k<", "e~y#k<", stringArray0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      int int0 = methodWriter1.getSize();
      assertEquals(34, int0);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationWriter annotationWriter0 = (AnnotationWriter)methodWriter1.visitAnnotation("RuntimeVisibleParameterAnnotations", false);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationWriter0);
      
      methodWriter1.visitIntInsn(0, 1);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.put12(74, 43);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector1.putUTF8("ev");
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteVector2);
      
      methodWriter0.put(byteVector2);
      assertSame(methodWriter0, methodWriter1);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector2, byteVector0);
      assertSame(byteVector2, byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newLong(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation((-1952), "2B_7X\"?3=M#", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "<init>", "f/'0cvFT`@$D)GrI(Jxe", "KY]?;sKDtT xA3b", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      String string0 = label0.toString();
      assertEquals("L12", string0);
      assertNotNull(string0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Edge edge0 = label0.successors;
      assertNull(edge0);
      
      methodWriter0.visitIincInsn(563, 185);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      Frame frame1 = new Frame();
      assertFalse(frame1.equals((Object)frame0));
      assertNotNull(frame1);
      
      methodWriter0.visitLabel(label1);
      assertNotSame(label1, label0);
      assertFalse(label1.equals((Object)label0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn(1, 285212676);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 20
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      methodWriter0.visitFieldInsn(17, "<zini4", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.next = methodWriter0;
      Object object0 = new Object();
      assertNotNull(object0);
      
      methodWriter0.next.visitMaxs(2, 0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.next.visitMethodInsn(17, "f/'0cvFT`@$D)GI(Jxe", "<zini4", "f/'0cvFT`@$D)GI(Jxe");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.next.visitIincInsn(2, 17);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("<zini4");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1977);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1977, 19);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(19, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitMethodInsn(77, "k&A", "X3e)@8z fY[yR", "f/'0cvFT`3@$D)GI(Jxe");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      int int0 = methodWriter1.getSize();
      assertEquals(42, int0);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter1.visitIincInsn(47, 2);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNull(methodWriter0);
      
      MethodWriter methodWriter1 = (MethodWriter)classWriter0.visitMethod(4911, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter1);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertSame(methodWriter2, methodWriter1);
      assertNotNull(methodWriter2);
      
      Item item0 = classWriter0.newNameTypeItem("f/'0cvFT`@$D)GI(Jxe", "b9E@2d{LEDn");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      MethodWriter methodWriter3 = classWriter0.firstMethod;
      assertSame(methodWriter3, methodWriter1);
      assertSame(methodWriter3, methodWriter2);
      assertNotNull(methodWriter3);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter3.visitLineNumber(257, label0);
      assertSame(methodWriter3, methodWriter1);
      assertSame(methodWriter3, methodWriter2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter3.visitIntInsn(0, 1920);
      assertSame(methodWriter3, methodWriter1);
      assertSame(methodWriter3, methodWriter2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.put12(4911, (-1889));
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteVector1);
      
      methodWriter1.put(byteVector0);
      assertSame(methodWriter1, methodWriter3);
      assertSame(methodWriter1, methodWriter2);
      assertSame(byteVector0, byteVector1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = new Item(2);
      assertNotNull(item0);
      
      ClassWriter classWriter1 = new ClassWriter(1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 37, "f/'0vFT`@$D)GI(J", "f/'0vFT`@$D)GI(J", "3JyPa:l", (String[]) null, true, true);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      label0.status = 2;
      Item item1 = classWriter0.key;
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      
      label0.info = (Object) methodWriter0;
      label0.info = (Object) edge0;
      Label[] labelArray0 = new Label[0];
      int int0 = Member.PUBLIC;
      assertEquals(0, int0);
      
      methodWriter0.visitTableSwitchInsn(2, 1, label0, labelArray0);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs((-32768), (-33));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = new Item(2);
      assertNotNull(item0);
      
      ClassWriter classWriter1 = new ClassWriter(1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter1);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "2:xtg?");
      assertFalse(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 37, "f/'0vFT`@$D)GI(J", "f/'0vFT`@$D)GI(J", "3Jjy(Z]Pa:l?", (String[]) null, true, false);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      label0.status = 2;
      label0.info = (Object) methodWriter0;
      label0.info = (Object) edge0;
      Label[] labelArray0 = new Label[0];
      int int0 = Member.PUBLIC;
      assertEquals(0, int0);
      
      methodWriter0.visitTableSwitchInsn(2, 1, label0, labelArray0);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(37, "f/'0vFT`@$D)GI(J", "P=DEuh@ndCWZw", "P=DEuh@ndCWZw");
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitJumpInsn(182, label0);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-25));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`3@$D)GI(Jxe", "f/'0cvFT`3@$D)GI(Jxe", "f/'0cvFT`3@$D)GI(Jxe", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = label0.frame;
      assertNull(frame0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitJumpInsn((-25), label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-16));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "<init>", "f/'0cvFT`@$D)GrI(Jxe", "KY]?;sKDtT xA3@b", (String[]) null, false, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Integer integer0 = new Integer(184);
      assertEquals(184, (int)integer0);
      assertNotNull(integer0);
      
      methodWriter0.visitLdcInsn("f/'0cvFT`@$D)GrI(Jxe");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visit((-268435456), (-466), "Synthetic", "(VGA!Kt#RH0}a~mjE", "Synthetic", (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = methodWriter0.next;
      assertNull(methodWriter1);
      
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertSame(methodWriter2, methodWriter0);
      assertNotNull(methodWriter2);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1977);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1977, 19);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      boolean boolean0 = ClassReader.FRAMES;
      assertTrue(boolean0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(2, (byte)0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitVarInsn((byte)0, (byte) (-62));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(2, "f/'0cvFT`3@$D)GI(Jxe", "f/'0cvFT`3@$D)GI(Jxe", "k&A");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMultiANewArrayInsn("f/'0cvFT`@$D)GI(Jxe", (-3132));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Frame.VALUE;
      assertEquals(8388607, int0);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "";
      stringArray0[1] = "";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(4947, "<init{", "e~y#k<", "e~y#k<", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodVisitor0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodVisitor0.visitMultiANewArrayInsn("", 244);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodVisitor0.visitTryCatchBlock(label0, label0, label0, "e~y#k<");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      methodVisitor0.visitTryCatchBlock(label1, label1, label1, "");
      assertNotSame(label1, label0);
      assertFalse(label1.equals((Object)label0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.threshold = 4947;
      String[] stringArray1 = new String[2];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      stringArray1[0] = "e~y#k<";
      stringArray1[1] = "e~y#k<";
      // Undeclared exception!
      try { 
        classWriter0.newNameType((String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-89));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      Item item0 = classWriter0.newLong((-89));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      String string0 = "f/'0cvFT`3@$D)GI(Jxe";
      String string1 = "long";
      String string2 = "S?cuf+}U-%,tj=Ff*4r";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "S?cuf+}U-%,tj=Ff*4r";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "long", "f/'0cvFT`3@$D)GI(Jxe", "S?cuf+}U-%,tj=Ff*4r", stringArray0, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitTypeInsn(1, "f/'0cvFT`3@$D)GI(Jxe");
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = new ByteVector(2);
      assertNotNull(byteVector0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn(179);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-12));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(byteArray0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "f/'0vFT`@$D)GI(Jxe", "f/'0vFT`@$D)GI(Jxe", "3JjyPR(ZC]%#Z:f?", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitMethodInsn(1, "f/'0vFT`@$D)GI(Jxe", "f/'0vFT`@$D)GI(Jxe", "f/'0vFT`@$D)GI(Jxe");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(127, 1190);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      methodWriter0.visitJumpInsn(187, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitSource((String) null, "Exceptions");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = "e~y#k<";
      stringArray0[1] = "e~y#k<";
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(4947, "e~y#k<", "e~y#k<", "e~y#k<", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodVisitor0);
      
      methodVisitor0.visitFrame(0, 2, stringArray0, 0, stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean0 = ClassReader.SIGNATURES;
      assertTrue(boolean0);
      
      Item item0 = classWriter0.newNameTypeItem("e~y#k<", "e~y#k<");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      int int0 = classWriter0.newUTF8("e~y#k<");
      assertEquals(1, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      Label label0 = frame0.owner;
      assertNull(label0);
      
      // Undeclared exception!
      try { 
        methodVisitor0.visitLineNumber(1, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Exceptions", "AnnotationDefault", "Exceptions", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      methodWriter0.visitFrame(0, 0, (Object[]) null, 0, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      PipedInputStream pipedInputStream0 = new PipedInputStream(2);
      assertEquals(0, pipedInputStream0.available());
      assertNotNull(pipedInputStream0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLdcInsn(edge0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.objectweb.asm.jip.Edge@a
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(11);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-647), "~\"?)$S}", "~\"?)$S}", "~\"?)$S}", (String[]) null, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      ClassWriter classWriter1 = new ClassWriter(11);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter1);
      
      classWriter1.visitSource("<(Tnt{", "~\"?)$S}");
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      methodWriter0.visitFrame((-2054), 2, (Object[]) null, 1, (Object[]) null);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(52, "f/'0cvFT`3@$D)GI(Jxe", "f/'0cvFT`3@$D)GI(Jxe", ";]Cj=sT-/'~\"`SjVp=");
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(1452, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RuntimeInvisibleAnnotations");
      assertFalse(boolean0);
      
      int int0 = (-1);
      ClassWriter classWriter0 = new ClassWriter((-1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      methodWriter1.visitVarInsn(170, 2);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("f/'0cvFT`@$D)GI(Jxe");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter1.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-17));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-17), "0oY", "0oY", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.classReaderOffset = 1;
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      boolean boolean0 = ClassReader.WRITER;
      assertTrue(boolean0);
      
      methodWriter0.visitFieldInsn((-5), "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.next = methodWriter0;
      Object object0 = new Object();
      assertNotNull(object0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.next.visitMethodInsn((-5), "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = ClassReader.FRAMES;
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      methodWriter0.visitInsn((-5));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, (-1418), (Object[]) null, 1443168256, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-466), "f/'0cvFT`@$D)GrI(Jxe", "f/'0cvFT`@$D)GrI(Jxe", "f/'0cvFT`@$D)GrI(Jxe", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2, "<init>", "f/'0cvFT`@$D)GrI(Jxe", "KY]?;sKDtT xA3b", (String[]) null, false, true);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter1);
      
      methodWriter0.visitIincInsn(1, 345);
      assertNotSame(methodWriter0, methodWriter1);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      String string0 = label0.toString();
      assertEquals("L14", string0);
      assertNotNull(string0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      methodWriter1.visitLabel(label0);
      assertNotSame(methodWriter1, methodWriter0);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Edge edge1 = new Edge();
      assertFalse(edge1.equals((Object)edge0));
      assertNotNull(edge1);
      
      Edge edge2 = new Edge();
      assertFalse(edge2.equals((Object)edge1));
      assertFalse(edge2.equals((Object)edge0));
      assertNotNull(edge2);
      
      methodWriter1.visitTypeInsn(1348, "cYC MD2");
      assertNotSame(methodWriter1, methodWriter0);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter1.visitIincInsn(563, 185);
      assertNotSame(methodWriter1, methodWriter0);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      Frame frame1 = new Frame();
      assertFalse(frame1.equals((Object)frame0));
      assertNotNull(frame1);
      
      methodWriter1.visitLabel(label0);
      assertNotSame(methodWriter1, methodWriter0);
      assertNotSame(label0, label1);
      assertFalse(methodWriter1.equals((Object)methodWriter0));
      assertFalse(label0.equals((Object)label1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(0, (-466));
      assertNotSame(methodWriter0, methodWriter1);
      assertFalse(methodWriter0.equals((Object)methodWriter1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)G|(Jxe", "f/'0cvFT`@$D)G|(Jxe", "f/'0cvFT`@$D)G|(Jxe", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(0, (-2669));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(17, "f/'0cvFT`@$D)G|(Jxe", "<init>", "d5iGjewyw?xYe{d,> ");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn(2, 2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(1341, 1341);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitSource("f/'0cvFT`@$D)G|(Jxe", "Code");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      methodWriter0.visitFieldInsn(178, "e~y#k<", "N)5bNQ]gA3_M3lVhT", "h8K=UAjICdlkXUSwff");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      int int0 = 6;
      ClassWriter classWriter0 = new ClassWriter(6);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      classWriter0.visitOuterClass("boolean", "boolean", "jT%P");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'acvFT`@$D)GIJxe", "f/'acvFT`@$D)GIJxe", "f/'acvFT`@$D)GIJxe", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      boolean boolean0 = classWriter0.invalidFrames;
      assertFalse(boolean0);
      
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 93;
      methodWriter0.visitFieldInsn((-65), "@=W%57J_7#[<toNf*2b", "J]Z))>0aE9P5", "J]Z))>0aE9P5");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      intArray0[4] = 93;
      Item item0 = classWriter0.key;
      assertNotNull(item0);
      
      String string0 = "Xq3eJ@8z fY[yR";
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(83, "f/'acvFT`@$D)GIJxe", "Xq3eJ@8z fY[yR", "Xq3eJ@8z fY[yR");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = classWriter0.addType("double");
      assertEquals(1, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitJumpInsn(2, label0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Edge edge0 = label0.successors;
      assertNull(edge0);
      
      Label label1 = label0.getFirst();
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertNotNull(label1);
      
      int int1 = Type.OBJECT;
      assertEquals(10, int1);
      assertFalse(int1 == int0);
      
      methodWriter0.visitMaxs((-2702), (-1034));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLocalVariable("EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", "org.objectweb.asm.jip.ClassWriter", "org.objectweb.asm.jip.ClassWriter", label0, label0, 1);
      assertSame(label0, label1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("f/'0cvFT`@$D)GI(Jxe", false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-24));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(1112, "<init{", "_sl9mTAf3ykDbIUXOpy", "nQ_y,;#", (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodVisitor0);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertSame(methodWriter0, methodVisitor0);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitIntInsn(1112, 186);
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.getSize();
      assertEquals(36, int0);
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("o96@J[v/ms&y NHOI", true);
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.visitIntInsn(1671, 2);
      assertSame(methodWriter0, methodVisitor0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.put12(36, 4947);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteVector1);
      
      ByteVector byteVector2 = byteVector0.putUTF8("int");
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector2, byteVector1);
      assertSame(byteVector2, byteVector0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteVector2);
      
      methodWriter0.put(byteVector1);
      assertSame(methodWriter0, methodVisitor0);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector0, byteVector2);
      assertSame(byteVector1, byteVector0);
      assertSame(byteVector1, byteVector2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newLong((-24));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(55, "nQ_y,;#", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 19
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = new Item(2);
      assertNotNull(item0);
      
      ClassWriter classWriter1 = new ClassWriter(1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 12, "~\"0)$;}", "f/'0vFT`@$D)GI(J", "3Jjy(Z]P#:f?", (String[]) null, true, false);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      Item item1 = classWriter0.key;
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      
      label0.info = (Object) methodWriter0;
      label0.info = (Object) edge0;
      Label[] labelArray0 = new Label[0];
      int int0 = Member.PUBLIC;
      assertEquals(0, int0);
      
      methodWriter0.visitTableSwitchInsn(2, 1, label0, labelArray0);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs((-32768), 3);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLabel(label0);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs((-1206), 166);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-89));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      Item item0 = classWriter0.newLong((-89));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = "S?cuf+}U-%,tj=Ff*4r";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "long", "f/'0cvFT`3@$D)GI(Jxe", "S?cuf+}U-%,tj=Ff*4r", stringArray0, true, true);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitJumpInsn(163, label0);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ClassWriter classWriter1 = new ClassWriter(163);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitInsn(1913);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "zu' y=");
      assertFalse(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter((-30));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      int int0 = classWriter0.newClass("4JjyHZ>P#:f?Z?");
      assertEquals(2, int0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      boolean boolean1 = FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      methodWriter0.visitFrame(2, 1, (Object[]) null, (-30), (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.next = methodWriter0;
      methodWriter0.visitTypeInsn(2, "4JjyHZ>P#:f?Z?");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitSource("f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean2 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      methodWriter0.visitInsn(185);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.next.visitLdcInsn("4JjyHZ>P#:f?Z?");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(185, "4JjyHZ>P#:f?Z?", "4JjyHZ>P#:f?Z?", "4JjyHZ>P#:f?Z?");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(0, (-2669));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(17, "<init{", "<init>", "d5iGjewyw?xYe{d,> ");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.next = methodWriter0;
      methodWriter0.visitIntInsn((-2669), 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.next.visitTypeInsn(0, "d5iGjewyw?xYe{d,> ");
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLocalVariable("f/'0cvFT`@$D)GI(Jxe", "d5iGjewyw?xYe{d,> ", "<init>", label0, label0, 1);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(0, (-2669));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(17, "<init{", "<init>", "d5iGjewyw?xYe{d,> ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.next = methodWriter0;
      methodWriter0.visitIntInsn((-2669), 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.next.visitTypeInsn(187, "d5iGjewyw?xYe{d,> ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.next.visitLocalVariable("f/'0cvFT`@$D)GI(Jxe", "d5iGjewyw?xYe{d,> ", "<init{", label0, label0, 187);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = methodWriter0.next.getSize();
      assertEquals(79, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      ClassWriter classWriter1 = new ClassWriter(1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 12, "~\"0)$;}", "f/'0vFT`@$D)GI(Jxe", "3JjyPR(ZC]%#Z:f?", (String[]) null, true, true);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Item item0 = classWriter0.newInteger(1089);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      Item item1 = classWriter1.newClassItem(" ");
      assertNotSame(classWriter1, classWriter0);
      assertNotSame(item1, item0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertFalse(item1.equals((Object)item0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item1);
      
      label0.info = (Object) methodWriter0;
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn((-9), (-1), label0, labelArray0);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      methodWriter0.visitLabel(label0);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item2 = classWriter0.newNameTypeItem(" ", " ");
      assertNotSame(classWriter0, classWriter1);
      assertNotSame(item2, item0);
      assertNotSame(item2, item1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(item2.equals((Object)item0));
      assertFalse(item2.equals((Object)item1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item2);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs((-32768), 3905);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 18
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFrame(2, 1, (Object[]) null, 0, (Object[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.next = methodWriter0;
      methodWriter0.visitVarInsn(0, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitTypeInsn(2, "3Jj6(Z]P#:f?");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.next.exceptionCount = (-1856);
      methodWriter0.visitInsn(192);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Frame.DIM;
      assertEquals((-268435456), int0);
      
      methodWriter0.next.visitLdcInsn("3Jj6(Z]P#:f?");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem((String) null, (String) null, "f/'0cvFT`@$D)GI(Jxe", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-32));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.key3;
      assertNotNull(item0);
      
      Item item1 = classWriter0.newConstItem("3JjyPR(ZC]%#Z:f?");
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item1);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3JjyPR(ZC]%#Z:f?");
      assertFalse(boolean0);
      
      ClassWriter classWriter1 = new ClassWriter(1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 63, "~\"?)$;}", "f/'0vFT`@$D)GI(Jxe", "3JjyPR(ZC]%#Z:f?", (String[]) null, false, false);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      byte[] byteArray0 = new byte[1];
      boolean boolean2 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.put(byteVector0);
      assertNotSame(classWriter0, classWriter1);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMaxs(63, 1);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String string0 = "f/'0cvFT`@$D)GI(Jxe";
      boolean boolean0 = false;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      methodWriter0.visitIntInsn(0, 19);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(19, "<zinik", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.next = methodWriter0;
      Object object0 = new Object();
      assertNotNull(object0);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      methodWriter0.next.visitMaxs(2, 0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String string1 = "J@Y#c9,S*=IVy6k63";
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int0 = 8388607;
      methodWriter0.next.visitLocalVariable("J@Y#c9,S*=IVy6k63", "DBsU&", "", label0, label0, 8388607);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean2 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2 == boolean1);
      
      methodWriter0.visitFieldInsn(2, ";]Cj=sT-/'~\"`SjVp=", "", ";]Cj=sT-/'~\"`SjVp=");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = label0.getFirst();
      assertSame(label1, label0);
      assertSame(label0, label1);
      assertNotNull(label1);
      
      // Undeclared exception!
      try { 
        label1.getOffset();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Label offset position has not been resolved yet
         //
         verifyException("org.objectweb.asm.jip.Label", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      methodWriter1.visitFieldInsn(0, "f/'0cvFT`@$D)GI(Jxe", "<init>", "<init>");
      assertSame(methodWriter1, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.next = methodWriter1;
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      assertSame(methodWriter2, methodWriter0);
      assertSame(methodWriter2, methodWriter1);
      assertNotNull(methodWriter2);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter1.visitLocalVariable("RuntimeInvisibleAnnotations", "LocalVariableTable", "<init>", label0, label0, 1);
      assertSame(methodWriter1, methodWriter0);
      assertSame(methodWriter1, methodWriter2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter3 = classWriter0.firstMethod;
      assertSame(methodWriter3, methodWriter0);
      assertSame(methodWriter3, methodWriter2);
      assertSame(methodWriter3, methodWriter1);
      assertNotNull(methodWriter3);
      
      methodWriter0.next.visitLocalVariable("mKy3$|C9e:DcQ", "+$mjB@JZfU{W(DSP", "+$mjB@JZfU{W(DSP", label0, label0, 1);
      assertSame(methodWriter0, methodWriter3);
      assertSame(methodWriter0, methodWriter1);
      assertSame(methodWriter0, methodWriter2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn(4, 14);
      assertSame(methodWriter0, methodWriter3);
      assertSame(methodWriter0, methodWriter1);
      assertSame(methodWriter0, methodWriter2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.next.visitVarInsn(2, 0);
      assertSame(methodWriter0, methodWriter3);
      assertSame(methodWriter0, methodWriter1);
      assertSame(methodWriter0, methodWriter2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter1.visitFieldInsn((-1997086529), "+$mjB@JZfU{W(DSP", "LocalVariableTable", "f/'0cvFT`@$D)GI(Jxe");
      assertSame(methodWriter1, methodWriter0);
      assertSame(methodWriter1, methodWriter2);
      assertSame(methodWriter1, methodWriter3);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("+$mjB@JZfU{W(DSP", 14);
      assertSame(methodWriter0, methodWriter3);
      assertSame(methodWriter0, methodWriter1);
      assertSame(methodWriter0, methodWriter2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.VALUE;
      assertEquals(8388607, int0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Item item0 = classWriter0.newInteger(275);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      classWriter0.visitSource("<inSit{", "3JjyPR(ZC]%#Z:f?");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFieldInsn(2, "<inSit{", "$ja}Xpoc", "f/'0cvFT`@$D)GI(Jxe");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.next = methodWriter0;
      methodWriter0.next.visitLdcInsn("f/'0cvFT`@$D)GI(Jxe");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = Frame.CHAR;
      assertEquals(16777227, int0);
      
      methodWriter0.visitIntInsn(2, 0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      methodWriter0.visitInsn(176);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIincInsn(100, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.next.visitAnnotationDefault();
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(annotationVisitor0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(169, "$ja}Xpoc", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 19
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-10));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      boolean boolean0 = false;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "Exceptions", "Exceptions", "Exceptions", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      String string0 = "AD0KMri}V\\ROf1ptK";
      methodWriter0.visitMethodInsn((-10), "<BiB$", "Exceptions", "AD0KMri}VROf1ptK");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitVarInsn((-10), (-2671));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      int int0 = Frame.BYTE;
      assertEquals(16777226, int0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable((String) null, "<BiB$", (String) null, label0, label0, (byte)8);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-32));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = classWriter0.key3;
      assertNotNull(item0);
      
      Item item1 = classWriter0.newConstItem("3JjyPR(ZC]%#Z:f?");
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item1);
      
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "3JjyPR(ZC]%#Z:f?");
      assertFalse(boolean0);
      
      ClassWriter classWriter1 = new ClassWriter(1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 63, "~\"?)$;}", "f/'0vFT`@$D)GI(Jxe", "3JjyPR(ZC]%#Z:f?", (String[]) null, false, true);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      ByteVector byteVector0 = classWriter0.pool;
      assertNotNull(byteVector0);
      
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      byte[] byteArray0 = new byte[1];
      boolean boolean2 = FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertArrayEquals(new byte[] {(byte)0}, byteArray0);
      
      ByteVector byteVector1 = classWriter0.pool;
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      MethodWriter methodWriter1 = classWriter1.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.put(byteVector0);
      assertNotSame(classWriter0, classWriter1);
      assertNotSame(classWriter1, classWriter0);
      assertSame(byteVector0, byteVector1);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitTableSwitchInsn(256, 2, label0, labelArray0);
      assertNotSame(classWriter1, classWriter0);
      assertSame(methodWriter0, methodWriter1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter1.visitLdcInsn(byteVector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.objectweb.asm.jip.ByteVector@1
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-12));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Item item0 = new Item();
      assertNotNull(item0);
      
      ClassWriter classWriter1 = new ClassWriter(1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 9, "k\"0)$;}", "f/'0vFT`@$D)GI(Jxe", "3JjyPR(ZC]%#Z:f?", (String[]) null, true, false);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      MethodWriter methodWriter1 = classWriter1.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      Integer integer0 = new Integer((-12));
      assertEquals((-12), (int)integer0);
      assertNotNull(integer0);
      
      String string0 = Integer.toUnsignedString(421);
      assertEquals("421", string0);
      assertNotNull(string0);
      
      methodWriter0.visitLdcInsn(integer0);
      assertNotSame(classWriter1, classWriter0);
      assertSame(methodWriter0, methodWriter1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("!r=G!],");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      Label label1 = label0.getFirst();
      assertSame(label0, label1);
      assertSame(label1, label0);
      assertNotNull(label1);
      
      methodWriter1.visitVarInsn(2, 421);
      assertNotSame(classWriter1, classWriter0);
      assertSame(methodWriter1, methodWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(188, (-12));
      assertNotSame(classWriter1, classWriter0);
      assertSame(methodWriter0, methodWriter1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      int int0 = classWriter1.newUTF8("f/'0vFT`@$D)GI(Jxe");
      assertEquals(2, int0);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute1 = attribute0.next;
      assertNull(attribute1);
      
      ByteArrayInputStream byteArrayInputStream0 = null;
      try {
        byteArrayInputStream0 = new ByteArrayInputStream((byte[]) null, 1, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNull(methodWriter0);
      
      MethodWriter methodWriter1 = (MethodWriter)classWriter0.visitMethod(1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter1);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertSame(methodWriter2, methodWriter1);
      assertNotNull(methodWriter2);
      
      Item item0 = classWriter0.newNameTypeItem("f/'0cvFT`@$D)GI(Jxe", "b9E@2d{LEDn");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      Attribute attribute0 = new Attribute("f/'0cvFT`@$D)GI(Jxe");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      methodWriter1.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertSame(methodWriter1, methodWriter2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter1.visitTryCatchBlock(label0, label0, label0, (String) null);
      assertSame(methodWriter1, methodWriter2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter1.visitFrame(2, 2128, (Object[]) null, 268435490, (Object[]) null);
      assertSame(methodWriter1, methodWriter2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MethodWriter methodWriter3 = classWriter0.firstMethod;
      assertSame(methodWriter3, methodWriter1);
      assertSame(methodWriter3, methodWriter2);
      assertNotNull(methodWriter3);
      
      methodWriter3.visitIntInsn(0, 0);
      assertSame(methodWriter3, methodWriter1);
      assertSame(methodWriter3, methodWriter2);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      ByteVector byteVector0 = new ByteVector(0);
      assertNotNull(byteVector0);
      
      ByteVector byteVector1 = byteVector0.putShort(2128);
      assertSame(byteVector0, byteVector1);
      assertSame(byteVector1, byteVector0);
      assertNotNull(byteVector1);
      
      // Undeclared exception!
      try { 
        methodWriter1.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      boolean boolean0 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "f/'0cvFT`@$D)GI(Jxe");
      assertFalse(boolean0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter0.visitVarInsn(170, 66);
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      classWriter0.visitSource("LocalVariableTypeTable", "<init>");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1);
      assertFalse(boolean1 == boolean0);
      
      boolean boolean2 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean2);
      assertFalse(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      
      methodWriter0.visitFieldInsn(66, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "Deprecated");
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter1.visitMultiANewArrayInsn("<init>", 2);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter1.visitEnd();
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      String string0 = classWriter0.thisName;
      assertNull(string0);
      
      int[] intArray0 = new int[6];
      intArray0[0] = 2973;
      intArray0[1] = 0;
      intArray0[5] = 2;
      Label label1 = label0.next;
      assertNull(label1);
      
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = null;
      Item item0 = classWriter0.newDouble(3221.664755070127);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      Attribute attribute0 = new Attribute("R]]rN? -z+");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {2973, 0, 0, 0, 0, 2}, intArray0);
      
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {2973, 0, 0, 0, 0, 2}, intArray0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      Item item0 = new Item(2);
      assertNotNull(item0);
      
      Item item1 = classWriter0.key;
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      assertNotNull(item1);
      
      ClassWriter classWriter1 = new ClassWriter(1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 12, "~\"0)$;}", "f/'0vFT`@$D)GI(J", "3Jjy(Z]P#:f?", (String[]) null, true, false);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      ByteVector byteVector0 = new ByteVector();
      assertNotNull(byteVector0);
      
      label0.status = 166;
      Item item2 = classWriter0.key;
      assertSame(item2, item1);
      assertNotSame(item2, item0);
      assertFalse(item2.equals((Object)item0));
      assertNotNull(item2);
      
      label0.info = (Object) methodWriter0;
      label0.info = (Object) edge0;
      Label[] labelArray0 = new Label[0];
      int int0 = Member.PUBLIC;
      assertEquals(0, int0);
      
      methodWriter0.visitTableSwitchInsn(2, 1, label0, labelArray0);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs((-32768), 3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "RuntimeInvisibleAnnotations");
      assertFalse(boolean0);
      
      int int0 = (-1);
      ClassWriter classWriter0 = new ClassWriter((-1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      boolean boolean1 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      methodWriter1.visitVarInsn(170, 2);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Attribute attribute0 = new Attribute("f/'0cvFT`@$D)GI(Jxe");
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertNotNull(attribute0);
      
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
      assertFalse(attribute0.isCodeAttribute());
      assertSame(methodWriter0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter1.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      int int0 = 12;
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteArray0);
      
      ClassWriter classWriter1 = new ClassWriter(1);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter1);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 12, "~\"0)$;}", "f/'0vFT`@$D)GI(Jxe", "3JjyPR>ZC]%#Z:f?", (String[]) null, true, true);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Item item0 = classWriter0.newInteger(1089);
      assertNotSame(classWriter0, classWriter1);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      ByteVector byteVector0 = new ByteVector(2);
      assertNotNull(byteVector0);
      
      Item item1 = classWriter1.newClassItem("f/'0vFT`@$D)GI(Jxe");
      assertNotSame(classWriter1, classWriter0);
      assertNotSame(item1, item0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertFalse(item1.equals((Object)item0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item1);
      
      methodWriter0.visitTypeInsn(247, "f/'0vFT`@$D)GI(Jxe");
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      label0.info = (Object) methodWriter0;
      label0.status = 1;
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn((-9), (-1), label0, labelArray0);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      methodWriter0.visitLabel(label0);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      label0.frame = frame0;
      Item item2 = classWriter0.newNameTypeItem("~\"0)$;}", "~\"0)$;}");
      assertNotSame(classWriter0, classWriter1);
      assertNotSame(item2, item1);
      assertNotSame(item2, item0);
      assertFalse(classWriter0.equals((Object)classWriter1));
      assertFalse(item2.equals((Object)item1));
      assertFalse(item2.equals((Object)item0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item2);
      
      methodWriter0.visitFrame(255, 1, labelArray0, (-1), (Object[]) null);
      assertNotSame(classWriter1, classWriter0);
      assertFalse(classWriter1.equals((Object)classWriter0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs((-32768), 3872);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 18
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(35);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      boolean boolean1 = FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "m/'0vFT`@$DG*(Jx{e", "m/'0vFT`@$DG*(Jx{e", "m/'0vFT`@$DG*(Jx{e", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.exceptionCount = 35;
      Label label0 = new Label();
      assertNotNull(label0);
      
      Item item0 = classWriter0.newLong(35);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      methodWriter0.visitLabel(label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      label0.info = (Object) null;
      int int0 = Frame.FLOAT;
      assertEquals(16777218, int0);
      
      Item item1 = classWriter0.newLong(4294967295L);
      assertNotSame(item1, item0);
      assertFalse(item1.equals((Object)item0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item1);
      
      label0.info = (Object) label0;
      byte[] byteArray0 = new byte[8];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      boolean boolean2 = label0.resolve(methodWriter0, (-1997086494), byteArray0);
      assertFalse(boolean2);
      assertTrue(boolean2 == boolean1);
      assertTrue(boolean2 == boolean0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, byteArray0);
      
      methodWriter0.visitJumpInsn(248, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      label0.visitSubroutine(label0, 248L, (-1997086494));
      assertNotSame(label0, label1);
      assertFalse(label0.equals((Object)label1));
      
      Frame frame0 = new Frame();
      assertNotNull(frame0);
      
      methodWriter0.visitTryCatchBlock(label1, label1, label1, "RuntimeVisibleAnnotations");
      assertNotSame(label1, label0);
      assertFalse(label1.equals((Object)label0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(11);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LqneNumberTable", "<int>", "LqneNumberTable", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      Integer integer0 = new Integer(2031);
      assertEquals(2031, (int)integer0);
      assertNotNull(integer0);
      
      int int0 = Integer.min(2031, 1);
      assertEquals(1, int0);
      
      methodWriter0.visitMethodInsn((-510), "<int>", "RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Integer integer1 = new Integer(2);
      assertEquals(2, (int)integer1);
      assertFalse(integer1.equals((Object)integer0));
      assertFalse(integer1.equals((Object)int0));
      assertNotNull(integer1);
      
      methodWriter0.visitLdcInsn(integer0);
      assertFalse(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)integer1));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(1, 11);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitOuterClass("RuntimeInvisibleParameterAnnotations", "|w,", "|w,");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.visitInnerClass("LineNumberTable", "Vn<k", "A)/=0%de!_n}.\"Ke|mj", (-510));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("is:_B]", 180);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(1, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.lastMethod = methodWriter0;
      classWriter0.lastMethod.visitFrame(1141048066, 2031, (Object[]) null, 1, (Object[]) null);
      assertSame(classWriter0.lastMethod, methodWriter0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(3, 3, (Object[]) null, 3, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      boolean boolean0 = ClassReader.RESIZE;
      assertTrue(boolean0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      classWriter0.version = 0;
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("f/'0cvFT`@$D)GI(Jxe", true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(annotationVisitor0);
      
      classWriter0.visitSource("<inSits{", "))n");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "6-QOg");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(12, 182);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitIincInsn(182, (-2185));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      int int0 = 9;
      ClassWriter classWriter0 = new ClassWriter(9);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String string0 = "f/'0cvFT`3@$D)GI(Jxe";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`3@$D)GI(Jxe", "f/'0cvFT`3@$D)GI(Jxe", "f/'0cvFT`3@$D)GI(Jxe", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      String string1 = "WWo[/{U";
      classWriter0.visitSource("Ljava/lang/Synthetic;", "WWo[/{U");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(2, "Ljava/lang/Synthetic;", "f/'0cvFT`3@$D)GI(Jxe", "!{q6V4d8HQ430?icXf}g");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = ClassReader.FRAMES;
      assertTrue(boolean0);
      
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "Ljava/lang/Synthetic;");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(69, 1620);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 20
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-19));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cv1T`g@$D)G@(Jx?", "f/'0cv1T`g@$D)G@(Jx?", "f/'0cv1T`g@$D)G@(Jx?", (String[]) null, true, true);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitFieldInsn(2, "_\"6", "_\"6", "B#z");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      byte[] byteArray0 = new byte[6];
      boolean boolean0 = ClassReader.FRAMES;
      assertTrue(boolean0);
      
      methodWriter0.visitFieldInsn(2, "SourceDebugExtension", "f/'0cv1T`g@$D)G@(Jx?", "org.objetw?b.asm.xw.MehodWriter");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = classWriter0.newMethod("M;|bANfyi?TE1+", "qm_&='!&d>xqv$", ".atf<XBF0*O", true);
      assertEquals(17, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String string0 = label0.toString();
      assertEquals("L16", string0);
      assertNotNull(string0);
      
      methodWriter0.visitFieldInsn(170, "RuntimeVisibleAnnotations", "(XT9?6(Jdpu?~", "Synthetic");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitLineNumber((byte)0, label0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = ClassReader.FRAMES;
      assertTrue(boolean1);
      assertTrue(boolean1 == boolean0);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      byte[] byteArray1 = classWriter0.toByteArray();
      assertNotSame(byteArray1, byteArray0);
      assertFalse(byteArray1.equals((Object)byteArray0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(byteArray1);
      
      methodWriter0.visitTryCatchBlock(label0, (Label) null, (Label) null, "L16");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int1 = Type.DOUBLE;
      assertEquals(8, int1);
      assertFalse(int1 == int0);
      
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray1, (-1528));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1528
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.visitIntInsn(54, 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label1 = label0.next;
      assertNull(label1);
      
      byte[] byteArray0 = new byte[3];
      boolean boolean0 = label0.resolve(methodWriter0, 1, byteArray0);
      assertFalse(boolean0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray0);
      
      methodWriter0.visitTryCatchBlock(label0, (Label) null, label0, "f/'0cvFT`@$D)GI(Jxe");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMethodInsn(1, "a75wYX-- t", "a75wYX-- t", "f/'0cvFT`@$D)GI(Jxe");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Attribute attribute0 = new Attribute("tLkm3QD.#PG-46B~{O");
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      assertNotNull(attribute0);
      
      attribute0.value = byteArray0;
      assertFalse(attribute0.isCodeAttribute());
      assertTrue(attribute0.isUnknown());
      
      int int0 = (-3265);
      methodWriter0.visitMaxs((-3265), (-3265));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("U<oVT%n.9I!rVBfQ=");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(0, (-2669));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn(17, "<init{", "<init>", "d5iGjewyw?xYe{d,> ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.next = methodWriter0;
      methodWriter0.next.classReaderOffset = 1;
      methodWriter0.visitIntInsn((-2669), 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.next.visitTypeInsn(187, "d5iGjewyw?xYe{d,> ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(0, 68);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.BOOLEAN;
      assertEquals(1, int0);
      
      methodWriter0.next.visitMaxs((-268435456), 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
      assertNotNull(methodWriter1);
      
      methodWriter1.visitJumpInsn(68, label0);
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter1.visitMultiANewArrayInsn("<init{", (-1996));
      assertSame(methodWriter1, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.next.visitMethodInsn(3, "<init{", ";d/}BV29uL-(Jj", "f/'0cvFT`@$D)GI(Jxe");
      assertSame(methodWriter0, methodWriter1);
      assertSame(methodWriter0.next, methodWriter1);
      assertSame(methodWriter0.next, methodWriter0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      String string0 = "f/'0cvFT`@$D)GI(Jxe";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitVarInsn(0, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.next = methodWriter0;
      methodWriter0.next.classReaderOffset = 1;
      methodWriter0.visitIntInsn(1, 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Item item0 = classWriter0.newClassItem("f/'0cvFT`@$D)GI(Jxe");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      FieldWriter fieldWriter0 = classWriter0.lastField;
      assertNull(fieldWriter0);
      
      classWriter0.firstField = null;
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter0.next.visitTypeInsn(187, "d5iGjewyw?xYe{d,> ");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitMaxs(0, 68);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      int int0 = Type.BOOLEAN;
      assertEquals(1, int0);
      
      int int1 = (-268435456);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((byte[]) null, 2, 68);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      assertNull(methodWriter0);
      
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(4911, "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", "f/'0cvFT`@$D)GI(Jxe", (String[]) null);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodVisitor0);
      
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodVisitor0);
      assertNotNull(methodWriter1);
      
      Item item0 = classWriter0.newNameTypeItem("f/'0cvFT`@$D)GI(Jxe", "b9E@2d{LEDn");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(item0);
      
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      methodVisitor0.visitFrame((-1889), 4911, (Object[]) null, 268435491, (Object[]) null);
      assertSame(methodVisitor0, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      assertSame(methodWriter2, methodVisitor0);
      assertSame(methodWriter2, methodWriter1);
      assertNotNull(methodWriter2);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      methodWriter2.visitLineNumber(257, label0);
      assertSame(methodWriter2, methodVisitor0);
      assertSame(methodWriter2, methodWriter1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      Label label1 = new Label();
      assertFalse(label1.equals((Object)label0));
      assertNotNull(label1);
      
      methodWriter2.visitLineNumber(0, label1);
      assertSame(methodWriter2, methodVisitor0);
      assertSame(methodWriter2, methodWriter1);
      assertNotSame(label1, label0);
      assertFalse(label1.equals((Object)label0));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort((byte[]) null, 815);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      int int0 = 11;
      ClassWriter classWriter0 = new ClassWriter(11);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(classWriter0);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "<int>", "<int>", "<int>", (String[]) null, false, false);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(methodWriter0);
      
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      assertFalse(fileSystemHandling1.equals((Object)fileSystemHandling0));
      assertNotNull(fileSystemHandling1);
      
      methodWriter0.visitMethodInsn(1, "<int>", "<int>", "<int>");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      Label[] labelArray0 = new Label[5];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      Item item0 = classWriter0.newInteger(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertNotNull(item0);
      
      methodWriter0.visitTableSwitchInsn((-2576), (-2576), label0, labelArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitLdcInsn(1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      Label[] labelArray1 = new Label[0];
      assertFalse(labelArray1.equals((Object)labelArray0));
      
      methodWriter0.visitTableSwitchInsn(1, 2, label0, labelArray1);
      assertNotSame(labelArray1, labelArray0);
      assertFalse(labelArray1.equals((Object)labelArray0));
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(1, 11);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitMultiANewArrayInsn("Ms:_h<", 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitIntInsn(11, 11);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.lastMethod = methodWriter0;
      classWriter0.lastMethod.visitMultiANewArrayInsn("<int>", 1);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.lastMethod.visitLdcInsn("<int>");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      classWriter0.lastMethod.visitMethodInsn(1, "Ms:_h<", "Ms:_h<", "<int>");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      methodWriter0.visitFrame(3, 3, (Object[]) null, 3, (Object[]) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-24));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cv\"T`@$D)GI(Jxe", "f/'0cv\"T`@$D)GI(Jxe", "f/'0cv\"T`@$D)GI(Jxe", (String[]) null, true, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      classWriter0.visitSource("f/'0cv\"T`@$D)GI(Jxe", "f/'0cv\"T`@$D)GI(Jxe");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      String string0 = "<iiB8";
      methodWriter0.next = methodWriter0;
      methodWriter0.visitIntInsn(2, 2);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte)24;
      methodWriter0.visitVarInsn((byte)24, 24);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      assertNotNull(fileSystemHandling0);
      
      Edge edge0 = new Edge();
      assertNotNull(edge0);
      
      Label label0 = new Label();
      assertNotNull(label0);
      
      String string1 = label0.toString();
      assertEquals("L12", string1);
      assertFalse(string1.equals((Object)string0));
      assertNotNull(string1);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitTableSwitchInsn(191, (-24), label0, (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "f/'0cvFT`@$=)GI(Jxe", "f/'0cvFT`@$=)GI(Jxe", "f/'0cvFT`@$=)GI(Jxe", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      int int0 = Type.SHORT;
      assertEquals(4, int0);
      
      methodWriter0.visitFieldInsn(2, "f/'0cvFT`@$=)GI(Jxe", "f/'0cvFT`@$=)GI(Jxe", "f/'0cvFT`@$=)GI(Jxe");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.next = methodWriter0;
      String[] stringArray0 = new String[6];
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      int int1 = classWriter0.newMethod("f/'0cvFT`@$=)GI(Jxe", "f", "f", false);
      assertEquals(7, int1);
      assertFalse(int1 == int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.next.visitVarInsn((-9), 1);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.next.visitInsn(4);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.next.visitMultiANewArrayInsn("f/'0cvFT`@$=)GI(Jxe", 4);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn((-9), "f/'0cvFT`@$=)GI(Jxe", "f/'0cvFT`@$=)GI(Jxe", "f/'0cvFT`@$=)GI(Jxe");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.next.visitMultiANewArrayInsn("f/'0cvFT`@$=)GI(Jxe", 1124075022);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean1 = FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "f/'0cvFT`@$=)GI(Jxe");
      assertFalse(boolean1);
      assertFalse(boolean1 == boolean0);
      
      methodWriter0.classReaderLength = (-284);
      methodWriter0.visitVarInsn(1046, 32);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.next.visitFrame((-1), 1, stringArray0, 2, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(classWriter0);
      
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", (String[]) null, false, false);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      assertNotNull(methodWriter0);
      
      methodWriter0.visitInsn(0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
      
      int int0 = classWriter0.addType("]");
      assertEquals(1, int0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.visitFieldInsn((-1), "]", "", "");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      methodWriter0.classReaderOffset = 1;
      boolean boolean1 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      
      methodWriter0.visitMultiANewArrayInsn("", 75);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
      
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 0, (Object[]) null, 256, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }
}
