/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 19:10:57 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2002));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3672), "N:UB(v.Z}f", "N:UB(v.Z}f", (String) null, (Object) null);
      classWriter0.version = 1175;
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(68);
      classWriter0.index = (-1545);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 68, "L", "int", "L", "int");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2002));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3672), "N:UB(v.Z}f", "N:UB(v.Z}f", (String) null, (Object) null);
      classWriter0.version = 1175;
      int int0 = fieldWriter0.getSize();
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(68);
      classWriter0.index = (-1545);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 68, "L", "int", "L", "int");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(262144);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "AUNgep$'k;F+;Xm6[", "", "", (Object) null);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1870));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 973, ",|{Q78-\"4#b.EY", ",|{Q78-\"4#b.EY", ",|{Q78-\"4#b.EY", "");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 703, "AUNgep$'k;F+;Xm6[", "RuntimeVisibleAnnotations", "", "RuntimeVisibleAnnotations");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3657), "~A66xxdm$e~TP<FS:", "~A66xxdm$e~TP<FS:", (String) null, (Object) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 25, "~A66xxdm$e~TP<FS:", "~A66xxdm$e~TP<FS:", "~A66xxdm$e~TP<FS:", "~A66xxdm$e~TP<FS:");
      // Undeclared exception!
      try { 
        fieldWriter0.next.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(262144);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 262144, "AUNgep$'k;F+;Xm6[", "", "", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1857));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "N:UB(v.Z}f", "", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector(2);
      Attribute attribute0 = new Attribute("The FileFilter must not be null");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1857));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "N:UB(v.Z}f", "", (String) null, (Object) null);
      fieldWriter0.visitAnnotation(",|{Q78-\"4#b.EY", true);
      ByteVector byteVector0 = new ByteVector(2);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "~A66xxdm$e~TP<FS:";
      stringArray0[1] = "~A66xxdm$e~TP<FS:";
      stringArray0[2] = "~A66xxdm$e~TP<FS:";
      stringArray0[3] = "~A66xxdm$e~TP<FS:";
      classWriter0.visit(49, (-3657), "~A66xxdm$e~TP<FS:", "~A66xxdm$e~TP<FS:", "~A66xxdm$e~TP<FS:", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3657), "~A66xxdm$e~TP<FS:", "~A66xxdm$e~TP<FS:", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 25, "~A66xxdm$e~TP<FS:", "~A66xxdm$e~TP<FS:", "~A66xxdm$e~TP<FS:", "~A66xxdm$e~TP<FS:");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3657), "~A66xxdm$e~TP<FS:", "~A66xxdm$e~TP<FS:", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 703, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "AUNgep$'k;F+;Xm6[");
      Attribute attribute0 = new Attribute("Synthetic");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1870));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 973, ",|{Q78-\"4#b.EY", ",|{Q78-\"4#b.EY", ",|{Q78-\"4#b.EY", "");
      fieldWriter0.visitAnnotation("m", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1857));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "N:UB(v.Z}f", "", (String) null, (Object) null);
      fieldWriter0.visitAnnotation(",|{Q78-\"4#b.EY", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "~A66xxdm$e~TP<FS:";
      stringArray0[1] = "~A66xxdm$e~TP<FS:";
      stringArray0[2] = "~A66xxdm$e~TP<FS:";
      stringArray0[3] = "~A66xxdm$e~TP<FS:";
      classWriter0.visit(49, (-3657), "~A66xxdm$e~TP<FS:", "~A66xxdm$e~TP<FS:", "~A66xxdm$e~TP<FS:", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3657), "~A66xxdm$e~TP<FS:", "~A66xxdm$e~TP<FS:", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3657), "~A66xxdm$e~TP<FS:", "~A66xxdm$e~TP<FS:", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(20, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1870));
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField((-1870), "}SMQwM2m3b", "=]#KGuW5=|`M-oL", "=]#KGuW5=|`M-oL", "=]#KGuW5=|`M-oL");
      fieldWriter0.visitAnnotation("m", false);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 703, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "AUNgep$'k;F+;Xm6[");
      fieldWriter0.visitEnd();
  }
}
