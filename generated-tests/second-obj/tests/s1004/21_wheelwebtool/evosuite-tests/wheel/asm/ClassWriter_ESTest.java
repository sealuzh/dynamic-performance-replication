/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 18:41:53 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectStreamConstants;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.time.DateTimeException;
import java.time.chrono.ThaiBuddhistDate;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Frame;
import wheel.asm.Item;
import wheel.asm.MethodWriter;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3233);
      // Undeclared exception!
      try { 
        classWriter0.newConst(classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2158));
      String string0 = "A@y'pU6j";
      classWriter0.visitInnerClass((String) null, (String) null, "A@y'pU6j", 0);
      // Undeclared exception!
      try { 
        classWriter0.newMethodItem((String) null, (String) null, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3208);
      classWriter0.newDouble(3208);
      // Undeclared exception!
      try { 
        classWriter0.newMethod("The list of names must not be null", (String) null, "Leod}(}i*", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(38);
      classWriter0.newDouble((-1.0));
      // Undeclared exception!
      try { 
        classWriter0.visitField(38, (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1002));
      // Undeclared exception!
      try { 
        classWriter0.visitMethod((-1002), "", "", "tv?peji{", (String[]) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(38);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter0.toByteArray();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.newDouble(0.0);
      int int0 = classWriter0.addUninitializedType("D9J@V;mb[fg;kc", 43);
      assertEquals(1, int0);
      
      int int1 = classWriter0.newClass("");
      assertEquals(4, int1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(7);
      classWriter0.visitAnnotation("", false);
      classWriter0.visitSource("!1u2=sOTn6<", "NRB?");
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1855));
      int int0 = classWriter0.newMethod("", "", "", true);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3208);
      int int0 = classWriter0.newMethod("The list of names must not be null", "The list of names must not be null", "The list of names must not be null", false);
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2194));
      Integer integer0 = new Integer((-942));
      Integer.getInteger((String) null, (-2194));
      int int0 = classWriter0.newConst(integer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33);
      String string0 = "wheed.asmClassReder";
      Long long0 = new Long(1);
      Character character0 = new Character('r');
      classWriter0.newConst(character0);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1260, 1260);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      String[] stringArray0 = new String[1];
      stringArray0[0] = null;
      // Undeclared exception!
      try { 
        classWriter0.visitMethod(17, (String) null, (String) null, "The list of names must not be null", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(396);
      classWriter0.newFloat(1);
      boolean boolean0 = ClassReader.WRITER;
      classWriter0.visitEnd();
      // Undeclared exception!
      try { 
        classWriter0.newField((String) null, (String) null, "i.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2046);
      Item item0 = classWriter0.newFieldItem("c-Szu", "c-Szu", "c-Szu");
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3208);
      classWriter0.newClassItem("The list of names must not be null");
      classWriter0.visitOuterClass("The list of names must not be null", "JSR/RET are not supported with computeFrames option", "The list of names must not be null");
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter((ClassReader) null, 1299);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3220);
      int int0 = classWriter0.newConst("Synthetic");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Item item0 = classWriter0.key;
      Item item1 = classWriter0.key3;
      classWriter0.newDouble(0.0);
      classWriter0.newDouble(0.0);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("", "637mHKLC'q$>wz@~#Tf");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(3208);
      classWriter0.newDouble(3208);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classWriter0.index = 3208;
      classWriter0.visitOuterClass("Leod}(}i*", "Signature", (String) null);
      classWriter0.visitSource((String) null, (String) null);
      try { 
        Short.valueOf((String) null, 2);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // null
         //
         verifyException("java.lang.Integer", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(246);
      classWriter0.newLong(246);
      classWriter0.visitInnerClass("ivUJ )oXFi]8|_lk", (String) null, "[@xF(", 246);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3208);
      classWriter0.visitInnerClass("M97;tmp0$S-U#g", "M97;tmp0$S-U#g", "M97;tmp0$S-U#g", 1431);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-843));
      classWriter0.newLong(0L);
      classWriter0.newLong(1478L);
      Item item0 = classWriter0.key2;
      Item item1 = classWriter0.key3;
      Item item2 = classWriter0.key;
      classWriter0.newLong(0L);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1889));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "The wildcard must not be null";
      classWriter0.visit(41, (-1889), "", "", "The wildcard must not be null", stringArray0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4465));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      String[] stringArray0 = new String[15];
      stringArray0[1] = null;
      stringArray0[2] = "[gX*%";
      stringArray0[3] = "[gX*%";
      // Undeclared exception!
      try { 
        classWriter0.visit((-4465), (-4465), "", (String) null, "[gX*%", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(396);
      classWriter0.newFloat(1);
      classWriter0.visitEnd();
      Byte byte0 = new Byte((byte)6);
      classWriter0.visitField((-2043), "", "", "", byte0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(668);
      classWriter0.toByteArray();
      classWriter0.addUninitializedType("J6;N9B?Vv", (-548));
      Attribute attribute0 = new Attribute("J6;N9B?Vv");
      classWriter0.addType("J6;N9B?Vv");
      // Undeclared exception!
      try { 
        MockThaiBuddhistDate.of(668, (-548), 1);
        fail("Expecting exception: DateTimeException");
      
      } catch(DateTimeException e) {
         //
         // Invalid value for MonthOfYear (valid values 1 - 12): -548
         //
         verifyException("java.time.temporal.ValueRange", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33);
      Type type0 = Type.DOUBLE_TYPE;
      classWriter0.visit(8, 3629, "l6/-86*-y40pw", "l6/-86*-y40pw", (String) null, (String[]) null);
      // Undeclared exception!
      try { 
        Type.getMethodDescriptor(type0, (Type[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-921));
      Float float0 = new Float((double) 2);
      classWriter0.newConst(float0);
      System.setCurrentTimeMillis(1);
      Item item0 = classWriter0.key3;
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2555));
      classWriter0.visitSource("", (String) null);
      String string0 = "The filters must not be null";
      classWriter0.newFieldItem("", "The filters must not be null", "java/lang/Object");
      classWriter0.visitInnerClass("", "AnnotationDefault", (String) null, (-2555));
      classWriter0.visitSource("", "java/lang/Object");
      long long0 = (-1120L);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "bVf3/!N#h\"o}*9Zu8");
      ClassWriter classWriter0 = new ClassWriter(2049);
      Short short0 = new Short((short) (-2815));
      classWriter0.newConst(short0);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("", "Zp6]Ic1}%K$tBF-D");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2555));
      Item[] itemArray0 = new Item[2];
      Item item0 = classWriter0.key3;
      item0.strVal2 = "";
      item0.set(1);
      itemArray0[0] = item0;
      Item item1 = classWriter0.key;
      classWriter0.newConst("");
      classWriter0.visitField(2, "", "", "wheel.asm.ClassWriter", "");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(32);
      classWriter0.visitSource("", "");
      classWriter0.newDouble(0.0);
      classWriter0.toByteArray();
      String[] stringArray0 = new String[0];
      classWriter0.visitMethod((-3490), "", "", "", stringArray0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = 7;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      ClassWriter classWriter0 = new ClassWriter(7);
      classWriter0.visitOuterClass("z", "z", (String) null);
      classWriter0.toByteArray();
      System.setCurrentTimeMillis(2);
      String string0 = "";
      String[] stringArray0 = new String[8];
      stringArray0[0] = null;
      classWriter0.addType("org.apache.commons.io.IOCase");
      String string1 = "java/lang/Class";
      // Undeclared exception!
      try { 
        classWriter0.addType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-929));
      Float float0 = new Float((double) 2);
      Float.max((-2173.7043F), (-2173.7043F));
      System.setCurrentTimeMillis(2);
      classWriter0.newClass("{x!+/}x");
      Boolean boolean0 = new Boolean(false);
      Boolean.logicalAnd(false, false);
      classWriter0.newConstItem(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2027);
      classWriter0.visitEnd();
      classWriter0.visitField(5, "Cp", "/r>&pf<V&a~i?`}", "/r>&pf<V&a~i?`}", "");
      classWriter0.newLong((-2393L));
      classWriter0.newNameType("", "E~DKOBG'USY=");
      Boolean boolean0 = new Boolean(true);
      classWriter0.newConstItem(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2134));
      Type type0 = Type.SHORT_TYPE;
      String string0 = "j\\Yf>>F-^t9*Rwq";
      classWriter0.addType("Re<?,|a+3Ga");
      classWriter0.newInteger((-2230));
      classWriter0.newInteger((-2230));
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-4726), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -4726
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Character character0 = new Character(':');
      ClassWriter classWriter0 = new ClassWriter(33);
      Type type0 = Type.DOUBLE_TYPE;
      classWriter0.newConst(type0);
      classWriter0.toByteArray();
      classWriter0.visit(10, 603, ":F#UP:vJvs<-w]", "Mh=/^T '+$c. +=+9w", ":F#UP:vJvs<-w]", (String[]) null);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25);
      classWriter0.threshold = 1;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.toByteArray();
      Long long0 = new Long(2);
      String[] stringArray0 = new String[0];
      classWriter0.visit(812, 1, "NuuX_)@", "NuuX_)@", "NuuX_)@", stringArray0);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1260, 384);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newInteger(0);
      Item item0 = classWriter0.key3;
      classWriter0.newDouble(14);
      classWriter0.newNameType("", "");
      Item item1 = classWriter0.key;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      classWriter0.visit(0, 0, "", "", "", stringArray0);
      classWriter0.addType("");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(30);
      classWriter0.threshold = 3246;
      classWriter0.threshold = 3246;
      classWriter0.toByteArray();
      Long long0 = new Long(2);
      classWriter0.newConst(long0);
      String[] stringArray0 = new String[0];
      classWriter0.visit(830, 3246, "L[Tv>dY!5", "L[Tv>dY!5", "L[Tv>dY!5", stringArray0);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, 830);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Type type0 = Type.DOUBLE_TYPE;
      byte[] byteArray0 = ClassWriter.TYPE;
      ClassWriter classWriter0 = new ClassWriter((-235));
      classWriter0.newInteger(2);
      classWriter0.visitSource((String) null, "");
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = "zdaw&'&y`b";
      ClassWriter classWriter0 = new ClassWriter(23);
      classWriter0.addType("zdaw&'&y`b");
      classWriter0.toByteArray();
      boolean boolean0 = ClassReader.ANNOTATIONS;
      classWriter0.addType("zdaw&'&y`b");
      classWriter0.visitInnerClass((String) null, (String) null, "'LhBbvcz/avaD", (-708));
      classWriter0.toByteArray();
      String string1 = "C}<SDWEr&%P=sWZ!)Cj";
      // Undeclared exception!
      try { 
        classWriter0.newMethod("C}<SDWEr&%P=sWZ!)Cj", (String) null, (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = 26;
      ClassWriter classWriter0 = new ClassWriter(26);
      classWriter0.addType("zdaw&'&y`b");
      classWriter0.toByteArray();
      int int1 = Character.BYTES;
      classWriter0.visitInnerClass((String) null, (String) null, "'LhBbvcz/avaD", (-708));
      byte[] byteArray0 = ClassWriter.TYPE;
      classWriter0.visitInnerClass("'LhBbvcz/avaD", "zdaw&'&y`b", "wheel.asm.Edge", 1);
      // Undeclared exception!
      try { 
        classWriter0.newMethod("", (String) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(24);
      Double double0 = new Double(0.0);
      classWriter0.newConst(double0);
      classWriter0.newUTF8("");
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(418);
      String string0 = "";
      classWriter0.visitAnnotation("", true);
      classWriter0.toByteArray();
      System.setCurrentTimeMillis(1);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(418, 418);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-889275714));
      String string0 = "";
      classWriter0.visitOuterClass("", "", "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Item item0 = new Item();
      classWriter0.visitEnd();
      Item item1 = classWriter0.newFloat(23.63F);
      classWriter0.newNameType("", "");
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(item1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.Item@a
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int int0 = 2;
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.visitEnd();
      classWriter0.newMethodItem("$8ROwMkH< +D0QhI", "$8ROwMkH< +D0QhI", "$8ROwMkH< +D0QhI", true);
      classWriter0.addType("$8ROwMkH< +D0QhI");
      Attribute attribute0 = new Attribute("$8ROwMkH< +D0QhI");
      classWriter0.visitAnnotation("", true);
      classWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(396);
      classWriter0.visitAnnotation("", false);
      classWriter0.toByteArray();
      System.setCurrentTimeMillis(1);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1472);
      classWriter0.newField("`a&>_jApwo", "7?@u;%$'#/*`q#", "Y;kw_C>xY@%9g[_WB");
      classWriter0.addUninitializedType("7?@u;%$'#/*`q#", 6);
      classWriter0.newClass("`a&>_jApwo");
      Item item0 = classWriter0.newClassItem("");
      item0.strVal2 = "7?@u;%$'#/*`q#";
      item0.set(1472);
      int int0 = Frame.DIM;
      Item item1 = classWriter0.key2;
      classWriter0.addUninitializedType("7?@u;%$'#/*`q#", 6);
      String string0 = "01g\"5t^BY{ph";
      classWriter0.newNameType("", "01g\"5t^BY{ph");
      Item item2 = classWriter0.key;
      classWriter0.newField("`a&>_jApwo", "7?@u;%$'#/*`q#", "Y;kw_C>xY@%9g[_WB");
      classWriter0.newLong(6);
      classWriter0.visitSource("(kq,t^>!g,K)Q=sb", ",ppDyU+M");
      MockHijrahDate mockHijrahDate0 = new MockHijrahDate();
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      mockMinguoDate0.getMockedClassName();
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(mockMinguoDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate@2cd38c62
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(33);
      Type type0 = Type.DOUBLE_TYPE;
      type0.toString();
      classWriter0.newFieldItem("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEuEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEuEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEuEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII");
      int int0 = 384;
      classWriter0.newInteger(384);
      classWriter0.newField("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEuEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEuEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEuEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII");
      classWriter0.newDouble(6);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.newClassItem("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEuEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII");
      Attribute attribute0 = new Attribute("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEuEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        classWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClassWriter classWriter0 = new ClassWriter(2);
      Float float0 = new Float((double) 2);
      Float.sum((byte)1, (byte)1);
      classWriter0.newConst(float0);
      System.setCurrentTimeMillis(1);
      Item item0 = classWriter0.key3;
      classWriter0.newConst(float0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      int int0 = (-1528);
      ClassWriter classWriter0 = new ClassWriter((-1528));
      String string0 = null;
      String string1 = "E";
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.lastField = null;
      classWriter0.visitOuterClass("SourceFile", (String) null, "E");
      // Undeclared exception!
      try { 
        classWriter0.addUninitializedType((String) null, (-1528));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      Item[] itemArray0 = new Item[4];
      classWriter0.newInteger(0);
      Item item0 = classWriter0.key3;
      itemArray0[0] = item0;
      Item item1 = classWriter0.newDouble((-1358.393823925156));
      itemArray0[1] = item1;
      Item item2 = new Item(1);
      item1.hashCode = 2;
      itemArray0[3] = item0;
      classWriter0.typeTable = itemArray0;
      classWriter0.addUninitializedType("", 11);
      classWriter0.newNameType("", "");
      item1.set((-2260L));
      classWriter0.addUninitializedType("", 2147481393);
      classWriter0.newClass("");
      classWriter0.visitSource((String) null, "g`es");
      classWriter0.newLong(1L);
      classWriter0.addType("");
      classWriter0.addType("h?<rp'K3I#]&");
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1431));
      classWriter0.newInteger(49);
      boolean boolean0 = true;
      classWriter0.invalidFrames = true;
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 51966
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33);
      classWriter0.newClassItem("<,42Z8");
      int int0 = Frame.ARRAY_OF;
      classWriter0.toByteArray();
      Long long0 = new Long(2);
      Long long1 = new Long(3203L);
      classWriter0.newConst(long1);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "<,42Z8";
      stringArray0[1] = "'2civ<;[Syt_Ey";
      classWriter0.visit(47, 65489, "J", "<,42Z8", "J", stringArray0);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(33, 65489);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33);
      classWriter0.newClassItem("<,42Z8");
      int int0 = Frame.ARRAY_OF;
      Type type0 = Type.DOUBLE_TYPE;
      Item item0 = classWriter0.key3;
      classWriter0.newMethodItem("'2civ<;[Syt_Ey", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEuEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "'2civ<;[Syt_Ey", false);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'2civ<;[Syt_Ey");
      classWriter0.addType("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEuEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII");
      classWriter0.addType("java/lang/Class");
      classWriter0.invalidFrames = false;
      Item item1 = new Item(5);
      Long long0 = new Long(3);
      Short short0 = Short.valueOf((short)7);
      classWriter0.newConst(short0);
      String[] stringArray0 = new String[0];
      classWriter0.visit(0, (-1677), "M'@zw.+%s", "pg@_\"8wj03A*-L", "java/lang/String", stringArray0);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(7, (-1258));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(27);
      Type type0 = Type.CHAR_TYPE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "";
      FieldWriter fieldWriter0 = classWriter0.lastField;
      Type[] typeArray0 = new Type[7];
      typeArray0[0] = type0;
      typeArray0[1] = type0;
      typeArray0[2] = type0;
      typeArray0[3] = type0;
      typeArray0[4] = type0;
      typeArray0[5] = type0;
      typeArray0[6] = type0;
      Type.getMethodDescriptor(type0, typeArray0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      classWriter0.visit((-8), 4120, ");stve", "", "", stringArray0);
      classWriter0.addType("");
      classWriter0.toByteArray();
      MockHijrahDate mockHijrahDate0 = new MockHijrahDate();
      // Undeclared exception!
      try { 
        classWriter0.newConst(mockHijrahDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate@31fc571f
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2134));
      Type type0 = Type.SHORT_TYPE;
      classWriter0.version = (-1648);
      classWriter0.addType("jYf>>F-^t9*Rwq");
      classWriter0.addType("java/lang/Class");
      Class<MockMinguoDate> class0 = MockMinguoDate.class;
      Type type1 = Type.getType(class0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~`LdRAT-9");
      classWriter0.toByteArray();
      classWriter0.newClassItem("jYf>>F-^t9*Rwq");
      int int0 = Frame.BOOLEAN;
      byte[] byteArray0 = ClassWriter.TYPE;
      classWriter0.getMergedType(2, 2);
      Attribute attribute0 = new Attribute("zm4DV*6!");
      Integer integer0 = new Integer(2);
      Double.valueOf(0.0);
      Double.min(1828.68754358562, 0.75);
      Double.sum(5, 644.0);
      classWriter0.newConstItem(type1);
      ClassReader classReader0 = new ClassReader("java/lang/Class");
      int int1 = Character.MIN_CODE_POINT;
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(30);
      Long long0 = new Long(2);
      classWriter0.newConst(long0);
      String string0 = null;
      String string1 = "dDk,\"l#SbC912A{eenZ";
      classWriter0.visitOuterClass("dDk,\"l#SbC912A{eenZ", "dDk,\"l#SbC912A{eenZ", (String) null);
      // Undeclared exception!
      try { 
        classWriter0.newClassItem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = new ClassReader("wheel.asm.Type");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      classReader0.getSuperName();
      classReader0.getInterfaces();
      classWriter0.newInteger(3);
      classWriter0.thisName = "InnerClasses";
      classReader0.accept((ClassVisitor) classWriter0, (-820));
      classWriter0.newDouble(3475.86409);
      ClassWriter classWriter1 = new ClassWriter(24);
      classReader0.accept((ClassVisitor) classWriter1, 36);
      Double double0 = new Double(3475.86409);
      classWriter0.visitField((-2166), "InnerClasses", "java/lang/Object", "", double0);
      classWriter0.newClassItem("eIa");
      classWriter0.newFieldItem("JXw^G", "", "InnerClasses");
      classWriter0.newClass("wheel.asm.Type");
      classWriter0.newFloat((-820));
      classWriter0.newUTF8("");
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3768));
      Item item0 = classWriter0.newFloat((-3768));
      item0.set(0L);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "MNKHU";
      stringArray0[1] = "*%_i[W=[m>m SP";
      classWriter0.visitMethod((-3768), "*%_i[W=[m>m SP", "ob^r^?OFUShv_I%I:~w", "9~}", stringArray0);
      item0.set(1, "y;};", "*%_i[W=[m>m SP", "*%_i[W=[m>m SP");
      item0.set(39, "*%_i[W=[m>m SP", "9~}", "y;};");
      classWriter0.visitEnd();
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.newConstItem((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33);
      Type type0 = Type.DOUBLE_TYPE;
      classWriter0.version = 33;
      classWriter0.addType("jYf>>F- 3^t9*Rwq");
      classWriter0.addType("java/lang/Class");
      classWriter0.newInteger(764);
      classWriter0.newDouble(33);
      byte[] byteArray0 = classWriter0.toByteArray();
      classWriter0.newInteger(764);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      byte[] byteArray1 = ClassWriter.TYPE;
      classWriter0.getMergedType(2, 2);
      classWriter0.addUninitializedType(",;MMw@tCoC$m:t", 1);
      Attribute attribute0 = new Attribute("jYf>>F- 3^t9*Rwq");
      ClassWriter classWriter1 = new ClassWriter(1);
      classWriter0.toByteArray();
      ClassReader classReader0 = new ClassReader(byteArray0);
      classWriter0.getMergedType(2, 2);
      ClassWriter classWriter2 = new ClassWriter(classReader0, 1);
      classWriter2.visitOuterClass("Label offset position has not been resolved yet", "oAd,W_)z*DK,t", "java/lang/Class");
      // Undeclared exception!
      try { 
        classWriter2.getCommonSuperClass("jYf>>F- 3^t9*Rwq", "jYf>>F- 3^t9*Rwq");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'jYf>>F- 3^t9*Rwq.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33);
      Type type0 = Type.DOUBLE_TYPE;
      String string0 = "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEuEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII";
      Item item0 = classWriter0.key3;
      type0.getClassName();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Class<InputStream> class0 = InputStream.class;
      Type.getInternalName(class0);
      classWriter0.addType("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEuEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII");
      classWriter0.addType("java/lang/Class");
      classWriter0.invalidFrames = false;
      Item item1 = new Item(5);
      classWriter0.newClassItem("java/io/InputStream");
      classWriter0.getMergedType(2, 2);
      Type[] typeArray0 = new Type[5];
      ClassWriter classWriter1 = new ClassWriter(2);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      classWriter0.addType("java/io/InputStream");
      Item item2 = new Item(2);
      classWriter0.getMergedType(2, 3);
      ClassWriter classWriter2 = new ClassWriter((-337));
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }
}
