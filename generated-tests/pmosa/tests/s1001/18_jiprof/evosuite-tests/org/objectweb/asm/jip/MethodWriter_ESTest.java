/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 17:20:59 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.PushbackInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodVisitor;
import org.objectweb.asm.jip.MethodWriter;
import org.objectweb.asm.jip.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)112;
      byteArray0[0] = (byte)112;
      byteArray0[1] = (byte)79;
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, (byte)112);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 112
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(102);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "|&}tL", "|&}tL", "|&}tL", (String[]) null, false, false);
      methodWriter0.visitVarInsn(2, 102);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)79;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-15);
      byteArray0[3] = (byte)60;
      byteArray0[4] = (byte)32;
      byteArray0[5] = (byte) (-127);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte) (-3);
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, 65);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 65
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 1107297537;
      intArray0[1] = 1438;
      intArray0[2] = 28;
      intArray0[3] = 1452;
      intArray0[4] = (-10);
      MethodWriter.getNewOffset(intArray0, intArray0, 91, 0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)78;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-67);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)2;
      byteArray0[5] = (byte)102;
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)101;
      byteArray0[8] = (byte)63;
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray0, 411);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 411
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Label label0 = new Label();
      int[] intArray0 = new int[3];
      int[] intArray1 = new int[1];
      MethodWriter.getNewOffset(intArray1, intArray0, label0);
      ClassWriter classWriter0 = new ClassWriter(2130);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      int[] intArray0 = new int[1];
      intArray0[0] = 2;
      Label label0 = new Label();
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      ClassWriter classWriter1 = new ClassWriter(83);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(527);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "%./<D>t'`^`+&N,";
      stringArray0[1] = "%./<D>t'`^`+&N,";
      stringArray0[2] = "java/lang/Class";
      stringArray0[3] = "%./<D>t'`^`+&N,";
      Item item0 = classWriter0.newFieldItem("%./<D>t'`^`+&N,", "", "");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "^wkCXZ<ow@u[", "^wkCXZ<ow@u[", "%./<D>t'`^`+&N,", stringArray0, false, false);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "%./<D>t'`^`+&N,";
      objectArray0[1] = (Object) "%./<D>t'`^`+&N,";
      objectArray0[2] = (Object) "^wkCXZ<ow@u[";
      objectArray0[3] = (Object) "%./<D>t'`^`+&N,";
      objectArray0[4] = (Object) annotationVisitor0;
      objectArray0[5] = (Object) item0;
      objectArray0[6] = (Object) item0;
      objectArray0[7] = (Object) "%./<D>t'`^`+&N,";
      methodWriter0.visitFrame(2, 2, objectArray0, 2, objectArray0);
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(527);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "%./<D>t'`^`+&N,";
      stringArray0[1] = "%./<D>t'`^`+&N,";
      stringArray0[2] = "java/lang/Class";
      stringArray0[3] = "%./<D>t'`^`+&N,";
      classWriter0.newFieldItem("%./<D>t'`^`+&N,", "", "");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "^wkCXZ<ow@u[", "^wkCXZ<ow@u[", "%./<D>t'`^`+&N,", stringArray0, false, false);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitFrame(1, (-625), stringArray0, 1, stringArray0);
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(102);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "|&}tL", "|&}tL", "|&}tL", (String[]) null, false, false);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) null;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 102, objectArray0, 131072, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(102);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "|&}tL", "|&}tL", "|&}tL", (String[]) null, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "|&}tL", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(102);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "|&}tL", "|&}tL", "|&}tL", (String[]) null, false, false);
      methodWriter0.visitVarInsn(2932, 102);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(527);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "%./<D>t'`^`+&N,";
      stringArray0[1] = "%./<D>t'`^`+&N,";
      stringArray0[2] = "java/lang/Class";
      stringArray0[3] = "%./<D>t'`^`+&N,";
      classWriter0.newFieldItem("%./<D>t'`^`+&N,", "", "");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "^wkCXZ<ow@u[", "^wkCXZ<ow@u[", "%./<D>t'`^`+&N,", stringArray0, false, false);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitVarInsn(63, 1);
      methodWriter0.visitTypeInsn(2, "RuntimeInvisibleParameterAnnotations");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(97);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimeVisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "RuntimeVisibleAnnotations", "3k'tz()n?&Ve", "RuntimeVisibleAnnotations", stringArray0, true, false);
      methodWriter0.visitMaxs(2, 2);
      methodWriter0.visitInsn(1);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(527);
      classWriter0.newInteger(527);
      classWriter0.newFieldItem("mQ", "java/lang/Class", "java/lang/Class");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "java/lang/Class";
      stringArray0[1] = "^wkCXZ<ow@u[";
      stringArray0[2] = "^wkCXZ<ow@u[";
      stringArray0[3] = "^wkCXZ<ow@u[";
      stringArray0[4] = "mQ";
      stringArray0[5] = "%./<D>t'`^`+&N,";
      stringArray0[6] = "";
      stringArray0[7] = "^wkCXZ<ow@u[";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1287, "mQ", "", "", stringArray0, false, false);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitVarInsn(527, 63);
      methodWriter0.visitTypeInsn(1824, "sRWa_nT");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(3789, "short", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(527);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "%./<D>t'`^`+&N,";
      stringArray0[1] = "%./<D>t'`^`+&N,";
      stringArray0[2] = "java/lang/Class";
      stringArray0[3] = "%./<D>t'`^`+&N,";
      classWriter0.newFieldItem("%./<D>t'`^`+&N,", "", "");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "^wkCXZ<ow@u[", "^wkCXZ<ow@u[", "%./<D>t'`^`+&N,", stringArray0, false, false);
      methodWriter0.visitAnnotationDefault();
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 285212676, ".class", "", "C[\"4F5DV/xwj.XWT", stringArray0, false, false);
      methodWriter1.visitVarInsn(46, 696);
      methodWriter1.visitTypeInsn(1, "p7\"#}1dS-w");
      methodWriter1.visitEnd();
      assertNotSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ":", ":", "RuntimeInvisibleParaeterAnnotations", (String[]) null, false, false);
      Integer integer0 = new Integer(2);
      methodWriter0.visitLdcInsn(":");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(527);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "%./<D>t'`^`+&N,";
      stringArray0[1] = "%./<D>t'`^`+&N,";
      stringArray0[2] = "java/lang/Class";
      stringArray0[3] = "%./<D>t'`^`+&N,";
      classWriter0.newFieldItem("%./<D>t'`^`+&N,", "p7\"#}1dS-w", "p7\"#}1dS-w");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "^wkCXZ<ow@u[", "^wkCXZ<ow@u[", "%./<D>t'`^`+&N,", stringArray0, false, false);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitVarInsn(46, 1);
      methodWriter0.visitTypeInsn(2, "RuntimeInvisibleParameterAnnotations");
      methodWriter0.visitLdcInsn("java/lang/Class");
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(527);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "%./<D>t'`^`+&N,";
      stringArray0[1] = "%./<D>t'`^`+&N,";
      stringArray0[2] = "java/lang/Class";
      stringArray0[3] = "%./<D>t'`^`+&N,";
      classWriter0.newFieldItem("%./<D>t'`^`+&N,", "", "");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "^wkCXZ<ow@u[", "^wkCXZ<ow@u[", "%./<D>t'`^`+&N,", stringArray0, false, false);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitVarInsn(46, 1);
      methodWriter0.visitInsn(527);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "java/lang/Class");
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "^J1ClK}04");
      ClassWriter classWriter0 = new ClassWriter((-10));
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Q.";
      stringArray0[1] = "^J1ClK}04";
      stringArray0[2] = "^J1ClK}04";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "^J1ClK}04", "Q.", "Q.", stringArray0, false, false);
      methodWriter0.visitFrame((-2532), 498, stringArray0, (-2532), stringArray0);
      methodWriter0.visitLdcInsn("Q.");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-17);
      byteArray0[1] = (byte)49;
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, 292552704, 63);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 292552704
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">");
      classWriter0.newFieldItem("/iL:7;BM6Hn4i;", ";=Q", "<\"M),>txZTsv{");
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1001, ";=Q", "^wkCXZ<ow@u[", "/iL:7;BM6Hn4i;", stringArray0, false, false);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitVarInsn(83, 182);
      methodWriter0.visitTypeInsn(2, "^wkCXZ<ow@u[");
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String string0 = "y'";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "y'", "y'", "y'", (String[]) null, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, "y'", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "|&}tL", "|&}tL", "|&}tL", (String[]) null, false, false);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitFieldInsn(2, "|&}tL", "|&}tL", "|&}tL");
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "V}6LU}.c", "Vk'Az()n?&Ve", ">", stringArray0, false, false);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitVarInsn(285212684, 46);
      methodWriter0.visitInsn(1);
      Label label0 = new Label();
      Label label1 = label0.successor;
      methodWriter0.visitTryCatchBlock(label0, label0, (Label) null, "Vk'Az()n?&Ve");
      methodWriter0.visitCode();
      methodWriter0.visitLabel(label0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(81);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ">", ">", ">", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1123, ">", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      // Undeclared exception!
      try { 
        MethodWriter.readShort((byte[]) null, 33);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5, "AnnotationDefault", "Synthetic", "Synthetic", stringArray0, false, false);
      methodWriter0.visitInsn(285212683);
      methodWriter0.visitIincInsn(1, 5443);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5, "AnnotationDefault", "Synthetic", "Synthetic", stringArray0, false, false);
      methodWriter0.visitInsn(285212683);
      Attribute attribute0 = new Attribute("g]BXsYV{HM");
      methodWriter0.visitAttribute(attribute0);
      assertTrue(attribute0.isUnknown());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-392));
      String[] stringArray0 = new String[5];
      stringArray0[0] = "Synthetic";
      stringArray0[1] = ">";
      stringArray0[2] = "Synthetic";
      stringArray0[3] = "Synthetic";
      stringArray0[4] = "Synthetic";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "AnnotationDefault", "AnnotationDefault", "Synthetic", stringArray0, false, false);
      methodWriter0.visitInsn(19);
      methodWriter0.visitIincInsn(285212683, (-2));
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(69);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "4[)g", "4[)g", "", (String[]) null, true, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(2, 69);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(95);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 95, "jMb8g16&", "jMb8g16&", "jMb8g16&", (String[]) null, false, false);
      methodWriter0.visitMaxs(2, 95);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(102);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "|&}tL", "|&}tL", "|&}tL", (String[]) null, false, false);
      methodWriter0.visitFieldInsn(2, "|&}tL", "|&}tL", "vc}/qX<-|D!+Q}/`H.");
      int int0 = methodWriter0.getSize();
      assertEquals(37, int0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "2MZSV7IO 4c![)D", "2MZSV7IO 4c![)D", "2MZSV7IO 4c![)D", stringArray0, true, true);
      methodWriter0.visitVarInsn(2, (-1062));
      methodWriter0.visitMultiANewArrayInsn("2MZSV7IO 4c![)D", 83);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ">", "Vk'Az()n?&Ve", ">", stringArray0, false, false);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitVarInsn(83, (-2591));
      methodWriter0.visitTypeInsn((-2591), "AnnotationDefault");
      methodWriter0.visitTypeInsn(83, "yTj%bdVlxNb^`");
      methodWriter0.visitMultiANewArrayInsn(">", (-2591));
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(102);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "|&}tL", "|&}tL", "|&}tL", (String[]) null, false, false);
      methodWriter0.visitAnnotation("|&}tL", true);
      methodWriter0.visitFieldInsn(2, "|&}tL", "|&}tL", "|&}tL");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-392));
      String[] stringArray0 = new String[3];
      stringArray0[0] = "OhS!<M7";
      stringArray0[1] = "9R~";
      stringArray0[2] = "OhS!<M7";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 127, "OhS!<M7", "9R~", "r", stringArray0, false, false);
      methodWriter0.visitInsn(21);
      methodWriter0.visitFieldInsn(737, "g]BXsYV{HM", "", "9R~");
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation("short", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(251);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-128), "StackMapTable", "4[)g", "", (String[]) null, true, true);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1483);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Exceptions", ">", ">", stringArray0, false, false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(1);
      ByteVector byteVector2 = byteVector1.putShort(1483);
      ByteVector byteVector3 = new ByteVector(1);
      methodWriter0.put(byteVector2);
      assertSame(byteVector1, byteVector2);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)68;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClassWriter classWriter0 = new ClassWriter((-2364));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "KF2";
      stringArray0[1] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[2] = "KF2";
      stringArray0[3] = "RuntimeInvisibleParameterAnnotations";
      stringArray0[4] = "KF2";
      stringArray0[5] = "Code";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "RuntimeInvisibleParameterAnnotations", "RuntimeInvisibleParameterAnnotations", "KF2", stringArray0, false, false);
      MethodWriter methodWriter1 = methodWriter0.next;
      classWriter0.lastMethod = null;
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      MethodWriter methodWriter3 = classWriter0.firstMethod;
      methodWriter3.visitEnd();
      ByteVector byteVector0 = new ByteVector(285212683);
      ByteVector byteVector1 = byteVector0.put12((byte)68, 1363);
      methodWriter0.put(byteVector1);
      assertSame(byteVector1, byteVector0);
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "2MZSV7IO 4c![)D", "2MZSV7IO 4c![)D", "2MZSV7IO 4c![)D", stringArray0, true, true);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Label label0 = new Label();
      methodWriter0.visitLineNumber(2, label0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(100);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 100, "java/lang/dyn/Dynamic", "Vk'Az()n?&Ve", (String) null, stringArray0, true, true);
      int int0 = Type.BOOLEAN;
      methodWriter0.visitTypeInsn(100, "Lp8ij[]).N");
      Integer integer0 = new Integer(1);
      assertEquals(1, (int)integer0);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(102);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "|&}tL", "|&}tL", "|&}tL", (String[]) null, false, false);
      methodWriter0.visitIntInsn(1, 102);
      Integer integer0 = new Integer(2452);
      int int0 = methodWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(81);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ">", ">", ">", stringArray0, false, false);
      methodWriter0.visitMethodInsn(1, ">", ">", ">");
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(81, label0);
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1615964240));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 83, ".GrW-HU#@!GW", ".GrW-HU#@!GW", "LocalVariableTypeTable", (String[]) null, false, false);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitVarInsn((-1252), 1);
      classWriter0.version = (-1615964240);
      methodWriter0.visitInsn(1);
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "RuntimeVisibleParameterAnnotations");
      methodWriter0.visitCode();
      methodWriter0.visitLabel(label0);
      methodWriter0.visitJumpInsn(187, label0);
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1729366175), "<m5,lrN:ljPuA_(", ">", "<m5,lrN:ljPuA_(", stringArray0, false, false);
      methodWriter0.visitMethodInsn(1123, "&Ei", ">", "Deprecated");
      methodWriter0.visitInsn((-1729366175));
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 5, "AnnotationDefault", "Synthetic", "Synthetic", stringArray0, false, false);
      Object[] objectArray0 = new Object[4];
      objectArray0[0] = (Object) "Synthetic";
      objectArray0[1] = (Object) classWriter0;
      classWriter0.newMethod(" qWU?#h\",gm", "H{zG{pr*|G|", "H{zG{pr*|G|", true);
      objectArray0[3] = (Object) methodWriter0;
      methodWriter0.visitIincInsn((-1960), 2);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(124);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimeVisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-75), "qM0s@DmHv", "})X>fb2y&0iU9Se4", "RuntimeVisibleAnnotations", stringArray0, true, true);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.visitMaxs((-1882913443), (-1443702245));
      methodWriter1.visitIincInsn(2, 91);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "Vk'Az()n?&Ve";
      stringArray1[1] = "2L";
      stringArray1[2] = "RuntimeVisibleAnnotations";
      stringArray1[3] = "RuntimeVisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ">", "D+O'rcwVr)d{Tg-", "RuntimeVisibleAnnotations", stringArray1, false, true);
      MethodWriter methodWriter1 = methodWriter0.next;
      methodWriter0.visitInsn(2);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      int int0 = 83;
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      String string0 = "RuntimeVisibleAn{otations";
      String string1 = "D+O'rcwVr)d{Tg-";
      String[] stringArray1 = new String[4];
      stringArray1[0] = "Vk'Az()n?&Ve";
      String string2 = "2L";
      stringArray1[1] = "2L";
      stringArray1[2] = "RuntimeVisibleAn{otations";
      stringArray1[3] = "D+O'rcwVr)d{Tg-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ">", "D+O'rcwVr)d{Tg-", "RuntimeVisibleAn{otations", stringArray1, false, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(83, 2777);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1560);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "RuntimeVisibleParameterAnnotations";
      stringArray0[1] = "RuntimeVisibleParameterAnnotations";
      stringArray0[2] = "";
      stringArray0[3] = ">";
      stringArray0[4] = "RuntimeVisibleParameterAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1624069395), ">", "Vk'Az()n?&Ve", "RuntimeVisibleParameterAnnotations", stringArray0, true, true);
      methodWriter0.visitAnnotationDefault();
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = byteVector0.putUTF8("Ljava/lang/Synthetic;");
      byteVector1.put12(642, 1824);
      methodWriter0.put(byteVector0);
      int[] intArray0 = new int[8];
      intArray0[0] = 1824;
      intArray0[1] = 1560;
      intArray0[2] = 642;
      intArray0[3] = 1824;
      intArray0[4] = (-1624069395);
      intArray0[5] = 642;
      intArray0[6] = 642;
      intArray0[7] = 1824;
      MethodWriter.getNewOffset(intArray0, intArray0, 1560, 1919);
      methodWriter0.visitIincInsn(585, 1560);
      methodWriter0.put(byteVector0);
      // Undeclared exception!
      try { 
        methodWriter0.visitTypeInsn(1824, ">");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1483);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Exceptions", ">", ">", stringArray0, false, false);
      methodWriter0.visitMethodInsn(1483, "Synthetic", "org.objectweb.asm.jip.MethodWriter", "Synthetic");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(1);
      ByteVector byteVector2 = byteVector1.putShort(1483);
      ByteVector byteVector3 = new ByteVector(1);
      methodWriter0.put(byteVector2);
      assertSame(byteVector1, byteVector2);
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(100);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimeVisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 100, "RuntimeVisibleAnnotations", "Vk'Az()n?&Ve", "RuntimeVisibleAnnotations", stringArray0, true, false);
      methodWriter0.visitIincInsn(24, 1);
      methodWriter0.visitLdcInsn(1);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-628), "RuntimeVisibleAnnotations", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "2MZSV7IO 4c![)D", "2MZSV7IO 4c![)D", "2MZSV7IO 4c![)D", stringArray0, true, true);
      methodWriter0.visitFieldInsn(0, "void", "void", "DZkWScR3DuyakNT");
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ">", ">", ">", stringArray0, false, false);
      methodWriter0.visitMethodInsn(1123, "&Ei", ">", "Deprecated");
      methodWriter0.visitEnd();
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(1123, label0);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte) (-77);
      byteArray0[2] = (byte) (-104);
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, (byte) (-104), (byte)49);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -104
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Exceptions", ">", "RuntimeVisibleAnnotations", stringArray0, false, false);
      methodWriter0.visitInsn((-2398));
      methodWriter0.visitFieldInsn((-2398), ">", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      methodWriter0.getSize();
      methodWriter0.visitIntInsn(48, 48);
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      methodWriter0.visitLineNumber(48, label1);
      int[] intArray0 = new int[0];
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      MethodWriter.getNewOffset(intArray0, intArray0, (-2398), (-2398));
      methodWriter0.visitLineNumber(2950, label1);
      assertSame(label1, label0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(89);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimeVisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "RuntimeVisibleAnnotations", "Vk'Az()n?&Ve", "RuntimeVisibleAnnotations", stringArray0, true, false);
      int int0 = Type.BOOLEAN;
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(89, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1560);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "RuntimeVisibleParameterAnnotations";
      stringArray0[1] = "RuntimeVisibleParameterAnnotations";
      stringArray0[2] = "";
      stringArray0[3] = ">";
      stringArray0[4] = "RuntimeVisibleParameterAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1624069356), ">", "Vk'Az()n?&Ve", "RuntimeVisibleParameterAnnotations", stringArray0, false, true);
      methodWriter0.visitInsn(172);
      methodWriter0.visitFieldInsn((-1624069356), "}o", "}o", "Vk'Az()n?&Ve");
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(251);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-128), "StackMapTable", "2MZSV7IO 4c![)D", "", (String[]) null, false, true);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.visitIincInsn(2, (-965));
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Label label0 = new Label();
      Label[] labelArray0 = new Label[0];
      methodWriter1.visitTableSwitchInsn((-965), 16777220, label0, labelArray0);
      methodWriter1.visitVarInsn(24, 24);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(124);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimeVisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-75), "qM0s@DmHv", "})X>fb2y&0iU9Se4", "RuntimeVisibleAnnotations", stringArray0, true, false);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.visitMaxs((-1882913443), (-1443702245));
      methodWriter1.visitInsn(184);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(251);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 251, "7KwOV", "4[)g", "", (String[]) null, true, true);
      methodWriter0.visitMethodInsn(251, "Gd|Wc", "Gd|Wc", "4[)g");
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(1, 251);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ">", "Vk'Az()n?&Ve", ">", stringArray0, true, true);
      Label label0 = new Label();
      Label label1 = new Label();
      methodWriter0.visitTryCatchBlock(label1, label0, label1, ">");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitCode();
      int[] intArray0 = new int[9];
      intArray0[0] = 83;
      intArray0[1] = 83;
      intArray0[2] = 1;
      intArray0[3] = 83;
      intArray0[4] = 2;
      intArray0[5] = 1;
      intArray0[6] = 1919;
      intArray0[7] = 1919;
      intArray0[8] = 2;
      MethodWriter.getNewOffset(intArray0, intArray0, 1, 1919);
      methodWriter1.visitIincInsn(83, 177);
      ByteVector byteVector0 = new ByteVector(1919);
      ByteVector byteVector1 = byteVector0.putByte(1);
      ByteVector byteVector2 = byteVector1.putLong(0L);
      ByteVector byteVector3 = byteVector2.put11(6009, (-19));
      methodWriter1.put(byteVector3);
      methodWriter1.visitTypeInsn(1, ">");
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ">", ">", "RuntimeInvisibleParameterAnnotations", (String[]) null, false, false);
      Edge edge0 = new Edge();
      methodWriter0.visitInsn(2);
      Label label0 = new Label();
      Label label1 = label0.successor;
      methodWriter0.getSize();
      methodWriter0.visitIntInsn((-2593), (-2593));
      Label label2 = new Label();
      label2.getFirst();
      // Undeclared exception!
      try { 
        methodWriter0.visitLineNumber(2, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(97);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimeVisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "RuntimeVisibleAnnotations", "3k'tz()n?&Ve", "RuntimeVisibleAnnotations", stringArray0, true, false);
      methodWriter0.visitMaxs(2, 2);
      methodWriter0.visitIntInsn(1, (-1763584902));
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ">", ">", "RuntimeInvisibleParameterAnnotations", (String[]) null, false, false);
      int[] intArray0 = new int[8];
      intArray0[0] = 2;
      intArray0[1] = 1;
      intArray0[2] = 2;
      intArray0[3] = 2;
      intArray0[4] = 1;
      intArray0[5] = 1;
      intArray0[6] = 16777216;
      intArray0[7] = 83;
      MethodWriter.getNewOffset(intArray0, intArray0, 83, (-2726));
      methodWriter0.visitIincInsn((-933), 2);
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = byteVector0.putByte(218);
      ByteVector byteVector2 = byteVector0.putLong((-362L));
      byteVector1.put11(2, (-19));
      methodWriter0.put(byteVector2);
      methodWriter0.visitTypeInsn(0, "RuntimeInvisibleParameterAnnotations");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)7;
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-91);
      byteArray0[3] = (byte) (-117);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte)7, 186);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      String[] stringArray1 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 191, ">", "2MZSV7IO 4c![)D", ">", stringArray1, true, true);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitVarInsn(83, (-2591));
      methodWriter0.visitTypeInsn(83, "StackMapTable");
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "2MZSV7IO 4c![)D", "2MZSV7IO 4c![)D", "2MZSV7IO 4c![)D", stringArray0, true, true);
      methodWriter0.visitVarInsn(191, (-1062));
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ">", ">", "RuntimeInvisibleParameterAnnotations", (String[]) null, false, false);
      Edge edge0 = new Edge();
      methodWriter0.visitInsn(2);
      Label label0 = new Label();
      Label label1 = label0.successor;
      methodWriter0.visitTryCatchBlock(label0, (Label) null, label0, ">");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      methodWriter1.visitCode();
      methodWriter1.visitLabel(label0);
      methodWriter0.visitJumpInsn(2, label0);
      Label label2 = edge0.successor;
      methodWriter1.visitTryCatchBlock((Label) null, (Label) null, (Label) null, ">");
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[10];
      stringArray0[6] = ">";
      String[] stringArray1 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 191, ">", "2MZSV7IO 4c![)D", stringArray0[0], stringArray1, true, true);
      ByteVector byteVector0 = new ByteVector();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      intArray0[1] = 2;
      intArray0[2] = 66;
      MethodWriter.getNewOffset(intArray0, intArray0, (-1624069395), (-1780));
      methodWriter0.visitIincInsn(2, 1752);
      ByteVector byteVector1 = new ByteVector(83);
      byteVector0.putByte(66);
      ByteVector byteVector2 = byteVector0.putLong((-4595L));
      byteVector2.put11(9, 1);
      methodWriter0.put(byteVector0);
      methodWriter0.visitTypeInsn(99, "java/lang/Object");
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      classWriter0.visitSource("RuntimeVisibleAnnotations", "aZR<");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4269, "RuntimeVisibleAnnotations", "Vk'Az()n?&Ve", ">", stringArray0, true, false);
      methodWriter0.visitAnnotationDefault();
      ByteVector byteVector0 = new ByteVector(4269);
      methodWriter0.visitTypeInsn(4269, "Vk'Az()n?&Ve");
      methodWriter0.visitMultiANewArrayInsn(".class", 83);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("Vk'Az()n?&Ve");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(81);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 81, "$sns#@lg", "RuntimeVisibleAnnotations", "-", (String[]) null, false, false);
      methodWriter0.visitInsn(1);
      methodWriter0.getSize();
      methodWriter0.visitMethodInsn(81, "$sns#@lg", "-", "RuntimeVisibleAnnotations");
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(35);
      byteVector1.putUTF8("-");
      Label label0 = new Label();
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = 35;
      Label[] labelArray0 = new Label[2];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitAnnotation("EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE", false);
      methodWriter1.visitCode();
      methodWriter1.visitLabel(label0);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ">", ">", "RuntimeInvisibleParameterAnnotations", (String[]) null, false, false);
      Label label0 = new Label();
      Label label1 = label0.successor;
      methodWriter0.visitTryCatchBlock(label0, (Label) null, label0, ">");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      int[] intArray0 = new int[6];
      intArray0[0] = 83;
      intArray0[1] = 83;
      intArray0[2] = 2;
      intArray0[3] = 83;
      intArray0[4] = 1;
      intArray0[5] = 83;
      Label[] labelArray0 = new Label[9];
      Label label2 = label0.successor;
      labelArray0[0] = null;
      labelArray0[1] = label0;
      labelArray0[2] = null;
      labelArray0[3] = null;
      labelArray0[4] = null;
      labelArray0[5] = null;
      labelArray0[6] = null;
      labelArray0[7] = label0;
      labelArray0[8] = null;
      // Undeclared exception!
      try { 
        methodWriter1.visitLookupSwitchInsn(label0, intArray0, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(102);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "|&}tL", "|&}tL", "|&}tL", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("|&}tL", "|&}tL", ",Hwwnl`kR }RLGbjQ]+", label0, label0, 2);
      methodWriter0.getSize();
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn((-1723), 1951, label0, labelArray0);
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ">", ">", "RuntimeInvisibleParameterAnnotations", (String[]) null, false, false);
      Edge edge0 = new Edge();
      methodWriter0.visitInsn(2);
      Label label0 = new Label();
      Label label1 = label0.successor;
      methodWriter0.visitTryCatchBlock(label0, (Label) null, label0, ">");
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.visitLocalVariable("RuntimeInvisibleParameterAnnotations", "6T|>=GGF =n", "6T|>=GGF =n", label0, label0, 16);
      label0.outputStackMax = 67;
      methodWriter1.visitCode();
      methodWriter1.visitLabel(label0);
      methodWriter0.visitJumpInsn(2, label0);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      classWriter0.visitSource("RuntimeVisibleAnnotations", "aZR<");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ">", "Vk'Az()n?&Ve", ">", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-466), "Vk'Az()n?&Ve", ">", "i(74:,4CA%`", stringArray0, false, false);
      methodWriter1.getSize();
      methodWriter0.visitTypeInsn((-466), "RuntimeVisibleParameterAnnotations");
      methodWriter1.visitMaxs((-1721), 1);
      methodWriter0.visitMultiANewArrayInsn(">", (-1721));
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-399), "Synthetic", "2MZSV7IO 4c![)D", "L76<U|qyrd1[0B", stringArray0, true, true);
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(97);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "s";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 97, "C", "Vk'Az()n?&Ve", "s", stringArray0, true, false);
      methodWriter0.visitAnnotationDefault();
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(1, label0);
      methodWriter0.visitFieldInsn(184, "C", "C", "C");
      methodWriter0.getSize();
      methodWriter0.visitIntInsn(97, 2);
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(100);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 100, "", "Vk'Az()n?&Ve", "a", stringArray0, true, true);
      methodWriter0.visitLdcInsn("a");
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      classWriter0.visitSource("RuntimeVisibleAnnotations", "aZR<");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4269, "RuntimeVisibleAnnotations", "Vk'Az()n?&Ve", ">", stringArray0, true, false);
      classWriter0.newField("Deprecated", "RuntimeVisibleAnnotations", "Deprecated");
      ByteVector byteVector0 = new ByteVector(4269);
      methodWriter0.visitTypeInsn(4269, "Vk'Az()n?&Ve");
      methodWriter0.visitMultiANewArrayInsn(".class", 83);
      methodWriter0.visitTypeInsn(169, "aZR<");
      methodWriter0.visitLdcInsn("Deprecated");
      methodWriter0.visitIntInsn((-5910), 285212681);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      classWriter0.visitSource("RuntimeVisibleAnnotations", "aZR<");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4269, "RuntimeVisibleAnnotations", "Vk'Az()n?&Ve", ">", stringArray0, true, false);
      classWriter0.newField("Deprecated", "RuntimeVisibleAnnotations", "Deprecated");
      methodWriter0.visitAnnotationDefault();
      ByteVector byteVector0 = new ByteVector(4269);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 8, "RuntimeInvisibleAnnotations", "z76<Z|7yrd[0B", "G&N\"N'3|4C}", stringArray0, false, false);
      methodWriter1.visitInsn((-322));
      methodWriter0.visitFieldInsn(4269, ">", "z76<Z|7yrd[0B", "RuntimeVisibleAnnotations");
      int[] intArray0 = new int[1];
      intArray0[0] = 83;
      int[] intArray1 = new int[1];
      intArray1[0] = 8;
      Label label0 = new Label();
      Edge edge0 = label0.successors;
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(4269, "*NMchQotEKnr", "*NMchQotEKnr", "<init>");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(97);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimeVisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "RuntimeVisibleAnnotations", "3k'tz()n?&Ve", "RuntimeVisibleAnnotations", stringArray0, true, false);
      methodWriter0.visitMaxs(2, 2);
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn(2, "3k'tz()n?&Ve", "RuntimeVisibleAnnotations", "StackMap");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      classWriter0.visitSource("RuntimeVisibleAnnotations", "aZR<");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4269, "RuntimeVisibleAnnotations", "Vk'Az()n?&Ve", ">", stringArray0, true, false);
      classWriter0.newField("Deprecated", "RuntimeVisibleAnnotations", "Deprecated");
      ByteVector byteVector0 = new ByteVector(4269);
      methodWriter0.visitTypeInsn(4269, "Vk'Az()n?&Ve");
      methodWriter0.visitMultiANewArrayInsn(">", 83);
      methodWriter0.visitTypeInsn(169, "aZR<");
      methodWriter0.visitLdcInsn("Deprecated");
      methodWriter0.visitIntInsn((-5910), 285212681);
      methodWriter0.visitInsn(1);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[10];
      stringArray0[6] = "";
      String[] stringArray1 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 191, "", "2MZSV7IO 4c![)D", stringArray0[0], stringArray1, true, true);
      ByteVector byteVector0 = new ByteVector();
      int[] intArray0 = new int[3];
      intArray0[0] = 2;
      methodWriter0.visitVarInsn(2, 55);
      intArray0[1] = 2;
      intArray0[2] = 66;
      MethodWriter.getNewOffset(intArray0, intArray0, (-1624069395), (-1780));
      methodWriter0.getSize();
      String string0 = "=L>O#@a7t'JGx'KLl";
      methodWriter0.visitTypeInsn(16, "=L>O#@a7t'JGx'KLl");
      int int0 = 2646;
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(2646, 1752);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String string0 = "RuntimeVisibleAnnotations";
      classWriter0.visitSource("RuntimeVisibleAnnotations", "aZR<");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4269, "RuntimeVisibleAnnotations", "Vk'Az()n?&Ve", ">", stringArray0, true, false);
      classWriter0.newField("Deprecated", "RuntimeVisibleAnnotations", "Deprecated");
      ByteVector byteVector0 = new ByteVector(4269);
      methodWriter0.visitTypeInsn(4269, "Vk'Az()n?&Ve");
      int[] intArray0 = new int[7];
      intArray0[0] = (-1780);
      intArray0[1] = (-1780);
      intArray0[2] = 83;
      intArray0[3] = 2949;
      intArray0[4] = 1;
      intArray0[5] = 4269;
      intArray0[6] = 4269;
      MethodWriter.getNewOffset(intArray0, intArray0, (-2695), 4269);
      methodWriter0.visitIincInsn(1752, (-3615));
      methodWriter0.visitAnnotationDefault();
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn((-1126), 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1126
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(97);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimeVisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "RuntimeVisibleAnnotations", "3k'tz()n?&Ve", "RuntimeVisibleAnnotations", stringArray0, true, false);
      methodWriter0.visitVarInsn(179, 97);
      methodWriter0.visitMaxs(2, 2);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      classWriter0.visitSource("RuntimeVisibleAnnotations", "aZR<");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4269, "RuntimeVisibleAnnotations", "Vk'Az()n?&Ve", ">", stringArray0, true, false);
      classWriter0.newField("Deprecated", "RuntimeVisibleAnnotations", "Deprecated");
      ByteVector byteVector0 = new ByteVector(4269);
      classWriter0.newFieldItem("Deprecated", "}k~->$C[*%r", "1*uK0g@");
      methodWriter0.visitTypeInsn(4269, "Vk'Az()n?&Ve");
      methodWriter0.visitMethodInsn(2, "F+f@DZx;FI\"", "aZR<", "Vk'Az()n?&Ve");
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-932), label0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -932
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      classWriter0.visitSource("Runt:meVisib|eAnn'tations", "aZR<");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      classWriter0.newUTF8("|wJ9Ot}@Q?+a;o");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4269, "Runt:meVisib|eAnn'tations", "Vk'Az()U?&Ve", ">", stringArray0, true, false);
      methodWriter0.visitTypeInsn(1, "Deprecated");
      methodWriter0.visitTypeInsn(83, "Q,}gS[");
      methodWriter0.visitMaxs(1, 139);
      Frame frame0 = new Frame();
      Label label0 = frame0.owner;
      Label[] labelArray0 = new Label[7];
      labelArray0[0] = null;
      labelArray0[1] = null;
      labelArray0[2] = null;
      methodWriter0.visitIincInsn(1392510721, 22);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitVarInsn(139, 267386880);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("RuntimeVisibleAnnotations");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "Vk'Az()n?&Ve", "", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-461), "Vk'Az()n?&Ve", "", "i(74:,4CA%`", stringArray0, false, false);
      methodWriter1.getSize();
      methodWriter0.visitTypeInsn((-461), "RuntimeVisibleParameterAnnotations");
      methodWriter0.visitVarInsn(191, 2);
      ByteVector byteVector0 = new ByteVector();
      ClassWriter classWriter1 = new ClassWriter(191);
      Label label0 = new Label();
      methodWriter1.visitTryCatchBlock(label0, label0, label0, "7P_G");
      Label[] labelArray0 = new Label[9];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      labelArray0[5] = label0;
      labelArray0[6] = label0;
      labelArray0[7] = label0;
      labelArray0[8] = label0;
      methodWriter1.visitTableSwitchInsn((-1688), 1, label0, labelArray0);
      assertNotSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      classWriter0.visitSource(">", "aZR<");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ">", "Vk'Az()n?&Ve", ">", stringArray0, true, false);
      classWriter0.newField("Deprecated", ">", "Deprecated");
      ByteVector byteVector0 = new ByteVector(2);
      methodWriter0.visitTypeInsn(1, "Vk'Az()n?&Ve");
      methodWriter0.visitMultiANewArrayInsn(">", 83);
      methodWriter0.visitTypeInsn(169, "aZR<");
      methodWriter0.visitVarInsn(169, (-312));
      methodWriter0.visitEnd();
      int[] intArray0 = new int[8];
      intArray0[0] = 169;
      intArray0[1] = 169;
      intArray0[2] = 2;
      intArray0[3] = 83;
      intArray0[4] = 2;
      intArray0[5] = 83;
      intArray0[6] = (-312);
      intArray0[7] = 1;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-96);
      byteArray0[1] = (byte)12;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-64);
      byteArray0[4] = (byte)68;
      byteArray0[5] = (byte)11;
      byteArray0[6] = (byte)123;
      byteArray0[7] = (byte)115;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 220, 220);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 228
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 83, ">", ")~)?'", ">", stringArray0, true, true);
      methodWriter0.visitTypeInsn(1392510721, "Signature");
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitMethodInsn(6, ">", ">", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEEDDEEDDEE");
      Label label0 = new Label();
      methodWriter1.visitJumpInsn(6, label0);
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(167, 186, label0, labelArray0);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ">", "Vk'Az()n?&Ve", ">", stringArray0, true, false);
      int int0 = Frame.ARRAY_OF;
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitMethodInsn(193, ">", "Vk'Az()n?&Ve", "c)+NY>i?16*$-d.l |I");
      methodWriter0.visitLdcInsn("c)+NY>i?16*$-d.l |I");
      Label label0 = new Label();
      int[] intArray0 = new int[4];
      intArray0[0] = 193;
      intArray0[1] = 2;
      intArray0[2] = 268435456;
      intArray0[3] = 2;
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      assertArrayEquals(new int[] {193, 2, 268435456, 2}, intArray0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      classWriter0.visitSource("RuntimeVisibleAnnotations", "aZR<");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4269, "RuntimeVisibleAnnotations", "Vk'Az()n?&Ve", ">", stringArray0, true, false);
      classWriter0.newField("Deprecated", "RuntimeVisibleAnnotations", "Deprecated");
      ByteVector byteVector0 = new ByteVector(4269);
      methodWriter0.visitTypeInsn(4269, "Vk'Az()n?&Ve");
      Label label0 = new Label();
      Label[] labelArray0 = new Label[8];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      labelArray0[5] = label0;
      labelArray0[6] = label0;
      labelArray0[7] = label0;
      methodWriter0.visitTableSwitchInsn(255, 83, label0, labelArray0);
      methodWriter0.visitMultiANewArrayInsn(".class", 83);
      methodWriter0.visitTypeInsn(2, "aZR<");
      methodWriter0.visitLdcInsn("Deprecated");
      methodWriter0.visitJumpInsn((-5190), label0);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "m$j9[-u>fEi}|khVf");
      Label label0 = new Label();
      label0.line = 2483;
      label0.status = (-1931);
      int[] intArray0 = new int[2];
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4269, "RuntimeVisibleAnnotations", "Vk'Az()n?&Ve", ">", stringArray0, true, false);
      int int0 = Frame.ARRAY_OF;
      methodWriter0.visitAnnotationDefault();
      ByteVector byteVector0 = new ByteVector(4269);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("RuntimeInvisibleAnnotations", "Y", "Ljava/lang/Synthetic;", label0, label0, 2106);
      methodWriter1.put(byteVector0);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ">", "Vk'Az()n?&Ve", ">", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable(">", "Vk'Az()n?&Ve", ">", label0, label0, 1829);
      int int0 = methodWriter0.getSize();
      assertEquals(26, int0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      classWriter0.visitSource(">", "?ZG<");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      ClassWriter classWriter1 = new ClassWriter(1);
      classWriter1.newDouble(0.0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 91, "RjEX.)wU", "RjEX.)wU", (String) null, stringArray0, true, true);
      classWriter1.newField("FxPN6Sx?)92'", "}{3H", "RjEX.)wU");
      ByteVector byteVector0 = new ByteVector(256);
      Item item0 = classWriter1.key2;
      methodWriter0.visitTypeInsn(2, "");
      methodWriter0.visitMethodInsn(91, "x&0zzY#r7|VHT", "x&0zzY#r7|VHT", "Vk'Az()n?&Ve");
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(10, label0);
      methodWriter0.visitLocalVariable(".JAR", ">", ")'UK`\"7N}8';B'", label0, label0, 1);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(251);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-128), "StackMapTable", "2MZSV7IO 4c![)D", "", (String[]) null, false, true);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.visitIincInsn(2, (-965));
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitVarInsn(24, 24);
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn((-128), (-1048576));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Exceptions", ">", "RuntimeVisibleAnnotations", stringArray0, false, false);
      classWriter0.newMethod("le", "RuntimeVisibleAnnotations", "Exceptions", false);
      methodWriter0.visitFrame(5, 55, stringArray0, 55, stringArray0);
      methodWriter0.visitEnd();
      methodWriter0.visitMultiANewArrayInsn(")V", 1);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[0];
      classWriter0.visit(83, 83, "E)LO", "E)LO", "E)LO", stringArray0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4269, "RuntimeVisibleAnnotations", "Vk'Az()n?&Ve", ">", stringArray1, true, false);
      int int0 = Frame.ARRAY_OF;
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitFieldInsn(4269, ">", "L76<U|qyrd1[0B", "RuntimeVisibleAnnotations");
      classWriter0.newField("6e(Xm3)=L-K^EbN_:D:", "FxPN6Sx?)92'", "6e(Xm3)=L-K^EbN_:D:");
      ByteVector byteVector0 = new ByteVector(256);
      Item item0 = classWriter0.key2;
      methodWriter0.visitTypeInsn(268435456, "L76<U|qyrd1[0B");
      classWriter0.visitMethod(40, "IF?LXU,!G+w", "Vk'Az()n?&Ve", "6e(Xm3)=L-K^EbN_:D:", stringArray1);
      methodWriter0.visitMethodInsn(200, "RuntimeVisibleAnnotations", "Vk'Az()n?&Ve", "c)+NY>i?16*$-d.l |I");
      methodWriter0.visitFrame(1048575, 200, stringArray0, 256, stringArray1);
      Label label0 = new Label();
      MethodWriter methodWriter1 = methodWriter0.next;
      byteVector0.putShort(268435456);
      methodWriter0.put(byteVector0);
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "s";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4269, "HuntimeVisHbleAnnotations", "Vk'Az()n?&Ve", "s", stringArray0, true, false);
      int int0 = Type.ARRAY;
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      methodWriter0.visitFieldInsn(4269, "s", "L76<U|qylrd1[0B", "HuntimeVisHbleAnnotations");
      classWriter0.lastMethod = methodWriter0;
      methodWriter0.visitIincInsn((-769), (-61));
      classWriter0.addUninitializedType("Vk'Az()n?&Ve", 101);
      classWriter0.lastMethod.visitMethodInsn(2, "char", "_Y([LaZ]7,lUX$=;#P", "Vk'Az()n?&Ve");
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(6, label0);
      AnnotationVisitor annotationVisitor1 = classWriter0.lastMethod.visitAnnotationDefault();
      assertNotSame(annotationVisitor1, annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      String[] stringArray0 = new String[0];
      classWriter0.visit(44, 44, "E)LO", "E)LO", "E)LO", stringArray0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4269, "RuntimeVisibleAnnotations", "Vk'Az()n?&Ve", ">", stringArray1, true, false);
      int int0 = Frame.ARRAY_OF;
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitFieldInsn(4269, ">", "L76<U|qyrd1[0B", "RuntimeVisibleAnnotations");
      classWriter0.newField("6e(Xm3)=L-K^EbN_:D:", "FxPN6Sx?)92'", "6e(Xm3)=L-K^EbN_:D:");
      ByteVector byteVector0 = new ByteVector(256);
      classWriter0.newFieldItem("6e(Xm3)=L-K^EbN_:D:", "L76<U|qyrd1[0B", "6e(Xm3)=L-K^EbN_:D:");
      methodWriter0.visitTypeInsn(268435456, "L76<U|qyrd1[0B");
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(40, "IF?LXU,!G+w", "Vk'Az()n?&Ve", "6e(Xm3)=L-K^EbN_:D:", stringArray1);
      methodWriter0.visitMethodInsn(200, "RuntimeVisibleAnnotations", "Vk'Az()n?&Ve", "c)+NY>i?16*$-d.l |I");
      methodWriter0.visitFrame(1048575, 200, stringArray0, 256, stringArray1);
      Label label0 = new Label();
      MethodWriter methodWriter1 = methodWriter0.next;
      byteVector0.putShort(268435456);
      methodWriter0.put(byteVector0);
      assertNotSame(methodWriter0, methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Exceptions", ">", "RuntimeVisibleAnnotations", stringArray0, false, false);
      classWriter0.newMethod("G&N\"N'3|4C}", "RuntimeVisibleAnnotations", "Exceptions", true);
      methodWriter0.visitFrame(5, 1534, stringArray0, 1534, stringArray0);
      methodWriter0.visitEnd();
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) classWriter0;
      objectArray0[1] = (Object) ">";
      objectArray0[2] = (Object) methodWriter0;
      objectArray0[3] = (Object) ">";
      objectArray0[4] = (Object) "Exceptions";
      objectArray0[5] = (Object) methodWriter0;
      objectArray0[6] = (Object) methodWriter0;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, (-1351), objectArray0, 1048575, objectArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(81);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ">", ">", ">", stringArray0, false, false);
      methodWriter0.visitFrame(2, 2, stringArray0, 81, stringArray0);
      methodWriter0.visitFrame(3, 2, stringArray0, 1, stringArray0);
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4269, "RuntimeVisibleAnnotations", "Vk'Az()n?&Ve", ">", stringArray0, true, false);
      int int0 = Frame.ARRAY_OF;
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitFieldInsn(4269, ">", "L76<U|qyrd1[0B", "RuntimeVisibleAnnotations");
      classWriter0.newField("6e(Xm3)=L-K^EbN_:D:", "FxPN6Sx?)92'", "6e(Xm3)=L-K^EbN_:D:");
      ByteVector byteVector0 = new ByteVector(256);
      Item item0 = classWriter0.key2;
      methodWriter0.visitTypeInsn(268435456, "L76<U|qyrd1[0B");
      methodWriter0.visitVarInsn(55, 4269);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitMaxs(127, 256);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "y'", "y'", "RuntimeInvisibleParaeterAnnotations", (String[]) null, false, false);
      methodWriter0.visitMultiANewArrayInsn(".class", 26);
      methodWriter0.visitIntInsn(5, 2245);
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      methodWriter0.visitLocalVariable("y'", ".class", (String) null, label0, label1, 83);
      int int0 = methodWriter0.getSize();
      assertEquals(58, int0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[0];
      classWriter0.visit(83, 83, "EhIp", "EhIp", "EhIp", stringArray0);
      String[] stringArray1 = new String[1];
      stringArray1[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 4269, "RuntimeVisibleAnnotations", "Vk'Az()n?&Ve", ">", stringArray1, false, false);
      int int0 = Frame.ARRAY_OF;
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitFieldInsn(4269, ">", "L76<U|qyrd1[0B", "RuntimeVisibleAnnotations");
      classWriter0.newField("6e(Xm3)=L-K^EbN_:D:", "FxPN6Sx?)92'", "6e(Xm3)=L-K^EbN_:D:");
      methodWriter0.visitTypeInsn(268435456, "L76<U|qyrd1[0B");
      MethodWriter methodWriter1 = (MethodWriter)classWriter0.visitMethod(4269, "FxPN6Sx?)92'", "Vk'Az()n?&Ve", "6e(Xm3)=L-K^EbN_:D:", stringArray1);
      methodWriter0.visitMethodInsn(200, "RuntimeVisibleAnnotations", "Vk'Az()n?&Ve", "c)+NY>i?16*$-d.l |I");
      Edge edge0 = new Edge();
      methodWriter0.visitTypeInsn(1369, "FxPN6Sx?)92'");
      int int1 = methodWriter1.getSize();
      assertEquals(26, int1);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(45);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimeVisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 45, "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", stringArray0, false, false);
      methodWriter0.visitFrame(4, 2, stringArray0, 168, stringArray0);
      Integer integer0 = new Integer(45);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[8];
      stringArray0[0] = "y'";
      stringArray0[1] = "y'";
      stringArray0[2] = "y'";
      stringArray0[3] = "s";
      stringArray0[4] = "y'";
      stringArray0[5] = "y'";
      stringArray0[6] = "=gMgFs'_!T5KYzhPJ<b";
      stringArray0[7] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 83, "=gMgFs'_!T5KYzhPJ<b", "y'", "=gMgFs'_!T5KYzhPJ<b", stringArray0, false, false);
      int int0 = 127;
      methodWriter0.visitFrame(4, 1579, stringArray0, 127, stringArray0);
      methodWriter0.visitEnd();
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(127, 83, stringArray0, 715, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Exceptions", ">", ">", stringArray0, false, false);
      classWriter0.newMethod("le", ">", "Exceptions", false);
      methodWriter0.visitEnd();
      int int0 = 0;
      int int1 = 12;
      int int2 = (-1847364913);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 12, stringArray0, (-1847364913), stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(81);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">");
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, ">", ">", ">", stringArray0, false, false);
      methodWriter0.visitFrame((-518), 127, stringArray0, (-32768), stringArray0);
      methodWriter0.visitEnd();
      methodWriter0.visitIincInsn(1, 187);
      methodWriter0.visitFrame(436, (-518), stringArray0, 127, stringArray0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(102);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "|&}tL", "|&}tL", "|&}tL", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector(2);
      methodWriter0.put(byteVector0);
      int int0 = (-2581);
      methodWriter0.visitVarInsn(102, (-2581));
      int int1 = (-1);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 71, (Object[]) null, 186, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-607));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ">", ">", ">", (String[]) null, false, false);
      methodWriter0.visitInsn(2);
      Label label0 = new Label();
      methodWriter0.visitIntInsn(46, 1);
      Label label1 = label0.successor;
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, ">", ">", ">", (String[]) null, false, false);
      methodWriter0.visitFieldInsn(16777216, ",", ",", "g@");
      Integer integer0 = new Integer(74);
      // Undeclared exception!
      try { 
        methodWriter1.visitFrame((-1), 2658, (Object[]) null, 262144, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(54);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "#untimeVisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "#untimeVisibleAnnotations", "#untimeVisibleAnnotations", "#untimeVisibleAnnotations", stringArray0, false, false);
      Integer integer0 = new Integer((-1847364913));
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitInsn(54);
      methodWriter1.visitFrame(54, 1, stringArray0, 134, stringArray0);
      Edge edge0 = new Edge();
      int int0 = methodWriter0.getSize();
      assertEquals(53, int0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimeVisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "RuntimeVisibleAnnotations", "Vk'Az()n?&Ve", "RuntimeVisibleAnnotations", stringArray0, true, false);
      methodWriter0.visitIntInsn(187, 191);
      Integer integer0 = new Integer(1);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitFrame(369, 187, stringArray0, 2, stringArray0);
      methodWriter1.getSize();
      Attribute attribute0 = new Attribute("1&-rBwO");
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        methodWriter1.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(97);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimeVisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "RuntimeVisibleAnnotations", "Vk'Az()n?&Ve", "RuntimeVisibleAnnotations", stringArray0, true, false);
      Integer integer0 = new Integer((-1847364913));
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.visitFrame(3, 97, stringArray0, 285212673, stringArray0);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(85);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimeVisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1146, "Signature", "RuntimeVisibleAnnotations", "R&_.]", stringArray0, false, false);
      Object[] objectArray0 = new Object[3];
      objectArray0[0] = (Object) classWriter0;
      objectArray0[1] = (Object) "Vk'Az()n?&Ve";
      objectArray0[2] = (Object) classWriter0;
      methodWriter0.visitFrame(32, 32, objectArray0, 79, objectArray0);
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ">", "Vk'Az()n?&Ve", ">", stringArray0, true, false);
      int int0 = Frame.ARRAY_OF;
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitFieldInsn(1, ">", ">", "C)oO");
      classWriter0.newFieldItem("Vk'Az()n?&Ve", "Vk'Az()n?&Ve", "Vk'Az()n?&Ve");
      String[] stringArray1 = new String[0];
      classWriter0.visitMethod(268435456, "J,h5[OV", "java/lang/Class", ">", stringArray1);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("java/lang/Class", "J,h5[OV", ">", label0, label0, 1);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitVarInsn(83, 1);
      methodWriter1.visitLineNumber(1, label0);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(848);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ">";
      classWriter0.newInteger(848);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "Exceptions", ">", ">", stringArray0, false, false);
      int int0 = Type.OBJECT;
      methodWriter0.visitEnd();
      methodWriter0.visitVarInsn(2, 989);
      methodWriter0.visitFrame(0, 0, stringArray0, (-3937), stringArray0);
      methodWriter0.getSize();
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(44);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "qF";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "qF", "Vk'Az()n?&Ve", "qF", stringArray0, true, false);
      methodWriter0.visitFieldInsn(1, "qF", "qF", "C)oO");
      methodWriter0.visitTypeInsn(2, "Vk'Az()n?&Ve");
      methodWriter0.visitVarInsn(22, 22);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(89);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "RuntimeVisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "RuntimeVisibleAnnotations", "Vk'Az()n?&Ve", "RuntimeVisibleAnnotations", stringArray0, true, false);
      int int0 = Type.BOOLEAN;
      methodWriter0.visitTypeInsn(187, "ghorMt");
      Integer integer0 = new Integer(1);
      methodWriter0.visitVarInsn(187, (-1330));
      methodWriter0.visitInsn(68);
      methodWriter0.visitFieldInsn(68, "ghorMt", "RuntimeVisibleAnnotations", "Dlb1|O9QD'R");
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25165824);
      String string0 = "RuntimeVisibleAnnotations";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1), "_D&Mo$Y5AgNKn.a:Y", "_D&Mo$Y5AgNKn.a:Y", "RuntimeVisibleAnnotations", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector(2);
      byteVector0.putLong(2);
      methodWriter0.put(byteVector0);
      methodWriter0.visitVarInsn(172, 33);
      int int0 = 91;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), (-1), (Object[]) null, 91, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(25165824);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1), "_D&Mo$Y5AgNKn.a:Y", "_D&Mo$Y5AgNKn.a:Y", "RuntimeVisibleAnnotations", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector(2);
      methodWriter0.put(byteVector0);
      methodWriter0.visitVarInsn(172, 33);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), (-1), (Object[]) null, 91, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      classWriter0.visitSource(" >]U'~", " >]U'~");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "s";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 83, "C", "Vk'Az()n?&Ve", "s", stringArray0, true, false);
      methodWriter0.visitFieldInsn(180, "s", "Vk'Az()n?&Ve", "Ljava/lang/Synthetic;");
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitFieldInsn(184, "C", "C", "C");
      int int0 = methodWriter0.getSize();
      assertEquals(56, int0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      classWriter0.visitSource(" >]U'~", " >]U'~");
      String[] stringArray0 = new String[1];
      stringArray0[0] = "s";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 83, "C", "Vk'Az()n?&Ve", "s", stringArray0, true, false);
      methodWriter0.visitFieldInsn(180, "s", "Vk'Az()n?&Ve", "CJ");
      int int0 = methodWriter0.getSize();
      assertEquals(47, int0);
  }
}
