/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 03:18:53 GMT 2018
 */

package umd.cs.shop;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayReader;
import java.io.PipedReader;
import java.io.Reader;
import java.io.StreamTokenizer;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import umd.cs.shop.JSJshopVars;
import umd.cs.shop.JSPredicateForm;
import umd.cs.shop.JSSubstitution;
import umd.cs.shop.JSTerm;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSPredicateForm_ESTest extends JSPredicateForm_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(pipedReader0);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(streamTokenizer0);
        fail("Expecting exception: System.SystemExitException");
      
      } catch(System.SystemExitException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.addElement("j8");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Object object0 = new Object();
      jSSubstitution0.add(object0);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      JSJshopVars.backquote = (-2707);
      jSPredicateForm0.matches(jSPredicateForm1);
      JSPredicateForm jSPredicateForm2 = jSPredicateForm1.standarizerPredicateForm();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution1.print();
      JSSubstitution jSSubstitution2 = jSPredicateForm0.matches(jSPredicateForm2, jSSubstitution1);
      assertFalse(jSSubstitution2.fail());
      
      boolean boolean0 = jSPredicateForm0.equals(jSPredicateForm2);
      assertTrue(boolean0);
      
      JSPredicateForm jSPredicateForm3 = jSPredicateForm1.clonePF();
      JSPredicateForm jSPredicateForm4 = jSPredicateForm1.applySubstitutionPF(jSSubstitution0);
      assertNotSame(jSPredicateForm1, jSPredicateForm2);
      assertNotSame(jSPredicateForm1, jSPredicateForm3);
      assertNotSame(jSPredicateForm4, jSPredicateForm0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSTerm jSTerm0 = new JSTerm();
      jSTerm0.equals((JSPredicateForm) null);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("Operator name expected");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.addElement("");
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.clonePF();
      boolean boolean0 = jSPredicateForm0.equals(jSPredicateForm1);
      assertTrue(boolean0);
      assertNotSame(jSPredicateForm1, jSPredicateForm0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.addElement("/*E!PLpqu<{ x0?Qf");
      jSPredicateForm0.equals(jSPredicateForm0);
      JSPredicateForm jSPredicateForm1 = null;
      try {
        jSPredicateForm1 = new JSPredicateForm("/*E!PLpqu<{ x0?Qf");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.print();
      char[] charArray0 = new char[1];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0, '\u0000', 1);
      StreamTokenizer streamTokenizer0 = new StreamTokenizer(charArrayReader0);
      streamTokenizer0.parseNumbers();
      JSPredicateForm jSPredicateForm1 = new JSPredicateForm((String) null);
      assertEquals("[]", jSPredicateForm1.toString());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.addElement("j8");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      JSJshopVars.backquote = (-2707);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.standarizerPredicateForm();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      jSSubstitution1.print();
      jSPredicateForm0.matches(jSPredicateForm1, jSSubstitution1);
      jSPredicateForm0.equals(jSPredicateForm1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jSPredicateForm0.toStr();
      jSPredicateForm0.toStr();
      StreamTokenizer streamTokenizer0 = null;
      try {
        streamTokenizer0 = new StreamTokenizer((Reader) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StreamTokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = new JSPredicateForm();
      jSPredicateForm0.addElement("j8");
      JSSubstitution jSSubstitution0 = new JSSubstitution();
      Object object0 = new Object();
      jSSubstitution0.add(object0);
      JSPredicateForm jSPredicateForm1 = jSPredicateForm0.applySubstitutionPF(jSSubstitution0);
      jSPredicateForm0.print();
      JSJshopVars.backquote = (-2707);
      jSPredicateForm0.matches(jSPredicateForm1);
      jSPredicateForm1.standarizerPredicateForm();
      JSSubstitution jSSubstitution1 = new JSSubstitution();
      Object object1 = new Object();
      jSSubstitution1.remove(object1);
      jSSubstitution1.print();
      JSSubstitution jSSubstitution2 = new JSSubstitution();
      JSPredicateForm jSPredicateForm2 = null;
      try {
        jSPredicateForm2 = new JSPredicateForm("#;hDFpt");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(" (t");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm(" (-Ft");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      JSPredicateForm jSPredicateForm0 = null;
      try {
        jSPredicateForm0 = new JSPredicateForm("(mk,Pelz22d+ DuYL@");
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("umd.cs.shop.JSPredicateForm", e);
      }
  }
}
