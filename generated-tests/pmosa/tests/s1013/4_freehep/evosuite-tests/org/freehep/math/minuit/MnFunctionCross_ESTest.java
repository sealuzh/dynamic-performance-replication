/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 00:48:20 GMT 2018
 */

package org.freehep.math.minuit;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.freehep.math.minuit.FCNBase;
import org.freehep.math.minuit.MnCross;
import org.freehep.math.minuit.MnFunctionCross;
import org.freehep.math.minuit.MnStrategy;
import org.freehep.math.minuit.MnUserParameterState;
import org.freehep.math.minuit.MnUserParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MnFunctionCross_ESTest extends MnFunctionCross_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(0.2190691496059075, 0.2190691496059075, 0.2190691496059075, 0.2190691496059075, 0.2190691496059075).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 0.2190691496059075, mnStrategy0, 0.2190691496059075);
      mnUserParameterState0.add(") Vv4I", 0.2190691496059075, 0.5, 0.2190691496059075, 0.5);
      int[] intArray0 = new int[1];
      double[] doubleArray0 = new double[10];
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.2190691496059075, (-3172));
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(2038.729, 10.501492331035351, 2038.729, 10.501492331035351, 2038.729).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 10.501492331035351, mnStrategy0, 10.501492331035351);
      mnUserParameterState0.add("rCD9^", 10.501492331035351, 2038.729, 10.501492331035351, 2038.729);
      int[] intArray0 = new int[0];
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, (double[]) null, (double[]) null, 2038.729, 85);
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(0.2190691496059075, 0.2190691496059075, 0.2190691496059075, 0.2190691496059075, 0.2190691496059075).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 0.2190691496059075, mnStrategy0, 0.2190691496059075);
      mnUserParameterState0.add("MnFuctnCrosspro}l;m 1", 0.5, 0.5, 0.2190691496059075, 0.5);
      int[] intArray0 = new int[1];
      double[] doubleArray0 = new double[4];
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 535, 535);
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 1.0;
      doubleArray0[1] = 2701.798;
      doubleArray0[2] = 898.377854;
      double double0 = 8.0;
      doubleArray0[3] = 8.0;
      doubleArray0[4] = 0.0;
      double double1 = 0.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-2083.2795994086);
      double double2 = 2.0;
      doubleArray0[7] = 2.0;
      doubleArray0[8] = 484.3366;
      MnUserParameters mnUserParameters0 = new MnUserParameters(doubleArray0, doubleArray0);
      MnUserParameters mnUserParameters1 = mnUserParameters0.clone();
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(mnUserParameters1);
      MnStrategy mnStrategy0 = new MnStrategy();
      double double3 = (-1853.16);
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 2.0, mnStrategy0, (-1853.16));
      int[] intArray0 = new int[5];
      int int0 = 0;
      double double4 = 1270.776914;
      // Undeclared exception!
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 1270.776914, 0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(0.2190691, 0.2190691, 0.2190691, 0.2190691, 0.2190691).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 0.2190691, mnStrategy0, 0.2190691);
      mnUserParameterState0.add("MnFuc4nCrvssUro}lem e", 0.2190691, 0.319734069886344, 0.2190691, 0.319734069886344);
      int[] intArray0 = new int[1];
      double[] doubleArray0 = new double[2];
      doubleArray0[0] = 0.2190691;
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.319734069886344, 0);
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 2.0, mnStrategy0, 1069.7);
      int[] intArray0 = new int[1];
      mnUserParameterState0.add("4|^NM2-X'M", 0.5, 1805.2565200044, 4.0, 0.0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 779.77677;
      doubleArray0[1] = 1069.7;
      doubleArray0[2] = 2.0;
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.1, 1690);
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(0.2190691496059075, 0.2190691496059075, 0.2190691496059075, 0.2190691496059075, 0.2190691496059075).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 0.2190691496059075, mnStrategy0, 0.2190691496059075);
      mnUserParameterState0.add("MnFuctionCrossIpro}lem 1", 0.5, 0.5, 0.2190691496059075, 0.5);
      int[] intArray0 = new int[1];
      double[] doubleArray0 = new double[11];
      doubleArray0[0] = 0.2190691496059075;
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.0, (-4368));
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn((-0.9948703267987837), (-0.9948703267987837), 0.3, 0.1, 3.0).when(fCNBase0).valueOf(any(double[].class));
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 1.0;
      doubleArray0[1] = 2701.798;
      doubleArray0[2] = 898.377854;
      doubleArray0[3] = 8.0;
      doubleArray0[4] = 0.0;
      doubleArray0[5] = 0.0;
      doubleArray0[6] = (-2083.2795994086);
      doubleArray0[7] = 2.0;
      doubleArray0[8] = 484.3366;
      MnUserParameters mnUserParameters0 = new MnUserParameters(doubleArray0, doubleArray0);
      MnUserParameters mnUserParameters1 = mnUserParameters0.clone();
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState(mnUserParameters1);
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 2.0, mnStrategy0, (-1853.16));
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = 0;
      double[] doubleArray1 = new double[0];
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray1, (-1860.7), 0);
      // Undeclared exception!
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 8.0, 0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(0.2190691496059075, 0.2190691496059075, 0.2190691496059075, 0.2190691496059075, 0.2190691496059075).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 0.2190691496059075, mnStrategy0, 0.2190691496059075);
      mnUserParameterState0.add("MnFuctnCrosspro}lem 1", 0.5, 0.5, 0.2190691496059075, 0.5);
      int[] intArray0 = new int[0];
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, (double[]) null, (double[]) null, 0.5, 518);
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn((-0.5), (-0.5), (-0.5), (-0.5), (-0.5)).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 2.0, mnStrategy0, 1069.7);
      int[] intArray0 = new int[1];
      mnUserParameterState0.add("4|^NM2-X'M", 0.5, 1805.2565200044, 4.0, 0.0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 1069.7;
      doubleArray0[2] = 2.0;
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, (-0.5), 1690);
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 2.0, mnStrategy0, 1069.7);
      int[] intArray0 = new int[1];
      mnUserParameterState0.add("4|^NM2-X'M", 0.5, 1805.2565200044, 4.0, 0.0);
      double[] doubleArray0 = new double[3];
      FCNBase fCNBase1 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(fCNBase1).valueOf(any(double[].class));
      MnFunctionCross mnFunctionCross1 = new MnFunctionCross(fCNBase1, mnUserParameterState0, 1690, mnStrategy0, 2.0);
      double[] doubleArray1 = new double[5];
      doubleArray1[0] = 0.1;
      doubleArray1[1] = 1069.7;
      doubleArray1[2] = 1069.7;
      MnCross mnCross0 = mnFunctionCross1.cross(intArray0, doubleArray1, doubleArray0, 0.1, 1690);
      doubleArray1[3] = 0.1;
      doubleArray1[4] = 0.5;
      MnCross mnCross1 = mnFunctionCross1.cross(intArray0, doubleArray1, doubleArray0, 1069.7, 2147482736);
      assertFalse(mnCross1.equals((Object)mnCross0));
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn((-100.0), (-100.0), (-100.0), (-100.0), (-100.0)).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, (-100.0), mnStrategy0, (-100.0));
      mnUserParameterState0.add("MnFuctnCrosspro}l;m 1", 0.5, 0.5, (-100.0), 0.5);
      int[] intArray0 = new int[1];
      double[] doubleArray0 = new double[4];
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 534, 534);
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, (-3.7300792530277556), mnStrategy0, (-3.7300792530277556));
      mnUserParameterState0.add("MnFuctionCrossIpro}lem 1", 0.5, 0.5, (-3.7300792530277556), 0.5);
      int[] intArray0 = new int[1];
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-100.0);
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, (-3.7300792530277556), 2146683317);
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 2.0, mnStrategy0, 1069.7);
      int[] intArray0 = new int[1];
      mnUserParameterState0.add("4|^NM2-X'M", 0.5, 1805.2565200044, 4.0, 0.0);
      double[] doubleArray0 = new double[3];
      FCNBase fCNBase1 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 779.77677, 0.5, 1805.2565200044, 4.0).when(fCNBase1).valueOf(any(double[].class));
      MnFunctionCross mnFunctionCross1 = new MnFunctionCross(fCNBase1, mnUserParameterState0, 2.0, mnStrategy0, 1069.7);
      double[] doubleArray1 = new double[5];
      doubleArray0[0] = (-1.0);
      doubleArray1[1] = 1805.2565200044;
      doubleArray1[2] = 0.5;
      doubleArray1[3] = 2.0;
      doubleArray1[4] = 779.77677;
      MnCross mnCross0 = mnFunctionCross1.cross(intArray0, doubleArray1, doubleArray0, 0.5, 1690);
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(2276.3, 2.0, (-1800.62), 6.6000000000000005, 2276.3).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 2.0, mnStrategy0, 1069.7);
      int[] intArray0 = new int[1];
      mnUserParameterState0.add("4|^NM2-X'M", 0.5, 1805.2565200044, 4.0, 0.0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 779.77677;
      doubleArray0[1] = 1069.7;
      doubleArray0[2] = 2.0;
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.1, 1690);
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(2276.3, 2276.3, (-1800.62), 6.6000000000000005, 2276.3).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 2.0, mnStrategy0, 1069.7);
      int[] intArray0 = new int[1];
      mnUserParameterState0.add("", 0.5, 1069.7, 0.5093111355296003, (-0.1439704809835639));
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (-1800.62);
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.5093111355296003, 1690);
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn((-0.5), (-0.5), (-0.5), (-0.5), (-0.5)).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, (-0.5), mnStrategy0, (-0.5));
      mnUserParameterState0.add("MnFunctionCross problem 1", 2.0, 2.0, (-0.5), 0.5);
      int[] intArray0 = new int[0];
      double[] doubleArray0 = new double[1];
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.5, 538);
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(2276.3, 2.0, (-1800.62), 6.6000000000000005, 2276.3).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 2.0, mnStrategy0, 1069.7);
      mnUserParameterState0.add("r$D9^3yUs", (-1800.62), 0.0, (-1154.8825), 0.02);
      int[] intArray0 = new int[0];
      mnFunctionCross0.cross(intArray0, (double[]) null, (double[]) null, 0.5, 43);
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, (double[]) null, (double[]) null, (-1154.8825), (-1219518141));
      MnCross mnCross1 = mnFunctionCross0.cross(intArray0, (double[]) null, (double[]) null, (-2685.0), (-1219518141));
      assertFalse(mnCross1.equals((Object)mnCross0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(2038.729, 2.920154917903278, 2038.729, 2.920154917903278, 2038.729).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 2.920154917903278, mnStrategy0, 2.920154917903278);
      mnUserParameterState0.add("r$D9^3U", 2.920154917903278, 0.0, 2.920154917903278, 0.0);
      int[] intArray0 = new int[0];
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, (double[]) null, (double[]) null, 0.0, 85);
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(2276.3, 2.0, 2276.3, 2.0, 2276.3).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 2.0, mnStrategy0, 1064.2406667329833);
      mnUserParameterState0.add("r$D9^3U", 2.0, 0.0, 2.0, (-1.5060630228968885));
      int[] intArray0 = new int[0];
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, (double[]) null, (double[]) null, 0.5, 2063);
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(2038.729, 2.920154917903278, 2038.729, 2.920154917903278, 2038.729).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 2.920154917903278, mnStrategy0, 1065.1044817130578);
      mnUserParameterState0.add("r$D9^3U", 2.920154917903278, 0.0, 2.920154917903278, 0.0);
      int[] intArray0 = new int[0];
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, (double[]) null, (double[]) null, 1.6235444276639521E-4, 427);
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(2276.3, 2.0, (-1800.62), 6.6000000000000005, 2276.3).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 2.0, mnStrategy0, 1069.7);
      mnUserParameterState0.add("r$D9^3yUs", (-1800.62), 0.0, (-1154.8825), 0.02);
      int[] intArray0 = new int[0];
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, (double[]) null, (double[]) null, (-311.8796459), 734);
      assertNotNull(mnCross0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, (-0.5), mnStrategy0, (-0.5));
      int[] intArray0 = new int[20];
      double double0 = 0.5;
      mnUserParameterState0.add("hqk]-", 0.5, 0.5, (-0.5), 0.0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-0.5);
      mnUserParameterState0.setUpperLimit("hqk]-", 4614.7627033);
      int int0 = 2;
      // Undeclared exception!
      try { 
        mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, (-2149.527), 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.freehep.math.minuit.MnFunctionCross", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 2.2097231143054623, mnStrategy0, 2.2097231143054623);
      int[] intArray0 = new int[20];
      mnUserParameterState0.add("hqk]]", 0.5, 0.5, 2.2097231143054623, 0.3945031555902817);
      mnUserParameterState0.setLowerLimit("hqk]]", 0.5);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 2.2097231143054623;
      // Undeclared exception!
      try { 
        mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 1707.2216503366, 35);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.freehep.math.minuit.MnFunctionCross", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      mnUserParameterState0.add("MnFuc4nCrvssUro}lem e", 0.2190691, 0.5, 0.2190691, 0.5);
      int[] intArray0 = new int[1];
      double[] doubleArray0 = new double[1];
      double[] doubleArray1 = new double[2];
      doubleArray1[0] = 0.2190691;
      double[] doubleArray2 = new double[7];
      doubleArray1[1] = (double) (-2395);
      doubleArray2[1] = (-9.088928361428562E7);
      doubleArray2[2] = (double) (-2395);
      FCNBase fCNBase1 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(1410.993881591, (-2395.0), (-9.088928361428562E7), (-2395.0), (-2395.0)).when(fCNBase1).valueOf(any(double[].class));
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase1, mnUserParameterState0, (-135.1), mnStrategy0, -0.0);
      // Undeclared exception!
      try { 
        mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray2, (-9.088928361428562E7), 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.freehep.math.minuit.MnFunctionCross", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(0.2190691496059075, 0.2190691496059075, 0.2190691496059075, 0.2190691496059075, 0.2190691496059075).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 0.2190691496059075, mnStrategy0, 0.2190691496059075);
      FCNBase fCNBase1 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0, 0.0, 0.0, 0.0).when(fCNBase1).valueOf(any(double[].class));
      MnFunctionCross mnFunctionCross1 = new MnFunctionCross(fCNBase1, mnUserParameterState0, 0.2190691496059075, mnStrategy0, Double.POSITIVE_INFINITY);
      mnUserParameterState0.add("", 1.0, 4.0E-7, 3049.6481812675, 3170.244648945);
      int[] intArray0 = new int[0];
      double[] doubleArray0 = new double[1];
      doubleArray0[0] = (double) 432;
      int int0 = 7;
      mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, Double.POSITIVE_INFINITY, 7);
      // Undeclared exception!
      try { 
        mnFunctionCross1.cross(intArray0, doubleArray0, doubleArray0, 0.5, 432);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.freehep.math.minuit.MnFunctionCross", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(2276.3, 0.9572633352374225, 2276.3, 0.9572633352374225, 2276.3).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 0.9572633352374225, mnStrategy0, 1064.2406667329833);
      mnUserParameterState0.add("r$19^3yU|", 0.9572633352374225, 0.0, 0.9572633352374225, (-13.854937642337806));
      int[] intArray0 = new int[0];
      mnUserParameterState0.fix("r$19^3yU|");
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, (double[]) null, (double[]) null, 0.0, 933);
      mnFunctionCross0.cross(intArray0, (double[]) null, (double[]) null, (-13.854937642337806), 2063);
      mnFunctionCross0.cross(intArray0, (double[]) null, (double[]) null, (-13.854937642337806), 3);
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = (double) 933;
      doubleArray0[1] = (-13.854937642337806);
      doubleArray0[2] = 2276.3;
      doubleArray0[3] = 4.946383083291037E15;
      doubleArray0[4] = (double) 933;
      doubleArray0[5] = (double) 3;
      MnCross mnCross1 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.1, 15);
      assertFalse(mnCross1.equals((Object)mnCross0));
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FCNBase fCNBase0 = mock(FCNBase.class, new ViolatedAssumptionAnswer());
      doReturn(1554.88937915, 1554.88937915, 1977.313, 1977.313, 1977.313).when(fCNBase0).valueOf(any(double[].class));
      MnUserParameterState mnUserParameterState0 = new MnUserParameterState();
      MnStrategy mnStrategy0 = new MnStrategy();
      MnFunctionCross mnFunctionCross0 = new MnFunctionCross(fCNBase0, mnUserParameterState0, 2.0, mnStrategy0, 1069.7);
      int[] intArray0 = new int[1];
      mnUserParameterState0.add("4|^NM2-X'M", 0.5, 1805.2565200044, 4.0, 0.0);
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = 779.77677;
      doubleArray0[1] = 1069.7;
      doubleArray0[2] = 2.0;
      MnCross mnCross0 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 0.1, 1690);
      MnCross mnCross1 = mnFunctionCross0.cross(intArray0, doubleArray0, doubleArray0, 2.0, 1690);
      assertFalse(mnCross1.equals((Object)mnCross0));
  }
}
