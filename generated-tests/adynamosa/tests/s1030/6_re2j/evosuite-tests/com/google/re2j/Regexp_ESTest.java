/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 00:31:23 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Regexp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Regexp_ESTest extends Regexp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals((Object) null);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.max = 5;
      regexp1.name = "|YT:'";
      regexp1.equals(regexp0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = (-1059);
      Regexp.Op.values();
      int int0 = regexp0.maxCap();
      assertEquals((-1059), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp1.equals(regexp0);
      assertTrue(boolean0);
      
      regexp0.flags = 917;
      regexp0.toString();
      regexp1.toString();
      assertFalse(regexp1.equals((Object)regexp0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.equals(regexp0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.op = regexp_Op0;
      Regexp regexp2 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[1];
      regexpArray0[0] = regexp2;
      regexp2.subs = regexpArray0;
      regexp2.subs = regexpArray0;
      regexp0.equals(regexp2);
      regexp0.maxCap();
      Regexp regexp3 = new Regexp(regexp_Op0);
      regexp3.maxCap();
      Regexp.Op regexp_Op1 = Regexp.Op.PLUS;
      Regexp regexp4 = new Regexp(regexp_Op1);
      // Undeclared exception!
      try { 
        regexp4.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals("Hyphen");
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 3;
      regexp1.equals(regexp0);
      regexp1.maxCap();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      int[] intArray0 = new int[6];
      regexp0.runes = intArray0;
      regexp0.runes = intArray0;
      Regexp regexp1 = new Regexp(regexp0);
      String string0 = regexp1.toString();
      assertEquals("[\\x00\\x00\\x00]", string0);
      
      Regexp regexp2 = new Regexp(regexp1);
      Regexp.Op regexp_Op1 = Regexp.Op.LITERAL;
      Regexp regexp3 = new Regexp(regexp_Op1);
      Regexp regexp4 = new Regexp(regexp3);
      boolean boolean0 = regexp2.equals(regexp4);
      assertFalse(boolean0);
      assertTrue(regexp1.equals((Object)regexp0));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.equals(regexp0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 2659;
      boolean boolean0 = regexp1.equals(regexp0);
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      regexp0.toString();
      Object object0 = new Object();
      boolean boolean1 = regexp1.equals(object0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[0];
      regexp0.runes = intArray0;
      regexp0.cap = 956;
      regexp0.min = 956;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals((Object) null);
      regexp1.max = 0;
      Object object0 = new Object();
      regexp1.equals(object0);
      regexp_Op0.isPseudo();
      Regexp regexp2 = new Regexp(regexp0);
      regexp2.cap = (-545);
      Regexp.Op.values();
      Regexp regexp3 = new Regexp(regexp0);
      regexp2.equals(regexp3);
      // Undeclared exception!
      try { 
        regexp3.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.flags = 566;
      regexp1.equals(regexp0);
      String string0 = regexp1.name;
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.flags = 206;
      regexp0.name = "Z";
      regexp0.equals(regexp1);
      regexp1.toString();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.name = "MCV;-.1XE^^Q)kc";
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 9471;
      regexp0.equals(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.equals(regexp1);
      regexp1.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[1];
      intArray0[0] = 4347;
      regexp1.runes = intArray0;
      int[] intArray1 = new int[3];
      intArray1[0] = 4347;
      intArray1[1] = 4347;
      intArray1[2] = 4347;
      regexp1.runes = intArray1;
      regexp1.flags = 4347;
      regexp1.toString();
      regexp1.maxCap();
      regexp1.maxCap();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Object object0 = new Object();
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp0);
      boolean boolean0 = regexp1.equals(regexp2);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[7];
      intArray0[0] = 64829;
      intArray0[1] = 20;
      intArray0[2] = (-187);
      intArray0[3] = 186;
      intArray0[4] = (-1106);
      intArray0[5] = 1864;
      regexp0.cap = (-1272);
      intArray0[6] = 20;
      regexp0.runes = intArray0;
      regexp0.toString();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      Regexp.Op[] regexp_OpArray1 = Regexp.Op.values();
      assertFalse(regexp_OpArray1.equals((Object)regexp_OpArray0));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[0];
      regexp0.runes = intArray0;
      regexp0.runes = intArray0;
      regexp0.toString();
      Regexp.Op.values();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[0];
      regexp0.runes = intArray0;
      regexp0.runes = intArray0;
      regexp0.toString();
      Regexp.Op.values();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = (-588);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = (-588);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.toString();
      regexp0.max = 12315;
      regexp1.equals(regexp2);
      regexp1.op = regexp_Op0;
      regexp2.toString();
      regexp2.equals(regexp1);
      regexp1.equals(regexp2);
      regexp2.toString();
      regexp2.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("(?:)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.(?:)
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      Regexp regexp2 = new Regexp(regexp1);
      regexp1.equals(regexp2);
      Regexp regexp3 = new Regexp(regexp2);
      regexp0.equals("B&|g");
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      String string0 = regexp2.name;
      Regexp.Op.values();
      regexp3.toString();
      Regexp.Op[] regexp_OpArray1 = Regexp.Op.values();
      assertFalse(regexp_OpArray1.equals((Object)regexp_OpArray0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.max = (-2211);
      regexp1.equals(regexp0);
      Regexp.Op.values();
      Regexp.Op.values();
      regexp1.cap = 93;
      regexp1.reinit();
      Object object0 = new Object();
      regexp1.equals(object0);
      regexp0.op = regexp_Op0;
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      Regexp.Op.values();
      regexp0.equals(object0);
      Regexp.Op[] regexp_OpArray1 = Regexp.Op.values();
      assertFalse(regexp_OpArray1.equals((Object)regexp_OpArray0));
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.op = regexp_Op0;
      regexp0.toString();
      regexp0.min = 18;
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.flags = 18;
      Regexp.Op.values();
      regexp0.toString();
      Regexp.Op.values();
      Regexp.Op.values();
      regexp0.maxCap();
      regexp0.equals("(?s:.)");
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      Regexp.Op.values();
      regexp0.equals(object0);
      Object object1 = new Object();
      boolean boolean0 = regexp0.equals(object1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[0];
      regexp0.runes = intArray0;
      regexp0.cap = 956;
      regexp0.min = 956;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals((Object) null);
      regexp1.max = 0;
      Object object0 = new Object();
      regexp1.equals(object0);
      regexp_Op0.isPseudo();
      Regexp regexp2 = new Regexp(regexp0);
      Regexp regexp3 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp2.equals(regexp3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp0.equals(regexp0);
      Regexp regexp1 = new Regexp(regexp0);
      Object object0 = new Object();
      Regexp regexp2 = new Regexp(regexp_Op0);
      boolean boolean1 = regexp2.equals(regexp_Op0);
      assertFalse(boolean1);
      
      boolean boolean2 = regexp_Op0.isPseudo();
      assertTrue(boolean2 == boolean0);
      
      regexp1.toString();
      Regexp.Op.values();
      regexp1.maxCap();
      regexp0.maxCap();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[0];
      regexp0.runes = intArray0;
      regexp0.cap = 956;
      regexp0.min = 956;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals((Object) null);
      regexp0.min = 956;
      regexp1.max = 0;
      int int0 = regexp1.maxCap();
      assertEquals(956, int0);
      
      Regexp.Op regexp_Op1 = Regexp.Op.REPEAT;
      Regexp regexp2 = new Regexp(regexp_Op1);
      boolean boolean0 = regexp1.equals(regexp2);
      Object object0 = new Object();
      boolean boolean1 = regexp2.equals(object0);
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op.values();
      regexp1.reinit();
      int[] intArray0 = new int[6];
      intArray0[0] = 14;
      intArray0[1] = 4028;
      intArray0[2] = 1016;
      intArray0[3] = (-2277);
      intArray0[4] = 2187;
      intArray0[5] = 15;
      regexp0.runes = intArray0;
      Regexp.Op.values();
      regexp0.equals(regexp1);
      int int0 = regexp0.cap;
      Regexp regexp2 = new Regexp(regexp0);
      regexp2.equals(regexp_Op0);
      regexp2.maxCap();
      int int1 = regexp2.maxCap();
      assertTrue(regexp0.equals((Object)regexp2));
      assertFalse(regexp0.equals((Object)regexp1));
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.equals(regexp_Op0);
      regexp1.reinit();
      Object object1 = new Object();
      boolean boolean0 = regexp1.equals("");
      Regexp.Op.values();
      Object object2 = new Object();
      regexp1.equals(regexp_Op0);
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
      
      boolean boolean1 = regexp0.equals(regexp1);
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.flags = (-769);
      boolean boolean0 = regexp0.equals(regexp0);
      boolean boolean1 = regexp0.equals(regexp_Op0);
      assertFalse(boolean1 == boolean0);
      
      String string0 = regexp0.name;
      regexp0.name = "";
      Regexp.Op.values();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[2];
      Regexp regexp1 = new Regexp(regexp0);
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp0;
      regexp0.subs = regexpArray0;
      Regexp regexp2 = new Regexp(regexp0);
      regexp2.max = 0;
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        regexp0.equals(regexp2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp0);
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp[] regexpArray0 = new Regexp[2];
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp1;
      regexp0.subs = regexpArray0;
      regexp1.name = "Lydian";
      Regexp.Op.values();
      Object object0 = new Object();
      regexp1.toString();
      regexp1.equals(object0);
      regexp0.maxCap();
      regexp1.toString();
      regexp0.toString();
      regexp1.equals((Object) null);
      regexp0.toString();
      regexp1.maxCap();
      regexp1.reinit();
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      Object object0 = new Object();
      boolean boolean0 = regexp1.equals(object0);
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp regexp2 = new Regexp(regexp0);
      Regexp regexp3 = new Regexp(regexp_Op0);
      boolean boolean1 = regexp2.equals(regexp3);
      assertFalse(boolean1 == boolean0);
      
      int int0 = regexp2.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 1;
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 1;
      intArray0[3] = 1;
      intArray0[4] = 40;
      intArray0[5] = 1;
      intArray0[6] = 2092;
      intArray0[7] = 1;
      intArray0[8] = (-3165);
      regexp1.runes = intArray0;
      Regexp regexp2 = new Regexp(regexp_Op0);
      Regexp regexp3 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp3.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals("");
      Regexp.Op.values();
      Object object0 = new Object();
      String string0 = regexp1.toString();
      assertEquals("(?:)", string0);
      
      regexp1.equals(")H[{gGP7JBls(A^)A?");
      Regexp.Op.values();
      regexp1.equals((Object) null);
      boolean boolean0 = regexp0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op.values();
      regexp1.op = regexp_Op0;
      Regexp regexp2 = new Regexp(regexp_Op0);
      Regexp regexp3 = new Regexp(regexp1);
      regexp2.equals(regexp3);
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      boolean boolean0 = regexp0.equals(regexp0);
      Regexp.Op.values();
      Regexp.Op.values();
      boolean boolean1 = regexp0.equals(regexp_Op0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = (-588);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.min = 3;
      boolean boolean0 = regexp1.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      regexp1.max = 0;
      Regexp regexp2 = new Regexp(regexp1);
      regexp1.equals(regexp2);
      regexp1.equals(regexp_Op0);
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        regexp2.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = (-588);
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.cap = (-588);
      regexp1.equals(regexp0);
      Regexp.Op.values();
      Object object0 = new Object();
      regexp0.equals(object0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      Regexp regexp2 = new Regexp(regexp_Op0);
      regexp1.equals(regexp2);
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp0);
      regexp1.reinit();
      Regexp[] regexpArray0 = new Regexp[7];
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp1;
      regexpArray0[2] = regexp1;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp1;
      regexp0.max = (-1060);
      Regexp.Op regexp_Op1 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp2 = new Regexp(regexp_Op1);
      regexpArray0[5] = regexp2;
      regexpArray0[6] = regexp0;
      regexp1.subs = regexpArray0;
      regexpArray0[3].cap = 0;
      Regexp regexp3 = new Regexp(regexp0);
      regexpArray0[2].max = (-1791);
      regexp3.name = "";
      regexp3.min = 0;
      regexp3.name = "|";
      regexp2.toString();
      boolean boolean0 = regexp1.equals(regexp3);
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      boolean boolean1 = regexp_Op0.isPseudo();
      assertFalse(boolean1 == boolean0);
      
      regexp1.reinit();
      regexp1.reinit();
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
      assertFalse(regexp1.equals((Object)regexp2));
      
      regexp0.toString();
      Regexp.Op[] regexp_OpArray1 = Regexp.Op.values();
      assertFalse(regexp_OpArray1.equals((Object)regexp_OpArray0));
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.maxCap();
      regexp0.maxCap();
      regexp0.toString();
      regexp0.maxCap();
      regexp_Op0.isPseudo();
      String string0 = "";
      regexp0.name = "";
      regexp0.reinit();
      regexp0.reinit();
      Regexp[] regexpArray0 = new Regexp[0];
      regexp0.max = 0;
      regexp0.subs = regexpArray0;
      regexp0.maxCap();
      regexp0.max = 408;
      regexp0.equals("");
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      Regexp[] regexpArray0 = new Regexp[8];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp1;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp2;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexpArray0[6] = regexp2;
      regexpArray0[7] = regexp1;
      regexp2.subs = regexpArray0;
      regexp1.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("^");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.^
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = (-639);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp1 = new Regexp(regexp_Op1);
      Regexp regexp2 = new Regexp(regexp1);
      regexp0.equals(regexp2);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      regexp1.op = regexp_Op0;
      regexp1.toString();
      Regexp.Op.values();
      boolean boolean0 = regexp0.equals(regexp1);
      assertTrue(boolean0);
      
      regexp0.reinit();
      assertTrue(regexp0.equals((Object)regexp1));
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexp1.name = "";
      regexp1.toString();
      regexp1.name = "A";
      regexp1.cap = 4196;
      regexp1.flags = 4196;
      regexp0.equals(regexp1);
      regexp1.toString();
      regexp_Op1.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = 0;
      regexp0.min = (-586);
      regexp0.maxCap();
      regexp0.maxCap();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      assertTrue(regexp1.equals((Object)regexp0));
      
      regexp1.max = 820;
      regexp1.max = 2874;
      regexp1.name = "";
      regexp1.toString();
      regexp0.toString();
      boolean boolean0 = regexp_Op0.isPseudo();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      regexp1.max = 0;
      regexp1.min = 21;
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[5];
      intArray0[0] = 66204;
      intArray0[1] = (-1901);
      intArray0[2] = 1630;
      intArray0[3] = 0;
      intArray0[4] = 32;
      regexp1.runes = intArray0;
      regexp1.op = regexp_Op0;
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = (-394);
      regexp0.min = 516;
      regexp0.name = "8I";
      regexp0.max = (-1369);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals("8I");
      regexp1.cap = (-1075);
      regexp1.min = (-1369);
      regexp1.max = (-1369);
      regexp0.maxCap();
      regexp0.maxCap();
      regexp0.reinit();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("N\"9i7");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.N\"9i7
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.min = 0;
      regexp1.flags = 2073;
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
      
      regexp0.equals(regexp_Op0);
      regexp0.maxCap();
      boolean boolean0 = regexp0.equals(regexp_Op0);
      assertFalse(boolean0);
      
      regexp1.reinit();
      assertTrue(regexp1.equals((Object)regexp0));
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 216;
      intArray0[2] = 0;
      intArray0[3] = 125;
      intArray0[4] = 0;
      regexp1.runes = intArray0;
      regexp1.reinit();
      Regexp.Op.values();
      regexp0.maxCap();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op1);
      regexp0.reinit();
      int int0 = 1;
      regexp0.flags = 1;
      String string0 = "JPC%m}2q4xc.'!&b";
      regexp_Op0.isPseudo();
      Regexp[] regexpArray0 = new Regexp[1];
      regexpArray0[0] = regexp0;
      regexp0.subs = regexpArray0;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("JPC%m}2q4xc.'!&b");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.JPC%m}2q4xc.'!&b
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      regexp_Op0.isPseudo();
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = 2775;
      regexp0.min = 0;
      regexp0.reinit();
      regexp_Op0.isPseudo();
      regexp0.reinit();
      regexp0.name = "VERTICAL_BAR";
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexp_Op0.isPseudo();
      regexp0.op = regexp_Op0;
      regexp1.min = 0;
      regexp1.toString();
      regexp_Op0.isPseudo();
      regexp0.runes = null;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("km7Nl_aL9GN|J5s");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.km7Nl_aL9GN|J5s
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int int0 = 21;
      regexp0.flags = 21;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.cap = 881;
      regexp0.reinit();
      regexp0.reinit();
      regexp0.toString();
      regexp0.reinit();
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR_NOT_NL;
      regexp0.op = regexp_Op1;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 1755;
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.name = "Avestan";
      regexp2.max = 0;
      regexp1.reinit();
      regexp2.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("(?-s:.)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.(?-s:.)
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.NO_MATCH;
      regexp0.op = regexp_Op1;
      regexp0.cap = (-854);
      regexp0.toString();
      regexp0.toString();
      regexp0.toString();
      regexp0.maxCap();
      boolean boolean0 = regexp0.equals((Object) null);
      assertFalse(boolean0);
      
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      regexp0.toString();
      String string0 = regexp0.toString();
      assertEquals("[^\\x00-\\x{10FFFF}]", string0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.name = "Pf";
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = "";
      regexp0.name = "";
      regexp0.cap = 3507;
      regexp0.flags = 3507;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      regexp1.max = 3507;
      regexp1.min = 0;
      regexp1.cap = (-481);
      regexp1.name = "";
      regexp1.flags = 0;
      regexp0.cap = 3507;
      regexp1.reinit();
      regexp1.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.maxCap();
      regexp0.maxCap();
      Regexp.Op.values();
      regexp0.equals(regexp_Op0);
      String string0 = "ocP5MLZf\\>hZ";
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("ocP5MLZf>hZ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.ocP5MLZf>hZ
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }
}
