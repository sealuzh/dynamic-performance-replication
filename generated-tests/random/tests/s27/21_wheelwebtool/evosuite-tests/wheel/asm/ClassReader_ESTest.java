/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 12:04:19 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Label;
import wheel.asm.MethodWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter((-2593));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.cv = (ClassVisitor) classWriter0;
      classReader0.copyPool(classWriter0);
      // Undeclared exception!
      classReader0.accept((ClassVisitor) classAdapter0, 2);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      char[] charArray0 = new char[7];
      charArray0[0] = ' ';
      charArray0[1] = '9';
      charArray0[2] = 'y';
      charArray0[3] = 'g';
      charArray0[4] = 'n';
      charArray0[5] = 'y';
      charArray0[6] = ' ';
      // Undeclared exception!
      try { 
        classReader0.readConst(11, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter((-2603));
      ClassWriter classWriter1 = null;
      char[] charArray0 = new char[9];
      charArray0[0] = '1';
      charArray0[1] = 'F';
      charArray0[2] = 'Q';
      charArray0[3] = 'h';
      charArray0[4] = '8';
      charArray0[5] = 'Y';
      charArray0[6] = 'a';
      charArray0[7] = '0';
      charArray0[8] = '{';
      // Undeclared exception!
      try { 
        classReader0.readConst(2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 7802);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 9);
      Attribute[] attributeArray0 = new Attribute[3];
      Attribute attribute0 = new Attribute("wheel.asm.MethodWriter");
      attributeArray0[0] = attribute0;
      char[] charArray0 = new char[6];
      charArray0[0] = '?';
      charArray0[1] = ':';
      charArray0[2] = '!';
      charArray0[3] = '#';
      charArray0[4] = 'Y';
      charArray0[5] = 'Q';
      Label[] labelArray0 = new Label[10];
      Label label0 = new Label();
      labelArray0[0] = label0;
      Label label1 = label0.successor;
      labelArray0[1] = null;
      Attribute attribute1 = attribute0.read(classReader0, 9, 2, charArray0, (-1733), labelArray0);
      attributeArray0[1] = attribute1;
      classReader0.getSuperName();
      Attribute attribute2 = attribute1.next;
      attributeArray0[2] = null;
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 9, 7802);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 64077
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      assertEquals(7802, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.cv = (ClassVisitor) classWriter0;
      classReader0.copyPool(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 31);
      int int0 = ClassReader.SKIP_FRAMES;
      String string0 = classReader0.getClassName();
      assertEquals("wheel/asm/MethodWriter", string0);
      
      int int1 = classReader0.readByte(0);
      assertEquals(202, int1);
      
      short short0 = classReader0.readShort(32);
      assertEquals((short) (-9719), short0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
      classReader0.getSuperName();
      classReader0.getSuperName();
      ClassReader classReader1 = new ClassReader("org/apache/commons/io/filefilter/AbstractFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader1, 131072);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 2);
      classReader0.readInt(47);
      classReader0.getSuperName();
      char[] charArray0 = new char[8];
      charArray0[0] = 'P';
      charArray0[1] = 'y';
      charArray0[2] = 'd';
      charArray0[3] = '7';
      charArray0[4] = ',';
      charArray0[5] = '$';
      charArray0[6] = 'i';
      charArray0[7] = 'c';
      // Undeclared exception!
      try { 
        classReader1.readUTF8(38, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "org.apache.commons.io.filefilter.SuffixFileFilter";
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SuffixFileFilter");
      int int0 = (-796);
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-796));
      EvoSuiteFile evoSuiteFile0 = null;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "org.apache.commons.io.filefilter.SuffixFileFilter";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 2, "org.apache.commons.io.filefilter.SuffixFileFilter", "40l8", "/", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter((-2593));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.cv = (ClassVisitor) classWriter0;
      classReader0.copyPool(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 31);
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort(131072);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AgeFileFilter");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      char[] charArray0 = new char[9];
      charArray0[0] = '-';
      charArray0[1] = 'F';
      charArray0[2] = 'm';
      charArray0[3] = '7';
      charArray0[4] = '$';
      classReader0.getInterfaces();
      charArray0[5] = 'R';
      charArray0[6] = 'm';
      charArray0[7] = '-';
      charArray0[8] = '}';
      // Undeclared exception!
      try { 
        classReader0.readByte((-2));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-4);
      byteArray0[1] = (byte)32;
      byteArray0[2] = (byte)108;
      byteArray0[3] = (byte) (-47);
      byteArray0[4] = (byte) (-97);
      byte byte0 = (byte)4;
      byteArray0[5] = (byte)4;
      byteArray0[6] = (byte)92;
      byteArray0[7] = (byte)31;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-4), (byte)92);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter((-2593));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 9);
      assertEquals(32, classReader0.getAccess());
      
      Attribute[] attributeArray0 = new Attribute[3];
      Attribute attribute0 = new Attribute("wheel.asm.MethodWriter");
      attributeArray0[0] = attribute0;
      char[] charArray0 = new char[6];
      charArray0[0] = '?';
      charArray0[1] = ':';
      charArray0[2] = '!';
      charArray0[3] = '#';
      charArray0[4] = 'Y';
      charArray0[5] = 'Q';
      Label[] labelArray0 = new Label[2];
      Label label0 = new Label();
      labelArray0[0] = label0;
      Label label1 = label0.successor;
      labelArray0[1] = null;
      Attribute attribute1 = attribute0.read(classReader0, 9, 2, charArray0, (-1733), labelArray0);
      attributeArray0[1] = attribute1;
      classReader0.getSuperName();
      Attribute attribute2 = attribute1.next;
      attributeArray0[2] = null;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 33);
      assertEquals(2, ClassReader.SKIP_DEBUG);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter((-2593));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 9);
      // Undeclared exception!
      try { 
        classReader0.readByte((-3042));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3042
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte) (-76);
      byteArray0[0] = (byte) (-76);
      byteArray0[1] = (byte) (-13);
      byteArray0[2] = (byte) (-3);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte)76;
      byteArray0[5] = (byte) (-66);
      byteArray0[6] = (byte) (-5);
      byteArray0[7] = (byte)4;
      byteArray0[8] = (byte)11;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-3), 574);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = null;
      int int0 = 247;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((byte[]) null, 247, 104);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-24);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-75);
      byteArray0[1] = (byte) (-25);
      byteArray0[2] = (byte)99;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-75), (-2063));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      int int0 = 92;
      PipedInputStream pipedInputStream0 = new PipedInputStream(92);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter(3448);
      // Undeclared exception!
      try { 
        classReader0.getItem(268435456);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 268435456
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-114);
      byteArray0[0] = (byte) (-114);
      byteArray0[1] = (byte)125;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-114), (byte) (-114));
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(byteArrayInputStream0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ObjectInputStream$PeekInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/Throwable");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "HH%");
      classReader0.readShort(1815);
      classReader0.getSuperName();
      char[] charArray0 = new char[9];
      classReader0.getClassName();
      charArray0[0] = 'q';
      charArray0[1] = '3';
      charArray0[2] = 'd';
      char char0 = 'X';
      charArray0[3] = 'X';
      classReader0.getInterfaces();
      charArray0[4] = '_';
      char char1 = 'w';
      charArray0[5] = 'w';
      charArray0[6] = 'L';
      charArray0[7] = '-';
      char char2 = 'J';
      charArray0[8] = 'J';
      // Undeclared exception!
      try { 
        classReader0.readClass(0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter((-2603));
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) null);
      classAdapter0.cv = (ClassVisitor) classWriter0;
      classReader0.copyPool(classWriter0);
      // Undeclared exception!
      classReader0.accept((ClassVisitor) classAdapter0, 8);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte)33;
      byteArray0[2] = (byte)80;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)112;
      byteArray0[1] = (byte)25;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("visitVarInsn");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }
}
