/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 05 23:04:48 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-5);
      TiffField tiffField0 = new TiffField((byte)0, (-2098), fieldTypeShort0, (byte)119, (byte)119, byteArray0, byteOrder0, (byte) (-5));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(251, int0);
      assertEquals(238, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(119, tiffField0.getOffset());
      assertEquals((-2098), tiffField0.getDirectoryType());
      assertEquals((-5), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1513, 5, fieldTypeRational0.SBYTE, 4L, 1513, byteArray0, byteOrder0, 1513);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1513, tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals(1513, tiffField0.getTag());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(1513, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      CharBuffer charBuffer0 = CharBuffer.allocate(65468);
      ByteOrder byteOrder0 = charBuffer0.order();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(27, (-1913), fieldTypeShort0.FLOAT, 1L, (-1L), byteArray0, byteOrder0, (-1913));
      String string0 = tiffField0.toString();
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (1 Float)", string0);
      assertEquals((-1913), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals((-1913), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(65521, 65521, fieldTypeShort0, 65521, 65521, byteArray0, byteOrder0, 65521);
      tiffField0.dump();
      assertEquals(65521, tiffField0.getTag());
      assertEquals(65521, tiffField0.getSortHint());
      assertEquals(131042, tiffField0.getBytesLength());
      assertEquals(65521, tiffField0.getDirectoryType());
      assertEquals(65521, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1717986918, 1717986918, fieldTypeRational0, 1717986918, 1717986918, byteArray0, byteOrder0, 1717986918);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1717986918, tiffField0.getDirectoryType());
      assertEquals(1717986918, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(1717986918, tiffField0.getOffset());
      assertEquals("", string0);
      assertEquals(858993456, tiffField0.getBytesLength());
      assertEquals(1717986918, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(34675, 2330, fieldTypeAscii0, 2330, 2330, byteArray0, byteOrder0, 34675);
      tiffField0.getValue();
      assertEquals(2330, tiffField0.getBytesLength());
      assertEquals(2330, tiffField0.getDirectoryType());
      assertEquals(34675, tiffField0.getSortHint());
      assertEquals(34675, tiffField0.getTag());
      assertEquals(2330, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1677, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(42035, 42035, fieldTypeRational0, 0L, 7L, byteArray0, byteOrder0, 3157);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(7, tiffField0.getOffset());
      assertEquals((-1), tagInfo0.tag);
      assertEquals(3157, tiffField0.getSortHint());
      assertEquals(42035, tiffField0.getDirectoryType());
      assertEquals(42035, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      char[] charArray0 = new char[8];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2839, (-2304), fieldTypeByte0, 2839, 4L, byteArray0, byteOrder0, (-2304));
      int int0 = tiffField0.getTag();
      assertEquals((-2304), tiffField0.getSortHint());
      assertEquals((-2304), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(2839, int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-299), 1263, fieldTypeRational0, (byte)0, 547L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(1263, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(547, tiffField0.getOffset());
      assertEquals((-299), int0);
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1001, "x9bsHQakgL=");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)25;
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)102;
      byteArray0[4] = (byte)10;
      byteArray0[5] = (byte) (-85);
      TiffField tiffField0 = new TiffField(302, 1227, fieldTypeAscii0, 302, 1227, byteArray0, byteOrder0, (-143));
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(302, tiffField0.getBytesLength());
      assertEquals((-143), tiffField0.getSortHint());
      assertEquals(1227, tiffField0.getDirectoryType());
      assertEquals(302, tiffField0.getTag());
      assertEquals(1227, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(790, 794, fieldTypeShort0, (byte)0, (-224), byteArray0, byteOrder0, (-224));
      int int0 = tiffField0.getSortHint();
      assertEquals(794, tiffField0.getDirectoryType());
      assertEquals((-224), int0);
      assertEquals(790, tiffField0.getTag());
      assertEquals((-224), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-29), "zTE'g\"]B(9;%qt.l");
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2029, 2029, fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, (-1770));
      tiffField0.getOffset();
      assertEquals(2029, tiffField0.getDirectoryType());
      assertEquals((-1770), tiffField0.getSortHint());
      assertEquals(2029, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3930, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, (byte) (-122));
      int int0 = tiffField0.getOffset();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-122), tiffField0.getSortHint());
      assertEquals(1, int0);
      assertEquals(3930, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1425), "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)87;
      byteArray0[4] = (byte)75;
      TiffField tiffField0 = new TiffField((-2759), 3157, fieldTypeRational0, 3157, 3157, byteArray0, byteOrder0, (byte) (-42));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(3157, tiffField0.getDirectoryType());
      assertEquals((-42), tiffField0.getSortHint());
      assertEquals(3157, tiffField0.getOffset());
      assertEquals(25256, tiffField0.getBytesLength());
      assertEquals(1, int0);
      assertEquals((-2759), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-49);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 2, fieldTypeLong0, 2, 2, byteArray0, byteOrder0, 50);
      tiffField0.getIntValueOrArraySum();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(4, tiffField0.getTag());
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (byte)0, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 0);
      tiffField0.getIntValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-2932), "*:~X#KuTP`} ML')H");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-79);
      TiffField tiffField0 = new TiffField((byte) (-1), 50, fieldTypeByte0.IFD, 1L, (-2932), byteArray0, byteOrder0, 50974);
      tiffField0.getIntValue();
      assertEquals((-2932), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(50974, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(65535, "YHV");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      TiffField tiffField0 = new TiffField((-2147483646), 1, fieldTypeShort0, 1L, (-2607L), byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-2147483646), tiffField0.getTag());
      assertEquals((-2607), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(50, (String) null);
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, (-359L), 1206L, (byte[]) null, byteOrder0, (-656));
      tiffField0.getFieldTypeName();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-656), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1206, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, (-2098), fieldTypeShort0, (byte)119, (byte)119, byteArray0, byteOrder0, (byte) (-5));
      tiffField0.getFieldTypeName();
      assertEquals((-2098), tiffField0.getDirectoryType());
      assertEquals(119, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-5), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5335, 5335, fieldTypeDouble0, 5335, 5335, byteArray0, byteOrder0, (byte) (-64));
      tiffField0.getFieldType();
      assertEquals(5335, tiffField0.getTag());
      assertEquals(5335, tiffField0.getDirectoryType());
      assertEquals(5335, tiffField0.getOffset());
      assertEquals((-64), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1425), "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-2759), 3157, fieldTypeRational0, 3157, 3157, byteArray0, byteOrder0, (byte) (-42));
      tiffField0.getFieldType();
      assertEquals(3157, tiffField0.getOffset());
      assertEquals((-42), tiffField0.getSortHint());
      assertEquals(3157, tiffField0.getDirectoryType());
      assertEquals((-2759), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "*:~X#KuTP`} ML')H");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-13), 45, fieldTypeByte0, 0L, 447L, byteArray0, byteOrder0, (-2932));
      tiffField0.getFieldType();
      assertEquals((-13), tiffField0.getTag());
      assertEquals(447, tiffField0.getOffset());
      assertEquals((-2932), tiffField0.getSortHint());
      assertEquals(45, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(65535, "ExifImageWidth");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(50714, 1, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (-2741));
      tiffField0.getDoubleValue();
      assertEquals(50714, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-2741), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)98;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3930, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, (byte) (-122));
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-122), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(3930, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(65535, "YHV");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      TiffField tiffField0 = new TiffField((-2147483646), 1, fieldTypeShort0, 1L, (-2607L), byteArray0, byteOrder0, (byte) (-1));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-2147483646), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-2607), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1576), 0, fieldTypeShort0, 941L, 0, byteArray0, byteOrder0, 50728);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(50728, tiffField0.getSortHint());
      assertEquals((-1576), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, int0);
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1576), (-1576), fieldTypeShort0, 941L, (-1576), byteArray0, byteOrder0, 50728);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1576), tiffField0.getOffset());
      assertEquals(50728, tiffField0.getSortHint());
      assertEquals((-1576), tiffField0.getTag());
      assertEquals(1882, tiffField0.getBytesLength());
      assertEquals((-1576), int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(790, 794, fieldTypeShort0, (byte)0, (-224), byteArray0, byteOrder0, (-224));
      long long0 = tiffField0.getCount();
      assertEquals(794, tiffField0.getDirectoryType());
      assertEquals(0L, long0);
      assertEquals((-224), tiffField0.getOffset());
      assertEquals((-224), tiffField0.getSortHint());
      assertEquals(790, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-4175), "Y)>BB&sDMA");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, (-4175), fieldTypeAscii0, 65535, 1840L, byteArray0, byteOrder0, 65535);
      long long0 = tiffField0.getCount();
      assertEquals(1840, tiffField0.getOffset());
      assertEquals(65535L, long0);
      assertEquals((-4175), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1717986918, 3072, fieldTypeDouble0, 3072, (-4L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(1717986918, tiffField0.getTag());
      assertEquals(3072, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(24576, int0);
      assertEquals((-4), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-283), 1, fieldTypeDouble0, 2147483647L, 5408L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-283), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(5408, tiffField0.getOffset());
      assertEquals((-8), int0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1311, ">=");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-739), 1311, fieldTypeRational0, 1311, (-739), byteArray0, (ByteOrder) null, (byte) (-101));
      tiffField0.getByteOrder();
      assertEquals((-739), tiffField0.getOffset());
      assertEquals((-101), tiffField0.getSortHint());
      assertEquals((-739), tiffField0.getTag());
      assertEquals(10488, tiffField0.getBytesLength());
      assertEquals(1311, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(938, 938, fieldTypeRational0, 938, 938, byteArray0, byteOrder0, (byte) (-113));
      tiffField0.getByteArrayValue();
      assertEquals(938, tiffField0.getDirectoryType());
      assertEquals(7504, tiffField0.getBytesLength());
      assertEquals((-113), tiffField0.getSortHint());
      assertEquals(938, tiffField0.getTag());
      assertEquals(938, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-299), 1263, fieldTypeRational0, (byte)0, 547L, byteArray0, byteOrder0, (byte)0);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, byteArray1.length);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-299), tiffField0.getTag());
      assertEquals(547, tiffField0.getOffset());
      assertEquals(1263, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-922), (-922), fieldTypeAscii0, (-922), (-922), (byte[]) null, byteOrder0, (-922));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      byte[] byteArray0 = new byte[229];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeDouble0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(50973, 50973, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 50973);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 4, (FieldType) null, 4, (-1043L), byteArray0, byteOrder0, 4);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeRational0, 16, 16, (byte[]) null, byteOrder0, 16);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[33];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeLong0, (-1), (-1), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 31);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeRational0, 16, 16, (byte[]) null, byteOrder0, 16);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4396), (-4396), fieldTypeRational0, (-4396), (-4396), byteArray0, byteOrder0, (-4396));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[175];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1717986928, 1717986928, (FieldType) null, 1717986928, 1717986928, byteArray0, byteOrder0, 1717986928);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-439), (-439), fieldTypeRational0, (-439), (-439), byteArray0, byteOrder0, (-439));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 1871L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(985, 985, fieldTypeRational0, 1L, 1L, (byte[]) null, byteOrder0, 985);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3270, 3270, fieldTypeShort0, 3270, 3270, (byte[]) null, byteOrder0, 3270);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1399), (-1399), fieldTypeRational0, (-1399), (-1399), byteArray0, byteOrder0, (-1399));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40093, 40093, fieldTypeRational0, (-33992L), (-33992L), byteArray0, byteOrder0, (-1678));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65547, 65547, fieldTypeShort0, (-6224L), (-6224L), (byte[]) null, byteOrder0, 65547);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[115];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2179), (-2179), fieldTypeShort0, (-2179), (-2179), byteArray0, byteOrder0, (-2179));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(65521, 65521, fieldTypeShort0, 65521, 65521, byteArray0, byteOrder0, 65521);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65521, 65521, fieldTypeShort0, 65521, 65521, (byte[]) null, byteOrder0, 65521);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4396), (-4396), fieldTypeRational0, (-4396), (-4396), byteArray0, byteOrder0, (-4396));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[182];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(66, 14, (FieldType) null, 0L, 1L, byteArray0, byteOrder0, 14);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-42), fieldTypeRational0, (-42), 27, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1717986901, 1717986901, fieldTypeRational0, 1717986901, 1717986901, (byte[]) null, byteOrder0, 1717986901);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-2573), (-2573), fieldTypeShort0, (-2573), (-2573), byteArray0, byteOrder0, (-2573));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1717986943, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(2355, 2355, fieldTypeDouble0, 2355, 2355, (byte[]) null, byteOrder0, 2355);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4722), (-4722), fieldTypeRational0, (-4722), (-4722), byteArray0, byteOrder0, (-4722));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[289];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1771), (-1771), fieldTypeDouble0, (-1771), (-1771), byteArray0, byteOrder0, (-1771));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(23, (-1074), fieldTypeShort0, (-3131L), (-2147483648L), byteArray0, byteOrder0, (-1074));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 1L, 1263L, byteArray0, byteOrder0, 65535);
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "d ~ ;+wK");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2440, 269, fieldTypeRational0, (-4218L), 269, byteArray0, byteOrder0, 2440);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("e*|)vh5X'A;U#");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147309804, 146, fieldTypeRational0, 1L, 2147309804, byteArray0, byteOrder0, (byte)89);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(3256, 3256, fieldTypeShort0, (-28L), 3256, byteArray0, byteOrder0, 2562);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3861), (-2122), fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, (-2122));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1717986918, 1717986918, fieldTypeRational0, 1717986918, 1717986918, byteArray0, byteOrder0, 1717986918);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1717986918, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(1717986918, tiffField0.getSortHint());
      assertEquals(1717986918L, tiffField0.getCount());
      assertEquals(1717986918, tiffField0.getOffset());
      assertEquals(858993456, tiffField0.getBytesLength());
      assertEquals(1717986918, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "*:~X#KuTP`} ML')H");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-13), 45, fieldTypeByte0, 0L, 447L, byteArray0, byteOrder0, (-2932));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("!sy-w[7+}|7");
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals((-2932), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(45, tiffField0.getDirectoryType());
      assertEquals((-13), tiffField0.getTag());
      assertEquals(447, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(65535, "YHV");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-2147483646), 1, fieldTypeShort0, 1L, (-2607L), byteArray0, byteOrder0, (byte) (-1));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertTrue(boolean0);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-2607), tiffField0.getOffset());
      assertEquals((-2147483646), tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1576), (-1576), fieldTypeShort0, 941L, (-1576), byteArray0, byteOrder0, 50728);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(50728, tiffField0.getSortHint());
      assertEquals((-1576), tiffField0.getOffset());
      assertEquals((-1576), tiffField0.getTag());
      assertEquals((-1576), tiffField0.getDirectoryType());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(56, 56, fieldTypeLong0, 56, 56, byteArray0, byteOrder0, 56);
      tiffField0.getByteOrder();
      assertEquals(56, tiffField0.getOffset());
      assertEquals(56, tiffField0.getSortHint());
      assertEquals(56, tiffField0.getDirectoryType());
      assertEquals(56, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1785), (-1785), fieldTypeDouble0, (-1785), (-1785), (byte[]) null, (ByteOrder) null, 36);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 4, (FieldType) null, 4, (-1043L), byteArray0, byteOrder0, 4314);
      tiffField0.getFieldType();
      assertEquals(4L, tiffField0.getCount());
      assertEquals(4, tiffField0.getTag());
      assertEquals(4314, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals((-1043), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3930, 1, fieldTypeByte0, 1, 1, byteArray0, byteOrder0, (byte) (-122));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-122), tiffField0.getSortHint());
      assertEquals(3930, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(65547, 65547, fieldTypeShort0, 65547, 65547, byteArray0, byteOrder0, 65547);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-4437), "'");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4437), 51008, fieldTypeAscii0, 51008, (-4437), byteArray0, byteOrder0, (-4437));
      int int0 = tiffField0.getOffset();
      assertEquals((-4437), int0);
      assertEquals(51008, tiffField0.getDirectoryType());
      assertEquals((-4437), tiffField0.getTag());
      assertEquals((-4437), tiffField0.getSortHint());
      assertEquals(51008L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(34853, 34853, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 34853);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(34853, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(34853, tagInfo0.tag);
      assertEquals(34853, tiffField0.getSortHint());
      assertEquals(34853, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 982L, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertFalse(tiffField0.isLocalValue());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147483646), (-982), fieldTypeByte0.DOUBLE, (byte) (-127), (-161L), byteArray0, byteOrder0, (byte) (-127));
      long long0 = tiffField0.getCount();
      assertEquals((-982), tiffField0.getDirectoryType());
      assertEquals((-161), tiffField0.getOffset());
      assertEquals((-127), tiffField0.getSortHint());
      assertEquals((-127L), long0);
      assertEquals((-2147483646), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 255L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4547, 4547, fieldTypeRational0, 4547, 4547, byteArray0, byteOrder0, 4547);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(4547, tiffField0.getSortHint());
      assertEquals(4547, tiffField0.getOffset());
      assertEquals("4547 (0x11c3: Unknown Tag): ", string0);
      assertEquals(4547, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1717986918, 1717986918, fieldTypeRational0, 1717986918, 1717986918, byteArray0, byteOrder0, 1717986918);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37, 37, fieldTypeRational0, 1L, 37, byteArray0, byteOrder0, 37);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1001, 1001, fieldTypeFloat0, 1001, 1001, byteArray0, byteOrder0, 1001);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@47fb4a55 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4547, 4547, fieldTypeRational0, 4547, 4547, byteArray0, byteOrder0, 4547);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(451, 1, fieldTypeShort0, 1, 451, byteArray0, byteOrder0, 451);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(451, tiffField0.getTag());
      assertEquals(451, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(451, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33475, 33475, fieldTypeByte0, 33475, 33475, byteArray0, byteOrder0, 33475);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@4de0a979 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[75];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1001, 1001, fieldTypeFloat0, 1001, 1001, byteArray0, byteOrder0, 1001);
      tiffField0.getDoubleArrayValue();
      assertEquals(1001, tiffField0.getDirectoryType());
      assertEquals(1001, tiffField0.getSortHint());
      assertEquals(1001, tiffField0.getTag());
      assertEquals(1001, tiffField0.getOffset());
      assertEquals(4004, tiffField0.getBytesLength());
      assertEquals(1001L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[229];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(300, 300, fieldTypeDouble0, 300, 300, byteArray0, byteOrder0, 300);
      tiffField0.getDoubleArrayValue();
      assertEquals(300, tiffField0.getDirectoryType());
      assertEquals(300, tiffField0.getSortHint());
      assertEquals(300, tiffField0.getTag());
      assertEquals(300L, tiffField0.getCount());
      assertEquals(2400, tiffField0.getBytesLength());
      assertEquals(300, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[206];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(318, 318, fieldTypeLong0, 318, 318, byteArray0, byteOrder0, 318);
      tiffField0.getDoubleArrayValue();
      assertEquals(318, tiffField0.getOffset());
      assertEquals(318, tiffField0.getDirectoryType());
      assertEquals(318, tiffField0.getSortHint());
      assertEquals(318, tiffField0.getTag());
      assertEquals(318L, tiffField0.getCount());
      assertEquals(1272, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1717986929, 1717986929, fieldTypeRational0, 1717986929, 1717986929, byteArray0, byteOrder0, 1717986929);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(1717986929L, tiffField0.getCount());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(1717986929, tiffField0.getDirectoryType());
      assertEquals(1717986929, tiffField0.getSortHint());
      assertEquals(858993544, tiffField0.getBytesLength());
      assertEquals(1717986929, tiffField0.getTag());
      assertEquals(1717986929, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(65497, 65497, fieldTypeShort0, 65497, 65497, byteArray0, byteOrder0, 65497);
      tiffField0.getDoubleArrayValue();
      assertEquals(130994, tiffField0.getBytesLength());
      assertEquals(65497, tiffField0.getOffset());
      assertEquals(65497, tiffField0.getSortHint());
      assertEquals(65497, tiffField0.getDirectoryType());
      assertEquals(65497, tiffField0.getTag());
      assertEquals(65497L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1717986918, 1717986918, fieldTypeRational0, 1717986918, 1717986918, byteArray0, byteOrder0, 1717986918);
      tiffField0.getDoubleArrayValue();
      assertEquals(858993456, tiffField0.getBytesLength());
      assertEquals(1717986918, tiffField0.getDirectoryType());
      assertEquals(1717986918L, tiffField0.getCount());
      assertEquals(1717986918, tiffField0.getTag());
      assertEquals(1717986918, tiffField0.getSortHint());
      assertEquals(1717986918, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[86];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(1001, 1001, fieldTypeLong0, 1001, 1001, byteArray0, byteOrder0, 504);
      tiffField0.getIntArrayValue();
      assertEquals(1001, tiffField0.getOffset());
      assertEquals(1001, tiffField0.getDirectoryType());
      assertEquals(504, tiffField0.getSortHint());
      assertEquals(1001, tiffField0.getTag());
      assertEquals(1001L, tiffField0.getCount());
      assertEquals(4004, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[75];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1001, 1001, fieldTypeFloat0, 1001, 1001, byteArray0, byteOrder0, 1001);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@17a6fb91 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1717986900, 1717986900, fieldTypeRational0, 1717986900, 1717986900, byteArray0, byteOrder0, 1717986900);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(65497, 65497, fieldTypeShort0, 65497, 65497, byteArray0, byteOrder0, 65497);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(130994, tiffField0.getBytesLength());
      assertEquals(65497, tiffField0.getOffset());
      assertEquals(65497L, tiffField0.getCount());
      assertArrayEquals(new int[] {0, 0, 0, 0}, intArray0);
      assertEquals(65497, tiffField0.getDirectoryType());
      assertEquals(65497, tiffField0.getSortHint());
      assertEquals(65497, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(42, 42, fieldTypeRational0, 42, 42, byteArray0, byteOrder0, 42);
      tiffField0.getIntArrayValue();
      assertEquals(42, tiffField0.getOffset());
      assertEquals(336, tiffField0.getBytesLength());
      assertEquals(42, tiffField0.getTag());
      assertEquals(42L, tiffField0.getCount());
      assertEquals(42, tiffField0.getDirectoryType());
      assertEquals(42, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(34675, 2330, fieldTypeAscii0, 2330, 2330, byteArray0, byteOrder0, 34675);
      String string0 = tiffField0.getStringValue();
      assertEquals(2330, tiffField0.getDirectoryType());
      assertEquals(34675, tiffField0.getSortHint());
      assertEquals(34675, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(2330, tiffField0.getBytesLength());
      assertEquals(2330, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(42, 42, fieldTypeRational0, 42, 42, byteArray0, byteOrder0, 42);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@10400a2e
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[75];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1001, 1001, fieldTypeFloat0, 1001, 1001, byteArray0, byteOrder0, 1001);
      String string0 = tiffField0.getTagName();
      assertEquals(1001, tiffField0.getDirectoryType());
      assertEquals(1001, tiffField0.getSortHint());
      assertEquals(1001, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x3e9)", string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(293, 293, (FieldType) null, 293, 293, (byte[]) null, byteOrder0, 293);
      String string0 = tiffField0.getTagName();
      assertEquals(293, tiffField0.getOffset());
      assertEquals(293, tiffField0.getDirectoryType());
      assertEquals(293, tiffField0.getTag());
      assertEquals(293, tiffField0.getSortHint());
      assertEquals("T6Options", string0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1717986948, 1717986948, fieldTypeRational0, 1717986948, 1717986948, byteArray0, (ByteOrder) null, 1717986948);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "j*QQE\"fM7%");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[75];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1001, 1001, fieldTypeFloat0, 1001, 1001, byteArray0, byteOrder0, 1001);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1001, tiffField0.getTag());
      assertEquals(1001, tiffField0.getSortHint());
      assertEquals(1001L, tiffField0.getCount());
      assertEquals(4004, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1001, tiffField0.getOffset());
      assertEquals(1001, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1053, 1053, fieldTypeShort0.UNDEFINED, 1053, 1053, byteArray0, byteOrder0, 1053);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1053, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1053, tiffField0.getSortHint());
      assertEquals(1053, tiffField0.getTag());
      assertEquals(1053L, tiffField0.getCount());
      assertEquals(1053, tiffField0.getBytesLength());
      assertEquals(1053, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[87];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(785, 785, fieldTypeByte0, 785, 785, byteArray0, byteOrder0, 785);
      String string0 = tiffField0.toString();
      assertEquals(785, tiffField0.getDirectoryType());
      assertEquals(785, tiffField0.getBytesLength());
      assertEquals(785, tiffField0.getOffset());
      assertEquals(785, tiffField0.getSortHint());
      assertEquals("785 (0x311: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (87) (785 Byte)", string0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[421];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(813, 813, fieldTypeDouble0, 813, 813, byteArray0, byteOrder0, 813);
      try { 
        fieldTypeDouble0.writeData(tiffField0, byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: 813 (0x32d: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (813 Double) (org.apache.commons.imaging.formats.tiff.TiffField)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[99];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(3043, 3043, fieldTypeDouble0, 3043, 3043, byteArray0, byteOrder0, 3043);
      String string0 = tiffField0.toString();
      assertEquals(24344, tiffField0.getBytesLength());
      assertEquals(3043, tiffField0.getDirectoryType());
      assertEquals("3043 (0xbe3: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (3043 Double)", string0);
      assertEquals(3043, tiffField0.getOffset());
      assertEquals(3043, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(299, 299, fieldTypeLong0, 299, 299, byteArray0, byteOrder0, 299);
      String string0 = tiffField0.toString();
      assertEquals(299, tiffField0.getSortHint());
      assertEquals(299, tiffField0.getDirectoryType());
      assertEquals(1196, tiffField0.getBytesLength());
      assertEquals("299 (0x12b: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (299 SLong)", string0);
      assertEquals(299, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[218];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(50341, (-236), fieldTypeFloat0, 299, 50341, byteArray0, byteOrder0, 50341);
      String string0 = tiffField0.toString();
      assertEquals(50341, tiffField0.getOffset());
      assertEquals((-236), tiffField0.getDirectoryType());
      assertEquals(1196, tiffField0.getBytesLength());
      assertEquals(50341, tiffField0.getSortHint());
      assertEquals("50341 (0xc4a5: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (54) (299 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[245];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(112, 112, fieldTypeShort0, 112, 112, byteArray0, byteOrder0, 112);
      String string0 = tiffField0.getValueDescription();
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (112)", string0);
      assertNotNull(string0);
      assertEquals(112, tiffField0.getDirectoryType());
      assertEquals(112, tiffField0.getOffset());
      assertEquals(112, tiffField0.getTag());
      assertEquals(112, tiffField0.getSortHint());
      assertEquals(112L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[206];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(299, 299, fieldTypeLong0, 299, 299, byteArray0, byteOrder0, 299);
      String string0 = tiffField0.toString();
      assertEquals("299 (0x12b: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (299 SLong)", string0);
      assertEquals(299, tiffField0.getOffset());
      assertEquals(299, tiffField0.getSortHint());
      assertEquals(299, tiffField0.getDirectoryType());
      assertEquals(1196, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[289];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeAscii0, 65535, 0, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getBytesLength());
      assertEquals(65535L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(106, 106, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 106);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(106, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(106, tiffField0.getSortHint());
      assertEquals(106, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(53, "NumberOfInks");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(33441, 53, fieldTypeAscii0, 53, 33441, byteArray0, byteOrder0, 33441);
      String string0 = tiffField0.getValueDescription();
      assertEquals(53, tiffField0.getDirectoryType());
      assertEquals(33441, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(33441, tiffField0.getSortHint());
      assertEquals(33441, tiffField0.getTag());
      assertEquals(53, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1762, 0, fieldTypeRational0, 0, 1762, byteArray0, byteOrder0, 513);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, 1);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(1762, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1762, tiffField0.getTag());
      assertEquals(513, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertNull(string0);
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(138, 0, fieldTypeRational0, 0, 138, byteArray0, byteOrder0, 513);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1, 1);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(513, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Rational", string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(138, tiffField0.getTag());
      assertEquals(138, tiffField0.getOffset());
      assertEquals(0L, tiffField0.getCount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5013, 5013, fieldTypeRational0, 5013, 5013, byteArray0, byteOrder0, 5013);
      tiffField0.getFieldTypeName();
      assertEquals(5013, tiffField0.getOffset());
      assertEquals(5013, tiffField0.getSortHint());
      assertEquals(5013, tiffField0.getDirectoryType());
      assertEquals(5013, tiffField0.getTag());
      assertEquals(40104, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeAscii0, 4, 4, byteArray0, byteOrder0, (byte)2);
      int int0 = tiffField0.getSortHint();
      assertEquals(4, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(2, int0);
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(28, (-3203), fieldTypeFloat0, 28, 28, (byte[]) null, byteOrder0, 2147475622);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4547, 4547, fieldTypeRational0, 4547, 4547, byteArray0, byteOrder0, 4547);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(4547, tiffField0.getDirectoryType());
      assertEquals(4547, tiffField0.getTag());
      assertEquals(4547, tiffField0.getSortHint());
      assertEquals(4547L, tiffElement0.offset);
      assertNotNull(tiffElement0);
  }
}
