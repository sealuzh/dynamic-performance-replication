/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 04 23:40:32 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2425, "OversizeValueElement, tag: ");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)123;
      byteArray0[4] = (byte)123;
      TiffField tiffField0 = new TiffField(262, 50, fieldTypeRational0, (byte)123, (byte)6, byteArray0, byteOrder0, 34908);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1, int0);
      assertEquals(984, tiffField0.getBytesLength());
      assertEquals(262, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getOffset());
      assertEquals(34908, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2425, "OversizeValueElement, tag: ");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)123;
      TiffField tiffField0 = new TiffField(262, 50, fieldTypeRational0, (byte)123, (byte)6, byteArray0, byteOrder0, 34908);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(262, tiffField0.getTag());
      assertEquals(6, tiffField0.getOffset());
      assertEquals(984, tiffField0.getBytesLength());
      assertEquals(0, int0);
      assertEquals(34908, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-911), "\"4C9q>p[rR");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-1207), fieldTypeLong0, 1L, 3127L, byteArray0, byteOrder0, 2209);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2209, tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals((-1207), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(3127, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(708, "ImageHeight");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5, 7, fieldTypeShort0, 0L, (-1212L), byteArray0, byteOrder0, 3486);
      String string0 = tiffField0.getValueDescription();
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals((-1212), tiffField0.getOffset());
      assertEquals(5, tiffField0.getTag());
      assertEquals(3486, tiffField0.getSortHint());
      assertEquals("", string0);
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "*J`");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 612);
      tiffField0.getValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(612, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1717986908, 131, fieldTypeShort0, 3712L, 1717986908, byteArray0, byteOrder0, 2326);
      tiffField0.getTagInfo();
      assertEquals(131, tiffField0.getDirectoryType());
      assertEquals(2326, tiffField0.getSortHint());
      assertEquals(1717986908, tiffField0.getOffset());
      assertEquals(1717986908, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "");
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (-2685), fieldTypeLong0, 0, 1609L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(1609, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-2685), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2144733989, (byte)1, fieldTypeShort0, (byte)0, 2144733989, byteArray0, byteOrder0, 2305);
      int int0 = tiffField0.getTag();
      assertEquals(2144733989, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2305, tiffField0.getSortHint());
      assertEquals(2144733989, int0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)57;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(29, 29, fieldTypeAscii0, 29, 29, byteArray0, byteOrder0, 7);
      String string0 = tiffField0.getStringValue();
      assertEquals(7, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(29, tiffField0.getBytesLength());
      assertEquals(29, tiffField0.getDirectoryType());
      assertEquals(29, tiffField0.getTag());
      assertEquals(29, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)0, 50, fieldTypeShort0, 50, (-87L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-87), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(2454, (-1717986917), fieldTypeShort0, (byte)10, (-1107L), byteArray0, byteOrder0, (byte) (-11));
      int int0 = tiffField0.getSortHint();
      assertEquals((-11), int0);
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(2454, tiffField0.getTag());
      assertEquals((-1107), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3161), 0, fieldTypeRational0, 1187L, 0, byteArray0, byteOrder0, (-2490));
      int int0 = tiffField0.getOffset();
      assertEquals((-2490), tiffField0.getSortHint());
      assertEquals((-3161), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte) (-95), (-2650), fieldTypeShort0, 1, (-2342L), byteArray0, byteOrder0, 1166);
      int int0 = tiffField0.getOffset();
      assertEquals((-2650), tiffField0.getDirectoryType());
      assertEquals((-2342), int0);
      assertEquals((-95), tiffField0.getTag());
      assertEquals(1166, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-911), "\"4C9q>p[rR");
      byte[] byteArray0 = new byte[6];
      byteArray0[2] = (byte) (-27);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-911), 0, fieldTypeLong0, 2276L, 2276L, byteArray0, byteOrder0, 50);
      tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(9104, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-911), tiffField0.getTag());
      assertEquals(2276, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[2] = (byte) (-101);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, 1166, (byte)37, byteArray0, byteOrder0, 3244);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(37, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(3244, tiffField0.getSortHint());
      assertEquals((-25856), int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(2332, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      byte[] byteArray0 = new byte[55];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)110, (byte)110, fieldTypeLong0, 1L, (byte)110, byteArray0, byteOrder0, (byte)110);
      tiffField0.getIntValue();
      assertEquals(110, tiffField0.getTag());
      assertEquals(110, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(110, tiffField0.getSortHint());
      assertEquals(110, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-95);
      TiffField tiffField0 = new TiffField(0, (-143), fieldTypeShort0, 1, 2147483647L, byteArray0, byteOrder0, 22);
      tiffField0.getIntValue();
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(22, tiffField0.getSortHint());
      assertEquals((-143), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-113);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeLong0, 1L, 0L, byteArray0, byteOrder0, (byte) (-40));
      tiffField0.getIntValue();
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-40), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(3, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1580, (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(6, (-539), fieldTypeLong0, 2076L, 98L, byteArray0, byteOrder0, 6);
      tiffField0.getFieldTypeName();
      assertEquals((-539), tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getTag());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(98, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((byte) (-125), "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)11, (byte) (-125), fieldTypeLong0, 3099L, (-2650L), byteArray0, byteOrder0, (byte) (-125));
      tiffField0.getFieldTypeName();
      assertEquals((-125), tiffField0.getSortHint());
      assertEquals((-125), tiffField0.getDirectoryType());
      assertEquals((-2650), tiffField0.getOffset());
      assertEquals(11, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "");
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (-2685), fieldTypeLong0, 0, 1609L, byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(1609, tiffField0.getOffset());
      assertEquals((-2685), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-1), ": ");
      TiffField tiffField0 = new TiffField(1608, 1720, fieldTypeByte0, (byte)88, (-2376L), byteArray0, byteOrder0, (-1));
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-2376), tiffField0.getOffset());
      assertEquals(1608, tiffField0.getTag());
      assertEquals(1720, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(303, "Z{+_F7Oid]tfH");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3592, 959, fieldTypeLong0, 305L, (-1L), byteArray0, byteOrder0, 303);
      tiffField0.getFieldType();
      assertEquals(303, tiffField0.getSortHint());
      assertEquals(959, tiffField0.getDirectoryType());
      assertEquals(3592, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[58];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(13, (-3049), fieldTypeLong0, 1L, 0L, byteArray0, byteOrder0, 1355);
      tiffField0.getDoubleValue();
      assertEquals((-3049), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(13, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1355, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-95);
      TiffField tiffField0 = new TiffField((byte) (-95), (-2650), fieldTypeShort0, 1, (-2342L), byteArray0, byteOrder0, 1166);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals((-95), tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1166, tiffField0.getSortHint());
      assertEquals((-2342), tiffField0.getOffset());
      assertEquals((-2650), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1494), "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeDouble0, 65535, (-1494), byteArray0, byteOrder0, 1924);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-1494), tiffField0.getOffset());
      assertEquals(65535, int0);
      assertEquals(1924, tiffField0.getSortHint());
      assertEquals(524280, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-136), (-1), fieldTypeRational0, (-1), 909L, byteArray0, byteOrder0, 1659);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1659, tiffField0.getSortHint());
      assertEquals(909, tiffField0.getOffset());
      assertEquals((-1), int0);
      assertEquals((-136), tiffField0.getTag());
      assertEquals((-1L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(708, "ImageHeight");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(5, 7, fieldTypeShort0, 0L, (-1212L), byteArray0, byteOrder0, 3486);
      long long0 = tiffField0.getCount();
      assertEquals(3486, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals((-1212), tiffField0.getOffset());
      assertEquals(0L, long0);
      assertEquals(5, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)0, 50, fieldTypeShort0, 50, (-87L), byteArray0, byteOrder0, (byte)0);
      long long0 = tiffField0.getCount();
      assertEquals(50L, long0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-87), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147285266, (-1216), fieldTypeShort0, (-524L), (-1), byteArray0, byteOrder0, 2147285266);
      long long0 = tiffField0.getCount();
      assertEquals((-1216), tiffField0.getDirectoryType());
      assertEquals(2147285266, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-524L), long0);
      assertEquals(2147285266, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-126), 32908, fieldTypeAscii0, (byte)0, 1L, byteArray0, byteOrder0, (-2240));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-126), tiffField0.getTag());
      assertEquals((-2240), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(32908, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-911), "\"4C9q>p[rR");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)126, fieldTypeLong0, (byte)121, 1424L, byteArray0, byteOrder0, (byte)121);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals(121, tiffField0.getSortHint());
      assertEquals(1424, tiffField0.getOffset());
      assertEquals(126, tiffField0.getDirectoryType());
      assertEquals(484, int0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2376, "");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(16, (-2147408468), fieldTypeRational0, (byte)13, (-1390L), byteArray0, (ByteOrder) null, 172);
      tiffField0.getByteOrder();
      assertEquals((-2147408468), tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getTag());
      assertEquals(172, tiffField0.getSortHint());
      assertEquals((-1390), tiffField0.getOffset());
      assertEquals(13L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4355), 1866, fieldTypeByte0, 1866, (-4355), byteArray0, byteOrder0, 1866);
      tiffField0.getByteOrder();
      assertEquals((-4355), tiffField0.getTag());
      assertEquals(1866, tiffField0.getSortHint());
      assertEquals(1866, tiffField0.getBytesLength());
      assertEquals(1866, tiffField0.getDirectoryType());
      assertEquals((-4355), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-911), "\"4C9q>p[rR");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)126, fieldTypeLong0, (byte)121, 1424L, byteArray0, byteOrder0, (byte)121);
      tiffField0.getByteArrayValue();
      assertEquals(1424, tiffField0.getOffset());
      assertEquals(126, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(484, tiffField0.getBytesLength());
      assertEquals(121, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1465, 1465, fieldTypeLong0, 0L, 4L, byteArray0, byteOrder0, (-2884));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, byteArray1.length);
      assertEquals(1465, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1465, tiffField0.getDirectoryType());
      assertEquals((-2884), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2425, "OversizeValueElement, tag: ");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(50, (byte)123, fieldTypeRational0, 2425, 4L, byteArray0, byteOrder0, (byte) (-95));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("OversizeValueElement, tag: ");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals((-95), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(123, tiffField0.getDirectoryType());
      assertEquals(2425L, tiffField0.getCount());
      assertEquals(19400, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1312, 1312, fieldTypeByte0, 1312, 1312, (byte[]) null, byteOrder0, 1312);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[198];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-88), (-88), fieldTypeDouble0, (-88), (-88), byteArray0, byteOrder0, (-88));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeRational0, 8, 8, (byte[]) null, byteOrder0, 8);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-2708), (-2708), fieldTypeRational0, (-2708), (-2708), byteArray0, byteOrder0, (-2708));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 349, fieldTypeRational0, 1, 349, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1657), fieldTypeDouble0, (-324L), (-324L), byteArray0, byteOrder0, (-1657));
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-691), (-691), fieldTypeByte0, (-691), (-691), byteArray0, byteOrder0, (-691));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1, 33, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 33);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(76, 76, fieldTypeFloat0.SSHORT, 76, 76, (byte[]) null, byteOrder0, 76);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1154), (-1154), fieldTypeFloat0, (-1154), (-1154), byteArray0, byteOrder0, (-1154));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2886), (-2886), fieldTypeShort0, (byte)107, (byte)107, (byte[]) null, byteOrder0, (byte)107);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-894), (-894), (FieldType) null, (-894), (-894), (byte[]) null, byteOrder0, (-894));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-47), (-47), fieldTypeShort0, (-47), (-47), byteArray0, byteOrder0, (-47));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(18, 18, fieldTypeFloat0, 1L, 18, byteArray0, byteOrder0, 18);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40092, 50, fieldTypeRational0, 10456L, (-1L), byteArray0, byteOrder0, 40092);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1732, 960, fieldTypeFloat0, 1732, 1732, (byte[]) null, byteOrder0, 1732);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-5), (-5), fieldTypeFloat0, (-5), (-5), byteArray0, byteOrder0, (-5));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(369, 369, fieldTypeRational0, 1L, 17179869176L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(665, 665, fieldTypeRational0, 665, 665, (byte[]) null, byteOrder0, 665);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-944), (-944), fieldTypeRational0, (-944), (-944), byteArray0, byteOrder0, (-944));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((byte)11, (byte)11, (FieldType) null, (byte)11, (byte)11, byteArray0, byteOrder0, (byte)11);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1681), fieldTypeFloat0, (-1681), 5264L, byteArray0, byteOrder0, (-1681));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(39, 39, fieldTypeRational0, 39, 39, (byte[]) null, byteOrder0, 39);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[99];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-406), (-406), fieldTypeRational0, (-406), (-406), byteArray0, byteOrder0, (-406));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeRational0, 1L, 24, byteArray0, byteOrder0, 24);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(692, 692, fieldTypeRational0, 692, 692, (byte[]) null, byteOrder0, 692);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[58];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-5), (byte) (-5), fieldTypeLong0, (byte) (-5), (byte) (-5), byteArray0, byteOrder0, (byte) (-5));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, 46, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 0, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(7, 7, (FieldType) null, 7, 7, (byte[]) null, byteOrder0, 11);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(21, 21, fieldTypeShort0, (-17312L), 21, byteArray0, byteOrder0, 21);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(254, (-874), fieldTypeRational0, 1L, 966L, byteArray0, byteOrder0, (-874));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(34);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, " (");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2141400124, 2141400124, fieldTypeFloat0.SSHORT, 2141400124, 2141400124, byteArray0, byteOrder0, 2141400124);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeAscii0.DOUBLE, 1L, 1926L, byteArray0, byteOrder0, (-184));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(50);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-119), (byte) (-119), fieldTypeAscii0, (byte) (-119), (byte) (-119), byteArray0, byteOrder0, (byte) (-119));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1, 3274, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(54, 80, fieldTypeFloat0, (-139L), 0L, byteArray0, byteOrder0, 54);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(", fieldType: ");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4, 559, fieldTypeAscii0, 0L, (-890L), byteArray0, byteOrder0, (-3574));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(4, tiffField0.getTag());
      assertEquals((-3574), tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals((-890), tiffField0.getOffset());
      assertEquals(559, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2376, "");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(16, (-2147408468), fieldTypeRational0, (byte)13, (-1390L), byteArray0, (ByteOrder) null, 172);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals((-1390), tiffField0.getOffset());
      assertEquals(172, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getTag());
      assertEquals((-2147408468), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 0, byteArray0, byteOrder0, 403);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(403, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(71, (byte)0, fieldTypeFloat0, 4361L, (byte)0, byteArray0, byteOrder0, 2146847733);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(71, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(17444, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2146847733, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(22, 22, fieldTypeFloat0.SSHORT, 22, 22, byteArray0, byteOrder0, 22);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2121), (-2121), fieldTypeLong0, 1L, (-2121), (byte[]) null, byteOrder0, (-2121));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeShort0, 31, 31, byteArray0, byteOrder0, 31);
      int int0 = tiffField0.getOffset();
      assertEquals(31, int0);
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(31, tiffField0.getDirectoryType());
      assertEquals(31, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)27, (byte) (-102), fieldTypeAscii0, 4L, (byte)27, byteArray0, byteOrder0, 785);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tiffField0.getTag());
      assertEquals((-102), tiffField0.getDirectoryType());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(27, tagInfo0.tag);
      assertEquals(785, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-126), 32908, fieldTypeAscii0, (byte)0, 1L, byteArray0, byteOrder0, (-2240));
      int int0 = tiffField0.getTag();
      assertEquals((-126), int0);
      assertEquals(32908, tiffField0.getDirectoryType());
      assertEquals((-2240), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1637, 2147483646, fieldTypeShort0, (-1L), (-1L), byteArray0, byteOrder0, 9);
      int int0 = tiffField0.getBytesLength();
      assertEquals(2147483646, tiffField0.getDirectoryType());
      assertEquals((-2), int0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(1637, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeShort0, 31, 31, byteArray0, byteOrder0, 31);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)89, (byte)89, fieldTypeAscii0, (byte)89, (byte)89, byteArray0, byteOrder0, (byte)89);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[58];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeRational0, 31, 31, byteArray0, byteOrder0, 31);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)108, (byte)108, fieldTypeAscii0, (byte)108, (byte)108, byteArray0, byteOrder0, (byte)108);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@be5f566 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[118];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(68, 68, fieldTypeFloat0.DOUBLE, 68, 68, byteArray0, byteOrder0, 68);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(68, tiffField0.getTag());
      assertEquals(68, tiffField0.getSortHint());
      assertEquals(68L, tiffField0.getCount());
      assertEquals(68, tiffField0.getOffset());
      assertEquals(14, doubleArray0.length);
      assertEquals(68, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[64];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(76, 76, fieldTypeFloat0, 76, 76, byteArray0, byteOrder0, 76);
      tiffField0.getDoubleArrayValue();
      assertEquals(76, tiffField0.getSortHint());
      assertEquals(76, tiffField0.getOffset());
      assertEquals(76L, tiffField0.getCount());
      assertEquals(76, tiffField0.getTag());
      assertEquals(76, tiffField0.getDirectoryType());
      assertEquals(304, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[91];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50986, 50986, fieldTypeLong0, 50986, 50986, byteArray0, byteOrder0, 50986);
      tiffField0.getDoubleArrayValue();
      assertEquals(50986, tiffField0.getTag());
      assertEquals(50986, tiffField0.getDirectoryType());
      assertEquals(203944, tiffField0.getBytesLength());
      assertEquals(50986L, tiffField0.getCount());
      assertEquals(50986, tiffField0.getOffset());
      assertEquals(50986, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeShort0, 31, 31, byteArray0, byteOrder0, 31);
      tiffField0.getDoubleArrayValue();
      assertEquals(31, tiffField0.getOffset());
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(31, tiffField0.getTag());
      assertEquals(31, tiffField0.getDirectoryType());
      assertEquals(62, tiffField0.getBytesLength());
      assertEquals(31L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(45, 45, fieldTypeRational0, 45, 45, byteArray0, byteOrder0, 45);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(360, tiffField0.getBytesLength());
      assertEquals(45L, tiffField0.getCount());
      assertEquals(45, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(45, tiffField0.getSortHint());
      assertEquals(45, tiffField0.getTag());
      assertEquals(45, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(845, 845, fieldTypeRational0, 845, 845, byteArray0, byteOrder0, 845);
      tiffField0.getDoubleArrayValue();
      assertEquals(845, tiffField0.getDirectoryType());
      assertEquals(6760, tiffField0.getBytesLength());
      assertEquals(845L, tiffField0.getCount());
      assertEquals(845, tiffField0.getTag());
      assertEquals(845, tiffField0.getSortHint());
      assertEquals(845, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0.SSHORT, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)93, (byte)93, fieldTypeAscii0, (byte)93, (byte)93, byteArray0, byteOrder0, (byte)93);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@45946d9f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[91];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50973, 50973, fieldTypeLong0, 50973, 50973, byteArray0, byteOrder0, 50973);
      tiffField0.getIntArrayValue();
      assertEquals(50973L, tiffField0.getCount());
      assertEquals(203892, tiffField0.getBytesLength());
      assertEquals(50973, tiffField0.getTag());
      assertEquals(50973, tiffField0.getSortHint());
      assertEquals(50973, tiffField0.getDirectoryType());
      assertEquals(50973, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeShort0, 31, 31, byteArray0, byteOrder0, 31);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(31, tiffField0.getTag());
      assertEquals(62, tiffField0.getBytesLength());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(31, tiffField0.getDirectoryType());
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(31, tiffField0.getOffset());
      assertEquals(31L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[73];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)11, (byte)11, fieldTypeRational0, (byte)11, (byte)11, byteArray0, byteOrder0, (byte)11);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(845, 845, fieldTypeRational0, 845, 845, byteArray0, byteOrder0, 845);
      tiffField0.getIntArrayValue();
      assertEquals(845, tiffField0.getOffset());
      assertEquals(845, tiffField0.getTag());
      assertEquals(845, tiffField0.getDirectoryType());
      assertEquals(845, tiffField0.getSortHint());
      assertEquals(845L, tiffField0.getCount());
      assertEquals(6760, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeFloat0, (byte)0, 2769L, byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@5f47345 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(29, 29, fieldTypeAscii0, 29, 29, byteArray0, byteOrder0, 7);
      String string0 = tiffField0.getStringValue();
      assertEquals(29, tiffField0.getDirectoryType());
      assertEquals(29, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(29, tiffField0.getOffset());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(29, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(15, 15, fieldTypeShort0, 15, 15, byteArray0, byteOrder0, 15);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@2e40c26b
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(845, 845, fieldTypeRational0, 845, 845, byteArray0, byteOrder0, 845);
      String string0 = tiffField0.getTagName();
      assertEquals(845, tiffField0.getOffset());
      assertEquals(845, tiffField0.getSortHint());
      assertEquals(845, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x34d)", string0);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(401, 401, fieldTypeRational0, 401, 401, byteArray0, byteOrder0, 401);
      String string0 = tiffField0.getTagName();
      assertEquals(401, tiffField0.getSortHint());
      assertEquals(401, tiffField0.getDirectoryType());
      assertEquals(401, tiffField0.getOffset());
      assertEquals(401, tiffField0.getTag());
      assertEquals("ProfileType", string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(814, 814, fieldTypeRational0, 814, 814, byteArray0, byteOrder0, 814);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "org.apache.commons.io.filefilter.AbstractFileFilter");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      byte[] byteArray0 = new byte[71];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(52, 52, fieldTypeFloat0, 52, 52, byteArray0, byteOrder0, 52);
      tiffField0.dump();
      assertEquals(52, tiffField0.getDirectoryType());
      assertEquals(52, tiffField0.getTag());
      assertEquals(52, tiffField0.getOffset());
      assertEquals(52, tiffField0.getSortHint());
      assertEquals(208, tiffField0.getBytesLength());
      assertEquals(52L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(542, 542, fieldTypeByte0, 542, 542, byteArray0, byteOrder0, 542);
      String string0 = tiffField0.getValueDescription();
      assertEquals(542, tiffField0.getSortHint());
      assertEquals(542, tiffField0.getDirectoryType());
      assertEquals(542, tiffField0.getTag());
      assertEquals(542, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(542L, tiffField0.getCount());
      assertEquals(542, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[208];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(445, 445, fieldTypeFloat0, 445, 445, byteArray0, byteOrder0, 445);
      String string0 = tiffField0.getValueDescription();
      assertEquals(445, tiffField0.getOffset());
      assertEquals(1780, tiffField0.getBytesLength());
      assertEquals(445L, tiffField0.getCount());
      assertEquals(445, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(445, tiffField0.getDirectoryType());
      assertEquals(445, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[418];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50227, 50227, fieldTypeDouble0, 50227, 50227, byteArray0, byteOrder0, 50227);
      String string0 = tiffField0.toString();
      assertEquals(50227, tiffField0.getSortHint());
      assertEquals(50227, tiffField0.getDirectoryType());
      assertEquals(50227, tiffField0.getOffset());
      assertEquals(401816, tiffField0.getBytesLength());
      assertEquals("50227 (0xc433: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (50227 Double)", string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[81];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(76, 76, fieldTypeFloat0.DOUBLE, 76, 76, byteArray0, byteOrder0, 76);
      tiffField0.dump();
      assertEquals(76, tiffField0.getOffset());
      assertEquals(608, tiffField0.getBytesLength());
      assertEquals(76L, tiffField0.getCount());
      assertEquals(76, tiffField0.getDirectoryType());
      assertEquals(76, tiffField0.getSortHint());
      assertEquals(76, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[91];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50973, 50973, fieldTypeLong0, 50973, 50973, byteArray0, byteOrder0, 50973);
      tiffField0.dump();
      assertEquals(50973, tiffField0.getDirectoryType());
      assertEquals(50973L, tiffField0.getCount());
      assertEquals(203892, tiffField0.getBytesLength());
      assertEquals(50973, tiffField0.getSortHint());
      assertEquals(50973, tiffField0.getTag());
      assertEquals(50973, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[214];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1073, 45, fieldTypeLong0, 2261L, 1073, byteArray0, byteOrder0, 0);
      tiffField0.dump();
      assertEquals(9044, tiffField0.getBytesLength());
      assertEquals(2261L, tiffField0.getCount());
      assertEquals(1073, tiffField0.getTag());
      assertEquals(45, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1073, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[269];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(420, 420, fieldTypeShort0, 420, 420, byteArray0, byteOrder0, 420);
      String string0 = tiffField0.toString();
      assertEquals(840, tiffField0.getBytesLength());
      assertEquals(420, tiffField0.getSortHint());
      assertEquals(420, tiffField0.getDirectoryType());
      assertEquals("420 (0x1a4: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (134) (420 SShort)", string0);
      assertEquals(420, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[178];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(515, 515, fieldTypeByte0, 515, (byte)108, byteArray0, byteOrder0, (byte)108);
      tiffField0.dump();
      assertEquals(515, tiffField0.getDirectoryType());
      assertEquals(108, tiffField0.getOffset());
      assertEquals(515, tiffField0.getTag());
      assertEquals(515L, tiffField0.getCount());
      assertEquals(515, tiffField0.getBytesLength());
      assertEquals(108, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[53];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)107, (byte)107, fieldTypeAscii0, (byte)107, (byte)107, byteArray0, byteOrder0, (byte)107);
      String string0 = tiffField0.getValueDescription();
      assertEquals(107, tiffField0.getSortHint());
      assertEquals(107, tiffField0.getTag());
      assertEquals(107, tiffField0.getDirectoryType());
      assertEquals(107, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(107, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[91];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50973, 50973, fieldTypeLong0, 1L, 1L, byteArray0, byteOrder0, 50973);
      tiffField0.dump();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(50973, tiffField0.getTag());
      assertEquals(50973, tiffField0.getSortHint());
      assertEquals(50973, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)108, (byte)108, fieldTypeAscii0, (byte)108, (byte)108, byteArray0, byteOrder0, (byte)108);
      tiffField0.dump();
      assertEquals(108, tiffField0.getTag());
      assertEquals(108, tiffField0.getDirectoryType());
      assertEquals(108, tiffField0.getSortHint());
      assertEquals(108, tiffField0.getBytesLength());
      assertEquals(108, tiffField0.getOffset());
      assertEquals(108L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4355), 1866, fieldTypeByte0, 1866, (-4355), byteArray0, byteOrder0, 1866);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(65535, 2875);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(1866, tiffField0.getSortHint());
      assertNull(string0);
      assertEquals((-4355), tiffField0.getTag());
      assertEquals((-4355), tiffField0.getOffset());
      assertEquals(1866, tiffField0.getBytesLength());
      assertEquals(1866, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2148), 33, fieldTypeFloat0, 499, (-1301L), byteArray0, byteOrder0, 499);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(499, (-2148));
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertEquals(33, tiffField0.getDirectoryType());
      assertEquals(499, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
      assertEquals((-2148), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-1301), tiffField0.getOffset());
      assertEquals(499L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[28];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-123), (byte) (-123), fieldTypeAscii0.SSHORT, (byte) (-123), (byte) (-123), byteArray0, byteOrder0, (byte) (-123));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals((-123), tiffField0.getSortHint());
      assertEquals((-123), tiffField0.getOffset());
      assertEquals((-123), tiffField0.getTag());
      assertEquals((-123), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[91];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50973, 50973, fieldTypeLong0, 50973, 50973, byteArray0, byteOrder0, 50973);
      tiffField0.getFieldTypeName();
      assertEquals(50973, tiffField0.getOffset());
      assertEquals(50973, tiffField0.getSortHint());
      assertEquals(50973, tiffField0.getDirectoryType());
      assertEquals(50973L, tiffField0.getCount());
      assertEquals(50973, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-1263), fieldTypeFloat0, 27, (-1263), byteArray0, byteOrder0, 1584);
      String string0 = tiffField0.toString();
      assertEquals((-1263), tiffField0.getDirectoryType());
      assertEquals(1584, tiffField0.getSortHint());
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (27 Float)", string0);
      assertEquals((-1263), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(18, 18, fieldTypeFloat0.SSHORT, 18, 18, byteArray0, byteOrder0, 18);
      int int0 = tiffField0.getSortHint();
      assertEquals(18, tiffField0.getDirectoryType());
      assertEquals(18L, tiffField0.getCount());
      assertEquals(18, tiffField0.getTag());
      assertEquals(18, int0);
      assertEquals(18, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeShort0, 5, 5, byteArray0, byteOrder0, 5);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("5 (0x5: Unknown Tag): ", string0);
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getOffset());
      assertEquals(5L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(85, 76, (FieldType) null, 76, 76, byteArray0, byteOrder0, 85);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 32996, fieldTypeFloat0, 1L, 32996, byteArray0, byteOrder0, 32996);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeShort0, 5, 5, byteArray0, byteOrder0, 5);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(5L, tiffElement0.offset);
      assertEquals(5, tiffField0.getTag());
  }
}
