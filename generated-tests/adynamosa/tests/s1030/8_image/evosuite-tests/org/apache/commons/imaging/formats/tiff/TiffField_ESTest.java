/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 00:05:21 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "H~9E");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)50;
      byteArray0[4] = (byte)6;
      TiffField tiffField0 = new TiffField((byte)49, 1012, fieldTypeRational0, (byte)13, 2147483647L, byteArray0, (ByteOrder) null, 59);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(59, tiffField0.getSortHint());
      assertEquals(49, tiffField0.getTag());
      assertEquals(8, int0);
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(1012, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "H~9E");
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)6;
      TiffField tiffField0 = new TiffField((byte)49, 1012, fieldTypeRational0, (byte)13, 2147483647L, byteArray0, (ByteOrder) null, 59);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(1012, tiffField0.getDirectoryType());
      assertEquals(59, tiffField0.getSortHint());
      assertEquals(49, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3172, "ImageByteCount");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(50971, 1072, fieldTypeShort0, 2L, 50971, byteArray0, byteOrder0, (-941));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(50971, tiffField0.getOffset());
      assertTrue(boolean0);
      assertEquals((-941), tiffField0.getSortHint());
      assertEquals(50971, tiffField0.getTag());
      assertEquals(1072, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(34853, (byte)78, fieldTypeLong0, (byte)78, 608L, byteArray0, byteOrder0, 2270);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(608, tiffField0.getOffset());
      assertEquals(34853, tiffField0.getTag());
      assertEquals(78, tiffField0.getDirectoryType());
      assertEquals(2270, tiffField0.getSortHint());
      assertEquals(34853, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "");
      byte[] byteArray0 = new byte[9];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (-2685), fieldTypeLong0, 0, 1609L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(1609, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2685), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1431655764), (byte)4, fieldTypeShort0.FLOAT, 819L, (-1431655764), byteArray0, byteOrder0, (-300));
      int int0 = tiffField0.getTag();
      assertEquals((-1431655764), tiffField0.getOffset());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals((-300), tiffField0.getSortHint());
      assertEquals((-1431655764), int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-945), (-1), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeAscii0).SSHORT).ASCII, 1L, (byte)89, byteArray0, byteOrder0, 50);
      assertEquals(1, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(89, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-945), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(65535, 50, fieldTypeLong0, 65535, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1406), 1659, fieldTypeRational0, (-2147483648L), 3302L, byteArray0, byteOrder0, (-723));
      int int0 = tiffField0.getSortHint();
      assertEquals((-723), int0);
      assertEquals(3302, tiffField0.getOffset());
      assertEquals((-1406), tiffField0.getTag());
      assertEquals(1659, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(65535, 50, fieldTypeLong0, 65535, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3172, "ImageByteCount");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)6, (byte)6, fieldTypeShort0, 2370L, (-1329L), byteArray0, byteOrder0, 11);
      int int0 = tiffField0.getOffset();
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals((-1329), int0);
      assertEquals(6, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(65535, "");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)6;
      TiffField tiffField0 = new TiffField((-2146772088), 2147420212, fieldTypeRational0.SHORT, 1742L, (-1L), byteArray0, byteOrder0, 2147479551);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(3484, tiffField0.getBytesLength());
      assertEquals(2147479551, tiffField0.getSortHint());
      assertEquals(6, int0);
      assertEquals((-2146772088), tiffField0.getTag());
      assertEquals(2147420212, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte)123;
      byteArray0[7] = (byte)6;
      TiffField tiffField0 = new TiffField(1715, (byte)0, fieldTypeLong0, 2808L, 0L, byteArray0, byteOrder0, 4360);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1715, tiffField0.getTag());
      assertEquals(4360, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(11232, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2220, "QvM6~xcF'\"W$L4[m-");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-62), 45, fieldTypeByte0, (byte)1, 1020L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-62), tiffField0.getTag());
      assertEquals(1020, tiffField0.getOffset());
      assertEquals(45, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte)58;
      byteArray0[7] = (byte) (-13);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, 1, fieldTypeRational0, 1, 371L, byteArray0, byteOrder0, 27);
      tiffField0.getIntValue();
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
      assertEquals(371, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((byte) (-20), (String) null);
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-20), (byte) (-20), fieldTypeFloat0, (-827L), 4L, byteArray0, byteOrder0, 0);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-20), tiffField0.getDirectoryType());
      assertEquals((-20), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-5017), (-723), fieldTypeRational0, 2019L, (-723), byteArray0, byteOrder0, (-517));
      tiffField0.getFieldTypeName();
      assertEquals((-5017), tiffField0.getTag());
      assertEquals((-517), tiffField0.getSortHint());
      assertEquals((-723), tiffField0.getOffset());
      assertEquals((-723), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-787), (byte)3, (FieldType) null, 1280L, (byte) (-95), byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals((-787), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals((-95), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, (byte) (-65), fieldTypeRational0, 599L, (-1L), byteArray0, byteOrder0, (byte) (-11));
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-65), tiffField0.getDirectoryType());
      assertEquals((-11), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1376), "Fe=0");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1376), (-1376), fieldTypeShort0, (-1376), 3495L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals((-1376), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(3495, tiffField0.getOffset());
      assertEquals((-1376), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2220, "QvM6~xcF'\"W$L4[m-");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-62), 45, fieldTypeByte0, (byte)1, 1020L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleValue();
      assertEquals(1020, tiffField0.getOffset());
      assertEquals((-62), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(45, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-97);
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeRational0, 1L, 771L, byteArray0, byteOrder0, (-368));
      tiffField0.getDoubleValue();
      assertEquals(771, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-368), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 0, fieldTypeRational0, 1365L, 0, byteArray0, byteOrder0, (byte)6);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-136), (-1), fieldTypeRational0, (-1), 909L, byteArray0, byteOrder0, 1659);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1), int0);
      assertEquals((-136), tiffField0.getTag());
      assertEquals(909, tiffField0.getOffset());
      assertEquals(1659, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50737, 0, fieldTypeRational0, 0L, (-1877L), byteArray0, byteOrder0, 226);
      tiffField0.getCount();
      assertEquals(50737, tiffField0.getTag());
      assertEquals((-1877), tiffField0.getOffset());
      assertEquals(226, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-5017), (-723), fieldTypeRational0, 2019L, (-723), byteArray0, byteOrder0, (-517));
      tiffField0.getCount();
      assertEquals((-5017), tiffField0.getTag());
      assertEquals((-723), tiffField0.getOffset());
      assertEquals((-517), tiffField0.getSortHint());
      assertEquals((-723), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, (-2147483648L), (-351L), byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals((-351), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3172, "ImageByteCount");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3013, 3013, fieldTypeShort0.LONG, 630L, 3013, byteArray0, byteOrder0, 3013);
      int int0 = tiffField0.getBytesLength();
      assertEquals(2520, int0);
      assertEquals(3013, tiffField0.getDirectoryType());
      assertEquals(3013, tiffField0.getOffset());
      assertEquals(3013, tiffField0.getSortHint());
      assertEquals(3013, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-976), (-1431655764), fieldTypeRational0, (-976), (byte)50, byteArray0, byteOrder0, (-3127));
      int int0 = tiffField0.getBytesLength();
      assertEquals(50, tiffField0.getOffset());
      assertEquals((-3127), tiffField0.getSortHint());
      assertEquals((-7808), int0);
      assertEquals((-1431655764), tiffField0.getDirectoryType());
      assertEquals((-976), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(400, (-1), fieldTypeLong0, 3172, 1L, byteArray0, (ByteOrder) null, (byte) (-126));
      tiffField0.getByteOrder();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-126), tiffField0.getSortHint());
      assertEquals(400, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, (byte)98);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getTag());
      assertEquals(98, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(65535, "");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2146772088), 2147420212, fieldTypeRational0.SSHORT, 1742L, (-1L), byteArray0, byteOrder0, 2147479551);
      tiffField0.getByteArrayValue();
      assertEquals(2147479551, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(3484, tiffField0.getBytesLength());
      assertEquals(2147420212, tiffField0.getDirectoryType());
      assertEquals((-2146772088), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, (byte)98);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, byteArray1.length);
      assertEquals(98, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(0, 2145972399, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeDouble0).SHORT).FLOAT, (byte)90, 4L, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[81];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-42), (-236), fieldTypeDouble0, (-1688L), 1715L, byteArray0, byteOrder0, (-4448));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 34377, (FieldType) null, 34377, (-101L), byteArray0, byteOrder0, (byte) (-101));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1708), (-1708), fieldTypeRational0, (-974L), 255L, byteArray0, byteOrder0, (-1708));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[22];
      TiffField tiffField0 = new TiffField(894, (byte)50, fieldTypeLong0, (-1L), (byte)13, byteArray0, byteOrder0, (-682));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(41495, 50, fieldTypeRational0.SHORT, (-723), 0, byteArray0, byteOrder0, 2470);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1376), "Fe=0");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1376), (-1376), fieldTypeShort0, (-1376), 3495L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "W`Zuv");
      byte[] byteArray0 = new byte[3];
      char[] charArray0 = new char[6];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, (-409));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(303, "Z{+_F7Oid]tfH");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(303, 303, fieldTypeLong0, (-259L), 4L, byteArray0, byteOrder0, 3592);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(253, "- w'm~M1v=O");
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "- w'm~M1v=O");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1212), 253, fieldTypeByte0, 634L, 634L, byteArray0, byteOrder0, 2880);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1247), 37380, fieldTypeFloat0.SLONG, (-1247), 802L, byteArray0, byteOrder0, 1140);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 0, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2369, (-390), fieldTypeFloat0, (-390), (-390), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3172, "ImageByteCount");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(2833, (-723), fieldTypeShort0, 3172, (-1L), byteArray0, byteOrder0, (-774));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "ImageByteCount");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3172, "ImageByteCount");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-281), (byte)6, fieldTypeShort0, 2370L, (-1337L), byteArray0, byteOrder0, 11);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(33451, (byte)62, fieldTypeFloat0, (-17), (byte)104, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2147483646), "ImageByteCount");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(3172, 4103, fieldTypeRational0, 4103, 3276L, byteArray0, byteOrder0, (byte) (-126));
      MockFile mockFile0 = new MockFile("#@U)[~FH=m@!");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(50L, mockFile0.length());
      assertEquals(4103, tiffField0.getDirectoryType());
      assertEquals(3172, tiffField0.getTag());
      assertEquals((-126), tiffField0.getSortHint());
      assertEquals(3276, tiffField0.getOffset());
      assertEquals(32824, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1424, 1424, fieldTypeAscii0, 1424, 1424, byteArray0, byteOrder0, 1449);
      tiffField0.getFieldType();
      assertEquals(1424, tiffField0.getTag());
      assertEquals(1424, tiffField0.getOffset());
      assertEquals(1449, tiffField0.getSortHint());
      assertEquals(1424, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, (byte)98);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(351);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(34, charArrayWriter0.size());
      assertEquals("0 (0x0: Unknown Tag):  (0 Double)\n", charArrayWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[22];
      TiffField tiffField0 = new TiffField((byte)49, (-2146704726), fieldTypeLong0, (byte)49, (-698L), byteArray0, byteOrder0, 405);
      tiffField0.getValue();
      assertEquals(405, tiffField0.getSortHint());
      assertEquals((-698), tiffField0.getOffset());
      assertEquals(49, tiffField0.getTag());
      assertEquals(196, tiffField0.getBytesLength());
      assertEquals((-2146704726), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-269), ",KiRtI");
      byte[] byteArray0 = new byte[5];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(27, (-269), fieldTypeByte0, 27, (-269), byteArray0, byteOrder0, (byte)26);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tagInfo0.tag);
      assertEquals((-269), tiffField0.getDirectoryType());
      assertEquals(26, tiffField0.getSortHint());
      assertEquals((-269), tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1715, (byte)0, fieldTypeLong0, 2808L, 0L, byteArray0, byteOrder0, 4360);
      int int0 = tiffField0.getTag();
      assertEquals(4360, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1715, int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, (byte)98);
      int int0 = tiffField0.getBytesLength();
      assertEquals(98, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2220, "QvM6~xcF'\"W$L4[m-");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-62), 45, fieldTypeByte0, (byte)1, 1020L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleValue();
      assertEquals(1020, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-62), tiffField0.getTag());
      assertEquals(45, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2220, "QvM6~xcF'\"W$L4[m-");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-62), 45, fieldTypeByte0, (byte)1, 1020L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntValue();
      assertEquals((-62), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1020, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(45, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1424, 1424, fieldTypeAscii0, 1424, 1424, byteArray0, byteOrder0, 1449);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@3f227a3b for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1031), "");
      TiffField tiffField0 = new TiffField(50, 34712, fieldTypeFloat0, 1L, 35712L, byteArray0, byteOrder0, 406);
      tiffField0.getIntValueOrArraySum();
      assertEquals(35712, tiffField0.getOffset());
      assertEquals(34712, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(406, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, (byte)98);
      tiffField0.getDoubleArrayValue();
      assertEquals(98, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2141963124, (byte)104, fieldTypeFloat0, 6055L, (byte) (-11), byteArray0, byteOrder0, (byte)93);
      tiffField0.getDoubleArrayValue();
      assertEquals(2141963124, tiffField0.getTag());
      assertEquals(104, tiffField0.getDirectoryType());
      assertEquals(93, tiffField0.getSortHint());
      assertEquals(24220, tiffField0.getBytesLength());
      assertEquals((-11), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2142558226, (String) null);
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte) (-11), (-49), fieldTypeByte0, (byte)4, (-192L), byteArray0, byteOrder0, (-3203));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@21d4b39f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(34853, (byte)78, fieldTypeLong0, (byte)78, 608L, byteArray0, byteOrder0, 2270);
      tiffField0.getDoubleArrayValue();
      assertEquals(608, tiffField0.getOffset());
      assertEquals(34853, tiffField0.getTag());
      assertEquals(2270, tiffField0.getSortHint());
      assertEquals(78, tiffField0.getDirectoryType());
      assertEquals(312, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(3172, "ImageByteCount");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(120, 120, fieldTypeShort0, 2146L, 2147483647L, byteArray0, byteOrder0, 1568);
      tiffField0.getDoubleArrayValue();
      assertEquals(4292, tiffField0.getBytesLength());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(120, tiffField0.getTag());
      assertEquals(1568, tiffField0.getSortHint());
      assertEquals(120, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((byte) (-61), "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-5145), 50737, fieldTypeRational0, 821L, (byte) (-61), byteArray0, byteOrder0, 699);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(50737, tiffField0.getDirectoryType());
      assertEquals((-61), tiffField0.getOffset());
      assertEquals(6568, tiffField0.getBytesLength());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(699, tiffField0.getSortHint());
      assertEquals((-5145), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2220, "QvM6~xcF'\"W$L4[m-");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-62), 45, fieldTypeByte0, (byte)1, 1020L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleArrayValue();
      assertEquals(45, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-62), tiffField0.getTag());
      assertEquals(1020, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1715, (byte)0, fieldTypeLong0, 2808L, 0L, byteArray0, byteOrder0, 4360);
      tiffField0.getIntArrayValue();
      assertEquals(11232, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1715, tiffField0.getTag());
      assertEquals(4360, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1708), fieldTypeRational0.SSHORT, 2275L, (-1L), byteArray0, byteOrder0, 0);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(4550, tiffField0.getBytesLength());
      assertEquals((-1708), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((byte) (-61), "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-5145), 50737, fieldTypeRational0, 821L, (byte) (-61), byteArray0, byteOrder0, 699);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2147483646), "ImageByteCount");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(3172, 4103, fieldTypeRational0, 4103, 3276L, byteArray0, byteOrder0, (byte) (-126));
      tiffField0.getIntArrayValue();
      assertEquals(4103, tiffField0.getDirectoryType());
      assertEquals(3276, tiffField0.getOffset());
      assertEquals(32824, tiffField0.getBytesLength());
      assertEquals(3172, tiffField0.getTag());
      assertEquals((-126), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2220, "QvM6~xcF'\"W$L4[m-");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-62), 45, fieldTypeByte0, (byte)1, 1020L, byteArray0, byteOrder0, (byte)1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(45, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-62), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1020, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, (byte)98);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@77a4caf5 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte)6;
      TiffField tiffField0 = new TiffField((byte)6, 381, fieldTypeRational0.ASCII, 842L, 771L, byteArray0, byteOrder0, (-1128));
      String string0 = tiffField0.getStringValue();
      assertEquals(381, tiffField0.getDirectoryType());
      assertEquals(842, tiffField0.getBytesLength());
      assertEquals(771, tiffField0.getOffset());
      assertEquals((-1128), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(6, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)6, 381, fieldTypeRational0.ASCII, 842L, 771L, byteArray0, byteOrder0, (-1128));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@1f3acd4d
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2220, "QvM6~xcF'\"W$L4[m-");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-62), 45, fieldTypeByte0, (byte)1, 1020L, byteArray0, byteOrder0, (byte)1);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0xffffffc2)", string0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1020, tiffField0.getOffset());
      assertEquals(45, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40094, 40094, (FieldType) null, 40094, 40094, (byte[]) null, byteOrder0, 37392);
      String string0 = tiffField0.getTagName();
      assertEquals(40094, tiffField0.getOffset());
      assertEquals(37392, tiffField0.getSortHint());
      assertEquals(40094, tiffField0.getDirectoryType());
      assertEquals(40094, tiffField0.getTag());
      assertEquals("XPKeywords", string0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)64, (byte)109, fieldTypeRational0, 1, 2147483647L, byteArray0, byteOrder0, (byte)109);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.commons.imaging.formats.tiff.constants.AliasSketchbookProTagConstants");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      byte[] byteArray0 = new byte[221];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(0, 2145972399, fieldTypeDouble0.FLOAT, (byte)90, 4L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.toString();
      assertEquals(2145972399, tiffField0.getDirectoryType());
      assertEquals("0 (0x0: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (55) (90 Float)", string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(65497, 2145972399, fieldTypeFloat0, 802L, (-2752L), byteArray0, byteOrder0, 65497);
      String string0 = tiffField0.getValueDescription();
      assertEquals(802L, tiffField0.getCount());
      assertEquals(65497, tiffField0.getSortHint());
      assertEquals(65497, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(3208, tiffField0.getBytesLength());
      assertEquals(2145972399, tiffField0.getDirectoryType());
      assertEquals((-2752), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[56];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(1626, (byte)10, fieldTypeByte0, 138708L, (-2147483648L), byteArray0, byteOrder0, 2779);
      String string0 = tiffField0.getValueDescription();
      assertEquals(138708, tiffField0.getBytesLength());
      assertEquals(138708L, tiffField0.getCount());
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(2779, tiffField0.getSortHint());
      assertEquals(1626, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1536), (-1536), fieldTypeFloat0, 0L, 1L, byteArray0, (ByteOrder) null, (byte)50);
      tiffField0.dump();
      assertEquals((-1536), tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1536), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      byte[] byteArray0 = new byte[422];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(97, 97, fieldTypeDouble0, 97, 97, byteArray0, byteOrder0, 1234);
      String string0 = tiffField0.toString();
      assertEquals(97, tiffField0.getDirectoryType());
      assertEquals(1234, tiffField0.getSortHint());
      assertEquals("97 (0x61: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (97 Double)", string0);
      assertEquals(97, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, (byte)98);
      String string0 = tiffField0.getValueDescription();
      assertEquals(98, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[244];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50341, (-1054), fieldTypeDouble0.IFD, 50341, (byte)90, byteArray0, byteOrder0, (-2063));
      String string0 = tiffField0.toString();
      assertEquals("50341 (0xc4a5: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (61) (50341 IFD)", string0);
      assertEquals((-1054), tiffField0.getDirectoryType());
      assertEquals((-2063), tiffField0.getSortHint());
      assertEquals(90, tiffField0.getOffset());
      assertEquals(201364, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[22];
      TiffField tiffField0 = new TiffField((byte)49, (-2146704726), fieldTypeLong0, (byte)49, (-698L), byteArray0, byteOrder0, 405);
      String string0 = tiffField0.getValueDescription();
      assertEquals(405, tiffField0.getSortHint());
      assertEquals(196, tiffField0.getBytesLength());
      assertEquals(49L, tiffField0.getCount());
      assertEquals(49, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-698), tiffField0.getOffset());
      assertEquals((-2146704726), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[122];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((byte) (-56), (byte) (-56), fieldTypeDouble0.SSHORT, (byte)83, 277L, byteArray0, byteOrder0, 38);
      String string0 = tiffField0.toString();
      assertEquals("-56 (0xffffffc8: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (61) (83 SShort)", string0);
      assertEquals((-56), tiffField0.getDirectoryType());
      assertEquals(277, tiffField0.getOffset());
      assertEquals(38, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1198), 59, fieldTypeByte0, 59, 59, byteArray0, (ByteOrder) null, (-3416));
      String string0 = tiffField0.getValueDescription();
      assertEquals(59, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(59L, tiffField0.getCount());
      assertEquals((-3416), tiffField0.getSortHint());
      assertEquals((-1198), tiffField0.getTag());
      assertEquals(59, tiffField0.getOffset());
      assertEquals(59, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[52];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(62, 62, fieldTypeAscii0, 62, 113, byteArray0, byteOrder0, 20);
      tiffField0.toString();
      assertEquals(20, tiffField0.getSortHint());
      assertEquals(62L, tiffField0.getCount());
      assertEquals(62, tiffField0.getBytesLength());
      assertEquals(62, tiffField0.getDirectoryType());
      assertEquals(62, tiffField0.getTag());
      assertEquals(113, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-65), (-1), fieldTypeAscii0, 0L, 319L, byteArray0, byteOrder0, (byte)88);
      tiffField0.toString();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(319, tiffField0.getOffset());
      assertEquals((-65), tiffField0.getTag());
      assertEquals(88, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-25), (-2169), fieldTypeShort0, 1L, (-2580L), byteArray0, byteOrder0, (byte)10);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(10, tiffField0.getSortHint());
      assertEquals((-2169), tiffField0.getDirectoryType());
      assertEquals((-2580), tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-25), tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte)0, fieldTypeAscii0, (byte)0, (-1L), byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, (byte) (-65), fieldTypeRational0, 599L, (-1L), byteArray0, byteOrder0, (byte) (-11));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals((-1L), tiffElement0.offset);
      assertEquals((-11), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-65), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 326, fieldTypeLong0, 1082L, 1, byteArray0, byteOrder0, 2667);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)1, (byte) (-40));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(2667, tiffField0.getSortHint());
      assertEquals(1082L, tiffField0.getCount());
      assertEquals(326, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1424, 1424, fieldTypeAscii0, 1424, 1424, byteArray0, byteOrder0, 1449);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1424, tiffField0.getDirectoryType());
      assertEquals(1449, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(1424, tiffField0.getTag());
      assertEquals(1424, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(5975, 5975, fieldTypeLong0, 3276L, 65535, byteArray0, byteOrder0, 65535);
      tiffField0.getFieldTypeName();
      assertEquals(5975, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(5975, tiffField0.getTag());
      assertEquals(3276L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-65), (-1), fieldTypeAscii0, 0L, 319L, byteArray0, byteOrder0, (byte) (-126));
      int int0 = tiffField0.getOffset();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-126), tiffField0.getSortHint());
      assertEquals((-65), tiffField0.getTag());
      assertEquals(0L, tiffField0.getCount());
      assertEquals(319, int0);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(65535, "");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2146772088), 2147420212, fieldTypeRational0.SHORT, 1742L, (-1L), byteArray0, byteOrder0, 2147479551);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2146772088), tiffField0.getTag());
      assertEquals(2147420212, int0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1742L, tiffField0.getCount());
      assertEquals(2147479551, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 401, fieldTypeDouble0, (-1770L), 0, byteArray0, byteOrder0, 50717);
      int int0 = tiffField0.getSortHint();
      assertEquals(401, tiffField0.getDirectoryType());
      assertEquals(50717, int0);
      assertEquals((-1770L), tiffField0.getCount());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2220, "QvM6~xcF'\"W$L4[m-");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-62), 45, fieldTypeByte0, (byte)1, 1020L, byteArray0, byteOrder0, (byte)1);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(45, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals("-62 (0xffffffc2: Unknown Tag): ", string0);
      assertEquals(1020, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40094, 40094, (FieldType) null, 40094, 40094, (byte[]) null, byteOrder0, 37392);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, (byte)98);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(0, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Double", string0);
      assertNotNull(string0);
      assertEquals(98, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }
}
