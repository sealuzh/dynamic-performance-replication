/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 20:36:16 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[][] intArray0 = new int[17][8];
      int[] intArray1 = new int[1];
      CharClass charClass0 = new CharClass(intArray1);
      // Undeclared exception!
      charClass0.appendNegatedTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = (-82);
      intArray0[1] = 1114112;
      intArray0[2] = 1114112;
      intArray0[0] = 1114112;
      intArray0[5] = 1114112;
      CharClass charClass0 = new CharClass();
      int[][] intArray1 = new int[1][7];
      intArray1[0] = intArray0;
      charClass0.appendTableWithSign(intArray1, (-82));
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][4];
      charClass0.negateClass();
      charClass0.appendTableWithSign(intArray0, (-2));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[][] intArray0 = new int[0][8];
      int[] intArray1 = new int[1];
      CharClass charClass0 = new CharClass(intArray1);
      charClass0.appendNegatedTable(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.appendRange((-2818), (-2818));
      charClass0.appendLiteral(66640, 66640);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[][] intArray0 = new int[1][8];
      int[] intArray1 = new int[10];
      CharClass charClass0 = new CharClass(intArray1);
      charClass0.appendLiteral((-4058), (-4058));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[16];
      intArray0[0] = (-1);
      intArray0[1] = 1;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendLiteral((-1), (-1));
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][4];
      charClass0.appendTable(intArray0);
      charClass0.appendTableWithSign(intArray0, (-2));
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      CharClass charClass1 = charClass0.appendClass(intArray0);
      int[][] intArray1 = new int[3][2];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      // Undeclared exception!
      try { 
        charClass1.appendTableWithSign(intArray1, 6176);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.negateClass();
      charClass0.toString();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral((-1875), (-1875));
      charClass1.toArray();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[][] intArray0 = new int[0][8];
      int[] intArray1 = new int[4];
      CharClass charClass0 = new CharClass(intArray1);
      CharClass charClass1 = charClass0.appendNegatedTable(intArray0);
      charClass1.cleanClass();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[1] = 1;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
      charClass0.toString();
      charClass0.appendClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      intArray0[1] = (-292);
      intArray0[2] = 4097;
      CharClass charClass1 = new CharClass(intArray0);
      charClass1.cleanClass();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 11533;
      intArray0[1] = (-83);
      intArray0[2] = 261;
      intArray0[3] = 91;
      intArray0[4] = 4;
      intArray0[5] = 91;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendLiteral(4044, 817);
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 11533;
      intArray0[1] = (-83);
      intArray0[2] = 261;
      intArray0[3] = 91;
      intArray0[4] = 4;
      intArray0[5] = 574;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.cleanClass();
      charClass0.toArray();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[6];
      intArray0[0] = 620;
      intArray0[1] = (-3203);
      charClass0.appendLiteral(620, (-3203));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[2];
      int int0 = 3027;
      intArray0[0] = 3027;
      intArray0[1] = 120050;
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      charClass0.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[21];
      intArray0[1] = (-3203);
      // Undeclared exception!
      try { 
        charClass0.appendClassWithSign(intArray0, (-3203));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 21
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendClassWithSign(intArray0, 1);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[1];
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendClassWithSign(intArray0, 64256);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      charClass0.appendClassWithSign(intArray0, (-751));
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[6];
      intArray0[0] = (-82);
      intArray0[1] = 119175;
      intArray0[2] = 119175;
      intArray0[3] = (-82);
      intArray0[0] = 119175;
      intArray0[5] = 119175;
      int[][] intArray1 = new int[1][7];
      intArray1[0] = intArray0;
      CharClass charClass1 = charClass0.appendTable(intArray1);
      charClass1.toArray();
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(0, 0);
      charClass0.toString();
      charClass1.negateClass();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(1114111, 1114111);
      charClass1.negateClass();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      int[] intArray0 = new int[3];
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.negateClass();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      CharClass charClass2 = charClass1.negateClass();
      CharClass charClass3 = charClass2.appendFoldedRange((-1395), 65);
      charClass3.appendLiteral(2, 0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange(1062, 1062);
      // Undeclared exception!
      try { 
        charClass1.appendClass((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int[][] intArray0 = new int[0][8];
      int[] intArray1 = new int[6];
      CharClass charClass0 = new CharClass(intArray1);
      CharClass charClass1 = charClass0.appendNegatedTable(intArray0);
      charClass1.cleanClass();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[1] = 2193;
      intArray0[7] = (-1732);
      intArray0[4] = 209;
      intArray0[5] = 66662;
      intArray0[6] = (-1640);
      intArray0[7] = 32;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = (-82);
      intArray0[1] = 1114112;
      intArray0[2] = 1114112;
      intArray0[0] = 1114112;
      intArray0[5] = 1114112;
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      charClass1.toString();
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[1] = 120050;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendFoldedClass(intArray0);
      charClass0.cleanClass();
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 120050);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArray0 = new int[4][8];
      int[] intArray1 = new int[6];
      intArray1[0] = 1;
      intArray1[1] = 984;
      intArray1[2] = 1;
      intArray1[3] = 1605;
      intArray1[4] = 1625;
      intArray1[5] = 1171;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = 1605;
      intArray2[1] = 1;
      intArray2[3] = 984;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[7];
      intArray3[0] = 984;
      intArray3[1] = 1625;
      intArray3[2] = 1171;
      intArray3[0] = 984;
      intArray3[4] = 1;
      intArray3[5] = 1;
      intArray3[6] = 1171;
      intArray0[2] = intArray3;
      intArray0[3] = intArray3;
      charClass1.appendTableWithSign(intArray0, 1);
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray3, 1605);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[6][7];
      int[] intArray1 = new int[6];
      intArray1[0] = 612;
      intArray1[2] = 1;
      intArray1[3] = 612;
      intArray1[4] = 196;
      intArray1[5] = (-1);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[8];
      intArray2[0] = 1;
      intArray2[1] = 1;
      intArray2[2] = 1;
      intArray2[3] = 612;
      intArray2[4] = 1;
      intArray2[5] = 1;
      intArray2[6] = 612;
      intArray2[7] = 612;
      intArray0[1] = intArray2;
      charClass0.appendNegatedTable(intArray0);
      charClass0.appendNegatedTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      int[][] intArray0 = new int[10][8];
      int[] intArray1 = new int[10];
      CharClass charClass0 = new CharClass(intArray1);
      CharClass charClass1 = charClass0.appendFoldedRange((-570), (-570));
      CharClass charClass2 = charClass1.appendClass(intArray1);
      charClass0.toString();
      charClass0.appendNegatedClass(intArray1);
      charClass2.toArray();
  }
}
