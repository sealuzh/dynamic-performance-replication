/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 14:21:14 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedWriter;
import java.io.CharArrayWriter;
import java.io.DataOutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte) (-20), 4, fieldTypeByte0, 4, 2896L, byteArray0, byteOrder0, (-424));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-424), tiffField0.getSortHint());
      assertEquals(2896, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-20), tiffField0.getTag());
      assertEquals(4, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[109];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(273, 530, fieldTypeLong0, 530, 1L, byteArray0, byteOrder0, 273);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tagInfo0.length);
      assertEquals(273, tiffField0.getSortHint());
      assertEquals(273, tiffField0.getTag());
      assertEquals(530, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, "yLC;t4j7k`~R8{M");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, (byte) (-106));
      int int0 = tiffField0.getTag();
      assertEquals((-106), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2751, (-1577), fieldTypeByte0, 0L, 147L, byteArray0, (ByteOrder) null, 1634);
      int int0 = tiffField0.getTag();
      assertEquals((-1577), tiffField0.getDirectoryType());
      assertEquals(1634, tiffField0.getSortHint());
      assertEquals(147, tiffField0.getOffset());
      assertEquals(2751, int0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-97);
      byteArray0[1] = (byte)74;
      byteArray0[2] = (byte) (-92);
      CharBuffer charBuffer0 = CharBuffer.allocate(34310);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(271, 271, fieldTypeAscii0, 271, 271, byteArray0, byteOrder0, (byte) (-97));
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(271, tiffField0.getDirectoryType());
      assertEquals((-97), tiffField0.getSortHint());
      assertEquals(271, tiffField0.getTag());
      assertEquals(271, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-104), (byte)0, fieldTypeByte0, (byte)0, (byte) (-10), byteArray0, (ByteOrder) null, 1);
      int int0 = tiffField0.getSortHint();
      assertEquals((-10), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-104), tiffField0.getTag());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeRational0, 1950L, 100L, byteArray0, byteOrder0, (byte) (-74));
      int int0 = tiffField0.getSortHint();
      assertEquals(100, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-74), int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1033, 1033, fieldTypeLong0, 1033, 1033, byteArray0, (ByteOrder) null, (byte) (-120));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1033L, tiffElement0.offset);
      assertEquals(1033, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(1033, tiffField0.getTag());
      assertEquals((-120), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(34713, 5, fieldTypeByte0, 5, (-365L), (byte[]) null, byteOrder0, 5);
      int int0 = tiffField0.getOffset();
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(34713, tiffField0.getTag());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals((-365), int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[10];
      byteArray0[0] = (byte) (-6);
      TiffField tiffField0 = new TiffField(238, 1093, fieldTypeLong0.SHORT, 1093, (byte) (-6), byteArray0, (ByteOrder) null, 238);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(238, tiffField0.getSortHint());
      assertEquals(238, tiffField0.getTag());
      assertEquals(1093, tiffField0.getDirectoryType());
      assertEquals(250, int0);
      assertEquals((-6), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[11];
      byteArray0[3] = (byte) (-25);
      byteArray0[5] = (byte)92;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-25), 377, fieldTypeRational0, 255L, 377, byteArray0, byteOrder0, (byte) (-25));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(377, tiffField0.getDirectoryType());
      assertEquals((-25), tiffField0.getSortHint());
      assertEquals((-17808), int0);
      assertEquals(377, tiffField0.getOffset());
      assertEquals((-25), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, (-1398), fieldTypeByte0, 1, (-1398), byteArray0, byteOrder0, (-1398));
      tiffField0.getIntValue();
      assertEquals((-1398), tiffField0.getSortHint());
      assertEquals((-1398), tiffField0.getOffset());
      assertEquals((-1398), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)2;
      TiffField tiffField0 = new TiffField(1897, (byte) (-10), fieldTypeByte0, 1L, 1, byteArray0, (ByteOrder) null, 2);
      tiffField0.getIntValue();
      assertEquals(1897, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-10), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-123);
      TiffField tiffField0 = new TiffField((-60), 1, fieldTypeByte0, 1, 2076L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValue();
      assertEquals((-60), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2076, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(5, (String) null);
      TiffField tiffField0 = new TiffField(1043, 5, fieldTypeLong0, 1136L, 1136L, (byte[]) null, byteOrder0, 5);
      tiffField0.getFieldTypeName();
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(1043, tiffField0.getTag());
      assertEquals(1136, tiffField0.getOffset());
      assertEquals(5, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-2360), "");
      TiffField tiffField0 = new TiffField(65535, (byte) (-1), fieldTypeByte0, (-1460L), (byte) (-17), (byte[]) null, byteOrder0, 318);
      tiffField0.getFieldTypeName();
      assertEquals((-17), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(318, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 597L, byteArray0, byteOrder0, 2216);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(597, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2216, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeRational0, 1589, (byte) (-25), byteArray0, byteOrder0, 322);
      tiffField0.getFieldType();
      assertEquals(2, tiffField0.getTag());
      assertEquals(322, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals((-25), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-518), "Zpp0)");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(1982292598, (-518), fieldTypeShort0, (-518), (-3054L), byteArray0, (ByteOrder) null, (byte) (-70));
      tiffField0.getFieldType();
      assertEquals(1982292598, tiffField0.getTag());
      assertEquals((-518), tiffField0.getDirectoryType());
      assertEquals((-3054), tiffField0.getOffset());
      assertEquals((-70), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(9, (byte)0, fieldTypeByte0.LONG, 1L, (byte)0, byteArray0, byteOrder0, 563);
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(9, tiffField0.getTag());
      assertEquals(563, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)24;
      TiffField tiffField0 = new TiffField(9, (byte)24, fieldTypeByte0.SLONG, 1L, (byte)24, byteArray0, byteOrder0, 563);
      tiffField0.getDoubleValue();
      assertEquals(24, tiffField0.getOffset());
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(9, tiffField0.getTag());
      assertEquals(563, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-56);
      TiffField tiffField0 = new TiffField(933, 933, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte)5);
      tiffField0.getDoubleValue();
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(933, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(933, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4, (byte)0, fieldTypeLong0, 4, (byte) (-20), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(4, tiffField0.getTag());
      assertEquals((-20), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3763, (String) null);
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, (-4178), fieldTypeByte0, (byte) (-104), 255L, byteArray0, byteOrder0, 3763);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-4178), int0);
      assertEquals(255, tiffField0.getOffset());
      assertEquals(3763, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2146403424, 1, fieldTypeFloat0, (byte)0, 24, byteArray0, (ByteOrder) null, 2146403424);
      tiffField0.getCount();
      assertEquals(24, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2146403424, tiffField0.getSortHint());
      assertEquals(2146403424, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeByte0, 5, 5, (byte[]) null, byteOrder0, 5);
      tiffField0.getCount();
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getTag());
      assertEquals(5, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-57), 50727, fieldTypeRational0, 0L, (byte)76, byteArray0, byteOrder0, 690);
      tiffField0.getBytesLength();
      assertEquals((-57), tiffField0.getTag());
      assertEquals(50727, tiffField0.getDirectoryType());
      assertEquals(690, tiffField0.getSortHint());
      assertEquals(76, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(238, 1093, fieldTypeLong0.SHORT, 1093, (byte) (-6), byteArray0, (ByteOrder) null, 238);
      tiffField0.getBytesLength();
      assertEquals(1093, tiffField0.getDirectoryType());
      assertEquals((-6), tiffField0.getOffset());
      assertEquals(238, tiffField0.getSortHint());
      assertEquals(238, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-2903), fieldTypeByte0, 682L, (-2903), byteArray0, byteOrder0, 2177);
      tiffField0.getByteOrder();
      assertEquals((-2903), tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-2903), tiffField0.getDirectoryType());
      assertEquals(2177, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(5, 50, fieldTypeByte0, 0L, (byte) (-1), byteArray0, byteOrder0, (-1719));
      tiffField0.getByteArrayValue();
      assertEquals((-1719), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeByte0, 5, 5, (byte[]) null, byteOrder0, 5);
      PipedInputStream pipedInputStream0 = new PipedInputStream(5);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      DataOutputStream dataOutputStream0 = new DataOutputStream(pipedOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dataOutputStream0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "Compression");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(475, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(475, 475, fieldTypeFloat0, 2669L, 318, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeLong0, (-2971L), 0, byteArray0, byteOrder0, (byte)19);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1836), 0, fieldTypeByte0, 0, (-3411L), (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)0, (-123), fieldTypeByte0, (-943L), 9L, byteArray0, (ByteOrder) null, (byte) (-104));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeByte0, 5, 5, (byte[]) null, byteOrder0, 5);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1650, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(504, 1, fieldTypeByte0, (byte) (-41), (-1L), byteArray0, byteOrder0, 50975);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3763, (String) null);
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, (-4178), fieldTypeByte0, (byte) (-104), 255L, byteArray0, byteOrder0, 3763);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-4734), (-4734), fieldTypeRational0, 1L, 4L, byteArray0, byteOrder0, 3725);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(5, (String) null);
      TiffField tiffField0 = new TiffField(1043, 5, fieldTypeLong0, 1136L, 1136L, (byte[]) null, byteOrder0, 5);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-766), (-1), fieldTypeFloat0, (-766), 0L, byteArray0, byteOrder0, 4);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeByte0, 5, 5, (byte[]) null, byteOrder0, 5);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(475, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(318, 318, fieldTypeFloat0, (-1L), 475, byteArray0, byteOrder0, (byte) (-109));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 1, (int) (byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, (-965L), 1, byteArray0, byteOrder0, (-4484));
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      BufferedWriter bufferedWriter0 = new BufferedWriter(charArrayWriter0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedWriter0, true);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3763, (String) null);
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-614), 2751, fieldTypeByte0, (-2491L), 3763, byteArray0, (ByteOrder) null, 3763);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-70), fieldTypeByte0, 50931, 50, byteArray0, byteOrder0, 50931);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeByte0, 5, 5, byteArray0, byteOrder0, 5);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(5, tiffField0.getOffset());
      assertFalse(boolean0);
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-104), (byte)0, fieldTypeByte0, (byte)0, (byte) (-10), byteArray0, (ByteOrder) null, 1);
      tiffField0.getByteOrder();
      assertEquals((-104), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-10), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 377, fieldTypeByte0, 1, 4, byteArray0, byteOrder0, 1);
      tiffField0.getByteArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(377, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[47];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, (FieldType) null, 65535, 65535, byteArray0, byteOrder0, (-2847));
      tiffField0.getFieldType();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals((-2847), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2051), "GPSInfo");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 34712, fieldTypeShort0, 0L, 777L, byteArray0, byteOrder0, 301);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(777, tiffField0.getOffset());
      assertEquals(34712, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(301, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1661), 4, fieldTypeByte0, 562L, (byte) (-23), byteArray0, byteOrder0, (byte) (-23));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(606, 11, fieldTypeByte0, 65469, 1L, byteArray0, byteOrder0, 606);
      tiffField0.getValue();
      assertEquals(606, tiffField0.getTag());
      assertEquals(606, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeByte0, 5, 5, (byte[]) null, byteOrder0, 5);
      int int0 = tiffField0.getOffset();
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(5, int0);
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1661), 4, fieldTypeByte0, 562L, (byte) (-23), byteArray0, byteOrder0, (byte) (-23));
      tiffField0.getTagInfo();
      assertEquals((-23), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals((-23), tiffField0.getOffset());
      assertEquals((-1661), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1770), (-1770), fieldTypeByte0, (-1770), 1380L, (byte[]) null, byteOrder0, (-1580));
      int int0 = tiffField0.getTag();
      assertEquals((-1770), int0);
      assertEquals((-1580), tiffField0.getSortHint());
      assertEquals(1380, tiffField0.getOffset());
      assertEquals((-1770), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-957), (-957), fieldTypeByte0, (-601L), 2147483647L, (byte[]) null, byteOrder0, 65535);
      tiffField0.getCount();
      assertEquals((-957), tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals((-957), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(163, 5, fieldTypeByte0, (-1974L), 163, byteArray0, byteOrder0, 5);
      tiffField0.getBytesLength();
      assertEquals(163, tiffField0.getOffset());
      assertEquals(163, tiffField0.getTag());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(5, (String) null);
      TiffField tiffField0 = new TiffField(1043, 5, fieldTypeLong0, 1136L, 1136L, (byte[]) null, byteOrder0, 5);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("1043 (0x413: Unknown Tag): ", string0);
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(1136, tiffField0.getOffset());
      assertEquals(5, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4, (byte) (-6), fieldTypeLong0, 4, (byte)0, byteArray0, byteOrder0, (byte) (-6));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1661), 4, fieldTypeByte0, 562L, 1L, byteArray0, byteOrder0, (byte) (-13));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4, (byte)0, fieldTypeLong0, 4, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField((byte) (-6), (byte)0, fieldTypeRational0, 266L, 1L, byteArray0, (ByteOrder) null, (-607));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2210, 2156, fieldTypeByte0, 1L, (-2087L), byteArray0, byteOrder0, (byte) (-41));
      tiffField0.getIntValueOrArraySum();
      assertEquals(2156, tiffField0.getDirectoryType());
      assertEquals((-41), tiffField0.getSortHint());
      assertEquals(2210, tiffField0.getTag());
      assertEquals((-2087), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-104), (byte)0, fieldTypeByte0, (byte)0, (byte) (-10), byteArray0, (ByteOrder) null, 1);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@2685bc7f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-580), 13, fieldTypeByte0, 0L, (-2147483648L), byteArray0, byteOrder0, 783);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@6bf8335d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeFloat0, (byte)47, 156L, byteArray0, byteOrder0, 2142101483);
      tiffField0.getDoubleArrayValue();
      assertEquals(2142101483, tiffField0.getSortHint());
      assertEquals(156, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      CharBuffer charBuffer0 = CharBuffer.allocate(34892);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(7, (-903), fieldTypeLong0, 1841L, (-3116L), byteArray0, byteOrder0, (byte)50);
      tiffField0.getDoubleArrayValue();
      assertEquals((-3116), tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getTag());
      assertEquals((-903), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(3877, 4249, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeByte0).SLONG).DOUBLE, 3877, 1495, byteArray0, byteOrder0, 50);
      tiffField0.getDoubleArrayValue();
      assertEquals(1495, tiffField0.getOffset());
      assertEquals(4249, tiffField0.getDirectoryType());
      assertEquals(3877, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte)0, 2136582715, fieldTypeFloat0.SHORT, 24, (byte)0, byteArray0, (ByteOrder) null, 2136582715);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2136582715, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2136582715, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(377, (byte)76, fieldTypeRational0, (byte)76, (byte)76, byteArray0, byteOrder0, (byte) (-25));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-25), tiffField0.getSortHint());
      assertEquals(377, tiffField0.getTag());
      assertEquals(76, tiffField0.getDirectoryType());
      assertEquals(76, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1897, (byte) (-10), fieldTypeByte0, 1L, 1, byteArray0, (ByteOrder) null, 2);
      tiffField0.getDoubleArrayValue();
      assertEquals(2, tiffField0.getSortHint());
      assertEquals((-10), tiffField0.getDirectoryType());
      assertEquals(1897, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[54];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0.ASCII, 65535, 65535, byteArray0, byteOrder0, 65535);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@1c5f86c7 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[109];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(273, 530, fieldTypeLong0, 530, 1L, byteArray0, byteOrder0, 273);
      tiffField0.getIntArrayValue();
      assertEquals(530, tiffField0.getDirectoryType());
      assertEquals(273, tiffField0.getSortHint());
      assertEquals(273, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-606), 377, fieldTypeRational0, 255L, 377, byteArray0, byteOrder0, (byte) (-25));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 377, fieldTypeByte0, 1, 4, byteArray0, byteOrder0, 1);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(377, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[23];
      TiffField tiffField0 = new TiffField(7, 1508, fieldTypeFloat0.SHORT, 7, 7, byteArray0, (ByteOrder) null, (byte)0);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 0, 0}, intArray0);
      assertEquals(7, tiffField0.getOffset());
      assertEquals(7, tiffField0.getTag());
      assertEquals(1508, tiffField0.getDirectoryType());
      assertEquals(7L, tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1316), 2144428913, fieldTypeLong0.ASCII, 0L, (-2005L), byteArray0, byteOrder0, 2073432489);
      String string0 = tiffField0.getStringValue();
      assertEquals((-2005), tiffField0.getOffset());
      assertEquals(2073432489, tiffField0.getSortHint());
      assertEquals((-1316), tiffField0.getTag());
      assertEquals(2144428913, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, (-1398), fieldTypeByte0, 1, (-1398), byteArray0, byteOrder0, (-1398));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(1 (0x1: InteroperabilityIndex): ): 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-482), 0, fieldTypeFloat0, 1630L, 1630L, (byte[]) null, byteOrder0, (-549));
      String string0 = tiffField0.getTagName();
      assertEquals(1630, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-549), tiffField0.getSortHint());
      assertEquals("Unknown Tag (0xfffffe1e)", string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(3763, (String) null);
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, (-4178), fieldTypeByte0, (byte) (-104), 255L, byteArray0, byteOrder0, 3763);
      String string0 = tiffField0.getTagName();
      assertEquals((-4178), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
      assertEquals(3763, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals("InteroperabilityVersion", string0);
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeByte0, 5, 5, byteArray0, byteOrder0, 5);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[54];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-1), 31, fieldTypeFloat0, 31, 31, byteArray0, byteOrder0, (-1));
      String string0 = tiffField0.getValueDescription();
      assertEquals(31, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(31, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(31L, tiffField0.getCount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(606, 11, fieldTypeByte0, 65469, 1L, byteArray0, byteOrder0, 606);
      String string0 = tiffField0.toString();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(606, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getDirectoryType());
      assertEquals("606 (0x25e: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (65) (65469 Undefined)", string0);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeByte0, 5, 5, byteArray0, byteOrder0, 5);
      tiffField0.dump();
      assertEquals(5, tiffField0.getTag());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(5L, tiffField0.getCount());
      assertEquals(5, tiffField0.getOffset());
      assertEquals(5, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      byte[] byteArray0 = new byte[36];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(65535, 22, fieldTypeDouble0, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(22, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[210];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-1100), 1075, fieldTypeLong0, 2056L, 1075, byteArray0, byteOrder0, 4463);
      String string0 = tiffField0.toString();
      assertEquals(4463, tiffField0.getSortHint());
      assertEquals("-1100 (0xfffffbb4: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (2056 IFD)", string0);
      assertEquals(1075, tiffField0.getDirectoryType());
      assertEquals(1075, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[210];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(3664, (-1100), fieldTypeLong0, (-2147483648L), 0L, byteArray0, byteOrder0, (-1100));
      assertEquals(0, tiffField0.getBytesLength());
      
      String string0 = tiffField0.toString();
      assertEquals("3664 (0xe50: Unknown Tag):  (-2147483648 IFD)", string0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1100), tiffField0.getSortHint());
      assertEquals((-1100), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[111];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(614, 18, fieldTypeShort0, 1050L, 614, byteArray0, byteOrder0, 1126);
      String string0 = tiffField0.toString();
      assertEquals("614 (0x266: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (55) (1050 SShort)", string0);
      assertEquals(614, tiffField0.getOffset());
      assertEquals(18, tiffField0.getDirectoryType());
      assertEquals(1126, tiffField0.getSortHint());
      assertEquals(2100, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[82];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(80, 80, fieldTypeShort0, 80, 80, byteArray0, byteOrder0, 80);
      String string0 = tiffField0.toString();
      assertEquals(80, tiffField0.getDirectoryType());
      assertEquals(80, tiffField0.getSortHint());
      assertEquals(80, tiffField0.getOffset());
      assertEquals("80 (0x50: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (80 SShort)", string0);
      assertEquals(160, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField((byte) (-6), (byte)0, fieldTypeRational0, 266L, 1L, byteArray0, (ByteOrder) null, (-607));
      String string0 = tiffField0.getValueDescription();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-6), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-607), tiffField0.getSortHint());
      assertEquals(2128, tiffField0.getBytesLength());
      assertEquals(266L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[54];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0.ASCII, 65535, 65535, byteArray0, byteOrder0, 65535);
      tiffField0.toString();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1316), 2144428913, fieldTypeLong0.ASCII, 0L, (-2005L), byteArray0, byteOrder0, 2073432489);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2073432489, tiffField0.getSortHint());
      assertEquals((-1316), tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(2144428913, tiffField0.getDirectoryType());
      assertEquals((-2005), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-6), 6, fieldTypeLong0.FLOAT, (-3191L), 255L, byteArray0, byteOrder0, (-1));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals((-6), tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-766), (-1), fieldTypeFloat0, (-766), 0L, byteArray0, byteOrder0, 4);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-766), (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals((-766), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals((-3064), tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte) (-20), 4, fieldTypeByte0, 4, 2896L, byteArray0, byteOrder0, (-424));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-20), tiffField0.getTag());
      assertEquals((-424), tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(2896, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-104), (byte)0, fieldTypeByte0, (byte)0, (byte) (-10), byteArray0, (ByteOrder) null, 1);
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-104), tiffField0.getTag());
      assertEquals((-10), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeByte0, 5, 1L, (byte[]) null, byteOrder0, 5);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(0, (-1149), fieldTypeDouble0, 0, 1L, (byte[]) null, (ByteOrder) null, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0L, tiffField0.getCount());
      assertEquals((-1149), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[50];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(28, (-3157), fieldTypeDouble0, (-76480L), 1825L, byteArray0, byteOrder0, (-3157));
      String string0 = tiffField0.toString();
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (-76480 Double)", string0);
      assertEquals((-3157), tiffField0.getDirectoryType());
      assertEquals((-3157), tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
      assertEquals(1825, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-10), 8, fieldTypeByte0, 1, 1, byteArray0, (ByteOrder) null, 1);
      tiffField0.dump();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-10), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[210];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "t/&ScUt+/\"q`=#)^P");
      TiffField tiffField0 = new TiffField(105, 3664, fieldTypeFloat0, 105, 695L, byteArray0, byteOrder0, 133);
      String string0 = tiffField0.getValueDescription();
      assertEquals(695, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(420, tiffField0.getBytesLength());
      assertEquals(105, tiffField0.getTag());
      assertEquals(133, tiffField0.getSortHint());
      assertEquals(3664, tiffField0.getDirectoryType());
      assertEquals(105L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(33451, "CameraCalibration2");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 61, fieldTypeByte0, (-943L), 1436L, byteArray0, byteOrder0, (byte)63);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1, (byte)63);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: CameraCalibration2", string0);
      assertEquals(1436, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-943L), tiffField0.getCount());
      assertEquals(61, tiffField0.getDirectoryType());
      assertEquals(63, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }
}
