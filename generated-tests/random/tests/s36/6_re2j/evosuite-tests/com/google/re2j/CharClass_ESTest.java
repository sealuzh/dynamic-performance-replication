/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 21:46:40 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = (-1447);
      intArray0[1] = (-877);
      intArray0[2] = 591;
      intArray0[3] = 1066;
      intArray0[4] = (-106);
      intArray0[5] = (-2375);
      intArray0[6] = (-1229);
      intArray0[7] = 1114111;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      CharClass charClass2 = charClass1.appendRange(3337, (-1923));
      int[][] intArray1 = new int[5][0];
      int[] intArray2 = new int[8];
      intArray2[0] = (-1447);
      intArray2[1] = (-1447);
      intArray2[2] = 591;
      intArray2[3] = (-106);
      intArray2[4] = (-877);
      intArray2[5] = 1066;
      intArray2[6] = 591;
      intArray2[7] = (-1447);
      intArray1[0] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = (-2375);
      intArray3[1] = (-1229);
      intArray3[2] = (-106);
      intArray1[1] = intArray3;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      // Undeclared exception!
      charClass2.appendNegatedTable(intArray1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 1794;
      intArray0[1] = 32;
      intArray0[2] = 1;
      intArray0[3] = 4;
      intArray0[4] = (-5329);
      int int0 = 1;
      intArray0[5] = 1;
      intArray0[6] = (-4708);
      intArray0[7] = (-3433);
      intArray0[8] = (-2269);
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[6][7];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      int[] intArray2 = new int[2];
      intArray2[0] = 32;
      intArray2[1] = 4;
      intArray1[2] = intArray2;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign(intArray1, (-3433));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 849;
      intArray0[1] = 1;
      intArray0[2] = 2498;
      intArray0[3] = 884;
      intArray0[4] = (-3215);
      intArray0[5] = 288;
      intArray0[6] = 1902;
      intArray0[7] = (-688);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendLiteral(1193, (-3215));
      CharClass charClass2 = charClass1.appendFoldedClass(intArray0);
      CharClass charClass3 = charClass2.appendNegatedClass(intArray0);
      int[][] intArray1 = new int[9][9];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[7];
      intArray2[0] = 1902;
      intArray2[1] = 1193;
      intArray2[2] = 1;
      intArray2[3] = 884;
      intArray2[4] = 2498;
      intArray2[5] = (-688);
      intArray2[6] = 1;
      intArray1[1] = intArray2;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      intArray1[8] = intArray0;
      CharClass charClass4 = charClass3.appendTable(intArray1);
      CharClass charClass5 = charClass4.appendFoldedRange((-3215), 12317);
      CharClass charClass6 = charClass5.appendLiteral(12317, (-688));
      assertSame(charClass0, charClass6);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendRange(676, 676);
      CharClass charClass2 = charClass1.appendFoldedRange(1114112, 676);
      CharClass charClass3 = charClass2.negateClass();
      int[] intArray0 = new int[3];
      intArray0[0] = 1114112;
      intArray0[1] = 1114112;
      intArray0[2] = 676;
      // Undeclared exception!
      try { 
        charClass3.appendClassWithSign(intArray0, 1114111);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-2686);
      intArray0[1] = 966;
      CharClass charClass0 = new CharClass(intArray0);
      int[] intArray1 = charClass0.toArray();
      assertSame(intArray1, intArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[7][9];
      int[] intArray1 = new int[9];
      intArray1[0] = (-1125);
      intArray1[1] = (-1810);
      intArray1[2] = (-2111);
      intArray1[3] = 43256;
      intArray1[4] = (-2496);
      intArray1[5] = 1114112;
      intArray1[6] = (-1263);
      intArray1[7] = 1;
      intArray1[8] = (-323);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = (-1263);
      intArray2[1] = (-1125);
      intArray2[2] = 1;
      intArray2[3] = 43256;
      intArray2[4] = (-323);
      intArray0[1] = intArray2;
      int[] intArray3 = new int[8];
      intArray3[0] = (-2496);
      intArray3[1] = (-2111);
      intArray3[2] = (-2496);
      intArray3[3] = 2860;
      intArray3[4] = 1;
      intArray3[5] = 1114112;
      intArray3[6] = (-1125);
      intArray3[7] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[5];
      intArray4[0] = (-323);
      intArray4[1] = (-2111);
      intArray4[2] = 1;
      intArray4[3] = (-2111);
      intArray4[4] = (-2496);
      intArray0[3] = intArray4;
      int[] intArray5 = new int[3];
      intArray5[0] = 43256;
      intArray5[1] = 12937;
      intArray5[2] = 1114112;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[2];
      intArray6[0] = 1;
      intArray6[1] = (-1810);
      intArray0[5] = intArray6;
      int[] intArray7 = new int[0];
      intArray0[6] = intArray7;
      // Undeclared exception!
      charClass0.appendNegatedTable(intArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = 825;
      intArray0[1] = 2;
      intArray0[2] = (-585);
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[6][6];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      int[] intArray2 = new int[6];
      intArray2[0] = (-585);
      intArray2[1] = (-1909671);
      intArray2[2] = 2;
      intArray2[3] = 825;
      intArray2[4] = 825;
      intArray2[5] = (-585);
      intArray1[2] = intArray2;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      CharClass charClass1 = charClass0.appendTable(intArray1);
      CharClass charClass2 = charClass1.appendClassWithSign(intArray2, 3642);
      int[] intArray3 = charClass2.toArray();
      assertArrayEquals(new int[] {825, 2, (-585), (-585), (-1909671), 2, 825, 825, (-585)}, intArray3);
      assertEquals(9, intArray3.length);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 142;
      intArray0[1] = 682;
      intArray0[2] = 1406;
      intArray0[3] = (-1911280);
      intArray0[4] = (-2314);
      intArray0[5] = (-305);
      intArray0[6] = 1600;
      intArray0[7] = 32;
      intArray0[8] = 1696;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[2][8];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[7];
      intArray2[0] = 3478;
      intArray2[1] = 1406;
      intArray2[2] = (-1911280);
      intArray2[3] = 1696;
      intArray2[4] = (-305);
      intArray2[5] = (-1911280);
      intArray2[6] = (-305);
      intArray1[1] = intArray2;
      charClass0.appendTableWithSign(intArray1, 1696);
      assertArrayEquals(new int[] {142, 682, 1406, (-1911280), (-2314), (-305), 1600, 32, 1696}, intArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = (-2238);
      intArray0[1] = 1384;
      intArray0[2] = (-3342);
      intArray0[3] = 3751;
      intArray0[4] = (-2573);
      intArray0[5] = (-2);
      intArray0[6] = 4;
      intArray0[7] = 93;
      intArray0[8] = 65;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendLiteral(4162, 727);
      CharClass charClass2 = charClass1.negateClass();
      int int0 = 127169;
      charClass2.appendRange(127169, 127169);
      int[][] intArray1 = new int[1][0];
      intArray1[0] = intArray0;
      int int1 = 4157;
      // Undeclared exception!
      charClass2.appendFoldedRange(4157, 127169);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArrayArray0 = null;
      int int0 = (-2573);
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign((int[][]) null, (-2573));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[6];
      intArray0[0] = 1782;
      intArray0[1] = 66639;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = (-3343);
      CharClass charClass1 = charClass0.appendClass(intArray0);
      CharClass charClass2 = charClass1.appendFoldedRange(3432, 0);
      CharClass charClass3 = charClass2.appendClassWithSign(intArray0, 3633);
      assertSame(charClass1, charClass3);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = (-1848);
      intArray0[1] = (-3877);
      intArray0[2] = 66639;
      intArray0[3] = (-2574);
      int int0 = (-3030);
      intArray0[4] = (-3030);
      intArray0[5] = 2111;
      int int1 = 66640;
      intArray0[6] = 66640;
      CharClass.charClassToString(intArray0, 0);
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendNegatedClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][7];
      CharClass charClass1 = charClass0.appendTableWithSign(intArray0, 0);
      CharClass charClass2 = charClass0.appendFoldedRange(0, 0);
      charClass0.appendRange(0, 0);
      CharClass charClass3 = charClass2.appendLiteral(4, 2947);
      charClass1.toString();
      charClass3.negateClass();
      int[] intArray1 = new int[4];
      intArray1[0] = 2947;
      intArray1[1] = 2947;
      intArray1[2] = 4;
      intArray1[3] = 2947;
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray1, 2947);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[3];
      intArray0[0] = (-698);
      intArray0[1] = (-5329);
      intArray0[2] = 1024;
      String string0 = CharClass.charClassToString(intArray0, (-5329));
      assertEquals("[]", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = (-1910705);
      intArray0[1] = (-1909561);
      intArray0[2] = 865;
      intArray0[3] = 1048;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      int[][] intArray1 = new int[1][8];
      intArray1[0] = intArray0;
      CharClass charClass2 = charClass1.appendNegatedTable(intArray1);
      CharClass charClass3 = charClass2.appendLiteral((-1258), 43259);
      CharClass charClass4 = charClass3.cleanClass();
      charClass4.appendRange(0, 853);
      assertArrayEquals(new int[] {(-1910705), (-1909561), 865, 1048}, intArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange(1593, 740);
      int[][] intArray0 = new int[0][2];
      CharClass charClass2 = charClass1.appendNegatedTable(intArray0);
      CharClass charClass3 = charClass0.appendRange(740, 2865);
      assertSame(charClass3, charClass2);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[1];
      int int0 = 2;
      intArray0[0] = 2;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[9][0];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      intArray1[8] = intArray0;
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign(intArray1, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      intArray0[0] = 120596;
      intArray0[1] = (-2479);
      intArray0[2] = (-4738);
      intArray0[3] = 65;
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      CharClass charClass2 = charClass1.appendNegatedClass(intArray0);
      CharClass charClass3 = charClass2.cleanClass();
      int[][] intArray1 = new int[4][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      CharClass charClass4 = charClass3.appendNegatedTable(intArray1);
      assertSame(charClass0, charClass4);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[3];
      int int0 = (-612);
      intArray0[0] = (-612);
      int int1 = (-383);
      intArray0[1] = (-383);
      int int2 = 1114111;
      intArray0[2] = 1114111;
      // Undeclared exception!
      try { 
        charClass0.appendClassWithSign(intArray0, 1114111);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 65;
      intArray0[1] = (-753);
      intArray0[2] = 3155;
      intArray0[3] = 337;
      intArray0[4] = 925;
      intArray0[5] = 163;
      intArray0[6] = (-2312);
      intArray0[7] = 2873;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClass(intArray0);
      CharClass charClass2 = charClass1.appendLiteral(1319, (-3077));
      int[][] intArray1 = new int[6][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      int[] intArray2 = new int[5];
      intArray2[0] = 337;
      intArray2[1] = (-1123);
      intArray2[2] = 337;
      intArray2[3] = (-3077);
      intArray2[4] = (-3077);
      intArray1[5] = intArray2;
      CharClass charClass3 = charClass2.appendTable(intArray1);
      CharClass charClass4 = charClass3.cleanClass();
      int[][] intArray3 = new int[1][2];
      intArray3[0] = intArray2;
      CharClass charClass5 = charClass4.appendNegatedTable(intArray3);
      charClass5.appendNegatedClass(intArray0);
      assertArrayEquals(new int[] {65, (-753), 3155, 337, 925, 163, (-2312), 2873}, intArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = (-698);
      int int0 = 1024;
      intArray0[2] = 1024;
      CharClass.charClassToString(intArray0, 0);
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      int int1 = (-830);
      // Undeclared exception!
      try { 
        charClass1.appendClassWithSign(intArray0, (-830));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 2164;
      intArray0[2] = (-2311);
      intArray0[3] = 676;
      intArray0[4] = (-1909750);
      intArray0[5] = (-150);
      intArray0[6] = (-2);
      intArray0[7] = 2095;
      CharClass.charClassToString(intArray0, (-2));
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendLiteral((-2), (-1909750));
      int[] intArray1 = new int[4];
      charClass1.negateClass();
      intArray1[0] = 1;
      intArray1[1] = 2095;
      intArray1[2] = (-2);
      intArray1[3] = (-2311);
      charClass1.appendNegatedClass(intArray1);
      charClass1.toString();
      charClass0.appendFoldedRange(0, 1114111);
      int[][] intArray2 = new int[0][8];
      CharClass charClass2 = charClass1.appendFoldedRange(2095, 0);
      CharClass charClass3 = charClass1.appendNegatedTable(intArray2);
      charClass2.negateClass();
      charClass3.appendClass(intArray0);
      charClass1.appendLiteral((-405), 970);
      assertArrayEquals(new int[] {(-2310), 1114111, (-149), (-3), 2096, 1114111, (-2310), 1114111}, intArray0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(933, (-784));
      CharClass charClass2 = charClass1.appendFoldedRange((-784), (-784));
      int[][] intArray0 = new int[8][7];
      int[] intArray1 = new int[2];
      intArray1[0] = (-784);
      intArray1[1] = (-784);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 933;
      intArray2[1] = (-2097);
      intArray2[2] = (-784);
      intArray2[3] = 568;
      intArray2[4] = (-784);
      intArray2[5] = 933;
      intArray2[6] = (-612);
      intArray2[7] = 933;
      intArray2[8] = (-784);
      intArray0[1] = intArray2;
      int[] intArray3 = new int[8];
      intArray3[0] = (-2097);
      intArray3[1] = 568;
      intArray3[2] = (-383);
      intArray3[3] = 568;
      intArray3[4] = 3990;
      intArray3[5] = 933;
      intArray3[6] = 568;
      intArray3[7] = (-784);
      intArray0[2] = intArray3;
      int[] intArray4 = new int[6];
      intArray4[0] = 3482;
      intArray4[1] = (-383);
      intArray4[2] = 568;
      intArray4[3] = 568;
      intArray4[4] = 3135;
      intArray4[5] = 933;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[5];
      intArray5[0] = (-383);
      intArray5[1] = (-612);
      intArray5[2] = 3990;
      intArray5[3] = (-383);
      intArray5[4] = 568;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[4];
      intArray6[0] = (-612);
      intArray6[1] = 3990;
      intArray6[2] = 933;
      intArray6[3] = 3992;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[3];
      intArray7[0] = 568;
      intArray7[1] = 3990;
      intArray7[2] = 933;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[3];
      intArray8[0] = 933;
      intArray8[1] = (-383);
      intArray8[2] = 568;
      intArray0[7] = intArray8;
      // Undeclared exception!
      try { 
        charClass2.appendTableWithSign(intArray0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = null;
      CharClass charClass0 = null;
      try {
        charClass0 = new CharClass((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }
}
