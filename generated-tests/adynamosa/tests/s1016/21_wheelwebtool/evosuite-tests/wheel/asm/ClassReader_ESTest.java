/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 23:35:58 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import java.util.Locale;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      char[] charArray0 = new char[9];
      charArray0[0] = '?';
      ClassWriter classWriter0 = new ClassWriter(2149);
      classReader0.readInt(0);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader((InputStream) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      classReader0.getInterfaces();
      classReader0.getAccess();
      classReader0.getSuperName();
      classReader0.getInterfaces();
      classReader0.getAccess();
      ClassWriter classWriter0 = new ClassWriter((-1124));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      Attribute attribute0 = new Attribute("visitEnd");
      Attribute attribute1 = attribute0.next;
      Attribute[] attributeArray0 = new Attribute[1];
      attributeArray0[0] = attribute0;
      int int0 = 1012;
      classReader1.getSuperName();
      classReader1.accept((ClassVisitor) classAdapter0, attributeArray0, 1012);
      ClassReader classReader2 = null;
      try {
        classReader2 = new ClassReader(classReader0.b, 4, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 45740
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      classReader0.getAccess();
      char[] charArray0 = new char[9];
      charArray0[0] = '?';
      ClassReader classReader1 = new ClassReader(classReader0.b);
      ClassWriter classWriter0 = new ClassWriter(100);
      Attribute[] attributeArray0 = null;
      classReader1.accept((ClassVisitor) classWriter0, (Attribute[]) null, (-680));
      ClassReader classReader2 = new ClassReader(classReader0.b, 196, (-2384));
      // Undeclared exception!
      try { 
        classReader2.getSuperName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "wheel.asm.Edge";
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getSuperName();
      classReader0.getAccess();
      classReader0.getSuperName();
      classReader0.getInterfaces();
      classReader0.getAccess();
      Label[] labelArray0 = new Label[0];
      // Undeclared exception!
      try { 
        classReader0.readLabel(32, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      int int0 = ClassReader.SKIP_FRAMES;
      classReader0.getInterfaces();
      char[] charArray0 = new char[9];
      classReader0.getSuperName();
      classReader0.readShort(4);
      // Undeclared exception!
      try { 
        classReader0.readConst((short)0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wheel.asm.Item");
      ClassReader classReader0 = new ClassReader("wheel.asm.Item");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 773);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 70);
      classReader0.accept((ClassVisitor) classAdapter0, 2);
      int int0 = 21;
      classReader0.readByte(21);
      classReader0.readShort(21);
      classReader0.readByte((short)15);
      Attribute[] attributeArray0 = new Attribute[9];
      Attribute attribute0 = new Attribute("wheel.asm.Item");
      Attribute attribute1 = attribute0.next;
      attributeArray0[0] = null;
      Attribute attribute2 = new Attribute("eaCBi6~]u}<&@&z");
      attributeArray0[1] = attribute2;
      Attribute attribute3 = attribute2.next;
      attributeArray0[2] = null;
      Attribute attribute4 = new Attribute("eaCBi6~]u}<&@&z");
      attributeArray0[3] = attribute4;
      int int1 = 138;
      char[] charArray0 = new char[5];
      charArray0[0] = 'J';
      charArray0[1] = 'l';
      charArray0[2] = 'D';
      charArray0[3] = 'y';
      charArray0[4] = 'd';
      int int2 = (-952);
      Label[] labelArray0 = new Label[5];
      // Undeclared exception!
      try { 
        classReader0.readLabel((-952), labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      assertEquals(2149, classReader0.header);
      
      String string0 = classReader0.getClassName();
      assertEquals("wheel/asm/AnnotationWriter", string0);
      
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      Locale.getISOLanguages();
      char[] charArray0 = new char[9];
      charArray0[0] = '?';
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?E3yaf+|j9p");
      short short0 = classReader0.readShort(40);
      assertEquals((short)2304, short0);
      
      long long0 = classReader0.readLong((short)2304);
      assertEquals(7782235551087727360L, long0);
      
      int int0 = classReader0.readUnsignedShort(0);
      assertEquals(51966, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getSuperName();
      classReader0.getAccess();
      ClassReader classReader1 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
      classReader0.getAccess();
      classReader1.getSuperName();
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(classReader1, 5417);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      // Undeclared exception!
      try { 
        classReader0.getItem(549);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 549
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      int int0 = ClassReader.SKIP_FRAMES;
      char[] charArray0 = new char[11];
      char char0 = '?';
      charArray0[0] = '?';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char char1 = '8';
      charArray0[1] = '?';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      classReader0.getInterfaces();
      classReader0.getAccess();
      classReader0.getSuperName();
      classReader0.getInterfaces();
      classReader0.getAccess();
      ClassWriter classWriter0 = new ClassWriter((-1124));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      Attribute attribute0 = new Attribute("visitEnd");
      Attribute attribute1 = attribute0.next;
      Attribute[] attributeArray0 = new Attribute[1];
      attributeArray0[0] = attribute0;
      int int0 = 1012;
      classReader1.accept((ClassVisitor) classAdapter0, attributeArray0, 1012);
      ClassReader classReader2 = null;
      try {
        classReader2 = new ClassReader(classReader0.b, 4, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 45740
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getSuperName();
      classReader0.getAccess();
      classReader0.getSuperName();
      classReader0.getInterfaces();
      classReader0.getAccess();
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) null);
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      Attribute[] attributeArray0 = new Attribute[1];
      Attribute attribute0 = new Attribute("wheel.asm.Edge");
      Attribute attribute1 = attribute0.next;
      attributeArray0[0] = null;
      classReader1.accept((ClassVisitor) classWriter0, attributeArray0, 8);
      ClassReader classReader2 = null;
      try {
        classReader2 = new ClassReader(classReader1.b, 1, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 46356
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getAccess();
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      classReader0.readShort(2);
      classReader0.readConst(2, (char[]) null);
      classReader0.readUnsignedShort(1);
      classReader0.getInterfaces();
      classReader0.readConst(7, (char[]) null);
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort((-3388));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getAccess();
      ClassReader classReader1 = new ClassReader("wheel.asm.Edge");
      ClassReader classReader2 = new ClassReader(classReader0.b);
      classReader2.getAccess();
      classReader1.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 271);
      classReader1.accept((ClassVisitor) classWriter0, 261);
      classReader2.readShort(0);
      classReader1.readConst(2, (char[]) null);
      ClassReader classReader3 = new ClassReader(classReader1.b);
      classReader3.readUnsignedShort(1);
      classReader2.getInterfaces();
      // Undeclared exception!
      try { 
        classReader3.getItem((short) (-13570));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -13570
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getAccess();
      ClassReader classReader1 = new ClassReader(classReader0.b, 271, 8);
      classReader1.getAccess();
      classReader0.getInterfaces();
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter(classReader1, 365);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      assertEquals(703, classReader0.header);
      
      char[] charArray0 = new char[2];
      ClassWriter classWriter0 = new ClassWriter((-424));
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.EmptyFileFilter");
      classWriter0.visitAttribute(attribute0);
      classReader0.accept((ClassVisitor) classWriter0, 0);
      int int0 = classReader0.readByte(0);
      assertEquals(202, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getAccess();
      classReader0.getSuperName();
      classReader0.getInterfaces();
      classReader0.getSuperName();
      classReader0.getAccess();
      ClassReader classReader1 = new ClassReader(classReader0.b);
      int int0 = 463;
      ClassWriter classWriter0 = new ClassWriter(463);
      ClassReader classReader2 = new ClassReader("java/lang/Object");
      Attribute[] attributeArray0 = new Attribute[1];
      Attribute attribute0 = new Attribute((String) null);
      Attribute attribute1 = attribute0.next;
      attributeArray0[0] = null;
      classReader2.accept((ClassVisitor) classWriter0, attributeArray0, 1207);
      // Undeclared exception!
      try { 
        classReader2.readClass(1207, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getAccess();
      classReader0.getSuperName();
      classReader0.getInterfaces();
      classReader0.getSuperName();
      classReader0.getAccess();
      ClassReader classReader1 = new ClassReader(classReader0.b);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader1.readUTF8(179, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getAccess();
      classReader0.getSuperName();
      classReader0.getClassName();
      char[] charArray0 = new char[3];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ">:");
      classReader0.readUnsignedShort(5);
      // Undeclared exception!
      try { 
        classReader0.readConst(766, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 766
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2149);
      Attribute[] attributeArray0 = new Attribute[2];
      Attribute attribute0 = new Attribute("!f");
      attributeArray0[0] = attribute0;
      Attribute attribute1 = attribute0.next;
      attributeArray0[1] = null;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 9);
      classReader0.getAccess();
      classReader0.getSuperName();
      int int0 = 80;
      classReader0.readLong(4);
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        classReader0.readConst(48, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = "wheel.asm.AnnotationWriter";
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      char char0 = 'D';
      ClassWriter classWriter0 = new ClassWriter(4);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      boolean boolean0 = true;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("-rWesAp+, FqVVq'EB");
      FileSystemHandling.setPermissions(evoSuiteFile0, false, false, false);
      String string1 = "-rWesAp+, FqVVq'EB";
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("-rWesAp+, FqVVq'EB");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      classReader0.getAccess();
      ClassReader classReader1 = new ClassReader(classReader0.b);
      ClassWriter classWriter0 = new ClassWriter(4);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classWriter0, (-2070));
      char[] charArray0 = new char[9];
      charArray0[0] = '1';
      charArray0[1] = '1';
      charArray0[2] = '1';
      charArray0[3] = '1';
      charArray0[4] = '1';
      charArray0[5] = '1';
      charArray0[6] = '1';
      charArray0[7] = '1';
      charArray0[8] = '1';
      // Undeclared exception!
      try { 
        classReader1.readUTF8((-2070), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      classReader0.getAccess();
      ClassReader classReader1 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getAccess();
      classReader1.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(classReader1, 2149);
      classReader0.accept((ClassVisitor) classWriter0, 20);
      classReader0.readShort(1);
      // Undeclared exception!
      try { 
        classReader0.readConst(1097, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1097
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      classReader0.getAccess();
      char[] charArray0 = new char[9];
      charArray0[0] = '?';
      charArray0[1] = '8';
      ClassWriter classWriter0 = new ClassWriter((-3737));
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 2);
      int int0 = 2047;
      // Undeclared exception!
      try { 
        classReader0.readClass((-3737), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getAccess();
      classReader0.getSuperName();
      classReader0.getInterfaces();
      classReader0.getSuperName();
      classReader0.getAccess();
      ClassReader classReader1 = new ClassReader("java/lang/Object");
      int int0 = 4;
      char[] charArray0 = new char[3];
      charArray0[0] = '1';
      charArray0[1] = '1';
      charArray0[2] = '1';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      classReader0.getAccess();
      classReader0.getInterfaces();
      char[] charArray0 = new char[9];
      charArray0[0] = '?';
      charArray0[1] = '8';
      charArray0[2] = '\'';
      charArray0[3] = ']';
      charArray0[4] = 'b';
      charArray0[5] = 'v';
      int int0 = 3;
      // Undeclared exception!
      try { 
        classReader0.readConst(3, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      classReader0.getAccess();
      char[] charArray0 = new char[9];
      charArray0[0] = '?';
      charArray0[1] = '8';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(48, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      classReader0.getAccess();
      classReader0.getSuperName();
      char[] charArray0 = new char[3];
      classReader0.getInterfaces();
      char[] charArray1 = new char[7];
      // Undeclared exception!
      try { 
        classReader0.readConst(21, charArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      classReader0.getAccess();
      String string0 = classReader0.getSuperName();
      assertEquals("java/lang/Object", string0);
      
      char[] charArray0 = new char[3];
      charArray0[0] = '2';
      charArray0[1] = '0';
      long long0 = classReader0.readLong(80);
      assertEquals((-8644940371136081920L), long0);
      
      classReader0.readConst(91, charArray0);
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.copyPool(classWriter0);
      assertEquals(48, classReader0.getAccess());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      char[] charArray0 = new char[0];
      classReader0.getSuperName();
      // Undeclared exception!
      try { 
        classReader0.copyPool((ClassWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      classReader0.getAccess();
      classReader0.getSuperName();
      char[] charArray0 = new char[3];
      charArray0[0] = '2';
      charArray0[1] = '0';
      classReader0.getInterfaces();
      char[] charArray1 = new char[9];
      charArray1[0] = '2';
      charArray1[1] = 'o';
      charArray1[2] = '`';
      charArray1[3] = '0';
      charArray1[5] = '0';
      charArray1[6] = '0';
      charArray1[7] = '0';
      charArray1[8] = '2';
      // Undeclared exception!
      try { 
        classReader0.readConst(48, charArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Opcodes");
      int int0 = (-2499);
      // Undeclared exception!
      try { 
        classReader0.readLong((-2499));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      classReader0.getAccess();
      char[] charArray0 = new char[9];
      charArray0[0] = '?';
      charArray0[1] = '8';
      charArray0[2] = '\'';
      charArray0[3] = ']';
      charArray0[4] = 'b';
      charArray0[5] = 'v';
      charArray0[6] = '1';
      charArray0[7] = 'R';
      charArray0[8] = '1';
      char[] charArray1 = new char[4];
      charArray1[0] = 'v';
      charArray1[1] = 'b';
      charArray1[2] = '1';
      charArray1[3] = 'v';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(48, charArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getAccess();
      classReader0.getAccess();
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.getSuperName();
      char[] charArray0 = new char[1];
      charArray0[0] = '0';
      // Undeclared exception!
      try { 
        classReader0.readConst(8, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getAccess();
      classReader0.getSuperName();
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassAdapter classAdapter1 = new ClassAdapter(classAdapter0);
      // Undeclared exception!
      try { 
        classReader0.readShort((-461));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.EmptyFileFilter");
      classReader0.getSuperName();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-387));
      Attribute[] attributeArray0 = new Attribute[1];
      attributeArray0[0] = attribute0;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 185);
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassReader classReader1 = new ClassReader("wheel.asm.ClassReader");
      // Undeclared exception!
      try { 
        classReader1.readUTF8(2522, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getAccess();
      classReader0.getSuperName();
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 255);
      classReader0.accept((ClassVisitor) classWriter0, 271);
      classWriter0.newUTF8("yR\">Pi$9[.C\"O");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      classReader0.getClassName();
      classReader0.readShort(262);
      // Undeclared exception!
      try { 
        classReader0.getItem(251);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 251
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      char[] charArray0 = new char[2];
      String string0 = classReader0.getClassName();
      assertEquals("org/apache/commons/io/filefilter/EmptyFileFilter", string0);
      
      charArray0[0] = '{';
      charArray0[1] = 'b';
      classReader0.getAccess();
      String string1 = classReader0.getSuperName();
      assertEquals("org/apache/commons/io/filefilter/AbstractFileFilter", string1);
      
      Object object0 = new Object();
      ClassWriter classWriter0 = new ClassWriter(163);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, (Attribute[]) null, (-423));
      assertEquals(33, classReader0.getAccess());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getAccess();
      classReader0.getSuperName();
      classReader0.getAccess();
      ClassVisitor classVisitor0 = null;
      ClassWriter classWriter0 = new ClassWriter(32);
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 32);
      // Undeclared exception!
      try { 
        classReader0.readClass(154, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getAccess();
      classReader0.getSuperName();
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort((-1713));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      int int0 = classReader0.getAccess();
      assertEquals(32, int0);
      
      String string0 = classReader0.getSuperName();
      assertNotNull(string0);
      assertEquals("java/lang/Object", string0);
      
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 4);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      int int1 = classWriter0.newUTF8("dN0ZY:*Ox1");
      assertEquals(26, int1);
      
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      classReader0.getClassName();
      short short0 = classReader0.readShort(1);
      assertEquals((short) (-326), short0);
      
      classReader0.getItem(2);
      assertEquals(32, classReader0.getAccess());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.apache.commons.io.filefilter.EmptyFileFilter");
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      char[] charArray0 = new char[2];
      classReader0.getSuperName();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      char char0 = '{';
      charArray0[1] = '{';
      classReader0.readUnsignedShort(25);
      char[] charArray1 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readConst(25, charArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.EmptyFileFilter");
      classReader0.getSuperName();
      int int0 = 3;
      char[] charArray0 = new char[2];
      charArray0[0] = '!';
      charArray0[1] = '$';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(930, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      classReader0.getAccess();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 11);
      classReader0.readLong(11);
      classReader0.accept((ClassVisitor) classWriter0, 132);
      ClassVisitor classVisitor0 = null;
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, (Attribute[]) null, 33);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-87);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      classReader0.getAccess();
      ClassWriter classWriter0 = new ClassWriter(1);
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 1);
      ClassReader classReader1 = new ClassReader(classReader0.b, 46, 81);
      ClassWriter classWriter1 = null;
      try {
        classWriter1 = new ClassWriter(classReader1, 225);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getAccess();
      classReader0.getSuperName();
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 230);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, 1);
      assertEquals(1, ClassReader.SKIP_CODE);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getAccess();
      classReader0.getSuperName();
      classReader0.getInterfaces();
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.getSuperName();
      // Undeclared exception!
      try { 
        classReader1.readInt((-1688));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      char[] charArray0 = new char[2];
      classReader0.getSuperName();
      charArray0[0] = '{';
      classReader0.getAccess();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      classReader0.getSuperName();
      classReader0.getSuperName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 105);
      classWriter0.invalidFrames = true;
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.readConst(33, charArray0);
      // Undeclared exception!
      try { 
        classReader0.readConst(128, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 128
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getAccess();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "wheel.asm.Edge");
      ClassReader classReader1 = new ClassReader("wheel.asm.Edge");
      ClassWriter classWriter0 = new ClassWriter(classReader1, 48);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassAdapter classAdapter1 = new ClassAdapter(classAdapter0);
      ClassAdapter classAdapter2 = new ClassAdapter(classWriter0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader1.b, 1, (-5024));
      ClassReader classReader2 = null;
      try {
        classReader2 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getAccess();
      classReader0.getSuperName();
      classReader0.getInterfaces();
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) null);
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) classAdapter0, (Attribute[]) null, 46);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassAdapter", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getAccess();
      classReader0.getSuperName();
      classReader0.getInterfaces();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b, 1, 35);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 18723
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-87);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      classReader0.getAccess();
      ClassWriter classWriter0 = new ClassWriter(1);
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classAdapter0.visitSource("org.apache.commons.io.filefilter.EmptyFileFilter", "org.apache.commons.io.filefilter.EmptyFileFilter");
      ClassAdapter classAdapter1 = new ClassAdapter(classAdapter0);
      // Undeclared exception!
      try { 
        classReader0.readLong(2127);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      classReader0.getAccess();
      classReader0.getSuperName();
      char[] charArray0 = new char[3];
      charArray0[0] = '2';
      charArray0[1] = '0';
      charArray0[2] = 'F';
      // Undeclared exception!
      try { 
        classReader0.readConst(2, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)6;
      char char0 = '{';
      char char1 = 'b';
      ClassReader classReader0 = new ClassReader(byteArray0);
      classReader0.getAccess();
      // Undeclared exception!
      try { 
        classReader0.getSuperName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      ClassReader classReader0 = new ClassReader("wheel.asm.Edge");
      classReader0.getAccess();
      classReader0.getSuperName();
      classReader0.getInterfaces();
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        classReader0.readUTF8(32, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      int int0 = 33;
      Label[] labelArray0 = new Label[2];
      // Undeclared exception!
      try { 
        classReader0.readLabel(1504, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[24];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)6;
      byte byte0 = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-23);
      byteArray0[4] = (byte)0;
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter(classReader0, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      char[] charArray0 = new char[2];
      charArray0[0] = 'n';
      classReader0.getAccess();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 25);
      classReader0.accept((ClassVisitor) classWriter0, 1416);
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort(2092);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
          char[] charArray0 = new char[2];
          classReader0.getSuperName();
          charArray0[0] = '{';
          classReader0.getAccess();
          FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
          classReader0.getSuperName();
          classReader0.getSuperName();
          File file0 = MockFile.createTempFile("org/apache/commons/io/filefilter/AbstractFileFilter", "");
          MockFileInputStream mockFileInputStream0 = new MockFileInputStream(file0);
          SequenceInputStream sequenceInputStream0 = new SequenceInputStream(mockFileInputStream0, mockFileInputStream0);
          ClassWriter classWriter0 = new ClassWriter(classReader0, 5);
          ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
          classReader0.accept((ClassVisitor) classWriter0, 1);
          // Undeclared exception!
          try { 
            classReader0.readShort(1925);
            fail("Expecting exception: ArrayIndexOutOfBoundsException");
          
          } catch(ArrayIndexOutOfBoundsException e) {
             //
             // no message in exception (getMessage() returned null)
             //
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      ClassWriter classWriter0 = new ClassWriter(classReader0, 567);
      classWriter0.newFloat(0.0F);
      classReader0.copyPool(classWriter0);
      // Undeclared exception!
      try { 
        classReader0.readConst(2332, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2332
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      ClassWriter classWriter0 = new ClassWriter(2);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 98);
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      charArray0[1] = 'b';
      classReader0.getAccess();
      classReader0.getSuperName();
      // Undeclared exception!
      try { 
        classReader0.readConst(1215, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1215
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      classReader0.getAccess();
      ClassVisitor classVisitor0 = null;
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, (Attribute[]) null, 33);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      int int0 = 825;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readConst(825, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 825
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      char[] charArray0 = new char[1];
      Object object0 = new Object();
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.readByte(1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b);
      ClassReader classReader2 = new ClassReader(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        classReader2.readByte((-2037));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2037
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classReader0.getAccess();
      classReader0.getSuperName();
      char[] charArray0 = new char[3];
      charArray0[0] = '2';
      charArray0[1] = '0';
      charArray0[2] = 'F';
      // Undeclared exception!
      try { 
        classReader0.readConst(180, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      ClassReader classReader0 = new ClassReader("wheel.asm.Attribute");
      // Undeclared exception!
      try { 
        classReader0.readClass((byte)0, (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      classReader0.getAccess();
      ClassVisitor classVisitor0 = null;
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) null);
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(classReader0.b, 12, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1002
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b);
      ClassReader classReader1 = new ClassReader(byteArrayInputStream0);
      ClassWriter classWriter0 = new ClassWriter((-1291));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      classReader0.accept((ClassVisitor) classAdapter0, (-2170));
      String string0 = classReader1.getSuperName();
      assertEquals("org/apache/commons/io/filefilter/AbstractFileFilter", string0);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      // Undeclared exception!
      try { 
        classReader0.readClass((-885), (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      classReader0.getAccess();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 5);
      classReader0.accept((ClassVisitor) classWriter0, (-2189));
      // Undeclared exception!
      try { 
        classReader0.readUTF8(132, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      charArray0[1] = 'b';
      classReader0.getAccess();
      classReader0.getSuperName();
      classReader0.getInterfaces();
      // Undeclared exception!
      try { 
        classReader0.readUTF8(33, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) null, 541);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      char[] charArray0 = new char[9];
      charArray0[0] = '%';
      charArray0[1] = '';
      charArray0[2] = '\'';
      charArray0[3] = '\'';
      charArray0[4] = 'S';
      charArray0[5] = '\'';
      charArray0[6] = '\'';
      charArray0[7] = '';
      charArray0[8] = 'e';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(251, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      char[] charArray0 = new char[2];
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-1775));
      classReader0.accept((ClassVisitor) classWriter0, 2);
      charArray0[0] = '{';
      char char0 = 'b';
      classReader0.readInt(1);
      // Undeclared exception!
      try { 
        classReader0.readLabel((-3059), (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      ClassWriter classWriter0 = new ClassWriter((-424));
      ClassAdapter classAdapter0 = new ClassAdapter(classWriter0);
      ClassAdapter classAdapter1 = new ClassAdapter(classAdapter0);
      classReader0.accept((ClassVisitor) classWriter0, 0);
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        classReader0.readClass(173, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      int int0 = (-423);
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      char char0 = 'N';
      classReader0.getClassName();
      classReader0.readInt(45);
      classReader0.getItem(10);
      // Undeclared exception!
      try { 
        classReader0.readLabel((-3059), (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)115;
      byteArray0[1] = (byte)79;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)54;
      byteArray0[4] = (byte) (-17);
      byteArray0[6] = (byte) (-8);
      byteArray0[7] = (byte)1;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 4, (byte)54);
      byteArrayInputStream0.skip((-1646L));
      byteArrayInputStream0.markSupported();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.PrefixFileFilter");
      classReader0.getAccess();
      ClassReader classReader1 = null;
      try {
        classReader1 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      int int0 = (-423);
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      char char0 = 'b';
      classReader0.readInt(45);
      // Undeclared exception!
      try { 
        classReader0.readLabel((-3059), (Label[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      assertEquals(2149, classReader0.header);
      
      classReader0.getClassName();
      char[] charArray0 = new char[0];
      String string0 = classReader0.readClass(199, charArray0);
      assertEquals("wheel/asm/AnnotationWriter", string0);
      
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      charArray0[1] = 'b';
      classReader0.getAccess();
      classReader0.getSuperName();
      // Undeclared exception!
      try { 
        classReader0.readConst(1215, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1215
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classReader0.getInterfaces();
      // Undeclared exception!
      try { 
        classReader0.readConst((-1750), (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1750
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      int int0 = (-423);
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[1] = 'b';
      // Undeclared exception!
      try { 
        classReader0.readConst((-423), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -423
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((InputStream) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.AnnotationWriter");
      classReader0.getClassName();
      char[] charArray0 = null;
      classReader0.getInterfaces();
      // Undeclared exception!
      try { 
        classReader0.readConst((-1750), (char[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1750
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)55;
      byteArray0[1] = (byte)27;
      int int0 = 144;
      int int1 = 299;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 144, 299);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)116;
      byte byte0 = (byte)6;
      byteArray0[1] = (byte)6;
      byteArray0[2] = (byte)0;
      byte byte1 = (byte) (-23);
      byteArray0[3] = (byte) (-23);
      byteArray0[4] = (byte)0;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      int int0 = (-423);
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      charArray0[1] = 'b';
      // Undeclared exception!
      try { 
        classReader0.readUTF8((-423), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(sequenceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }
}
