/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 01:16:52 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.time.Clock;
import java.time.Instant;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.temporal.TemporalAccessor;
import java.util.regex.Pattern;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockInstant;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2108, 2108, fieldTypeFloat0, 2108, 2108, byteArray0, byteOrder0, 2108);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(681, 2108, fieldTypeFloat0, 2108, 681, byteArray0, byteOrder0, 681);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      String string0 = tiffField0.getValueDescription();
      assertEquals(2108, tiffField0.getDirectoryType());
      assertEquals(8432, tiffField0.getBytesLength());
      assertEquals(681, tiffField0.getSortHint());
      assertEquals(2108L, tiffField0.getCount());
      assertEquals(681, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(681, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(65537, 65537, fieldTypeFloat0, 65537, 65537, byteArray0, byteOrder0, 65537);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "0.0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2102, 2102, fieldTypeFloat0, 2102, 2102, byteArray0, byteOrder0, 2102);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2102, 2102);
      String string1 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(2102, tiffField0.getTag());
      assertEquals(2102, tiffField0.getSortHint());
      assertEquals(2102L, tiffField0.getCount());
      assertNull(string1);
      assertEquals(2102, tiffField0.getOffset());
      assertEquals(8408, tiffField0.getBytesLength());
      assertEquals(2102, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-8);
      byteArray0[1] = (byte)0;
      ByteOrder byteOrder0 = null;
      TiffField tiffField0 = new TiffField(484, (-1433), fieldTypeDouble0, 484, (-880L), byteArray0, (ByteOrder) null, (byte) (-8));
      tiffField0.getDescriptionWithoutValue();
      String string0 = "";
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65537, 65535, fieldTypeDouble0, 65535, 65535, byteArray0, byteOrder0, 65537);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(65535, int0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(65537, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals(65537, tiffField0.getTag());
      assertEquals(524280, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-4305), 2108, fieldTypeFloat0, 2108, (-4305), byteArray0, byteOrder0, (-4305));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(50787, 50787, fieldTypeAscii0, 50787, 50787, byteArray0, byteOrder0, 50787);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50787, tiffField0.getDirectoryType());
      assertEquals(50787, tiffField0.getTag());
      assertEquals(50787, tiffField0.getOffset());
      assertEquals(50787, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(50787, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(48257, 48257, fieldTypeRational0, 48257, 48257, byteArray0, byteOrder0, 48257);
      String string0 = tiffField0.getValueDescription();
      assertEquals(386056, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(48257, tiffField0.getDirectoryType());
      assertEquals("", string0);
      assertEquals(48257L, tiffField0.getCount());
      assertEquals(48257, tiffField0.getTag());
      assertEquals(48257, tiffField0.getSortHint());
      assertEquals(48257, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)7;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(2281, (String) null);
      TiffField tiffField0 = new TiffField(50, (-2147347773), fieldTypeRational0, 1961, 839L, byteArray0, byteOrder0, 1037);
      int int0 = tiffField0.getSortHint();
      assertEquals(1037, int0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(839, tiffField0.getOffset());
      assertEquals((-2147347773), tiffField0.getDirectoryType());
      assertEquals(1961L, tiffField0.getCount());
      assertEquals(50, tiffField0.getTag());
      assertEquals(15688, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(1349, (String) null);
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-90), 0, fieldTypeFloat0, 0, 0, byteArray0, byteOrder0, (-90));
      tiffField0.getValueDescription();
      MockFile mockFile0 = new MockFile("", "`g_??tYv1-S/i1l >5V");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      Object[] objectArray0 = new Object[0];
      PrintWriter printWriter0 = mockPrintWriter0.printf("", objectArray0);
      tiffField0.dump(printWriter0, "");
      tiffField0.getValue();
      tiffField0.getFieldTypeName();
      tiffField0.getBytesLength();
      tiffField0.dump(printWriter0);
      assertEquals(84L, mockFile0.length());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-433), fieldTypeByte0, (byte)12, (-433), byteArray0, byteOrder0, 1410);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      FieldTypeByte fieldTypeByte1 = new FieldTypeByte(4, "LeafSubIFD");
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte)12;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      byteArray1[1] = (byte)50;
      TiffField tiffField1 = new TiffField(2102, 702, fieldTypeByte1, 1L, (byte)12, byteArray1, byteOrder0, (-433));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField1.new OversizeValueElement((byte)50, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: LeafSubIFD", string0);
      assertEquals(12, tiffField1.getOffset());
      assertEquals((-433), tiffField1.getSortHint());
      assertNotNull(string0);
      assertEquals(702, tiffField1.getDirectoryType());
      assertEquals(2102, tiffField1.getTag());
      assertTrue(tiffField1.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)44;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)44, byteArray0, (ByteOrder) null, (-2000));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(44, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-2000), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1767, (-2078209980), fieldTypeShort0, (byte)12, 227L, byteArray0, byteOrder0, (-577));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2078209980), 1767);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      
      String string1 = tiffField0.getValueDescription();
      assertEquals(12L, tiffField0.getCount());
      assertEquals(1767, tiffField0.getTag());
      assertNotNull(string1);
      assertEquals(227, tiffField0.getOffset());
      assertEquals((-577), tiffField0.getSortHint());
      assertEquals((-2078209980), tiffField0.getDirectoryType());
      assertEquals(24, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-75);
      byteArray0[1] = (byte)107;
      byteArray0[2] = (byte) (-90);
      CharBuffer charBuffer0 = CharBuffer.allocate(585);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(32809, 32809, fieldTypeShort0, 261L, 915L, byteArray0, byteOrder0, 2146581343);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(32809, tiffField0.getTag());
      assertEquals(522, tiffField0.getBytesLength());
      assertEquals(2146581343, tiffField0.getSortHint());
      assertEquals(32809, tiffField0.getDirectoryType());
      assertEquals(915, tiffField0.getOffset());
      assertEquals(261L, tiffField0.getCount());
      assertArrayEquals(new int[] {27573}, intArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte) (-70), (-2078209968), fieldTypeByte0, 0, 12L, byteArray0, byteOrder0, (-2147347773));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte) (-70), 65535);
      tiffField_OversizeValueElement0.getElementDescription(true);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@3f8b0db8 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("tB");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(50, (-2000), fieldTypeDouble0, 50, (-1L), byteArray0, byteOrder0, 1);
      tiffField0.getOversizeValueElement();
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@23bab260 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)12, 3477, fieldTypeShort0, 1767, 1L, byteArray0, byteOrder0, 1982292598);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1908874353, 1908874353);
      tiffField_OversizeValueElement0.getElementDescription(false);
      TiffField tiffField1 = new TiffField((-2078209980), 2146429409, fieldTypeShort0, 4105L, 2730L, byteArray0, byteOrder1, 1);
      tiffField1.getIntArrayValue();
      try { 
        tiffField1.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@21fd4ef0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[2] = (byte) (-29);
      byteArray0[3] = (byte)63;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2147071699), (-2147071699), fieldTypeShort0, (-2147071699), (-2147071699), byteArray0, byteOrder0, 69);
      assertEquals(823898, tiffField0.getBytesLength());
      
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-2147071699), tiffField0.getTag());
      assertArrayEquals(new int[] {0, 16355}, intArray0);
      assertEquals((-2147071699), tiffField0.getDirectoryType());
      assertEquals((-2147071699L), tiffField0.getCount());
      assertEquals((-2147071699), tiffField0.getOffset());
      assertEquals(69, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-70);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      fieldTypeByte0.writeData(byteArray0, byteOrder0);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-70);
      byteArray0[3] = (byte)7;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, 0, byteArray0, byteOrder1, 48132);
      tiffField0.dump();
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@2d3a0c91 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("tB");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, " (");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-36);
      byteArray0[1] = (byte) (-23);
      byteArray0[2] = (byte) (-44);
      TiffField tiffField0 = new TiffField(367, 1, fieldTypeLong0, 367, 4368L, byteArray0, byteOrder0, 50);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(4368, tiffField0.getOffset());
      assertEquals(367L, tiffField0.getCount());
      assertEquals(367, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "$1OD<),b3KH]Mz,");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)68;
      byteArray0[1] = (byte) (-61);
      byteArray0[2] = (byte) (-67);
      byteArray0[3] = (byte)125;
      byteArray0[4] = (byte)50;
      TiffField tiffField0 = new TiffField(50, 1961, fieldTypeFloat0, 1468L, 50, byteArray0, byteOrder0, (-4051));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField1 = new TiffField((byte)50, (-1431655764), fieldTypeFloat0, (byte) (-67), (-1L), byteArray0, byteOrder0, (byte)68);
      assertTrue(tiffField1.isLocalValue());
      
      tiffField0.getByteArrayValue();
      int int0 = tiffField0.getSortHint();
      assertEquals((-4051), int0);
      
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(1961, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(1468L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-4);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-30);
      byteArray0[4] = (byte)47;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(372, 372, fieldTypeShort0, 372, (-1L), byteArray0, byteOrder0, 200);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "-]iLW7ey?Q5N'atQ<(");
      tiffField0.getIntValueOrArraySum();
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-7173), int0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      System.setCurrentTimeMillis((byte) (-4));
      int int1 = tiffField0.getOffset();
      assertEquals((-1), int1);
      
      tiffField0.getValue();
      assertEquals(200, tiffField0.getSortHint());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(372, tiffField0.getDirectoryType());
      assertEquals(372L, tiffField0.getCount());
      assertEquals(372, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2108, 2108, fieldTypeFloat0, 2108, 2108, byteArray0, byteOrder0, (-542));
      String string0 = tiffField0.getTagName();
      assertEquals((-542), tiffField0.getSortHint());
      assertEquals(2108, tiffField0.getDirectoryType());
      assertEquals(2108, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x83c)", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(Integer.MAX_VALUE, 65535, fieldTypeShort0, 3350L, Integer.MAX_VALUE, byteArray0, byteOrder0, 65535);
      tiffField0.getDoubleArrayValue();
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(3350L, tiffField0.getCount());
      assertEquals(Integer.MAX_VALUE, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2078209980), (byte)7, fieldTypeShort0, (byte)7, 2147483647L, byteArray0, byteOrder0, (-1431655764));
      tiffField0.getDoubleArrayValue();
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1431655764), tiffField0.getSortHint());
      assertEquals((-2078209980), tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(7L, tiffField0.getCount());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(7, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1775, 515, fieldTypeLong0, 2040L, 515, byteArray0, byteOrder0, 50941);
      tiffField0.getValueDescription();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField1 = new TiffField(50941, 716, fieldTypeByte0, (-10512L), (-1431655764), byteArray0, byteOrder0, (-1431655764));
      // Undeclared exception!
      try { 
        tiffField1.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-49);
      byteArray0[1] = (byte)103;
      byteArray0[2] = (byte)79;
      byteArray0[3] = (byte)71;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)84;
      byteArray0[6] = (byte)19;
      byteArray0[7] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 789, fieldTypeDouble0, 4L, (-147L), byteArray0, byteOrder0, (-2188));
      String string0 = tiffField0.toString();
      assertEquals("50 (0x32: Unknown Tag): -3.294770779792887E74 (4 Double)", string0);
      
      tiffField0.getValue();
      assertEquals(789, tiffField0.getDirectoryType());
      assertEquals((-147), tiffField0.getOffset());
      assertEquals((-2188), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      TiffField tiffField0 = new TiffField((-1768), 242, fieldTypeLong0, 65535, 16L, byteArray0, byteOrder0, 192);
      tiffField0.getDoubleArrayValue();
      tiffField0.getIntArrayValue();
      tiffField0.getBytesLength();
      assertEquals(242, tiffField0.getDirectoryType());
      assertEquals((-1768), tiffField0.getTag());
      assertEquals(192, tiffField0.getSortHint());
      assertEquals(16, tiffField0.getOffset());
      assertEquals(65535L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-90);
      TiffField tiffField0 = new TiffField(2086, 2086, fieldTypeLong0, 2086, 2086, byteArray1, byteOrder0, (-1));
      int int0 = tiffField0.getTag();
      assertEquals(2086, int0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(2086L, tiffField0.getCount());
      assertEquals(2086, tiffField0.getDirectoryType());
      assertEquals(2086, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)12;
      byteArray0[0] = (byte)12;
      TiffField tiffField0 = new TiffField(0, (-1), fieldTypeShort0, 4L, 0, byteArray0, byteOrder1, 0);
      String string0 = tiffField0.toString();
      assertEquals("0 (0x0: GPSVersionID): 12 (4 SShort)", string0);
      
      String string1 = tiffField0.getTagName();
      assertEquals("GPSVersionID", string1);
      
      tiffField0.getValue();
      int int0 = tiffField0.getSortHint();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-70);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 48322, fieldTypeByte0, 48322, (-1L), byteArray0, byteOrder1, (-90));
      String string0 = tiffField0.toString();
      assertEquals((-90), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals("0 (0x0: Unknown Tag): -70, 0, 0, 0 (48322 SByte)", string0);
      assertEquals(48322, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(50, "MoireFilter");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeFloat0, 1473L, 1648L, byteArray0, byteOrder0, (-1858));
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(108, "MoireFilter");
      TiffField tiffField1 = new TiffField((byte)1, 500, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, 142);
      String string0 = tiffField1.getValueDescription();
      assertNotNull(string0);
      assertTrue(tiffField1.isLocalValue());
      
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField2 = new TiffField(500, 0, fieldTypeAscii0, (-2029L), 1473L, byteArray0, byteOrder0, 1581);
      tiffField0.getDoubleArrayValue();
      boolean boolean0 = tiffField2.isLocalValue();
      assertTrue(boolean0);
      
      TiffField tiffField3 = new TiffField(108, (-1717986917), fieldTypeAscii0, 255L, (byte)1, byteArray0, byteOrder2, 122);
      String string1 = tiffField3.getStringValue();
      assertNotNull(string1);
      assertEquals(255L, tiffField3.getCount());
      assertEquals((-1717986917), tiffField3.getDirectoryType());
      assertEquals(108, tiffField3.getTag());
      assertEquals(122, tiffField3.getSortHint());
      assertFalse(tiffField3.isLocalValue());
      assertEquals(1, tiffField3.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(112, (String) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-31);
      byteArray0[1] = (byte)0;
      byteArray0[5] = (byte)0;
      ByteOrder.nativeOrder();
      byteArray0[5] = (byte) (-31);
      TiffField tiffField0 = new TiffField((-1431655778), (byte)0, fieldTypeRational0, 4L, (byte) (-31), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      int int0 = Pattern.UNICODE_CHARACTER_CLASS;
      assertEquals(256, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(112, (String) null);
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-31);
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-11);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)4;
      byteArray0[5] = (byte) (-60);
      TiffField tiffField0 = new TiffField(681, 1991, fieldTypeRational0, 1991, (-1717986917), byteArray0, byteOrder0, (byte)0);
      assertEquals(1991, tiffField0.getDirectoryType());
      
      TiffField tiffField1 = new TiffField((-1431655764), (byte)0, fieldTypeRational0, 4L, (byte) (-31), byteArray0, byteOrder0, (byte)4);
      tiffField1.getIntArrayValue();
      tiffField1.getBytesLength();
      assertEquals(4, tiffField1.getSortHint());
      assertEquals(4L, tiffField1.getCount());
      assertEquals((-31), tiffField1.getOffset());
      assertEquals((-1431655764), tiffField1.getTag());
  }
}
