/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 11:02:05 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Proxy;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.List;
import java.util.Map;
import java.util.Properties;
import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptorList;
import org.apache.derby.impl.sql.compile.ConstraintDefinitionNode;
import org.apache.derby.impl.sql.execute.ConstantActionActivation;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.jdbacl.DBExecutionResult;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBCheckConstraint;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBSequence;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DefaultDBTable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.FBArray;
import org.firebirdsql.jdbc.FBConnection;
import org.h2.Driver;
import org.h2.engine.ConnectionInfo;
import org.h2.jdbc.JdbcConnection;
import org.h2.jdbc.JdbcSQLException;
import org.h2.tools.Csv;
import org.h2.tools.Recover;
import org.h2.tools.SimpleResultSet;
import org.hsqldb.Session;
import org.hsqldb.jdbc.jdbcConnection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DBUtil.available("referenced window: ", "referenced window: ", "referenced window: ", "INFORMATION_SCHEMA.LOBS");
      DBUtil.resetMonitors();
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      List<Object[]> list0 = new ConstraintDescriptorList();
      DBUtil.available("--3q Tb{h", "''", ")XN\"n(s=K|a", "by:)LoD-Z$");
      // Undeclared exception!
      try { 
        DBUtil.closeResultSetAndStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "";
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBUtil.getOpenConnectionCount();
      Csv csv0 = Csv.getInstance();
      csv0.setEscapeCharacter('#');
      SimpleResultSet simpleResultSet0 = new SimpleResultSet(csv0);
      DBUtil.closeResultSetAndStatement(simpleResultSet0);
      DBUtil.getOpenPreparedStatementCount();
      JdbcConnection jdbcConnection0 = null;
      try {
        jdbcConnection0 = new JdbcConnection((ConnectionInfo) null, true);
        fail("Expecting exception: JdbcSQLException");
      
      } catch(Throwable e) {
         //
         // General error: \"java.lang.NullPointerException\" [50000-136]
         //
         verifyException("org.h2.message.DbException", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FBArray fBArray0 = new FBArray();
      ConstantActionActivation constantActionActivation0 = new ConstantActionActivation();
      constantActionActivation0.getParentResultSets();
      fBArray0.getResultSet((-1577L), (-2118), (Map) null);
      DBUtil.close((ResultSet) null);
      DBSchema dBSchema0 = new DBSchema("");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("\u0003u'", dBSchema0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "\u0003u'";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "\u0003u'";
      stringArray0[6] = "";
      stringArray0[7] = "";
      stringArray0[8] = "";
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(defaultDBTable0, "", true, stringArray0);
      boolean boolean0 = DBUtil.equivalent(dBPrimaryKeyConstraint0, dBPrimaryKeyConstraint0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      char char0 = 'l';
      Recover recover0 = new Recover();
      recover0.getLobConnection();
      Proxy proxy0 = (Proxy)DBUtil.wrapWithPooledConnection((Connection) null, false);
      ErrorHandler errorHandler0 = new ErrorHandler("Connecting ");
      // Undeclared exception!
      try { 
        DBUtil.runScript((String) null, "Connecting ", 'l', (Connection) proxy0, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Class<Driver> class0 = Driver.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("3q Tb:h", '\\', (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.querySingleRow("--prepared statement(s)", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = "Y[\",UQ83aeN^@::V";
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("Y[\",UQ83aeN^@::V", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: Y[\",UQ83aeN^@::V
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      String string0 = "\\=zN=qZ4~l";
      // Undeclared exception!
      try { 
        DBUtil.connect("=zN=qZ4~l", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '=zN=qZ4~l.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DBUtil.getOpenResultSetCount();
      jdbcConnection jdbcConnection0 = new jdbcConnection((Session) null);
      ErrorHandler errorHandler0 = new ErrorHandler("Empty SQL string in executeUpdate()");
      // Undeclared exception!
      try { 
        DBUtil.runScript("Empty SQL string in executeUpdate()", (Connection) jdbcConnection0, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      DBUtil.close((Connection) null);
      int int0 = DBUtil.getOpenStatementCount();
      int int1 = DBUtil.getOpenPreparedStatementCount();
      assertTrue(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      DBUtil.checkReadOnly("i%NqR}d5\"Bwr]\"QpK8d", false);
      DBUtil.getOpenStatementCount();
      DBUtil.getOpenPreparedStatementCount();
      // Undeclared exception!
      try { 
        DBUtil.query("i%NqR}d5\"Bwr]\"QpK8d", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Level level0 = Level.trace;
      ErrorHandler errorHandler0 = new ErrorHandler("select count(*) from ", level0);
      errorHandler0.handleError(",$`??w9\"tBx>'");
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData(",$`??w9\"tBx>'", "select count(*) from ", ",$`??w9\"tBx>'", "select count(*) from ");
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting select count(*) from  failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      String string0 = "3q Tb:h";
      char char0 = '\\';
      Connection connection0 = null;
      boolean boolean0 = false;
      try { 
        DBUtil.getMetaData((Connection) null, "3q Tb:h", "3q Tb:h", true, false, false, false, "3q Tb:h", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ErrorHandler errorHandler0 = new ErrorHandler("--3q Tb:h");
      jdbcConnection jdbcConnection0 = new jdbcConnection((Session) null);
      ErrorHandler errorHandler1 = new ErrorHandler("--3q Tb:h");
      DBUtil.runScript("--3q Tb:h", (Connection) jdbcConnection0, true, errorHandler1);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) jdbcConnection0, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.SQLUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Driver driver0 = new Driver();
      String string0 = "--*";
      driver0.connect("--*", (Properties) null);
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("--*", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      DBUtil.close((Connection) null);
      // Undeclared exception!
      try { 
        DBUtil.countRows((String) null, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DBUtil.escape("Mk9|L>zkj1!d{O5hOm");
      DBUtil.assertAllDbResourcesClosed(true);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_mosa/projects/11_jdbacl/y?W;>UCp=E|WnP.env.properties");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "Mk9|L>zkj1!d{O5hOm");
      DBUtil.existsEnvironment("y?W;>UCp=E|WnP");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Mk9|L>zkj1!d{O5hOm";
      stringArray0[1] = "Mk9|L>zkj1!d{O5hOm";
      ConstraintDefinitionNode constraintDefinitionNode0 = new ConstraintDefinitionNode();
      Properties properties0 = new Properties();
      Driver driver0 = new Driver();
      driver0.connect("Mk9|L>zkj1!d{O5hOm", properties0);
      ErrorHandler errorHandler0 = new ErrorHandler("For empty collections, a componentType needs to be specified.");
      // Undeclared exception!
      try { 
        DBUtil.runScript("E,lnZG)y+86s4V%6", (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DBSchema dBSchema0 = new DBSchema("--3q Tb:h");
      DefaultDBTable defaultDBTable0 = new DefaultDBTable();
      dBSchema0.addTable(defaultDBTable0);
      DBUtil.dependencyOrderedTables(dBSchema0);
      ErrorHandler errorHandler0 = new ErrorHandler("--3q Tb:h");
      // Undeclared exception!
      try { 
        DBUtil.getMetaData("Pr=!`U", true, true, false, true, "org.apache.derby.impl.store.raw.data.BaseDataFileFactory", true, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'Pr=!`U.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DBUtil.escape("Mk9|L>zkj1!d{O5hOm");
      DBUtil.assertAllDbResourcesClosed(true);
      DBUtil.existsEnvironment("y?W;>UCp=E|WnP");
      String[] stringArray0 = new String[7];
      stringArray0[0] = "Mk9|L>zkj1!d{O5hOm";
      ErrorHandler errorHandler0 = new ErrorHandler("Mk9|L>zkj1!d{O5hOm");
      String string0 = "NOT";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "times", "NOT", "Mk9|L>zkj1!d{O5hOm", "--0vJo=NR@e5&_Rp4{", "null");
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Level level0 = Level.error;
      ErrorHandler errorHandler0 = new ErrorHandler(")\"WF*qn>|HD#", level0);
      String string0 = "1c'@ezS;~h+2n+^`h";
      errorHandler0.handleError("1c'@ezS;~h+2n+^`h");
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("1c'@ezS;~h+2n+^`h", (String) null, "COLUMNDEFAULT", ")\"WF*qn>|HD#");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }
}
