/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 00:21:31 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Edge;
import wheel.asm.FieldWriter;
import wheel.asm.Frame;
import wheel.asm.Label;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("Exceptions");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Enumeration<PipedInputStream> enumeration0 = (Enumeration<PipedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(sequenceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) null);
      boolean boolean0 = ClassReader.RESIZE;
      ClassWriter classWriter0 = new ClassWriter(4);
      classReader0.readShort(2);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      Frame frame0 = new Frame();
      ClassWriter classWriter1 = new ClassWriter(4);
      classReader0.readByte(2);
      // Undeclared exception!
      try { 
        classReader0.getItem((short)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ClassReader classReader0 = new ClassReader(byteArray0);
      classReader0.readInt((byte)0);
      // Undeclared exception!
      try { 
        classReader0.getItem(12);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[36];
      ClassReader classReader0 = new ClassReader(byteArray0);
      classReader0.getAccess();
      // Undeclared exception!
      try { 
        classReader0.getSuperName();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ClassReader classReader0 = new ClassReader(byteArray0);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(classReader0.b);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(classReader0.b);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(byteArrayInputStream1, 132);
      PipedInputStream pipedInputStream0 = new PipedInputStream(1);
      ClassReader classReader1 = new ClassReader(byteArrayInputStream1);
      classReader1.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(2);
      Label[] labelArray0 = new Label[5];
      Label label0 = new Label();
      labelArray0[0] = label0;
      Label label1 = label0.getFirst();
      labelArray0[1] = label1;
      Label label2 = new Label();
      labelArray0[2] = label2;
      Label label3 = label0.next;
      labelArray0[3] = null;
      Label label4 = label0.next;
      labelArray0[4] = null;
      Label label5 = classReader0.readLabel(1, labelArray0);
      assertEquals(10, classReader0.header);
      assertSame(label5, label1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.CanReadFileFilter");
      classReader0.readInt(6);
      Edge edge0 = new Edge();
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader1.readInt(6);
      int int0 = 1018;
      classReader0.readLong(662);
      classReader1.accept((ClassVisitor) classWriter0, 6);
      // Undeclared exception!
      try { 
        classReader0.readConst(17, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.CanReadFileFilter");
      classReader0.readInt(6);
      Edge edge0 = new Edge();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 3080245);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.readInt(26);
      classReader0.readLong(1018);
      ClassReader classReader2 = new ClassReader(classReader1.b, 8, 812);
      classReader2.readUnsignedShort(883);
      int int0 = 49;
      // Undeclared exception!
      try { 
        classReader2.copyPool(classWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8711
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = ClassReader.SIGNATURES;
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.CanReadFileFilter");
      char[] charArray0 = null;
      int int0 = 6;
      classReader0.readInt(6);
      ClassWriter classWriter0 = new ClassWriter(classReader0, 3080245);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.readInt(26);
      classReader0.readLong(27);
      classReader0.readConst(6, (char[]) null);
      classReader0.getSuperName();
      classReader0.readInt(22);
      ClassReader classReader2 = new ClassReader(classReader1.b, 1000, 1);
      // Undeclared exception!
      try { 
        classReader2.getInterfaces();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.CanReadFileFilter");
      Edge edge0 = new Edge();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classReader0.readInt(127);
      ClassReader classReader1 = new ClassReader("wheel.asm.ClassReader");
      ClassWriter classWriter1 = new ClassWriter(classReader1, 2);
      classReader1.readConst(126, (char[]) null);
      int int0 = 105;
      classReader1.readLong(int0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader2 = new ClassReader(classReader1.b, classReader1.EXPAND_FRAMES, classReader0.SKIP_CODE);
      int int1 = 1;
      ClassReader classReader3 = new ClassReader(classReader1.b, int1, classReader2.SKIP_FRAMES);
      classReader1.getInterfaces();
      int int2 = 64;
      classReader0.readByte(int2);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      boolean boolean0 = ClassReader.SIGNATURES;
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.CanReadFileFilter");
      classReader0.getSuperName();
      classReader0.readInt(6);
      Edge edge0 = new Edge();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 3080245);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassReader classReader1 = new ClassReader(classReader0.b);
      classReader0.readInt(26);
      classReader0.readLong(27);
      classReader1.accept((ClassVisitor) classWriter0, 8);
      classReader0.readConst(6, (char[]) null);
      classReader0.getSuperName();
      classReader0.readInt(22);
      Label label0 = new Label();
      ClassReader classReader2 = new ClassReader(classReader1.b, 1000, 1);
      classReader2.getSuperName();
      ClassReader classReader3 = null;
      try {
        classReader3 = new ClassReader(classReader1.b, 6, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1175
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      boolean boolean0 = ClassReader.SIGNATURES;
      String string0 = "org.apache.commons.io.filefilter.CanReadFileFilter";
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.CanReadFileFilter");
      char[] charArray0 = null;
      classReader0.getSuperName();
      classReader0.readInt(6);
      Edge edge0 = new Edge();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 3080245);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassReader classReader1 = new ClassReader("org/apache/commons/io/filefilter/AbstractFileFilter");
      classReader0.readInt(26);
      classReader0.readLong(27);
      classReader1.accept((ClassVisitor) classWriter0, 8);
      classReader0.readConst(6, (char[]) null);
      classReader0.getSuperName();
      classReader0.readInt(22);
      Label label0 = new Label();
      ClassReader classReader2 = null;
      try {
        classReader2 = new ClassReader(classReader1.b, 1000, 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.CanReadFileFilter");
      Edge edge0 = new Edge();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      int int0 = Frame.UNINITIALIZED;
      ClassReader classReader1 = new ClassReader("wheel.asm.ClassReader");
      ClassWriter classWriter1 = new ClassWriter(classReader1, 2);
      classReader0.accept((ClassVisitor) classWriter1, 126);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      classReader1.readInt(43);
      classReader0.readLong(13);
      FileSystemHandling.shouldAllThrowIOExceptions();
      classReader1.accept((ClassVisitor) classWriter1, 1);
      ClassReader classReader2 = new ClassReader(classReader1.b);
      classReader1.getClassName();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream("LocalVariableTypeTable");
      ClassReader classReader3 = new ClassReader(mockFileInputStream0);
      classReader1.readByte(classReader3.EXPAND_FRAMES);
  }
}
