/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 23 18:37:49 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayWriter;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-1);
      TiffField tiffField0 = new TiffField((-1), 3090, fieldTypeFloat0.SHORT, 19728L, (byte) (-110), byteArray0, byteOrder0, (byte) (-110));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(39456, tiffField0.getBytesLength());
      assertEquals((-110), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-110), tiffField0.getOffset());
      assertEquals(3090, tiffField0.getDirectoryType());
      assertEquals(255, int0);
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, "-");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40091, 40091, fieldTypeByte0, (-2885L), 50, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.toString();
      assertEquals(50, tiffField0.getOffset());
      assertEquals("40091 (0x9c9b: XPTitle): Invalid value: Text field not encoded as bytes. (-2885 -)", string0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(40091, tiffField0.getTag());
      assertEquals(40091, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeFloat0, 1124, 0, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(4496, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[345];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-1718), fieldTypeDouble0, (-624L), 76L, byteArray0, byteOrder0, 2118066063);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1718), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertEquals(76, tiffField0.getOffset());
      assertEquals(2118066063, tiffField0.getSortHint());
      assertEquals(28, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[65];
      TiffField tiffField0 = new TiffField(324, 12, fieldTypeShort0.SRATIONAL, 0L, 250, byteArray0, byteOrder0, (-2359));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(324, tagInfo0.tag);
      assertEquals(324, tiffField0.getTag());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals((-2359), tiffField0.getSortHint());
      assertEquals(250, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(278, "y dXyt6}");
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "y dXyt6}");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2704, 2704, fieldTypeByte0, (-566L), 1L, byteArray0, byteOrder0, (byte) (-65));
      int int0 = tiffField0.getTag();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2704, tiffField0.getDirectoryType());
      assertEquals((-65), tiffField0.getSortHint());
      assertEquals(2704, int0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(133, "/g\"RthBF`,gl3$");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1112), 133, fieldTypeByte0, (-1L), (-50L), byteArray0, byteOrder0, 4284);
      int int0 = tiffField0.getTag();
      assertEquals(4284, tiffField0.getSortHint());
      assertEquals(133, tiffField0.getDirectoryType());
      assertEquals((-50), tiffField0.getOffset());
      assertEquals((-1112), int0);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(33437, "");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)49;
      byteArray0[1] = (byte)122;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)49, (byte)8, fieldTypeShort0.ASCII, (byte)8, (-751), byteArray0, byteOrder0, 2147010738);
      String string0 = tiffField0.getStringValue();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(2147010738, tiffField0.getSortHint());
      assertEquals((-751), tiffField0.getOffset());
      assertEquals(49, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeFloat0, 1124, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1), 3090, fieldTypeFloat0.SSHORT, 19728L, (byte) (-110), byteArray0, byteOrder0, (byte) (-110));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(3090, tiffField0.getDirectoryType());
      assertEquals((-110), tiffField0.getOffset());
      assertEquals((-110), int0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-37), 50, fieldTypeFloat0, 50, 1624L, byteArray0, byteOrder0, (-3755));
      int int0 = tiffField0.getOffset();
      assertEquals((-37), tiffField0.getTag());
      assertEquals(1624, int0);
      assertEquals((-3755), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2568), (-2568), fieldTypeRational0, (-2568), (-2568), byteArray0, byteOrder0, 3093);
      int int0 = tiffField0.getOffset();
      assertEquals((-2568), int0);
      assertEquals(3093, tiffField0.getSortHint());
      assertEquals((-2568), tiffField0.getDirectoryType());
      assertEquals((-2568), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1464), ")1&~!``");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)95;
      TiffField tiffField0 = new TiffField((-1464), 50255, fieldTypeLong0, 50255, (-477L), byteArray0, byteOrder0, (-1464));
      tiffField0.getIntValueOrArraySum();
      assertEquals(50255, tiffField0.getDirectoryType());
      assertEquals((-477), tiffField0.getOffset());
      assertEquals(201020, tiffField0.getBytesLength());
      assertEquals((-1464), tiffField0.getTag());
      assertEquals((-1464), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte)92;
      byteArray0[7] = (byte) (-72);
      TiffField tiffField0 = new TiffField(2943, (-1998), fieldTypeRational0, 51, (-269), byteArray0, byteOrder0, (byte)94);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1998), tiffField0.getDirectoryType());
      assertEquals(2943, tiffField0.getTag());
      assertEquals(94, tiffField0.getSortHint());
      assertEquals((-269), tiffField0.getOffset());
      assertEquals(408, tiffField0.getBytesLength());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)18;
      TiffField tiffField0 = new TiffField((byte)18, (-2281), fieldTypeShort0, 1L, 1126L, byteArray0, byteOrder0, 515);
      tiffField0.getIntValue();
      assertEquals((-2281), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1126, tiffField0.getOffset());
      assertEquals(515, tiffField0.getSortHint());
      assertEquals(18, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-128);
      TiffField tiffField0 = new TiffField((-2600), (-2600), fieldTypeByte0.SSHORT, 1L, 65535, byteArray0, byteOrder0, 371);
      tiffField0.getIntValue();
      assertEquals(371, tiffField0.getSortHint());
      assertEquals((-2600), tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-2600), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(515, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(65535, (-2586), fieldTypeRational0, 1206, 1584L, byteArray0, byteOrder0, (byte) (-128));
      tiffField0.getFieldTypeName();
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-128), tiffField0.getSortHint());
      assertEquals(1584, tiffField0.getOffset());
      assertEquals((-2586), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1), "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37397, (-1647), fieldTypeFloat0, (-3333L), (-1647), byteArray0, byteOrder0, 65535);
      tiffField0.getFieldTypeName();
      assertEquals((-1647), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-1647), tiffField0.getOffset());
      assertEquals(37397, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 1, (FieldType) null, 50, 50, byteArray0, byteOrder0, 1);
      tiffField0.getFieldType();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, 0L, byteArray0, byteOrder0, (byte)101);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(101, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1369), "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 2136582715, fieldTypeRational0, 528L, (-1L), byteArray0, byteOrder0, 2136582715);
      tiffField0.getFieldType();
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2136582715, tiffField0.getSortHint());
      assertEquals(2136582715, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)91;
      TiffField tiffField0 = new TiffField((byte)91, 50, fieldTypeRational0.SHORT, 1L, 255L, byteArray0, byteOrder0, (byte) (-58));
      tiffField0.getDoubleValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-58), tiffField0.getSortHint());
      assertEquals(91, tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-128);
      TiffField tiffField0 = new TiffField((-2600), (-2600), fieldTypeByte0.SSHORT, 1L, 65535, byteArray0, byteOrder0, 371);
      tiffField0.getDoubleValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-2600), tiffField0.getTag());
      assertEquals((-2600), tiffField0.getDirectoryType());
      assertEquals(371, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3179), 0, fieldTypeFloat0, (-905L), 0L, (byte[]) null, byteOrder0, (-4544));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-4544), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-3179), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 4290L, 255L, byteArray0, byteOrder0, 1124);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, int0);
      assertEquals(255, tiffField0.getOffset());
      assertEquals(1124, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1185, " o`y6;2]oPQHp#z'+k)");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1185, 0, fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, (byte)85);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(1185, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 626, fieldTypeFloat0, 4290L, 255L, byteArray0, byteOrder0, 1124);
      tiffField0.getCount();
      assertEquals(1124, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(626, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-533), (-533), fieldTypeShort0, (-533), (-533), (byte[]) null, byteOrder0, (-533));
      tiffField0.getCount();
      assertEquals((-533), tiffField0.getSortHint());
      assertEquals((-533), tiffField0.getDirectoryType());
      assertEquals((-533), tiffField0.getTag());
      assertEquals((-533), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3003, 1060, fieldTypeShort0, 0L, 2283, byteArray0, byteOrder0, 2147230317);
      int int0 = tiffField0.getBytesLength();
      assertEquals(2147230317, tiffField0.getSortHint());
      assertEquals(1060, tiffField0.getDirectoryType());
      assertEquals(2283, tiffField0.getOffset());
      assertEquals(3003, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(515, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1529, (-2352), fieldTypeRational0, (-2934L), (-2934L), byteArray0, byteOrder0, 1968526677);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-2352), tiffField0.getDirectoryType());
      assertEquals((-2934), tiffField0.getOffset());
      assertEquals(1968526677, tiffField0.getSortHint());
      assertEquals((-23472), int0);
      assertEquals(1529, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, "-");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40091, 40091, fieldTypeByte0, (-2885L), 50, byteArray0, byteOrder0, 50);
      tiffField0.getByteOrder();
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(40091, tiffField0.getDirectoryType());
      assertEquals(40091, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)13, "uy-I");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-654), 50, fieldTypeAscii0, 1543L, 16L, byteArray0, (ByteOrder) null, (-1279));
      tiffField0.getByteArrayValue();
      assertEquals(16, tiffField0.getOffset());
      assertEquals((-654), tiffField0.getTag());
      assertEquals((-1279), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1543, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-554), 444, fieldTypeLong0, 0L, (-554), byteArray0, byteOrder0, (-1132));
      tiffField0.getByteArrayValue();
      assertEquals((-554), tiffField0.getTag());
      assertEquals(444, tiffField0.getDirectoryType());
      assertEquals((-1132), tiffField0.getSortHint());
      assertEquals((-554), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(515, "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("jox9~H$");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      TiffField tiffField0 = new TiffField(1529, (byte) (-128), fieldTypeRational0, 5796L, 515, byteArray0, byteOrder0, 1529);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "jox9~H$");
      assertEquals(515, tiffField0.getOffset());
      assertEquals(1529, tiffField0.getTag());
      assertEquals(1529, tiffField0.getSortHint());
      assertEquals(46368, tiffField0.getBytesLength());
      assertEquals((-128), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[194];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3314, (-55), fieldTypeFloat0, (-60L), 1682L, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2792, 0, (FieldType) null, 0, 2792, byteArray0, byteOrder0, (byte)10);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(325, "GPSImgDirectionRef");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1174), (-1174), fieldTypeLong0, (-1174), 325, byteArray0, (ByteOrder) null, (-47));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2568), (-2568), fieldTypeRational0, (-2568), (-2568), byteArray0, byteOrder0, 3093);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      byte[] byteArray0 = new byte[345];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-1718), fieldTypeDouble0, (-624L), 76L, byteArray0, byteOrder0, 2118066063);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2147005685, 1, (FieldType) null, 2147005685, 5796L, byteArray0, byteOrder0, 5983);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[44];
      TiffField tiffField0 = new TiffField((-2145258275), 1, fieldTypeShort0.LONG, 2147483647L, 0, byteArray0, byteOrder0, (byte)101);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1124, 1124, fieldTypeFloat0, 1124, 1124, byteArray0, byteOrder0, (-381));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(442, ", fieldType: ");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-7), 442, fieldTypeDouble0, (-7), 511L, byteArray0, (ByteOrder) null, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 1, (FieldType) null, 50, 50, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1460), (-1834), fieldTypeByte0, (-1L), (-1L), byteArray0, byteOrder0, (-1834));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2360, 2360, fieldTypeLong0, 3263L, 685L, byteArray0, byteOrder0, 1825);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(3302, 3302, fieldTypeByte0, 4L, 2802L, (byte[]) null, (ByteOrder) null, 133);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-1), "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37397, (-1647), fieldTypeFloat0, (-3333L), (-1647), byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-2198), (String) null);
      byte[] byteArray0 = new byte[7];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(707);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2198), (-2198), fieldTypeDouble0, (-2198), (-2198), byteArray0, byteOrder0, 829);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(41992, 1968526677, fieldTypeShort0.SRATIONAL, 103, (-760L), byteArray0, byteOrder0, 1968526677);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals("41992 (0xa408: Unknown Tag):  (103 SRational)\n", charArrayWriter0.toString());
      assertEquals(41992, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-37), (-3755), fieldTypeFloat0, (-3755), 1624L, byteArray0, byteOrder0, (-3755));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-3755), tiffField0.getSortHint());
      assertEquals((-3755), tiffField0.getDirectoryType());
      assertEquals((-37), tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals(1624, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 1765, fieldTypeByte0, 3452L, 1826L, byteArray0, byteOrder0, 2147152909);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals(1826, tiffField0.getOffset());
      assertEquals(2147152909, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(1765, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-696), (-3755), fieldTypeByte0.DOUBLE, 1020L, 1765, byteArray0, byteOrder0, (byte) (-18));
      tiffField0.getFieldType();
      assertEquals(1765, tiffField0.getOffset());
      assertEquals((-696), tiffField0.getTag());
      assertEquals((-3755), tiffField0.getDirectoryType());
      assertEquals((-18), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(62, "0");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(842, 41992, fieldTypeAscii0, 809L, 1968526677, byteArray0, byteOrder0, 50715);
      tiffField0.getValue();
      assertEquals(1968526677, tiffField0.getOffset());
      assertEquals(50715, tiffField0.getSortHint());
      assertEquals(809, tiffField0.getBytesLength());
      assertEquals(842, tiffField0.getTag());
      assertEquals(41992, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3179), 0, fieldTypeFloat0, (-905L), 0L, (byte[]) null, byteOrder0, (-4544));
      int int0 = tiffField0.getOffset();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-3179), tiffField0.getTag());
      assertEquals((-4544), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (byte)86, fieldTypeByte0, 0L, (byte)0, byteArray0, byteOrder0, (byte)86);
      int int0 = tiffField0.getTag();
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals(86, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 1765, fieldTypeByte0, 3452L, 1826L, byteArray0, byteOrder0, 2147152909);
      int int0 = tiffField0.getBytesLength();
      assertEquals(3452, int0);
      assertEquals(2147152909, tiffField0.getSortHint());
      assertEquals(1765, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1826, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-2600), (-2600), fieldTypeByte0.SHORT, 1L, 65535, byteArray0, byteOrder0, 371);
      tiffField0.getDoubleValue();
      assertEquals((-2600), tiffField0.getTag());
      assertEquals((-2600), tiffField0.getDirectoryType());
      assertEquals(371, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-2600), (-2600), fieldTypeByte0.SHORT, 1L, 65535, byteArray0, byteOrder0, 371);
      tiffField0.getIntValue();
      assertEquals((-2600), tiffField0.getDirectoryType());
      assertEquals((-2600), tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(371, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1132), 1218, fieldTypeFloat0.SLONG, 4496L, 0L, byteArray0, byteOrder0, (byte)49);
      tiffField0.getIntValueOrArraySum();
      assertEquals(49, tiffField0.getSortHint());
      assertEquals((-1132), tiffField0.getTag());
      assertEquals(1218, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(17984, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-562), 104, fieldTypeAscii0, 1155L, (-2248L), byteArray0, byteOrder0, (-1181));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@717d31be for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-451), (-1167), fieldTypeByte0, 1L, 659L, byteArray0, byteOrder0, 106);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1167), tiffField0.getDirectoryType());
      assertEquals(659, tiffField0.getOffset());
      assertEquals(106, tiffField0.getSortHint());
      assertEquals((-451), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, (byte)50, fieldTypeFloat0.DOUBLE, 1624L, (-735L), byteArray0, byteOrder0, 32947);
      tiffField0.getDoubleArrayValue();
      assertEquals(32947, tiffField0.getSortHint());
      assertEquals(12992, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-735), tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1417, (byte)13, fieldTypeFloat0, (byte)13, 229L, byteArray0, byteOrder0, (byte)23);
      tiffField0.getDoubleArrayValue();
      assertEquals(229, tiffField0.getOffset());
      assertEquals(23, tiffField0.getSortHint());
      assertEquals(1417, tiffField0.getTag());
      assertEquals(52, tiffField0.getBytesLength());
      assertEquals(13, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1132), 1218, fieldTypeFloat0.IFD, 4496L, 0L, byteArray0, byteOrder0, (byte)49);
      tiffField0.getDoubleArrayValue();
      assertEquals(17984, tiffField0.getBytesLength());
      assertEquals(1218, tiffField0.getDirectoryType());
      assertEquals((-1132), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(49, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-2641), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeByte0).ASCII).SHORT, 4L, 16L, byteArray0, byteOrder0, (-1));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(16, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-2641), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(515, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(65535, (-2586), fieldTypeRational0, 1206, 1584L, byteArray0, byteOrder0, (byte) (-128));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-128), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-2586), tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(9648, tiffField0.getBytesLength());
      assertEquals(1584, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-2600), (-2600), fieldTypeByte0.SHORT, 1L, 65535, byteArray0, byteOrder0, 371);
      tiffField0.getDoubleArrayValue();
      assertEquals((-2600), tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(371, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-2600), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)13, "uy-I");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(2147005685, 50, fieldTypeAscii0, 1624L, 2147005685, byteArray0, byteOrder0, 2147005685);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-554), 444, fieldTypeLong0, 0L, (-554), byteArray0, byteOrder0, (-1132));
      tiffField0.getIntArrayValue();
      assertEquals(444, tiffField0.getDirectoryType());
      assertEquals((-554), tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1132), tiffField0.getSortHint());
      assertEquals((-554), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 50, 50, byteArray0, byteOrder0, 765);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@8b34ca5 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(515, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(50, (byte) (-43), fieldTypeRational0, 1584L, (-2258L), byteArray0, byteOrder0, (-3419));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(515, 1206, fieldTypeRational0, 1529, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getIntArrayValue();
      assertEquals(12232, tiffField0.getBytesLength());
      assertEquals(1206, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(515, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-451), (byte)86, fieldTypeByte0, 1L, 659L, byteArray0, byteOrder0, 106);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(659, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals(106, tiffField0.getSortHint());
      assertEquals((-451), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-2641), fieldTypeByte0.SHORT, 4L, 16L, byteArray0, byteOrder0, (-1));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(8, tiffField0.getBytesLength());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(4L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(16, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-2641), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (byte)86, fieldTypeByte0, 0L, (byte)0, byteArray0, byteOrder0, (byte)86);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@70b45046
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(62, "0");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(842, 41992, fieldTypeAscii0, 809L, 1968526677, byteArray0, byteOrder0, 50715);
      String string0 = tiffField0.getStringValue();
      assertEquals(1968526677, tiffField0.getOffset());
      assertEquals(50715, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(41992, tiffField0.getDirectoryType());
      assertEquals(842, tiffField0.getTag());
      assertEquals(809, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1132), 1218, fieldTypeFloat0.LONG, 4496L, 0L, byteArray0, byteOrder0, (byte)49);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1218, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0xfffffb94)", string0);
      assertEquals(49, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(33919, 15, fieldTypeByte0, 15, 15, byteArray0, (ByteOrder) null, 2314);
      String string0 = tiffField0.getTagName();
      assertEquals(2314, tiffField0.getSortHint());
      assertEquals(33919, tiffField0.getTag());
      assertEquals(15, tiffField0.getOffset());
      assertEquals("IntergraphFlagRegisters", string0);
      assertEquals(15, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(515, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-1431655764), 1502, fieldTypeRational0, (-2568L), (-1790L), byteArray0, byteOrder0, (-1431655764));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      byte[] byteArray0 = new byte[218];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(18, 51008, fieldTypeFloat0, 1143L, 1L, byteArray0, byteOrder0, 23);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(18, tiffField0.getTag());
      assertEquals(23, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1143L, tiffField0.getCount());
      assertEquals(4572, tiffField0.getBytesLength());
      assertEquals(51008, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[55];
      TiffField tiffField0 = new TiffField(3214, 43, fieldTypeShort0.BYTE, 3306, 43, byteArray0, byteOrder0, (-12));
      String string0 = tiffField0.getValueDescription();
      assertEquals(43, tiffField0.getOffset());
      assertEquals((-12), tiffField0.getSortHint());
      assertEquals(3306, tiffField0.getBytesLength());
      assertEquals(3306L, tiffField0.getCount());
      assertEquals(43, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(3214, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1435, 3052, fieldTypeFloat0, 2056L, 1435, byteArray0, byteOrder0, (-3449));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[20];
      TiffField tiffField0 = new TiffField(32, 3, fieldTypeShort0.DOUBLE, 3, (-2378L), byteArray0, (ByteOrder) null, 3);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals((-2378), tiffField0.getOffset());
      assertEquals(3L, tiffField0.getCount());
      assertEquals(32, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals("0.0, 0.0", string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-696), (-3755), fieldTypeByte0.DOUBLE, 1020L, 1765, byteArray0, byteOrder0, (byte) (-18));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals("-696 (0xfffffd48: Unknown Tag): 0.0 (1020 Double)\n", byteArrayOutputStream0.toString());
      assertEquals((-18), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 1765, fieldTypeByte0, 3452L, 1826L, byteArray0, byteOrder0, 2147152909);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(48, byteArrayOutputStream0.size());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[212];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((-541), (-541), fieldTypeLong0, 3342L, (-541), byteArray0, byteOrder0, 777);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-541), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(777, tiffField0.getSortHint());
      assertEquals((-541), tiffField0.getOffset());
      assertEquals((-541), tiffField0.getTag());
      assertEquals(3342L, tiffField0.getCount());
      assertEquals(13368, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1449, (-1891), fieldTypeLong0, 1449, 109L, byteArray0, byteOrder0, (-3755));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(43, byteArrayOutputStream0.size());
      assertEquals(1449, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[109];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34, 250, fieldTypeShort0, 250, (-10L), byteArray0, byteOrder0, 34);
      String string0 = tiffField0.getValueDescription();
      assertEquals(34, tiffField0.getTag());
      assertEquals(500, tiffField0.getBytesLength());
      assertEquals((-10), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(34, tiffField0.getSortHint());
      assertEquals(250L, tiffField0.getCount());
      assertEquals(250, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-1144), 66, fieldTypeFloat0.SSHORT, 4496L, (byte) (-58), byteArray0, byteOrder0, 66);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-58), tiffField0.getOffset());
      assertEquals(8992, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(66, tiffField0.getSortHint());
      assertEquals((-1144), tiffField0.getTag());
      assertEquals(66, tiffField0.getDirectoryType());
      assertEquals(4496L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[60];
      TiffField tiffField0 = new TiffField(555, 1081, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).FLOAT).ASCII, 32895, 32895, byteArray0, byteOrder0, (-3004));
      tiffField0.dump();
      assertEquals(32895, tiffField0.getBytesLength());
      assertEquals((-3004), tiffField0.getSortHint());
      assertEquals(32895L, tiffField0.getCount());
      assertEquals(32895, tiffField0.getOffset());
      assertEquals(555, tiffField0.getTag());
      assertEquals(1081, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-2600), (-2600), fieldTypeByte0.SSHORT, 1L, 65535, byteArray0, byteOrder0, 371);
      tiffField0.toString();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-2600), tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals((-2600), tiffField0.getDirectoryType());
      assertEquals(371, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1464), ")1&~!``");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1014, (byte)20, fieldTypeLong0, 255L, 255L, byteArray0, byteOrder0, 1014);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1014, 1014);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(255, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(255L, tiffField0.getCount());
      assertEquals(1014, tiffField0.getSortHint());
      assertEquals(1014, tiffField0.getTag());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3179), 0, fieldTypeFloat0, (-905L), 0L, (byte[]) null, byteOrder0, (-4544));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(0, (-4544));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-3179), tiffField0.getTag());
      assertEquals((-4544), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-3620), tiffField0.getBytesLength());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: null", string0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(3302, 3302, fieldTypeByte0, 4L, 2802L, (byte[]) null, (ByteOrder) null, 133);
      assertTrue(tiffField0.isLocalValue());
      
      tiffField0.getOversizeValueElement();
      assertEquals(2802, tiffField0.getOffset());
      assertEquals(133, tiffField0.getSortHint());
      assertEquals(3302, tiffField0.getTag());
      assertEquals(3302, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 1765, fieldTypeByte0, 3452L, 1826L, byteArray0, byteOrder0, 2147152909);
      tiffField0.getFieldTypeName();
      assertEquals(1765, tiffField0.getDirectoryType());
      assertEquals(1826, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(2147152909, tiffField0.getSortHint());
      assertEquals(3452, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-249), "CFAPlaneColor");
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-249), (-249), fieldTypeAscii0, (-249), (-249), byteArray0, byteOrder0, 1188);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-249), int0);
      assertEquals(1188, tiffField0.getSortHint());
      assertEquals((-249), tiffField0.getOffset());
      assertEquals((-249), tiffField0.getTag());
      assertEquals((-249), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-2600), (-2600), fieldTypeByte0.SSHORT, 1L, 65535, byteArray0, byteOrder0, 371);
      int int0 = tiffField0.getSortHint();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals((-2600), tiffField0.getTag());
      assertEquals(371, int0);
      assertEquals((-2600), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3179), 0, fieldTypeFloat0, (-905L), 0L, (byte[]) null, byteOrder0, (-4544));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals("-3179 (0xfffff395: Unknown Tag): ", string0);
      assertEquals((-4544), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-3620), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)13, "uy-I");
      byte[] byteArray0 = new byte[1];
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0);
      TiffField tiffField0 = new TiffField((-401), (byte)13, fieldTypeAscii0, 50, 4401L, byteArray0, byteOrder0, 2147005685);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)13, "uy-I");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-654), 50, fieldTypeAscii0, 1543L, 16L, byteArray0, (ByteOrder) null, (-1279));
      tiffField0.getByteOrder();
      assertEquals((-654), tiffField0.getTag());
      assertEquals((-1279), tiffField0.getSortHint());
      assertEquals(16, tiffField0.getOffset());
      assertEquals(1543, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(33919, 15, fieldTypeByte0, 15, 15, byteArray0, (ByteOrder) null, 2314);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(15, tiffField0.getDirectoryType());
      assertEquals(15L, tiffElement0.offset);
      assertEquals(33919, tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(2314, tiffField0.getSortHint());
  }
}
