/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 09:03:40 GMT 2019
 */

package com.alibaba.fastjson.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.util.IOUtils;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.ByteArrayInputStream;
import java.io.CharArrayWriter;
import java.io.Closeable;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.io.StringReader;
import java.io.StringWriter;
import java.net.URI;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.nio.charset.CodingErrorAction;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IOUtils_ESTest extends IOUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '{';
      charArray0[1] = 's';
      charArray0[2] = '<';
      charArray0[3] = 'O';
      // Undeclared exception!
      try { 
        IOUtils.getChars(10000000000L, 43, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 42
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)122;
      byteArray0[2] = (byte) (-16);
      char[] charArray0 = new char[8];
      charArray0[0] = '6';
      charArray0[1] = 'P';
      charArray0[2] = 'Z';
      charArray0[3] = '&';
      charArray0[4] = 'Z';
      charArray0[5] = 'E';
      charArray0[6] = '\\';
      charArray0[7] = '9';
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, (byte)0, 1125, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = (-862);
      IOUtils.getChars((-862), 20, iOUtils0.replaceChars);
      int int1 = 3019;
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.replaceChars, (-862), 3019);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -862
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[5];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[0] = (byte)91;
      byteArray0[1] = (byte) (-83);
      byteArray0[2] = (byte)6;
      byte byte0 = (byte) (-101);
      String string0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      byteArray0[3] = (byte) (-101);
      byteArray0[4] = (byte)7;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeBase64(iOUtils0.replaceChars, (int) (byte)6, (int) (byte)6);
      URI uRI0 = MockURI.create("fastjson.compatibleWithJavaBean");
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI is not absolute
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      IOUtils.getStringProperty("8VT(jJJQ?)coo");
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("");
      assertFalse(boolean0);
      
      int int0 = IOUtils.stringSize((-2154L));
      assertEquals(1, int0);
      
      IOUtils.decodeBase64("");
      char[] charArray0 = new char[2];
      charArray0[0] = '|';
      charArray0[1] = '[';
      byte[] byteArray0 = IOUtils.decodeBase64(charArray0, 1, 1);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      IOUtils.getStringProperty("8VT(jJJQ?)coo");
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("");
      assertFalse(boolean0);
      
      int int0 = IOUtils.stringSize((-2154L));
      assertEquals(1, int0);
      
      IOUtils.decodeBase64("");
      char[] charArray0 = new char[2];
      charArray0[0] = '|';
      charArray0[1] = 'Y';
      byte[] byteArray0 = IOUtils.decodeBase64(charArray0, 1, 1);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "fastjson.compatibleWithJavaBean";
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      IOUtils.decodeBase64("fastjson.compatibleWithJavaBean", (-1411), 0);
      IOUtils.stringSize((-1411));
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        IOUtils.getChars(0, 1, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte)52;
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)32;
      byteArray1[1] = (byte)52;
      byteArray1[2] = (byte) (-128);
      byteArray1[3] = (byte) (-128);
      byteArray1[4] = (byte) (-128);
      IOUtils.encodeUTF8(iOUtils0.ASCII_CHARS, 18, (-2837), byteArray1);
      byteArray0[2] = (byte) (-128);
      byteArray0[3] = (byte) (-112);
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(iOUtils0.replaceChars, 67, 18, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[7];
      charArray0[0] = '4';
      charArray0[1] = 'A';
      charArray0[2] = '7';
      charArray0[3] = ']';
      charArray0[4] = 'I';
      charArray0[5] = 'O';
      charArray0[6] = 'c';
      IOUtils.getChars((byte) (-124), 5, charArray0);
      //  // Unstable assertion: assertArrayEquals(new char[] {'4', '-', '1', '1', '6', 'O', 'c'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)87;
      byteArray0[1] = (byte)112;
      byteArray0[2] = (byte)125;
      byteArray0[3] = (byte)65;
      byteArray0[4] = (byte) (-48);
      byteArray0[5] = (byte)3;
      byteArray0[6] = (byte) (-32);
      byteArray0[7] = (byte)23;
      byteArray0[8] = (byte)127;
      char[] charArray0 = new char[3];
      charArray0[0] = '%';
      charArray0[1] = 'l';
      charArray0[2] = 'i';
      int int0 = IOUtils.decodeUTF8(byteArray0, 5, 29, charArray0);
      assertEquals((-1), int0);
      assertArrayEquals(new char[] {'\u0003', 'l', 'i'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'K';
      charArray0[1] = '[';
      charArray0[2] = '(';
      charArray0[3] = 'Q';
      charArray0[4] = 'c';
      byte[] byteArray0 = IOUtils.decodeBase64(charArray0, (-3077), 0);
      assertEquals(0, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = ".^";
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(".^");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = IOUtils.stringSize(2641);
      assertEquals(4, int0);
      
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      byte[] byteArray0 = IOUtils.decodeBase64("utf8 decode error, ", 6, 6);
      assertArrayEquals(new byte[] {(byte)121, (byte) (-54), (byte)29}, byteArray0);
      
      int int1 = IOUtils.stringSize((long) 6);
      assertEquals(1, int1);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte) (-46);
      byteArray0[2] = (byte)3;
      byteArray0[3] = (byte) (-107);
      int int0 = 57344;
      char[] charArray0 = new char[6];
      charArray0[0] = 's';
      charArray0[1] = 'C';
      charArray0[2] = '*';
      charArray0[3] = 'L';
      charArray0[4] = 'e';
      charArray0[5] = 'k';
      IOUtils.decodeUTF8(byteArray0, 3, 57344, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("", 85, (-2));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-57);
      byteArray0[1] = (byte) (-128);
      byteArray0[2] = (byte)84;
      byteArray0[3] = (byte) (-59);
      byteArray0[4] = (byte)0;
      char[] charArray0 = new char[8];
      charArray0[0] = '~';
      charArray0[1] = '!';
      charArray0[2] = ' ';
      charArray0[3] = 'X';
      charArray0[4] = '~';
      charArray0[5] = 'e';
      charArray0[6] = '>';
      charArray0[7] = '=';
      int int0 = IOUtils.decodeUTF8(byteArray0, (byte)0, 11, charArray0);
      assertArrayEquals(new char[] {'\u01C0', 'T', ' ', 'X', '~', 'e', '>', '='}, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      IOUtils.stringSize(2864L);
      byte[] byteArray0 = IOUtils.decodeBase64("Ox>6h=");
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(42);
      charArrayWriter0.write(42);
      charArrayWriter0.append('');
      charArrayWriter0.close();
      charArrayWriter0.append((CharSequence) "Ox>6h=");
      charArrayWriter0.write((-928));
      charArrayWriter0.close();
      IOUtils.close(charArrayWriter0);
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 42, 4, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 42
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'X';
      charArray0[1] = '!';
      charArray0[2] = '*';
      charArray0[3] = 'z';
      charArray0[4] = 'w';
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 2, 91);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 92
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      char[] charArray0 = new char[6];
      charArray0[0] = '&';
      charArray0[1] = 'j';
      charArray0[2] = '}';
      charArray0[3] = '-';
      charArray0[4] = '3';
      charArray0[5] = 'n';
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 5, 6);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IOUtils.isIdent('O');
      char[] charArray0 = new char[9];
      charArray0[0] = 'O';
      charArray0[1] = '%';
      charArray0[2] = 'O';
      charArray0[3] = 'O';
      charArray0[4] = 'O';
      charArray0[5] = 'O';
      charArray0[6] = 'O';
      charArray0[7] = 'O';
      charArray0[8] = 'O';
      IOUtils.getChars(2126, 5, charArray0);
      assertArrayEquals(new char[] {'O', '2', '1', '2', '6', 'O', 'O', 'O', 'O'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = "UTF-8";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "UTF-8");
      IOUtils.stringSize(3L);
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-30);
      byte byte0 = (byte) (-23);
      byteArray0[1] = (byte) (-23);
      IOUtils.encodeUTF8(iOUtils0.ASCII_CHARS, 1, 1, byteArray0);
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileReader mockFileReader0 = new MockFileReader(fileDescriptor0);
      // Undeclared exception!
      try { 
        IOUtils.readAll(mockFileReader0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // read string from reader error
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      int int0 = (-32);
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)85;
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = uTF8Decoder0.unmappableCharacterAction();
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.onUnmappableCharacter(codingErrorAction0);
      ByteBuffer byteBuffer0 = ByteBuffer.allocate(99);
      CharBuffer charBuffer0 = CharBuffer.wrap(iOUtils0.DIGITS);
      // Undeclared exception!
      try { 
        IOUtils.decode(charsetDecoder0, byteBuffer0, charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CoderResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'a3;X");
      char[] charArray0 = new char[0];
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 1086, 1086, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1086
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      boolean boolean0 = IOUtils.isIdent('O');
      assertTrue(boolean0);
      
      char[] charArray0 = new char[9];
      charArray0[0] = 'O';
      charArray0[1] = '%';
      charArray0[2] = 'O';
      charArray0[3] = 'O';
      charArray0[4] = 'O';
      charArray0[5] = 'O';
      charArray0[6] = 'O';
      charArray0[7] = 'O';
      charArray0[8] = 'O';
      IOUtils.getChars(3, 5, charArray0);
      assertArrayEquals(new char[] {'O', '%', 'O', 'O', '3', 'O', 'O', 'O', 'O'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".`");
      byteArray0[0] = (byte) (-17);
      byteArray0[1] = (byte) (-19);
      byteArray0[2] = (byte)38;
      char[] charArray0 = new char[1];
      charArray0[0] = '7';
      IOUtils.decodeUTF8(byteArray0, 1648, (-2808), charArray0);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset charset0 = Charset.defaultCharset();
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteBuffer byteBuffer0 = charset0.encode(charBuffer0);
      byteBuffer0.get();
      IOUtils.decode(uTF8Decoder0, byteBuffer0, charBuffer0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      pipedOutputStream0.close();
      pipedInputStream0.skip((-269L));
      InputStreamReader inputStreamReader0 = new InputStreamReader(pipedInputStream0);
      String string0 = IOUtils.readAll(inputStreamReader0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      char[] charArray0 = new char[3];
      charArray0[0] = '}';
      charArray0[1] = 's';
      charArray0[2] = '^';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-1952257860), 144, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 143
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)89;
      byteArray0[1] = (byte) (-91);
      byteArray0[2] = (byte)91;
      byteArray0[3] = (byte)30;
      byteArray0[4] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      IOUtils.close(byteArrayInputStream0);
      char[] charArray0 = new char[8];
      charArray0[0] = 'c';
      charArray0[1] = ',';
      charArray0[2] = ' ';
      charArray0[3] = 'c';
      charArray0[4] = '3';
      charArray0[5] = 'N';
      charArray0[6] = 's';
      charArray0[7] = '-';
      IOUtils.getChars((long) (byte) (-91), (int) (byte)3, charArray0);
      assertArrayEquals(new char[] {'-', '9', '1', 'c', '3', 'N', 's', '-'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      boolean boolean0 = IOUtils.isIdent('5');
      assertTrue(boolean0);
      
      char[] charArray0 = new char[6];
      charArray0[0] = '5';
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)94;
      byteArray0[1] = (byte)94;
      byteArray0[2] = (byte)94;
      byteArray0[3] = (byte)94;
      byteArray0[4] = (byte)12;
      byteArray0[5] = (byte) (-12);
      byteArray0[6] = (byte)24;
      byteArray0[7] = (byte) (-79);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      charArray0[1] = '5';
      charArray0[2] = '5';
      charArray0[3] = '5';
      charArray0[4] = '5';
      charArray0[5] = '5';
      IOUtils.getChars((byte)94, 6, charArray0);
      assertArrayEquals(new char[] {'5', '5', '5', '5', '9', '4'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)31;
      byteArray0[2] = (byte) (-28);
      byteArray0[3] = (byte)12;
      byteArray0[4] = (byte)21;
      byteArray0[5] = (byte)127;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      IOUtils.readAll(inputStreamReader0);
      IOUtils.stringSize(1L);
      IOUtils.isIdent('B');
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("Z\u001F\uFFFD\f\u0015", (int) (byte)12, (-3645));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IOUtils.isValidJsonpQueryParam((String) null);
      Charset charset0 = IOUtils.UTF8;
      charset0.newDecoder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)106;
      byteArray0[2] = (byte) (-8);
      byteArray0[3] = (byte)56;
      byteArray0[7] = (byte)89;
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)25;
      byteArray0[1] = (byte)1;
      ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) "", (int) (byte) (-8), (int) (byte) (-8));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      String string0 = ",:Hud*88!T{}p0%";
      IOUtils.decodeBase64(",:Hud*88!T{}p0%");
      IOUtils.stringSize(925);
      char[] charArray0 = new char[5];
      charArray0[0] = 'k';
      charArray0[1] = ' ';
      charArray0[2] = 'f';
      charArray0[3] = 'G';
      charArray0[4] = 'w';
      int int0 = 625;
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 925, 625);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 925
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '~';
      charArray0[1] = '7';
      charArray0[2] = '\"';
      charArray0[3] = 'r';
      charArray0[4] = 'Z';
      charArray0[5] = 'G';
      charArray0[6] = 'p';
      charArray0[7] = 'F';
      charArray0[8] = '-';
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)90;
      IOUtils.encodeUTF8(charArray0, (-641), (-641), byteArray0);
      char[] charArray1 = new char[7];
      charArray1[0] = 'F';
      charArray1[1] = 'r';
      charArray1[2] = '~';
      charArray1[3] = 'G';
      charArray1[4] = '\"';
      charArray1[5] = '\"';
      charArray1[6] = '-';
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)90, 0, charArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IOUtils.isValidJsonpQueryParam("");
      Charset charset0 = IOUtils.UTF8;
      charset0.newDecoder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)116;
      byteArray0[1] = (byte)106;
      byteArray0[2] = (byte) (-8);
      byteArray0[3] = (byte)56;
      byteArray0[4] = (byte)89;
      byteArray0[5] = (byte)55;
      byteArray0[6] = (byte)25;
      byteArray0[7] = (byte)1;
      ByteBuffer.wrap(byteArray0);
      // Undeclared exception!
      try { 
        CharBuffer.wrap((CharSequence) "", (int) (byte) (-8), (int) (byte) (-8));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Closeable closeable0 = null;
      IOUtils.close((Closeable) null);
      char char0 = 'Y';
      IOUtils.firstIdentifier('Y');
      byte byte0 = (byte)56;
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)56, (int) (byte)56, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 55
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      String string0 = "com.alibaba.fastjson.JSONException";
      IOUtils.isValidJsonpQueryParam("com.alibaba.fastjson.JSONException");
      byte byte0 = (byte)44;
      char[] charArray0 = new char[7];
      charArray0[0] = '\\';
      charArray0[1] = 'p';
      charArray0[2] = '/';
      charArray0[3] = '';
      charArray0[4] = 'Q';
      charArray0[5] = 'Z';
      charArray0[6] = '~';
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)44, (-1576), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1577
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      IOUtils.decodeBase64("");
      int int0 = 191;
      IOUtils.stringSize(191);
      IOUtils.stringSize((long) 191);
      // Undeclared exception!
      try { 
        IOUtils.getStringProperty("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = '\'';
      charArray0[1] = 'T';
      charArray0[2] = ')';
      charArray0[3] = 'p';
      charArray0[4] = ' ';
      charArray0[5] = 'l';
      charArray0[6] = '\"';
      charArray0[7] = '{';
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 3201, (-2));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3198
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      char[] charArray0 = new char[3];
      char char0 = 'A';
      charArray0[0] = 'A';
      charArray0[1] = '(';
      char char1 = 'l';
      charArray0[2] = 'l';
      int int0 = (-19);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, (-19), (-19));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -39
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '8';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-495), (-495), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -496
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int int0 = (-3854);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("CQ&RHj2", (-3854), (-1576));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      IOUtils.loadPropertiesFromFile();
      int int0 = (-1740);
      char[] charArray0 = null;
      // Undeclared exception!
      try { 
        IOUtils.getChars(2147483647L, (-1740), (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)12;
      byteArray0[1] = (byte)59;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-128);
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)1;
      byteArray0[6] = (byte) (-59);
      byteArray0[7] = (byte)7;
      char[] charArray0 = new char[5];
      charArray0[0] = '`';
      charArray0[1] = '\'';
      charArray0[2] = 'D';
      charArray0[3] = '(';
      charArray0[4] = 'Y';
      int int0 = IOUtils.decodeUTF8(byteArray0, 244, (byte)0, charArray0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      int int0 = (-1769);
      IOUtils.stringSize((-1769));
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int1 = 0;
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("read string from reader error", 0, 398);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      IOUtils.getStringProperty("dgU");
      URI uRI0 = MockURI.URI("dgU", "H3G>#xt,eF+~4J\"Oz", "encodeUTF8 error");
      MockFile mockFile0 = null;
      try {
        mockFile0 = new MockFile(uRI0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // URI is not hierarchical
         //
         verifyException("java.io.File", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      IOUtils.isValidJsonpQueryParam("UTF-8");
      IOUtils.stringSize(0L);
      int int0 = 2338;
      IOUtils.stringSize(2338);
      IOUtils.loadPropertiesFromFile();
      String string0 = "UTF-8";
      StringReader stringReader0 = new StringReader("UTF-8");
      char[] charArray0 = new char[2];
      charArray0[0] = '#';
      char char0 = '.';
      stringReader0.ready();
      charArray0[1] = '.';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      // Undeclared exception!
      try { 
        charBuffer0.subSequence(4, 4);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.HeapCharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      IOUtils.isValidJsonpQueryParam("TOgiPwFoL+`t");
      IOUtils.loadPropertiesFromFile();
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "!eIkB");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int int0 = 0;
      char[] charArray0 = new char[5];
      charArray0[0] = 'A';
      charArray0[1] = 'k';
      charArray0[2] = 'w';
      charArray0[3] = ':';
      char char0 = 'l';
      charArray0[4] = 'l';
      // Undeclared exception!
      try { 
        IOUtils.getChars(1022, 0, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '0';
      charArray0[1] = 't';
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-19), (-49), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -50
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      IOUtils.isIdent('Y');
      MockPrintStream mockPrintStream0 = null;
      try {
        mockPrintStream0 = new MockPrintStream((OutputStream) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Null output stream
         //
         verifyException("java.io.PrintStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      char char0 = '}';
      IOUtils.firstIdentifier('}');
      char char1 = ';';
      IOUtils.isIdent(';');
      IOUtils.stringSize(71);
      IOUtils.stringSize(9999);
      String string0 = "";
      // Undeclared exception!
      try { 
        IOUtils.getStringProperty("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'z';
      charArray0[1] = 'Z';
      charArray0[2] = '#';
      charArray0[3] = '2';
      charArray0[4] = 'A';
      charArray0[5] = 'n';
      charArray0[6] = 'o';
      charArray0[7] = 'V';
      charArray0[8] = '+';
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(charArray0, 914, 927);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 914
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      IOUtils.getStringProperty("pBk[59gJ+}g.");
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = CodingErrorAction.IGNORE;
      uTF8Decoder0.onMalformedInput(codingErrorAction0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = 10;
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(10);
      // Undeclared exception!
      try { 
        uTF8Decoder0.decode(byteBuffer0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.ByteBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      char[] charArray0 = new char[0];
      StringWriter stringWriter0 = new StringWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(stringWriter0, true);
      Locale locale0 = Locale.ITALY;
      Object[] objectArray0 = new Object[8];
      objectArray0[0] = (Object) "6+X$f/";
      objectArray0[1] = (Object) locale0;
      Object object0 = new Object();
      objectArray0[2] = object0;
      objectArray0[3] = (Object) stringWriter0;
      objectArray0[4] = (Object) "6+X$f/";
      objectArray0[5] = (Object) stringWriter0;
      objectArray0[6] = (Object) mockPrintWriter0;
      Object object1 = new Object();
      objectArray0[7] = object1;
      PrintWriter printWriter0 = mockPrintWriter0.printf(locale0, "6+X$f/", objectArray0);
      IOUtils.close(printWriter0);
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 31, 1766, iOUtils0.specicalFlags_doubleQuotes);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 31
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String string0 = "+qgDV_o*V";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "+qgDV_o*V");
      IOUtils.loadPropertiesFromFile();
      StringWriter stringWriter0 = new StringWriter();
      char char0 = '[';
      StringWriter stringWriter1 = stringWriter0.append('[');
      char[] charArray0 = new char[0];
      stringWriter1.write(charArray0);
      IOUtils.close(stringWriter1);
      IOUtils.loadPropertiesFromFile();
      IOUtils.isValidJsonpQueryParam("+qgDV_o*V");
      IOUtils.decodeBase64("+qgDV_o*V");
      int int0 = 999;
      int int1 = (-32);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("+qgDV_o*V", 999, (-32));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      boolean boolean0 = IOUtils.firstIdentifier('n');
      assertTrue(boolean0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("com.alibaba.fastjson.util.UTF8Decoder", 3, 3);
      assertEquals(1, byteArray0.length);
      
      char[] charArray0 = new char[9];
      charArray0[0] = 'n';
      charArray0[1] = 'n';
      charArray0[2] = '\'';
      charArray0[3] = 'n';
      charArray0[4] = 'n';
      charArray0[5] = 'n';
      charArray0[6] = 'n';
      charArray0[7] = 'n';
      charArray0[8] = 'S';
      IOUtils.getChars((long) 3, 3, charArray0);
      assertArrayEquals(new char[] {'n', 'n', '3', 'n', 'n', 'n', 'n', 'n', 'S'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader((FileDescriptor) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.FileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte byte0 = (byte)1;
      char[] charArray0 = new char[2];
      char char0 = 'q';
      charArray0[0] = 'q';
      char char1 = '7';
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      charArray0[1] = '7';
      IOUtils.getChars((byte)1, (int) (byte)1, charArray0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      IOUtils.decodeBase64("com.alibaba.fastjson.JSONException");
      IOUtils.loadPropertiesFromFile();
      // Undeclared exception!
      try { 
        IOUtils.getChars((-1787L), (-1952257860), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1952257861
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      IOUtils.decodeBase64("dQ");
      String string0 = "";
      MockFileWriter mockFileWriter0 = null;
      try {
        mockFileWriter0 = new MockFileWriter("", true);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-64);
      byteArray0[3] = (byte)48;
      char[] charArray0 = new char[1];
      charArray0[0] = '7';
      int int0 = IOUtils.decodeUTF8(byteArray0, (byte)1, 65536, charArray0);
      assertArrayEquals(new char[] {'\u0002'}, charArray0);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte byte0 = (byte)44;
      char[] charArray0 = new char[6];
      charArray0[0] = ' ';
      charArray0[1] = 'l';
      charArray0[2] = 'i';
      charArray0[3] = 'D';
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      charArray0[4] = ',';
      charArray0[5] = '`';
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte)44, (int) (byte)44, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 43
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }
}
