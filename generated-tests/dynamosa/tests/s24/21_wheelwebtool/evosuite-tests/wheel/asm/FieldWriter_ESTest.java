/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 12:09:58 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 262101, "Kg_C.rlTT,U]", "Kg_C.rlTT,U]", "Kg_C.rlTT,U]", "gmXvGG8^<77htJd^k_");
      String[] stringArray0 = new String[0];
      classWriter0.visit(2127, 10, "gmXvGG8^<77htJd^k_", "gmXvGG8^<77htJd^k_", "sQ,/CxAcg", stringArray0);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 262101, "Kg_C.rlTT,U]", "Kg_C.rlTT,U]", "Kg_C.rlTT,U]", "gmXvGG8^<77htJd^k_");
      String[] stringArray0 = new String[0];
      classWriter0.visit(2127, 10, "gmXvGG8^<77htJd^k_", "gmXvGG8^<77htJd^k_", "sQ,/CxAcg", stringArray0);
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4));
      classWriter0.index = (-4);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "The list of names must not be null", "OYuS])", (String) null, "The list of names must not be null");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "gmXvGG8^<77htJd^k_", "Kg_Q.rlTTIU]", "gmXvGG8^<77htJd^k_", "gmXvGG8^<77htJd^k_");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "The list of names must not be null", "The list of names must not be null", "The list of names must not be null", "The list of names must not be null");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "a<EtGL7J]s", "a<EtGL7J]s", "a<EtGL7J]s", "a<EtGL7J]s");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "co^BzOx2ygEcqdCW5Z", "co^BzOx2ygEcqdCW5Z", (String) null, (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 131072;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-18));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-18), (String) null, (String) null, (String) null, (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 49, "Kg_C.rlTT,U]", "Kg_C.rlTT,U]", "Kg_C.rlTT,U]", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 262092, "Kg_C.rlTT,U]", "qI|0~~DYL", "qI|0~~DYL", "gmXvGG8^<77htJd^k_");
      ByteVector byteVector0 = new ByteVector(131072);
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1489));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1305), "The list of names must not be null", "The list of names must not be null", (String) null, "");
      fieldWriter0.visitAnnotation("", false);
      ByteVector byteVector0 = new ByteVector(1718);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-661));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "{,/pCLIY{%QFp", "VndD&- aV#|", "W6Ky%i}/zQU;", (Object) null);
      fieldWriter0.visitAnnotation("wheel.asm.ClassReader", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-515));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "drc6}";
      stringArray0[1] = "drc6}";
      stringArray0[2] = "A";
      stringArray0[3] = "A";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 262101, "RuntimeVisibleAnnotations", "drc6}", (String) null, "drc6}");
      ByteVector byteVector0 = new ByteVector(4303);
      classWriter0.visit(49, 3881, "A", "mm/`)dVpy[jM_%+", "A", stringArray0);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(27);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Kg_C.rlTT,U2", "Kg_C.rlTT,U2", "Kg_C.rlTT,U2", "Kg_C.rlTT,U2");
      Attribute attribute0 = new Attribute("Kg_C.rlTT,U2");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-515));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "drc6}";
      stringArray0[1] = "drc6}";
      stringArray0[2] = "A";
      stringArray0[3] = "A";
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 262101, "RuntimeVisibleAnnotations", "drc6}", (String) null, "drc6}");
      classWriter0.visit(49, 3881, "A", "mm/`)dVpy[jM_%+", "A", stringArray0);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-515));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 262101, "RuntimeVisibleAnnotations", "drc6}", (String) null, "drc6}");
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-515));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 28, "A", "LineNumberTable", "", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1760);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "vUv-<jaiT", "vUv-<jaiT", "vUv-<jaiT", "vUv-<jaiT");
      fieldWriter0.visitAnnotation("L", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1489));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1305), "The list of names must not be null", "The list of names must not be null", (String) null, "");
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(40, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-515));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 262101, "RuntimeVisibleAnnotations", "drc6}", (String) null, "drc6}");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 28, "A", "LineNumberTable", "", (Object) null);
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(605);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1503, "", "", "Synthetic", "Synthetic");
      fieldWriter0.visitEnd();
  }
}
