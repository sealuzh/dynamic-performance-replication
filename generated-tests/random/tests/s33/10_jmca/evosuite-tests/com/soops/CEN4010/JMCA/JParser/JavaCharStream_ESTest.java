/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 18:02:33 GMT 2019
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.Reader;
import java.io.StringReader;
import java.net.URISyntaxException;
import java.nio.CharBuffer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader("c^;D4Xu/3_RtS{'");
      stringReader0.reset();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "4");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 75, 75, 75);
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 93, 93);
      int int0 = (-1);
      javaCharStream0.available = (-1);
      stringReader0.skip((-1L));
      stringReader0.skip((-1));
      // Undeclared exception!
      try { 
        javaCharStream0.AdjustBuffSize();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      JavaCharStream.hexval('6');
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)69;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-77);
      byteArray0[3] = (byte) (-71);
      byteArray0[4] = (byte)108;
      byteArray0[5] = (byte) (-89);
      byteArray0[6] = (byte)45;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 117, (byte)69);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 423, 0, (byte)69);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)86;
      byteArray0[1] = (byte)73;
      byteArray0[2] = (byte)26;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)66;
      byteArray0[7] = (byte)93;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte)73, (byte)73);
      int[] intArray0 = new int[7];
      intArray0[0] = (int) (byte)86;
      intArray0[1] = (int) (byte)93;
      intArray0[2] = (-1);
      intArray0[3] = (int) (byte)26;
      intArray0[4] = (int) (byte)66;
      intArray0[5] = (int) (byte)0;
      intArray0[6] = (int) (byte)66;
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.backup((byte)0);
      StringReader stringReader0 = new StringReader("*sp[AYJ8)|6Fks-<");
      javaCharStream0.ReInit((Reader) stringReader0);
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      char char0 = 'Z';
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JavaCharStream.hexval('E');
      // Undeclared exception!
      try { 
        MockFile.createTempFile("", "X%m");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Prefix string too short
         //
         verifyException("org.evosuite.runtime.vfs.VirtualFileSystem", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char char0 = 'H';
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte)92;
      byteArray0[0] = (byte)92;
      byteArray0[1] = (byte) (-1);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      int int0 = 78;
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1410), 79, 78);
      int int1 = 1927;
      javaCharStream0.FillBuff();
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream.hexval('8');
      int int0 = (-2707);
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((-2707));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 0;
      int int1 = 2;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, 2, 0);
      javaCharStream0.nextCharInd = 0;
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char char0 = 'U';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null, 558);
      int int0 = 98;
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 2347, 98, 0);
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "b#TDmz9'=$08XW";
      StringReader stringReader0 = new StringReader("b#TDmz9'=$08XW");
      stringReader0.skip((-1604));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1604), (-1604));
      int int0 = 1578;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.ReInit((Reader) stringReader0, 59, 1578);
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "x;=C@n0SZGAXSk|#TQ");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "x;=C@n0SZGAXSk|#TQ");
      StringReader stringReader0 = new StringReader("");
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-362), (-1));
      javaCharStream0.ExpandBuff(false);
      stringReader0.read();
      javaCharStream0.adjustBeginLineColumn((-65), (-362));
      JavaCharStream.hexval('7');
      javaCharStream0.GetImage();
      int int0 = 381;
      javaCharStream0.GetSuffix(381);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
      BufferedInputStream bufferedInputStream0 = null;
      try {
        bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, (-4625));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Buffer size <= 0
         //
         verifyException("java.io.BufferedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      StringReader stringReader0 = new StringReader("lq<?8&THl@4>Yxe");
      char[] charArray0 = new char[9];
      charArray0[0] = 'P';
      charArray0[1] = 'z';
      charArray0[2] = 'h';
      charArray0[3] = '&';
      charArray0[4] = 'p';
      charArray0[5] = 'N';
      charArray0[6] = 'v';
      charArray0[7] = '<';
      charArray0[8] = '{';
      stringReader0.read(charArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)105;
      byteArray0[2] = (byte)101;
      byteArray0[3] = (byte)11;
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-32);
      byteArray0[6] = (byte)72;
      byteArray0[7] = (byte)6;
      byteArray0[8] = (byte)100;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte) (-32), (byte)72);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream0);
      stringReader0.skip((-1));
      javaCharStream0.backup(12);
      javaCharStream0.BeginToken();
      javaCharStream0.UpdateLineColumn('g');
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char char0 = '1';
      JavaCharStream.hexval('1');
      int int0 = 1643;
      PipedInputStream pipedInputStream0 = new PipedInputStream(1643);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0, 1643);
      pipedInputStream0.close();
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(pushbackInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JavaCharStream.hexval('e');
      StringReader stringReader0 = new StringReader("wXRY9l4EPH");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 14, 14, 14);
      stringReader0.reset();
      MockFile mockFile0 = new MockFile("fTEBp;Dvlq");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.tokenBegin = 968;
      javaCharStream0.column = (-1418);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      javaCharStream0.adjustBeginLineColumn(3466, 3466);
      javaCharStream0.AdjustBuffSize();
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("KsvoNb0ntLA1#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      char[] charArray0 = new char[5];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, true);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      charArray0[0] = 'l';
      charArray0[1] = 'V';
      charArray0[2] = 'd';
      stringReader0.read(charArray0);
      charArray0[3] = '^';
      charArray0[4] = 'O';
      stringReader0.read(charArray0);
      javaCharStream0.adjustBeginLineColumn(101, 101);
      javaCharStream0.line = (-1);
      stringReader0.mark(102);
      javaCharStream0.adjustBeginLineColumn(10, (-297));
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-98);
      byteArray0[1] = (byte)59;
      byteArray0[2] = (byte)100;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) stringReader0, 1966, 101, (-297));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)79;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "/2");
      byteArray0[1] = (byte)19;
      byteArray0[2] = (byte) (-72);
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte) (-43);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte) (-80);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      char char0 = '[';
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      StringReader stringReader0 = new StringReader("O3AXbC=}}rl&[");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-2366), (-3268));
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1030, 1030, 1030);
      stringReader0.mark(3843);
      javaCharStream0.prevCharIsCR = true;
      javaCharStream0.adjustBeginLineColumn(1933, 1030);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('l');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char char0 = '?';
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      char char0 = '_';
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = 4067;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 4067, 4067);
      int int1 = 1021;
      javaCharStream0.available = 4065;
      javaCharStream0.GetImage();
      javaCharStream0.prevCharIsCR = false;
      javaCharStream0.bufpos = 4065;
      javaCharStream0.nextCharInd = 1021;
      int int2 = 829;
      javaCharStream0.adjustBeginLineColumn(829, 829);
      javaCharStream0.getLine();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JavaCharStream.hexval('b');
      String string0 = "";
      String string1 = "6S\"^8)f`$^e.7";
      boolean boolean0 = false;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      try { 
        MockURI.URI((String) null, (String) null, "", 11, " ", "+~?ji7BYf>On", "6S\"^8)f`$^e.7");
        fail("Expecting exception: URISyntaxException");
      
      } catch(URISyntaxException e) {
         //
         // Expected hostname at index 2: //:11%20?+~?ji7BYf%3EOn#6S%22%5E8)f%60$%5Ee.7
         //
         verifyException("java.net.URI$Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p|#9|=5C=okVxdV");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.ready();
      int int0 = 15;
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      stringReader0.skip((-870));
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-870), (-870), 11);
      javaCharStream0.backup(11);
      javaCharStream0.readChar();
      stringReader0.close();
      javaCharStream0.prevCharIsLF = true;
      InputStream inputStream0 = null;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, (-870), (-870));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ".");
      StringReader stringReader0 = new StringReader("~#rdteyF?");
      stringReader0.ready();
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "~#rdteyF?");
      charBuffer0.flip();
      stringReader0.read(charBuffer0);
      stringReader0.markSupported();
      int int0 = 1334;
      int int1 = 2217;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1334, 1334, 2217);
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)95;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)95, (byte)95);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-2318), (-2318));
      byteArrayInputStream0.reset();
      javaCharStream0.bufsize = (-2318);
      javaCharStream0.nextCharInd = 1;
      StringReader stringReader0 = new StringReader("E-+9r`IHGyPDpS,,Q");
      stringReader0.read();
      javaCharStream0.inputStream = (Reader) stringReader0;
      javaCharStream0.AdjustBuffSize();
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      JavaCharStream.hexval('C');
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream((File) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A^zSgJpdR3.KHxzhe6");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-1944));
      char char0 = javaCharStream0.ReadByte();
      assertEquals('A', char0);
      
      char[] charArray0 = new char[2];
      charArray0[0] = 'A';
      charArray0[1] = 'A';
      stringReader0.read(charArray0);
      int int0 = JavaCharStream.hexval('A');
      assertEquals(10, int0);
      
      javaCharStream0.ReInit((Reader) stringReader0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      StringReader stringReader0 = new StringReader("D4~2o<yp9");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 88, 80, 80);
      javaCharStream0.ReadByte();
      stringReader0.close();
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      StringReader stringReader0 = new StringReader("y;+}7`G");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      StringReader stringReader1 = new StringReader("9G]X,T0S");
      javaCharStream0.ReInit((Reader) stringReader1, 1933, 1263, 1933);
      javaCharStream0.backup(1933);
      javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      StringReader stringReader0 = new StringReader("q6!u-\"wf>O:b5.-{o}#");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 2116, 0);
      char[] charArray0 = javaCharStream0.GetSuffix(0);
      assertEquals(0, charArray0.length);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      char char0 = '`';
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".}");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.FillBuff();
      char[] charArray0 = javaCharStream0.GetSuffix(85);
      assertEquals(85, charArray0.length);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Reader reader0 = null;
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = 0;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 0, 0, 0);
      // Undeclared exception!
      try { 
        javaCharStream0.adjustBeginLineColumn(0, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-3355), 5063);
      javaCharStream0.column = 54;
      javaCharStream0.available = (-2483);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.bufsize = (-3355);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "krBV");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      StringReader stringReader0 = new StringReader("krBV");
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringReader0.read();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-1122));
      stringReader0.read();
      javaCharStream0.BeginToken();
      javaCharStream0.readChar();
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.available = (-385);
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("");
      stringReader0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      StringReader stringReader0 = new StringReader("|C$3+i6");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      javaCharStream0.ReInit((InputStream) pipedInputStream0, 0, (-519));
      javaCharStream0.ReInit((Reader) stringReader0);
      stringReader0.skip((-1));
      int[] intArray0 = new int[6];
      intArray0[0] = (-1);
      intArray0[1] = (-1);
      intArray0[2] = (-1);
      intArray0[3] = (-1);
      intArray0[4] = (-1);
      intArray0[5] = (-1);
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.ReInit((Reader) stringReader0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('Q');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      JavaCharStream.hexval('f');
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 15, 15);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-158), (-158));
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      InputStream inputStream0 = null;
      int int0 = 13;
      JavaCharStream javaCharStream0 = null;
      try {
        javaCharStream0 = new JavaCharStream((InputStream) null, 13, 13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      JavaCharStream.hexval('D');
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)27;
      byteArray0[1] = (byte)0;
      int int0 = 0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (-2388));
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      // Undeclared exception!
      try { 
        byteArrayInputStream0.read(byteArray0, 1524, (-2));
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.ByteArrayInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      StringReader stringReader0 = new StringReader(".");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 1130, 681, 1130);
      stringReader0.read();
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, (-574), (-422));
      char[] charArray0 = new char[8];
      charArray0[0] = 'N';
      charArray0[1] = 'Z';
      charArray0[2] = 'A';
      charArray0[3] = 'D';
      charArray0[4] = '$';
      charArray0[5] = '';
      charArray0[6] = '=';
      charArray0[7] = 'H';
      javaCharStream0.nextCharBuf = charArray0;
      javaCharStream0.backup((-574));
      assertEquals(573, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      StringReader stringReader0 = new StringReader("A^zSgJpdR3.KHxzhe6");
      stringReader0.markSupported();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-1944));
      javaCharStream0.ReadByte();
      char[] charArray0 = new char[2];
      charArray0[0] = 'A';
      charArray0[1] = 'A';
      stringReader0.read(charArray0);
      try { 
        JavaCharStream.hexval('t');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream("/Y`;Gc-tX");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      int int0 = 92;
      stringReader0.reset();
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 92, 92, 92);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      javaCharStream0.ReInit((Reader) stringReader0);
      JavaCharStream.hexval('a');
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      javaCharStream0.prevCharIsCR = false;
      PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0, 7);
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      stringReader0.markSupported();
      char[] charArray0 = new char[1];
      charArray0[0] = 'N';
      stringReader0.read(charArray0);
      // Undeclared exception!
      try { 
        javaCharStream0.UpdateLineColumn('m');
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      javaCharStream0.available = (-385);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      int int0 = 87;
      try { 
        pipedOutputStream0.write(87);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedOutputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader0 = new StringReader("FZA<@R?<");
      stringReader0.skip(0L);
      stringReader0.markSupported();
      stringReader0.mark(83);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0);
      int[] intArray0 = new int[1];
      stringReader0.mark(3);
      javaCharStream0.ReInit((Reader) stringReader0);
      intArray0[0] = (-1);
      javaCharStream0.Done();
      javaCharStream0.bufcolumn = intArray0;
      javaCharStream0.ReInit((Reader) stringReader0, 573, 573);
      javaCharStream0.ReInit((Reader) stringReader0);
      javaCharStream0.readChar();
      JavaCharStream.hexval('F');
      javaCharStream0.getLine();
      javaCharStream0.getColumn();
      JavaCharStream.hexval('5');
      javaCharStream0.GetImage();
      javaCharStream0.getBeginLine();
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.ReInit((Reader) stringReader0, 1843, 9);
      javaCharStream0.GetImage();
      javaCharStream0.adjustBeginLineColumn(1, 77);
      javaCharStream0.backup(1690);
      assertEquals(77, javaCharStream0.getBeginColumn());
  }
}
