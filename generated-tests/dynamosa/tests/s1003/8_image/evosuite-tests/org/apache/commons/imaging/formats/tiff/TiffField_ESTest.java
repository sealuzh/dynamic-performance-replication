/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 03 01:33:35 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)94;
      TiffField tiffField0 = new TiffField(0, (-4180), fieldTypeShort0, 1166L, 16L, byteArray0, byteOrder0, 2394);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(16, tiffField0.getOffset());
      assertEquals(2394, tiffField0.getSortHint());
      assertEquals(94, int0);
      assertEquals((-4180), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2147342930, 395, fieldTypeLong0, 1L, 2672L, byteArray0, byteOrder0, 50970);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(2672, tiffField0.getOffset());
      assertEquals(395, tiffField0.getDirectoryType());
      assertEquals(50970, tiffField0.getSortHint());
      assertEquals(2147342930, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(40092, 991, fieldTypeShort0, 1462L, 40092, byteArray0, byteOrder0, 5);
      String string0 = tiffField0.getValueDescription();
      assertEquals(991, tiffField0.getDirectoryType());
      assertEquals(40092, tiffField0.getTag());
      assertEquals("Invalid value: Text field not encoded as bytes.", string0);
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(40092, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146832298), (-2146832298), fieldTypeShort0, (-2146832298), (-2146832298), byteArray0, byteOrder0, (-2146832298));
      tiffField0.dump();
      assertEquals((-2146832298), tiffField0.getSortHint());
      assertEquals((-2146832298), tiffField0.getOffset());
      assertEquals((-2146832298), tiffField0.getTag());
      assertEquals((-2146832298), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-2835), 1753, fieldTypeFloat0, 2440L, 2217, byteArray0, byteOrder0, 243);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2217, tiffField0.getOffset());
      assertEquals(243, tiffField0.getSortHint());
      assertEquals((-2835), tiffField0.getTag());
      assertEquals(1753, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "`08dU");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)28, (-2088), fieldTypeRational0, (byte)28, (-1398L), byteArray0, byteOrder0, (-2088));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1398), tiffField0.getOffset());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-2088), tiffField0.getDirectoryType());
      assertEquals((-2088), tiffField0.getSortHint());
      assertEquals(28, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(34853, 2585, fieldTypeByte0.SRATIONAL, 10, 1028L, byteArray0, byteOrder0, (byte)48);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(2585, tiffField0.getDirectoryType());
      assertEquals(1028, tiffField0.getOffset());
      assertEquals(34853, tagInfo0.tag);
      assertEquals(34853, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, (-1693L), 0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1717986917), 2121, fieldTypeLong0, (-1717986917), (-1L), byteArray0, byteOrder0, 2552);
      int int0 = tiffField0.getTag();
      assertEquals(2552, tiffField0.getSortHint());
      assertEquals((-1717986917), int0);
      assertEquals(2121, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[68];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(27, (-1709), fieldTypeByte0, 702L, 1L, byteArray0, byteOrder0, (-1709));
      String string0 = tiffField0.getStringValue();
      assertEquals((-1709), tiffField0.getSortHint());
      assertEquals((-1709), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(27, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-3853), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).DOUBLE).SSHORT, (-898L), (-1793L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-1793), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-3853), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1829, 1, fieldTypeByte0, 1829, (-2143), byteArray0, byteOrder0, (byte) (-21));
      int int0 = tiffField0.getSortHint();
      assertEquals((-2143), tiffField0.getOffset());
      assertEquals((-21), int0);
      assertEquals(1829, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField(747, 50, fieldTypeByte0.DOUBLE, 747, 0L, byteArray0, byteOrder0, 50941);
      int int0 = tiffField0.getOffset();
      assertEquals(747, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(50941, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-2700), 634, fieldTypeLong0.RATIONAL, 1L, (-2146832302), byteArray0, byteOrder0, 1717986918);
      int int0 = tiffField0.getOffset();
      assertEquals(634, tiffField0.getDirectoryType());
      assertEquals(1717986918, tiffField0.getSortHint());
      assertEquals((-2700), tiffField0.getTag());
      assertEquals((-2146832302), int0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(40962, "w0L:(EW");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-81);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3477), (-3477), fieldTypeLong0, 1L, 1265L, byteArray0, byteOrder0, (-1571));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1571), tiffField0.getSortHint());
      assertEquals((-3477), tiffField0.getTag());
      assertEquals(1265, tiffField0.getOffset());
      assertEquals((-3477), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-31);
      byteArray0[4] = (byte)20;
      TiffField tiffField0 = new TiffField(449, (-115), fieldTypeRational0, 2522, (-115), byteArray0, byteOrder0, (byte)88);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-115), tiffField0.getDirectoryType());
      assertEquals(88, tiffField0.getSortHint());
      assertEquals((-26004684), int0);
      assertEquals((-115), tiffField0.getOffset());
      assertEquals(449, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-26);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2146832298), 1851, fieldTypeShort0, 1L, 1851, byteArray0, byteOrder0, (-2146832298));
      tiffField0.getIntValue();
      assertEquals((-2146832298), tiffField0.getSortHint());
      assertEquals(1851, tiffField0.getDirectoryType());
      assertEquals(1851, tiffField0.getOffset());
      assertEquals((-2146832298), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-25);
      TiffField tiffField0 = new TiffField(1084, 1084, fieldTypeShort0, 1, 1L, byteArray0, byteOrder0, 1);
      tiffField0.getIntValue();
      assertEquals(1084, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1084, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-818), (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-402), 2147314354, fieldTypeShort0, 1717986918L, 1717986918L, byteArray0, byteOrder0, (-402));
      tiffField0.getFieldTypeName();
      assertEquals((-402), tiffField0.getSortHint());
      assertEquals((-402), tiffField0.getTag());
      assertEquals(1717986918, tiffField0.getOffset());
      assertEquals(2147314354, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(41, "");
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField((byte)0, 34853, fieldTypeDouble0, 0L, 1739L, byteArray0, byteOrder0, (-83));
      tiffField0.getFieldTypeName();
      assertEquals((-83), tiffField0.getSortHint());
      assertEquals(34853, tiffField0.getDirectoryType());
      assertEquals(1739, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2146429409, 2146429409, (FieldType) null, (-1125L), (-4293664604L), byteArray0, byteOrder0, (byte)93);
      tiffField0.getFieldType();
      assertEquals(2146429409, tiffField0.getDirectoryType());
      assertEquals(93, tiffField0.getSortHint());
      assertEquals(1302692, tiffField0.getOffset());
      assertEquals(2146429409, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "~r/QP_BkR{Mf]:>");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1445, 40963, fieldTypeFloat0, 0, 255L, byteArray0, byteOrder0, (byte) (-108));
      tiffField0.getFieldType();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(40963, tiffField0.getDirectoryType());
      assertEquals((-108), tiffField0.getSortHint());
      assertEquals(1445, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2147420509), "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(256, 256, fieldTypeRational0, 1323, 2052L, byteArray0, byteOrder0, 256);
      tiffField0.getFieldType();
      assertEquals(256, tiffField0.getTag());
      assertEquals(256, tiffField0.getDirectoryType());
      assertEquals(2052, tiffField0.getOffset());
      assertEquals(256, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1, 2435, fieldTypeLong0, 1, 2435, byteArray0, byteOrder0, (-2146927736));
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-2146927736), tiffField0.getSortHint());
      assertEquals(2435, tiffField0.getOffset());
      assertEquals(2435, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)30;
      TiffField tiffField0 = new TiffField(688, 688, fieldTypeByte0, 1L, 688, byteArray0, byteOrder0, (byte) (-101));
      tiffField0.getDoubleValue();
      assertEquals(688, tiffField0.getDirectoryType());
      assertEquals(688, tiffField0.getTag());
      assertEquals(688, tiffField0.getOffset());
      assertEquals((-101), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-86);
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0, 1L, 65535, byteArray0, byteOrder0, (byte) (-83));
      tiffField0.getDoubleValue();
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-83), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-121), 0, fieldTypeShort0, 0, (byte)2, byteArray0, byteOrder0, (byte)2);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2, tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals((-121), tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1717986917), 2121, fieldTypeLong0, (-1717986917), (-1L), byteArray0, byteOrder0, 2552);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2121, int0);
      assertEquals(2552, tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(3317, "5$w;:TnV~p");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3317, 0, fieldTypeDouble0, 0, 3317, byteArray0, byteOrder0, (byte)0);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(3317, tiffField0.getTag());
      assertEquals(3317, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3802, 3389, fieldTypeDouble0, 3802, 3802, byteArray0, byteOrder0, 3389);
      tiffField0.getCount();
      assertEquals(3389, tiffField0.getDirectoryType());
      assertEquals(3802, tiffField0.getTag());
      assertEquals(3802, tiffField0.getOffset());
      assertEquals(3389, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-1), 1265, fieldTypeLong0, (-2147483648L), (-1), byteArray0, byteOrder0, (byte)1);
      tiffField0.getBytesLength();
      assertEquals(1265, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)48, (-212), fieldTypeLong0, 4L, 1671L, byteArray0, byteOrder0, (-212));
      tiffField0.getBytesLength();
      assertEquals(1671, tiffField0.getOffset());
      assertEquals((-212), tiffField0.getSortHint());
      assertEquals((-212), tiffField0.getDirectoryType());
      assertEquals(48, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1, 2435, fieldTypeLong0, 1, 2435, byteArray0, byteOrder0, (-2146927736));
      tiffField0.getByteOrder();
      assertEquals(2435, tiffField0.getOffset());
      assertEquals(2435, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-2146927736), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-560), 34, fieldTypeLong0, (-2146832302), 34, byteArray0, byteOrder0, 1717986918);
      tiffField0.getByteArrayValue();
      assertEquals(34, tiffField0.getDirectoryType());
      assertEquals(34, tiffField0.getOffset());
      assertEquals(1717986918, tiffField0.getSortHint());
      assertEquals((-560), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1828, 1828, fieldTypeDouble0, 1828, 1828, byteArray0, byteOrder0, 1828);
      tiffField0.getByteArrayValue();
      assertEquals(1828, tiffField0.getOffset());
      assertEquals(1828, tiffField0.getDirectoryType());
      assertEquals(1828, tiffField0.getSortHint());
      assertEquals(1828, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3730), 830, fieldTypeLong0, (-3730), 830, (byte[]) null, byteOrder0, 830);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-928), (-928), fieldTypeLong0.RATIONAL, (-928), (-928), byteArray0, byteOrder0, (-928));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(3802, 3802, fieldTypeDouble0, 1L, 3802, byteArray0, (ByteOrder) null, 3802);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField(41, 8, (FieldType) null, 8, (-411L), byteArray0, byteOrder0, 49);
      // Undeclared exception!
      try { 
        tiffField0.isLocalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(72, 72, fieldTypeLong0, 72, 4L, (byte[]) null, (ByteOrder) null, 72);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-924), (-924), fieldTypeLong0.RATIONAL, (-924), (-924), byteArray0, byteOrder0, (-924));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1), 25, fieldTypeLong0, 1L, 25, byteArray0, byteOrder0, 25);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[234];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(28, (-2360), fieldTypeRational0, 517L, (-1L), byteArray0, byteOrder0, 2248);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-1107), (-1107), fieldTypeLong0, (-1107), (-1107), byteArray0, byteOrder0, (-1107));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-144), (byte)18, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 1378);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte) (-62), (byte) (-62), fieldTypeRational0, (byte) (-62), (byte) (-62), (byte[]) null, byteOrder0, (byte) (-62));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[106];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-848), (-848), fieldTypeFloat0, (-848), (-848), byteArray0, byteOrder0, (-848));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50780, (-943), fieldTypeDouble0, 102L, 102L, (byte[]) null, byteOrder0, 50780);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2135), (-2135), fieldTypeShort0, (-2135), (-2135), (byte[]) null, byteOrder0, (-2135));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-916), (-916), fieldTypeLong0.RATIONAL, (-916), (-916), byteArray0, byteOrder0, (-916));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)28, (byte)28, fieldTypeRational0, 1L, 131072L, byteArray0, byteOrder0, (byte)28);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)28, (-1661), fieldTypeFloat0, 41, (byte)28, byteArray0, byteOrder0, 41);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1002, 1002, fieldTypeFloat0, 1002, 1002, (byte[]) null, byteOrder0, 1002);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[23];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-898), (-898), fieldTypeShort0, (-898), (-898), byteArray0, byteOrder0, (-898));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146832298), (-2146832298), fieldTypeShort0, (-2146832298), (-2146832298), byteArray0, byteOrder0, (-2146832298));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1, (-2135), fieldTypeLong0, 1L, (-2135), byteArray0, byteOrder0, (-2135));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-2861), 53, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 53);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[206];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(714, 714, (FieldType) null, 714, 714, byteArray0, byteOrder0, 714);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(3802, "9bCi]\"aW434&2}FY");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37377, 3802, fieldTypeDouble0, (-1543L), 1386L, byteArray0, byteOrder0, 64);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, (byte)1, (byte)1, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[18];
      TiffField tiffField0 = new TiffField(4492, 287, (FieldType) null, 745L, 1177L, byteArray0, byteOrder0, 287);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146832267), (-2146832267), fieldTypeShort0, (-2146832267), (-2146832267), (byte[]) null, byteOrder0, (-2146832267));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-909), (-909), fieldTypeLong0, (-909), (-909), byteArray0, byteOrder0, (-909));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(723, 113, fieldTypeShort0, 1L, 723, byteArray0, byteOrder0, 113);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1142), (-1142), fieldTypeByte0, (-1142), (-1142), (byte[]) null, byteOrder0, (-1142));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-706), (-706), fieldTypeShort0, (-706), (-706), byteArray0, byteOrder0, (-706));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-3766), (-3766), fieldTypeLong0.RATIONAL, 1L, 1L, byteArray0, byteOrder0, (-3766));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(41489, 41489, (FieldType) null, 41489, (-3774L), byteArray0, byteOrder0, 182);
      // Undeclared exception!
      try { 
        tiffField0.getBytesLength();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-923), (-923), fieldTypeLong0.RATIONAL, (-923), (-923), byteArray0, byteOrder0, (-923));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(270, 270, fieldTypeShort0, (-3112L), 100L, byteArray0, byteOrder0, 20);
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "?~ QP7e]");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[37];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(690, 690, fieldTypeShort0, 690, 690, byteArray0, byteOrder0, 690);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1532), (-1532), fieldTypeLong0, (-1320L), (-1320L), byteArray0, byteOrder0, 270);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte) (-35), (byte) (-35), fieldTypeRational0, 1L, (byte) (-35), byteArray0, byteOrder0, 41488);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-3856), fieldTypeShort0, (-3856), 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[6];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)28, (byte)28, fieldTypeRational0, 1L, 2L, byteArray0, byteOrder0, (byte)28);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1829, 1, fieldTypeByte0, 1829, (-2143), byteArray0, byteOrder0, (byte) (-21));
      MockPrintStream mockPrintStream0 = new MockPrintStream("?/Ot*>");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0, false);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(1829, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-2143), tiffField0.getOffset());
      assertEquals((-21), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(249, (-1664), fieldTypeLong0, (-788L), 249, byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(249, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1664), tiffField0.getDirectoryType());
      assertEquals(249, tiffField0.getTag());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)36, (byte) (-116), fieldTypeShort0, 3439L, 3439L, byteArray0, byteOrder0, (byte) (-116));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(3439, tiffField0.getOffset());
      assertFalse(boolean0);
      assertEquals((-116), tiffField0.getSortHint());
      assertEquals(36, tiffField0.getTag());
      assertEquals((-116), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1614, (-2146832302), fieldTypeLong0, (-2146832302), 1607L, byteArray0, (ByteOrder) null, (-2146832302));
      tiffField0.getByteOrder();
      assertEquals(1614, tiffField0.getTag());
      assertEquals(1607, tiffField0.getOffset());
      assertEquals((-2146832302), tiffField0.getDirectoryType());
      assertEquals((-2146832302), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-942), (-942), fieldTypeLong0, (-942), (-942), (byte[]) null, byteOrder0, (-942));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(37377, "9bCi]\"aW434&2}FY");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(256, 256, fieldTypeDouble0.SRATIONAL, 1323, 2052L, byteArray0, byteOrder0, 256);
      tiffField0.getFieldType();
      assertEquals(256, tiffField0.getDirectoryType());
      assertEquals(256, tiffField0.getSortHint());
      assertEquals(256, tiffField0.getTag());
      assertEquals(2052, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(249, (-1664), fieldTypeLong0, (-788L), 249, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(249, tiffField0.getOffset());
      assertEquals((-1664), int0);
      assertEquals(249, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(37377, "9bCi]\"aW434&2}FY");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37377, (-921), fieldTypeDouble0, 1386L, 16L, byteArray0, byteOrder0, 34);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" ~K\"z6`%z]");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(37377, tiffField0.getTag());
      assertEquals(16, tiffField0.getOffset());
      assertEquals((-921), tiffField0.getDirectoryType());
      assertEquals(34, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-41), (-41), (FieldType) null, (-41), (-41), (byte[]) null, byteOrder0, (-41));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-2146832302), (-2146832302), fieldTypeShort0, 1607L, 1607L, byteArray0, (ByteOrder) null, (-2146832302));
      int int0 = tiffField0.getOffset();
      assertEquals(1607, int0);
      assertEquals((-2146832302), tiffField0.getTag());
      assertEquals((-2146832302), tiffField0.getSortHint());
      assertEquals((-2146832302), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(2138961887, "P6*)YeZfvmrC3]>M<5");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1726, 2138961887, fieldTypeFloat0, (-1L), (-24L), byteArray0, (ByteOrder) null, 2138961887);
      int int0 = tiffField0.getTag();
      assertEquals(1726, int0);
      assertEquals(2138961887, tiffField0.getSortHint());
      assertEquals(2138961887, tiffField0.getDirectoryType());
      assertEquals((-24), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(37377, "9bCi]\"aW434&2}FY");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37377, 37377, fieldTypeDouble0, (-21L), 37377, byteArray0, byteOrder0, 305);
      tiffField0.getCount();
      assertEquals(37377, tiffField0.getDirectoryType());
      assertEquals(305, tiffField0.getSortHint());
      assertEquals(37377, tiffField0.getTag());
      assertEquals(37377, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-3853), fieldTypeShort0, (-898L), (-1793L), byteArray0, byteOrder0, 0);
      tiffField0.getBytesLength();
      assertEquals((-1793), tiffField0.getOffset());
      assertEquals((-3853), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2146832298), (-2146832298), fieldTypeShort0, (-2146832298), (-2146832298), byteArray0, byteOrder0, (-2146832298));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((-2146832302), (-2146832302), fieldTypeShort0, 1L, 1L, byteArray0, (ByteOrder) null, (-2146832302));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals((-2146832302), tiffField0.getDirectoryType());
      assertEquals((-2146832302), tiffField0.getSortHint());
      assertEquals((-2146832302), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[132];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1002, 1002, fieldTypeLong0, 1002, 1002, byteArray0, byteOrder0, 1002);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1002, tiffField0.getOffset());
      assertEquals(1002, tiffField0.getDirectoryType());
      assertEquals(1002, tiffField0.getSortHint());
      assertEquals(1002, tiffField0.getTag());
      assertEquals(1002L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)48, (byte)48, fieldTypeRational0, (byte)48, (byte)48, byteArray0, byteOrder0, (byte)48);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[106];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(991, 991, fieldTypeFloat0, 991, 991, byteArray0, byteOrder0, 991);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@5d676c0a for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[158];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(734, 734, fieldTypeDouble0, 734, 734, byteArray0, byteOrder0, 734);
      tiffField0.getDoubleArrayValue();
      assertEquals(734, tiffField0.getTag());
      assertEquals(734L, tiffField0.getCount());
      assertEquals(734, tiffField0.getSortHint());
      assertEquals(734, tiffField0.getDirectoryType());
      assertEquals(734, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[44];
      TiffField tiffField0 = new TiffField((-928), (-928), fieldTypeByte0, 793L, 793L, byteArray0, byteOrder0, (-928));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@2ccb4063 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[106];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(991, 991, fieldTypeFloat0, 991, 991, byteArray0, byteOrder0, 991);
      tiffField0.getDoubleArrayValue();
      assertEquals(991, tiffField0.getSortHint());
      assertEquals(991, tiffField0.getTag());
      assertEquals(991L, tiffField0.getCount());
      assertEquals(991, tiffField0.getDirectoryType());
      assertEquals(991, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146832298), (-2146832298), fieldTypeShort0, (-2146832298), (-2146832298), byteArray0, byteOrder0, (-2146832298));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2146832298), tiffField0.getOffset());
      assertEquals((-2146832298), tiffField0.getTag());
      assertEquals((-2146832298), tiffField0.getDirectoryType());
      assertEquals((-2146832298), tiffField0.getSortHint());
      assertEquals((-2146832298L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)48, (byte)48, fieldTypeRational0, (byte)48, (byte)48, byteArray0, byteOrder0, (byte)48);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(48, tiffField0.getTag());
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(48, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(48L, tiffField0.getCount());
      assertEquals(48, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)0, (byte)48, fieldTypeRational0, (byte)0, (byte)48, byteArray0, byteOrder0, (byte)48);
      tiffField0.getDoubleArrayValue();
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(48, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(48, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[50];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(690, 690, fieldTypeLong0, 690, 690, byteArray0, byteOrder0, 690);
      tiffField0.getDoubleArrayValue();
      assertEquals(690, tiffField0.getOffset());
      assertEquals(690L, tiffField0.getCount());
      assertEquals(690, tiffField0.getDirectoryType());
      assertEquals(690, tiffField0.getSortHint());
      assertEquals(690, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeByte0, 32, 32, byteArray0, byteOrder0, 32);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@7d8ba80c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2146832298), (-2146832298), fieldTypeShort0, (-2146832298), (-2146832298), byteArray0, byteOrder0, (-2146832298));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-2146832298), tiffField0.getOffset());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals((-2146832298), tiffField0.getSortHint());
      assertEquals((-2146832298), tiffField0.getTag());
      assertEquals((-2146832298), tiffField0.getDirectoryType());
      assertEquals((-2146832298L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((byte)0, (byte)48, fieldTypeRational0, (byte)0, (byte)48, byteArray0, byteOrder0, (byte)48);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(48, tiffField0.getOffset());
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(48, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[132];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(999, 999, fieldTypeLong0, 999, 999, byteArray0, byteOrder0, 999);
      tiffField0.getIntArrayValue();
      assertEquals(999, tiffField0.getOffset());
      assertEquals(999L, tiffField0.getCount());
      assertEquals(999, tiffField0.getDirectoryType());
      assertEquals(999, tiffField0.getTag());
      assertEquals(999, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[12];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)28, (byte)28, fieldTypeRational0, (byte)28, (byte)28, byteArray0, byteOrder0, (byte)28);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146832298), (-2146832298), fieldTypeShort0, (-2146832298), (-2146832298), byteArray0, byteOrder0, (-2146832298));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@118e07d1
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-917), (-917), fieldTypeLong0.ASCII, 1, 2443L, byteArray0, byteOrder0, (-3854));
      assertEquals(1, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertEquals((-917), tiffField0.getDirectoryType());
      assertEquals((-917), tiffField0.getTag());
      assertEquals(2443, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-3854), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146832298), (-2146832298), fieldTypeShort0, (-2146832298), (-2146832298), byteArray0, byteOrder0, (-2146832298));
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x8009f056)", string0);
      assertEquals((-2146832298), tiffField0.getDirectoryType());
      assertEquals((-2146832298), tiffField0.getOffset());
      assertEquals((-2146832298), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(286, 286, fieldTypeShort0, 286, 286, byteArray0, byteOrder0, 286);
      String string0 = tiffField0.getTagName();
      assertEquals("XPosition", string0);
      assertEquals(286, tiffField0.getTag());
      assertEquals(286, tiffField0.getOffset());
      assertEquals(286, tiffField0.getDirectoryType());
      assertEquals(286, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[106];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(991, 991, fieldTypeFloat0, 991, 991, byteArray0, byteOrder0, 991);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[215];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5940, 5940, fieldTypeFloat0, 5940, 5940, byteArray0, byteOrder0, 861);
      String string0 = tiffField0.getValueDescription();
      assertEquals(5940, tiffField0.getOffset());
      assertEquals(861, tiffField0.getSortHint());
      assertEquals(23760, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(5940, tiffField0.getTag());
      assertEquals(5940L, tiffField0.getCount());
      assertEquals(5940, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[44];
      TiffField tiffField0 = new TiffField(991, 991, fieldTypeByte0, 991, (-2966L), byteArray0, byteOrder0, 991);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2966), tiffField0.getOffset());
      assertEquals(991, tiffField0.getSortHint());
      assertEquals(991, tiffField0.getDirectoryType());
      assertEquals(991L, tiffField0.getCount());
      assertEquals(991, tiffField0.getTag());
      assertEquals(991, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[106];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(991, 991, fieldTypeFloat0, 991, 991, byteArray0, byteOrder0, 991);
      String string0 = tiffField0.toString();
      assertEquals(991, tiffField0.getDirectoryType());
      assertEquals(991, tiffField0.getSortHint());
      assertEquals("991 (0x3df: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (991 Float)", string0);
      assertEquals(3964, tiffField0.getBytesLength());
      assertEquals(991, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[106];
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeByte0, 6878L, 6878L, byteArray0, byteOrder0, 7);
      String string0 = tiffField0.toString();
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(6878, tiffField0.getOffset());
      assertEquals("7 (0x7: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (106) (6878 Byte)", string0);
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(6878, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[219];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2252, 2252, fieldTypeLong0, 2252, 2252, byteArray0, byteOrder0, 2252);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2252, tiffField0.getOffset());
      assertEquals(9008, tiffField0.getBytesLength());
      assertEquals(2252, tiffField0.getSortHint());
      assertEquals(2252, tiffField0.getDirectoryType());
      assertEquals(2252, tiffField0.getTag());
      assertEquals(2252L, tiffField0.getCount());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[132];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1002, 1002, fieldTypeLong0, 1002, 1002, byteArray0, byteOrder0, 1002);
      String string0 = tiffField0.toString();
      assertEquals(1002, tiffField0.getOffset());
      assertEquals(1002, tiffField0.getSortHint());
      assertEquals(4008, tiffField0.getBytesLength());
      assertEquals("1002 (0x3ea: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (1002 SLong)", string0);
      assertEquals(1002, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[118];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 2598L, 2598L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2598, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(5196, tiffField0.getBytesLength());
      assertEquals("0 (0x0: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (59) (2598 Short)", string0);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[289];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2897), 2027, fieldTypeAscii0, 2027, (-2897), byteArray0, byteOrder0, (-2897));
      String string0 = tiffField0.getValueDescription();
      assertEquals(2027, tiffField0.getBytesLength());
      assertEquals((-2897), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-2897), tiffField0.getSortHint());
      assertEquals((-2897), tiffField0.getTag());
      assertEquals(2027, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)48, (byte)48, fieldTypeRational0, (byte)48, (byte)48, byteArray0, byteOrder0, (byte)48);
      tiffField0.toString();
      assertEquals(48, tiffField0.getOffset());
      assertEquals(48L, tiffField0.getCount());
      assertEquals(48, tiffField0.getDirectoryType());
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(48, tiffField0.getTag());
      assertEquals(384, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4492, 4492, fieldTypeShort0.ASCII, 0L, 50L, byteArray0, byteOrder0, 4492);
      tiffField0.toString();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(4492, tiffField0.getSortHint());
      assertEquals(4492, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(4492, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[289];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[128];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(44, 44, fieldTypeDouble0, 44, 44, byteArray0, byteOrder0, 44);
      String string0 = tiffField0.toString();
      assertEquals(44, tiffField0.getOffset());
      assertEquals("44 (0x2c: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (44 Double)", string0);
      assertEquals(44, tiffField0.getSortHint());
      assertEquals(44, tiffField0.getDirectoryType());
      assertEquals(352, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[17];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((byte)96, (byte)96, fieldTypeDouble0, (byte)96, (byte)96, byteArray0, byteOrder0, (byte)96);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)96, (byte)96);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(96, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(96, tiffField0.getSortHint());
      assertEquals(96, tiffField0.getTag());
      assertEquals(96, tiffField0.getDirectoryType());
      assertEquals(96L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[106];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(991, 991, fieldTypeFloat0, 991, 991, byteArray0, byteOrder0, 991);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(991, 991);
      String string0 = tiffField_OversizeValueElement0.getElementDescription();
      assertNotNull(string0);
      assertEquals(991, tiffField0.getSortHint());
      assertEquals(991, tiffField0.getDirectoryType());
      assertEquals(991, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Float", string0);
      assertEquals(3964, tiffField0.getBytesLength());
      assertEquals(991, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146832298), (-2146832298), fieldTypeShort0, (-2146832298), (-2146832298), byteArray0, byteOrder0, (-2146832298));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-2146832298), tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals((-2146832298), tiffField0.getTag());
      assertEquals((-2146832298), tiffField0.getSortHint());
      assertEquals((-2146832298), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(690, 690, fieldTypeShort0, 690, 690, byteArray0, byteOrder0, 690);
      tiffField0.getFieldTypeName();
      assertEquals(690, tiffField0.getSortHint());
      assertEquals(690, tiffField0.getDirectoryType());
      assertEquals(690, tiffField0.getTag());
      assertEquals(690, tiffField0.getOffset());
      assertEquals(690L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)28, (-1052), fieldTypeRational0, (byte)28, (byte)28, byteArray0, byteOrder0, (-1052));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(37377, "9bCi]\"aW434&2}FY");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37377, 37377, fieldTypeDouble0, 37377, 16L, byteArray0, byteOrder0, 37377);
      int int0 = tiffField0.getSortHint();
      assertEquals(16, tiffField0.getOffset());
      assertEquals(37377, int0);
      assertEquals(37377L, tiffField0.getCount());
      assertEquals(37377, tiffField0.getTag());
      assertEquals(37377, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[106];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(991, 991, fieldTypeFloat0, 991, 991, byteArray0, byteOrder0, 991);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("991 (0x3df: Unknown Tag): ", string0);
      assertEquals(991, tiffField0.getDirectoryType());
      assertEquals(991, tiffField0.getSortHint());
      assertEquals(991, tiffField0.getOffset());
      assertEquals(991L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte)38, (-323), (FieldType) null, 2983L, 2983L, byteArray0, byteOrder0, (-323));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(3802, 3802, fieldTypeDouble0, 1L, 3802, byteArray0, (ByteOrder) null, 3802);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(729, 729, fieldTypeShort0, 729, 729, byteArray0, byteOrder0, 729);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(729, tiffField0.getTag());
      assertEquals(729L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(729, tiffField0.getSortHint());
      assertEquals(729, tiffField0.getDirectoryType());
  }
}
