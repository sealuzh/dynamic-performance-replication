/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 09:46:24 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import com.google.re2j.Unicode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Unicode_ESTest extends Unicode_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int int0 = Unicode.toLower(11361);
      assertEquals(11361, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Unicode.isTitle((-1435));
      boolean boolean0 = Unicode.isPrint((-1435));
      assertFalse(boolean0);
      
      int int0 = Unicode.simpleFold((-1435));
      assertEquals((-1435), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = Unicode.isUpper(90);
      boolean boolean1 = Unicode.isLower(90);
      assertFalse(boolean1 == boolean0);
      
      int int0 = Unicode.simpleFold(90);
      assertEquals(122, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      boolean boolean0 = Unicode.isUpper(223);
      assertFalse(boolean0);
      
      int int0 = Unicode.toLower(223);
      assertEquals(223, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Unicode.toUpper(383);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Unicode.isPrint((-2210));
      Unicode.toLower((-2210));
      Unicode.isLower((-2210));
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Unicode.isTitle(1835);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Unicode.isUpper(258);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Unicode.isUpper(83);
      Unicode.simpleFold(83);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Unicode.isPrint(258);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Unicode.isPrint(1855);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Unicode.isPrint(3795);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Unicode.isTitle(1114111);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Unicode.toUpper(981);
      Unicode.isLower(981);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Unicode.toUpper((-944));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Unicode.isTitle(313);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Unicode.toLower(100);
      Unicode.isPrint(100);
      Unicode.toUpper(100);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Unicode.toLower(65);
      Unicode.isPrint(65);
      Unicode.toUpper(97);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Unicode.isTitle((-2793));
      Unicode.isUpper((-2793));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Unicode.isPrint(68180);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Unicode.isPrint(741);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Unicode.isPrint(1973);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Unicode.simpleFold(42624);
      Unicode.isUpper(42624);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Unicode.isPrint(255);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Unicode.toLower(126);
      Unicode.isPrint(126);
      Unicode.toUpper(126);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Unicode.isPrint(173);
  }
}
