/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 07:51:37 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.Reader;
import java.io.StringReader;
import java.lang.reflect.Method;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.time.chrono.ChronoLocalDate;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.Map;
import java.util.Properties;
import org.apache.derby.iapi.store.raw.RawStoreFactory;
import org.apache.derby.impl.services.monitor.FileMonitor;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.commons.version.VersionNumber;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBCatalog;
import org.databene.jdbacl.model.DBForeignKeyConstraint;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBColumn;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.DefaultDatabase;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.lang.MockThread;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.gds.DatabaseParameterBuffer;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.GDSType;
import org.firebirdsql.gds.impl.jni.NativeGDSImpl;
import org.firebirdsql.gds.impl.wire.isc_db_handle_impl;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.jca.FBManagedConnectionFactory;
import org.firebirdsql.jdbc.FBArray;
import org.firebirdsql.jdbc.FBResultSet;
import org.h2.command.Parser;
import org.h2.engine.ConnectionInfo;
import org.h2.engine.Database;
import org.h2.engine.Session;
import org.h2.engine.User;
import org.h2.jdbc.JdbcConnection;
import org.h2.tools.Csv;
import org.h2.tools.SimpleResultSet;
import org.h2.value.ValueDecimal;
import org.hsqldb.jdbc.jdbcConnection;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ZERO;
      String string0 = "";
      // Undeclared exception!
      try { 
        DBUtil.connect("", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition '.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      // Undeclared exception!
      try { 
        DBUtil.logMetaData((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      long long0 = Long.MAX_VALUE;
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      // Undeclared exception!
      try { 
        DBUtil.checkReadOnly("--hCSc2?,.(\"qF:(HRpXs", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: --hCSc2?,.(\"qF:(HRpXs
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "3";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("3", "3", "3", "3");
      boolean boolean0 = false;
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting 3 failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Connection connection0 = null;
      DBUtil.close((Connection) null);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        JDBCConnectData.parseSingleDbProperties("46@h}_@=ly4^>_}n(");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: 46@h}_@=ly4^>_}n(
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DBUtil.getOpenPreparedStatementCount();
      DBUtil.resetMonitors();
      ErrorHandler.getDefault();
      int int0 = DBUtil.getOpenStatementCount();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      long long0 = Long.MAX_VALUE;
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      Level level0 = Level.info;
      ErrorHandler.setDefaultLevel(level0);
      errorHandler0.setLoggingStackTrace(true);
      DBUtil.closeResultSetAndStatement(simpleResultSet0);
      assertTrue(simpleResultSet0.isClosed());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ResultSet resultSet0 = null;
      DBUtil.close((ResultSet) null);
      // Undeclared exception!
      try { 
        DBUtil.parseAndSimplifyResultSet((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      ErrorHandler.getDefault();
      String string0 = RawStoreFactory.ENCRYPTED_KEY;
      // Undeclared exception!
      try { 
        DBUtil.countRows("encryptedBootPassword", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      long long0 = Long.MAX_VALUE;
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      Object object0 = DBUtil.parseAndSimplifyResultSet(simpleResultSet0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      ErrorHandler.getDefault();
      DBUtil.assertAllDbResourcesClosed(false);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "XSDA3.S", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      DBUtil.format(simpleResultSet0);
      // Undeclared exception!
      try { 
        DBUtil.query("yM", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Connection connection0 = null;
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      String string0 = "XSDA3.S";
      ErrorHandler errorHandler0 = new ErrorHandler("XSDA3.S");
      long long0 = Long.MAX_VALUE;
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("XSDA3.S", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      String string0 = "";
      String string1 = "g`]Rq$IKzq<T";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "B wU8EX=I3x 4gp", "g`]Rq$IKzq<T", "B wU8EX=I3x 4gp", "g`]Rq$IKzq<T", "B wU8EX=I3x 4gp");
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      long long0 = Long.MAX_VALUE;
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("Z", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FBArray fBArray0 = new FBArray();
      Hashtable<Method, DefaultDBColumn> hashtable0 = new Hashtable<Method, DefaultDBColumn>();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.close((ResultSet) simpleResultSet0);
      Object object0 = DBUtil.parseAndSimplifyResultSet(simpleResultSet0);
      assertNotNull(object0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      long long0 = Long.MAX_VALUE;
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      errorHandler0.setLoggingStackTrace(true);
      // Undeclared exception!
      try { 
        DBUtil.runScript("XSDA3.S", ')', (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      errorHandler0.setLoggingStackTrace(false);
      // Undeclared exception!
      try { 
        DBUtil.runScript("n<suv", ';', (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("yM", 83);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      String string0 = "--yMJl[($$";
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("--yMJl[($$");
      defaultDBTable0.getPrimaryKeyConstraint();
      // Undeclared exception!
      try { 
        DBUtil.equivalent((DBUniqueConstraint) null, (DBPrimaryKeyConstraint) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      DBUtil.wrapWithPooledConnection((Connection) null, false);
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      ErrorHandler errorHandler0 = new ErrorHandler("XSDA3.S");
      DBUtil.assertAllDbResourcesClosed(false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "XSDA3.S", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      long long0 = Long.MAX_VALUE;
      Connection connection0 = null;
      DatabaseParameterBuffer databaseParameterBuffer0 = null;
      String string0 = "hCSc2?,.(\"qF:(HRpXs";
      ErrorHandler errorHandler0 = new ErrorHandler("hCSc2?,.(\"qF:(HRpXs");
      // Undeclared exception!
      try { 
        DBUtil.runScript("hCSc2?,.(\"qF:(HRpXs", (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      long long0 = Long.MAX_VALUE;
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      DBUtil.format(simpleResultSet0);
      DBUtil.runScript("", '4', (Connection) null, false, errorHandler0);
      DBUtil.checkReadOnly("select count(*) from ", true);
      // Undeclared exception!
      try { 
        DBUtil.parseResultRow(simpleResultSet0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.h2.tools.SimpleResultSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "databene");
      TableContainer tableContainer0 = new TableContainer("^@d_1w#:qP_X|");
      DBCatalog dBCatalog0 = new DBCatalog("^@d_1w#:qP_X|");
      tableContainer0.equals(dBCatalog0);
      tableContainer0.getComponents();
      DBUtil.dependencyOrderedTables(tableContainer0);
      String string0 = "";
      String string1 = "XS";
      String string2 = "`]W";
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("XS", "", "", "", "`]W", "nP;_MYG5PU`1>U");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = DBUtil.escape("r:5L");
      assertEquals("r:5L", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Connection connection0 = null;
      String string0 = "72?E9E5vC&";
      try { 
        DBUtil.getMetaData((Connection) null, "72?E9E5vC&", "72?E9E5vC&", true, true, false, false, "user", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = "46@h}_@=ly4^>_}n(";
      String string1 = "";
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/users/apanichella/databene/.env.properties");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "3dv-pi");
      DBUtil.available("46@h}_@=ly4^>_}n(", "", "", "Error closing connection");
      try { 
        DBUtil.getMetaData("", false, false, false, true, "3dv-pi", false, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting null failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Connection connection0 = null;
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      long long0 = Long.MAX_VALUE;
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string0 = "XSDA3.S";
      ErrorHandler errorHandler0 = new ErrorHandler("XSDA3.S");
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        DBUtil.assertAllDbResourcesClosed(true);
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // There are unclosed database resources: 1 connection(s)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      DBUtil.wrapWithPooledConnection((Connection) null, false);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      ErrorHandler.getDefault();
      DBUtil.assertAllDbResourcesClosed(false);
      DBUtil.checkReadOnly("select count(*) from ", true);
      Object[] objectArray0 = DBUtil.parseResultRow(simpleResultSet0);
      assertNotNull(objectArray0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      long long0 = Long.MAX_VALUE;
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ErrorHandler.getDefault();
      Level level0 = Level.fatal;
      ErrorHandler.setDefaultLevel(level0);
      Class<FBResultSet> class0 = FBResultSet.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("hC", "--]A,9o,ATdCW", (Connection) null, true, errorHandler0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: hC
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      long long0 = Long.MAX_VALUE;
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ErrorHandler.getDefault();
      Level level0 = Level.fatal;
      ErrorHandler.setDefaultLevel(level0);
      Class<FBResultSet> class0 = FBResultSet.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      jdbcConnection jdbcConnection0 = new jdbcConnection((org.hsqldb.Session) null);
      // Undeclared exception!
      try { 
        DBUtil.executeUpdate("hC", jdbcConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.hsqldb.jdbc.jdbcStatement", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FileMonitor fileMonitor0 = new FileMonitor();
      Thread thread0 = MockThread.currentThread();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/11_jdbacl/derby.properties");
      FileSystemHandling.setPermissions(evoSuiteFile0, true, true, true);
      fileMonitor0.getDaemonThread(thread0, "\n/* group sorted */", true);
      Properties properties0 = new Properties();
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript("\n/* group sorted */", ' ', (Connection) null, true, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ONE;
      ErrorHandler.getDefault();
      DBUtil.assertAllDbResourcesClosed(true);
      DBUtil.currentLine(simpleResultSet0);
      Object[] objectArray0 = DBUtil.nextLine(simpleResultSet0);
      assertNull(objectArray0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      DBUtil.wrapWithPooledConnection((Connection) null, false);
      ErrorHandler errorHandler0 = new ErrorHandler("x:6i,euI%X-7^0@Q.");
      DBUtil.assertAllDbResourcesClosed(false);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DBUtil.wrapWithPooledConnection((Connection) null, false);
      Csv csv0 = Csv.getInstance();
      StringReader stringReader0 = new StringReader("x:6i,euI%X-7^0@Q.");
      String[] stringArray0 = new String[6];
      stringArray0[0] = "\u0001\u00BA";
      stringArray0[1] = "x:6i,euI%X-7^0@Q.";
      stringArray0[2] = "\u0001\u00BA";
      stringArray0[3] = "\u0001\u00BA";
      stringArray0[4] = "x:6i,euI%X-7^0@Q.";
      stringArray0[5] = "x:6i,euI%X-7^0@Q.";
      ResultSet resultSet0 = csv0.read((Reader) stringReader0, stringArray0);
      DBUtil.parseAndSimplifyResultSet(resultSet0);
      assertTrue(resultSet0.wasNull());
  }
}
