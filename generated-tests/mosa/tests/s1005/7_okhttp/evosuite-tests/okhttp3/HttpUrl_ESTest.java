/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 20:27:59 GMT 2018
 */

package okhttp3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;
import java.net.UnknownHostException;
import okhttp3.HttpUrl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.evosuite.runtime.mock.java.net.MockURL;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class HttpUrl_ESTest extends HttpUrl_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.build();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.setQueryParameter(" > ", " > ");
      assertSame(httpUrl_Builder1, httpUrl_Builder0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addEncodedQueryParameter("c/FIg=-<,!IAqB:yAm", "c/FIg=-<,!IAqB:yAm");
      httpUrl_Builder0.removeAllQueryParameters("%Xs8!SE#hnNa)`O$`");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      assertNotNull(httpUrl0);
      
      String string0 = httpUrl0.redact();
      assertEquals("http://www.somefakebutwellformedurl.org/fooExample", httpUrl0.toString());
      assertEquals(80, httpUrl0.port());
      assertEquals("http://www.somefakebutwellformedurl.org/...", string0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addPathSegments("8|15|z_\"4COf!VXI'Z");
      try { 
        HttpUrl.getChecked("8|15|z_\"4COf!VXI'Z");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for 8|15|z_\"4COf!VXI'Z
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.setEncodedQueryParameter("/", "/");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addQueryParameter("K):6WLkwD#Q6$#", "K):6WLkwD#Q6$#");
      httpUrl_Builder0.addEncodedQueryParameter("(WWOrU/A#^H@I{7p", "(WWOrU/A#^H@I{7p");
      try { 
        HttpUrl.getChecked("(WWOrU/A#^H@I{7p");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for (WWOrU/A#^H@I{7p
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedQueryParameter("w\n", "w\n");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addQueryParameter(" hex=", "w\n");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.setEncodedQueryParameter("c.k'P/q,e4<|/fm:v*", "c.k'P/q,e4<|/fm:v*");
      httpUrl_Builder0.removeAllEncodedQueryParameters("c.k'P/q,e4<|/fm:v*");
      HttpUrl.parse("c.k'P/q,e4<|/fm:v*");
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      try { 
        HttpUrl.getChecked("http:nnot%20buffer%20entire%20body%20for%20content%20length:%20#z%22");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: INVALID_PORT for http:nnot%20buffer%20entire%20body%20for%20content%20length:%20#z%22
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.getChecked("https:mnt/gaiagpfs/users/homedirs/apanichella/evosuite_performance/dataset/gordon_script_mosa/projects/7_okhttp/cannot buffer entre body wor content length: /cosed");
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addQueryParameter("GRP]y5jVs>@&W", "GRP]y5jVs>@&W");
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.resolve("h_;3y;R34|?CS\"=h&x");
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.encodedFragment("nXUw");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      HttpUrl.parse("7i0UUx\"^eg+");
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      try { 
        HttpUrl.getChecked("(");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for (
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      HttpUrl.percentEncoded("http", 48, 48);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      try { 
        HttpUrl.getChecked("https:");
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Invalid host: https:
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      try { 
        HttpUrl.getChecked("~BJhv;3We76,n36E%23QB");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for ~BJhv;3We76,n36E%23QB
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment(6, "%7FFA");
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 6, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegments(")ftWC9ur8#?");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addEncodedPathSegment(")ftWC9ur8#?");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedUsername("/Ztt#ol>Rp");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addEncodedPathSegment("/");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.setEncodedPathSegment(0, "*yJ3~]u*Oyzp4");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.fragment("+ lZ(Y");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = ": ";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host(": ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: : 
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.host("{");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addPathSegment("5");
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.query("(WWOrU/A#^H@I{7p");
      httpUrl_Builder1.reencodeForUri();
      try { 
        HttpUrl.getChecked("(WWOrU/A#^H@I{7p");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for (WWOrU/A#^H@I{7p
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.query("[P?EK):g!VF}<W");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.effectivePort();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.resolve("/.%2e");
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.resolve("nX?Uw");
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      HttpUrl.parse("https:");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      HttpUrl.parse("okio.Buffer");
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      HttpUrl.parse("c<");
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      HttpUrl.defaultPort("%2e");
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      HttpUrl.parse("P<qnc8");
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      HttpUrl.parse("nXPUw");
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      HttpUrl.parse("W~rU/A#A@I{7p");
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addEncodedPathSegments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPathSegments == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addEncodedPathSegment((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = ": ";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.encodedPath(": ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected encodedPath: : 
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.scheme((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // scheme == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addQueryParameter((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedFragment((String) null);
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.encodedPassword("/");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.removeAllEncodedQueryParameters((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedName == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.port(65280);
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedPassword("/.%2e");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegment("k!*J9D+Z)N*Uy<h;F{+f");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.encodedQuery("u+$RS'hv2NnyB{l");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl httpUrl1 = httpUrl0.resolve("(]#");
      httpUrl1.uri();
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegments("(WWOrU/A#^H@I{7p");
      httpUrl_Builder1.reencodeForUri();
      try { 
        HttpUrl.getChecked("(WWOrU/A#^H@I{7p");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for (WWOrU/A#^H@I{7p
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.resolve("i|EX)S#zA7=L");
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      // Undeclared exception!
      try { 
        HttpUrl.get((URI) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.net.MockURI", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      try { 
        HttpUrl.getChecked("htps:");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: UNSUPPORTED_SCHEME for htps:
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HttpUrl.parse("URk3FajI5aw?''Oj-D");
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addQueryParameter("nXUw", (String) null);
      // Undeclared exception!
      try { 
        httpUrl_Builder0.scheme("nXUw");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected scheme: nXUw
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addEncodedPathSegments("3]x~Koye:{3zpc");
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.reencodeForUri();
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addPathSegments((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pathSegments == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.encodedUsername("duration <= 0: ");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.port(4);
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      HttpUrl.parse("http:nnot%2Xbuffer%!0entireB0~ody%20for%20conteJt%20lngth:20#z%22");
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.query((String) null);
      try { 
        HttpUrl.getChecked("Invalid URL: ");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for Invalid URL: 
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addQueryParameter("&+\"Rlquwb18tr3#", "&+\"Rlquwb18tr3#");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.port(65280);
      httpUrl_Builder1.encodedPassword("-g'2dGH2");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addEncodedPathSegments("..");
      HttpUrl.parse("..");
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.query(": ");
      httpUrl_Builder1.addEncodedQueryParameter("Pv+?`y *!M{zM}Wl", ": ");
      httpUrl_Builder0.setQueryParameter(": ", "Pv+?`y *!M{zM}Wl");
      // Undeclared exception!
      try { 
        HttpUrl.getChecked((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.fragment("httwT/");
      HttpUrl.parse("httwT/");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.encodedPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPath == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegments("GxN1^'CAxuSi*,");
      httpUrl_Builder1.addEncodedPathSegments("%6PlisQ");
      httpUrl_Builder1.encodedQuery("%6PlisQ");
      httpUrl_Builder1.reencodeForUri();
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment(678, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.removeAllQueryParameters((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // name == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      HttpUrl.parse("http:nnot%20buffer%20entire%20~ody%+0for%20conteJt%20length:20#z%22");
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addPathSegment((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // pathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addEncodedQueryParameter("`KVjppNmI]u8TJtPf", (String) null);
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.port((-3304));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected port: -3304
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.password((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // password == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      HttpUrl.parse("https:\"q!l");
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.query();
      httpUrl0.uri();
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      try { 
        HttpUrl.getChecked("UTF-16LE");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for UTF-16LE
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setEncodedPathSegment((-2422), (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPathSegment == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      try { 
        HttpUrl.getChecked("http:nnot%20buffer%20entire%20~ody%20for%2conteJt%20length:20#z%22");
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Invalid host: http:nnot%20buffer%20entire%20~ody%20for%2conteJt%20length:20#z%22
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.addEncodedQueryParameter((String) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedName == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.resolve("]+*\"V-;6E<*:yxX");
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      try { 
        HttpUrl.getChecked("http:nnot%2Xbuffer%20ntire20~ody%0for%2[coteJt%20lngth:20#z%22");
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Invalid host: http:nnot%2Xbuffer%20ntire20~ody%0for%2[coteJt%20lngth:20#z%22
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addEncodedPathSegments("%2e");
      try { 
        HttpUrl.getChecked("%2e");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for %2e
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.resolve("%2e.");
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.username();
      httpUrl0.pathSize();
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.fragment((String) null);
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("[::");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: [::
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.encodedUsername((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedUsername == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.username((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // username == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      try { 
        HttpUrl.getChecked("Yem+k!Rp");
        fail("Expecting exception: MalformedURLException");
      
      } catch(MalformedURLException e) {
         //
         // Invalid URL: MISSING_SCHEME for Yem+k!Rp
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.resolve("");
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.resolve(".");
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addPathSegment("\r");
      HttpUrl.parse("\r");
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addEncodedPathSegment("\r");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.resolve("#J'.");
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // host == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.newBuilder("h]");
      httpUrl0.resolve("=n(|(7Qx[#}}{");
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      // Undeclared exception!
      try { 
        httpUrl0.queryParameterName(2);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.encodedPath("/FA\n");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.encodedPassword((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // encodedPassword == null
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.isHttps();
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      try { 
        HttpUrl.getChecked("http:nnot%2Xbuffer%20entire20~ody%20for%20conteJt%20lngth:20#z%22");
        fail("Expecting exception: UnknownHostException");
      
      } catch(UnknownHostException e) {
         //
         // Invalid host: http:nnot%2Xbuffer%20entire20~ody%20for%20conteJt%20lngth:20#z%22
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.resolve("https:z:iilg#cg(");
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.pathSegments();
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "..";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment(1114111, "..");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected path segment: ..
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl httpUrl1 = httpUrl0.resolve("ig?[P.#ps");
      httpUrl1.query();
      httpUrl0.url();
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.queryParameter("ID1ID2");
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.hashCode();
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.uri();
      httpUrl0.queryParameterNames();
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      // Undeclared exception!
      try { 
        httpUrl0.queryParameterValue(52);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.password();
      httpUrl0.encodedPath();
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.resolve("%2e%2e");
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("Cannot buffer entire body for content length: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: Cannot buffer entire body for content length: 
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.queryParameterValues("i|EX)S#zA7=L");
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.fragment();
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl httpUrl1 = httpUrl0.resolve("ig?[P.#ps");
      httpUrl1.queryParameterNames();
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.port(1114111);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected port: 1114111
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("a:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: a:
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl.get(uRL0);
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.password("^");
      httpUrl_Builder1.addEncodedPathSegments("/.%2e");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder0.query("/.%2e");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.removePathSegment(0);
      httpUrl_Builder1.fragment("+ lZ(Y");
      // Undeclared exception!
      try { 
        httpUrl_Builder1.setEncodedPathSegment(0, "..");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected path segment: ..
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.resolve("hHI~/<%N_.)Vj=");
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl.get(uRL0);
      String string0 = "=n(|(7Qx[#}}{";
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addQueryParameter("e&(w_J=E[uRLW0K", "e&(w_J=E[uRLW0K");
      httpUrl_Builder0.query("e&(w_J=E[uRLW0K");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.query("=n(|(7Qx[#}}{");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.addEncodedQueryParameter("=n(|(7Qx[#}}{", "e&(w_J=E[uRLW0K");
      // Undeclared exception!
      try { 
        httpUrl_Builder3.removePathSegment(35);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 35, Size: 1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.port();
      HttpUrl.percentDecode("ic SsB#riHA+5U", true);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.equals(uRL0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.scheme();
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl httpUrl1 = httpUrl0.resolve("=n(|(7Qx[#}}{");
      httpUrl1.host();
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("::");
        fail("Expecting exception: AssertionError");
      
      } catch(AssertionError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      MockURL.getHttpExample();
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addPathSegments("[a:");
      HttpUrl.Builder httpUrl_Builder2 = httpUrl_Builder1.addPathSegment("okio.Timeout");
      HttpUrl.Builder httpUrl_Builder3 = httpUrl_Builder2.fragment("[a:");
      HttpUrl.Builder httpUrl_Builder4 = httpUrl_Builder3.removePathSegment(0);
      // Undeclared exception!
      try { 
        httpUrl_Builder4.host("c.k'P/q,e4C|/fm:v*");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: c.k'P/q,e4C|/fm:v*
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.resolve("!\u2026]");
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.username("h");
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.equals(httpUrl0);
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.username("h");
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl httpUrl1 = httpUrl0.resolve("*yJ3~]u*Oyzp4");
      httpUrl0.equals(httpUrl1);
      HttpUrl httpUrl2 = null;
      try {
        httpUrl2 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("::nnot buffer entire body for content length: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: ::nnot buffer entire body for content length: 
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl httpUrl1 = httpUrl0.resolve("?:#@");
      httpUrl1.queryParameterValues("?:#@");
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.scheme("http");
      HttpUrl.parse("%40");
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl httpUrl1 = httpUrl0.resolve("n?U");
      httpUrl1.queryParameter("n?U");
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("Ca.not bufferentre body Wor content length: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: Ca.not bufferentre body Wor content length: 
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl httpUrl1 = httpUrl0.resolve("l`!C1=t?I0B");
      httpUrl1.uri();
  }

  @Test(timeout = 4000)
  public void test138()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl httpUrl1 = httpUrl0.resolve("ig?[P.#ps");
      // Undeclared exception!
      try { 
        httpUrl1.queryParameterName(42);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 84, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test139()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl httpUrl1 = httpUrl0.resolve("ig?[P.#ps");
      // Undeclared exception!
      try { 
        httpUrl1.queryParameterValue(43);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // Index: 87, Size: 2
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test140()  throws Throwable  {
      HttpUrl.canonicalize("\u2026S", "\u2026S", false, false, false, false);
  }

  @Test(timeout = 4000)
  public void test141()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addEncodedPathSegments("A\n");
      HttpUrl.parse("A\n");
  }

  @Test(timeout = 4000)
  public void test142()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("[Cannot buffer entire body for content length: ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: [Cannot buffer entire body for content length: 
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test143()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      httpUrl0.querySize();
  }

  @Test(timeout = 4000)
  public void test144()  throws Throwable  {
      MockURL.getHttpExample();
      HttpUrl.percentEncoded("byes i! empty", 2, 97);
  }

  @Test(timeout = 4000)
  public void test145()  throws Throwable  {
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl httpUrl1 = httpUrl0.resolve("?");
      httpUrl1.queryParameter("?");
      httpUrl1.querySize();
  }

  @Test(timeout = 4000)
  public void test146()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.Builder httpUrl_Builder1 = httpUrl_Builder0.addEncodedPathSegment("/");
      httpUrl_Builder1.encodedUsername = null;
      String string0 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setPathSegment(2062, ".");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected path segment: .
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test147()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      URL uRL0 = MockURL.getHttpExample();
      HttpUrl httpUrl0 = HttpUrl.get(uRL0);
      HttpUrl httpUrl1 = httpUrl0.resolve("9s<W0[?");
      httpUrl1.queryParameterValues("");
  }

  @Test(timeout = 4000)
  public void test148()  throws Throwable  {
      HttpUrl.parse("http:nnot%20buffer%2entire%20~ody%20for%20contJt%20length:0#z%22");
  }

  @Test(timeout = 4000)
  public void test149()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "[Cannot buffer entre body Wor content length: ]";
      // Undeclared exception!
      try { 
        httpUrl_Builder0.host("[Cannot buffer entre body Wor content length: ]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected host: [Cannot buffer entre body Wor content length: ]
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test150()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.scheme("https");
      HttpUrl httpUrl0 = null;
      try {
        httpUrl0 = new HttpUrl(httpUrl_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }

  @Test(timeout = 4000)
  public void test151()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.addPathSegments("[:");
      httpUrl_Builder0.host("Z{58Y");
      HttpUrl.getChecked("https:/fbx0|~5(e6`?{\"xa2j!\">0_piz.r$iem");
  }

  @Test(timeout = 4000)
  public void test152()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      HttpUrl.getChecked("https:@\"q!l!");
  }

  @Test(timeout = 4000)
  public void test153()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      httpUrl_Builder0.setEncodedPathSegment(0, "I Qe");
      URL uRL0 = MockURL.URL("http:nnot%252xbuffer%2520ntire20~ody%250for%252[cotejt%2520lngth:20%23z%2522");
      URL uRL1 = MockURL.URL(uRL0, "w@\"oq!l!(");
      HttpUrl httpUrl0 = HttpUrl.get(uRL1);
      HttpUrl httpUrl1 = httpUrl0.resolve("pathSegment == null");
      // Undeclared exception!
      try { 
        httpUrl1.uri();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.net.URISyntaxException: Illegal character in authority at index 7: http://w@\"oq!l!(/pathSegment%20==%20null
         //
         verifyException("okhttp3.HttpUrl", e);
      }
  }

  @Test(timeout = 4000)
  public void test154()  throws Throwable  {
      HttpUrl.Builder httpUrl_Builder0 = new HttpUrl.Builder();
      String string0 = "pa;WMm;G_LD0jC)Iv&";
      httpUrl_Builder0.setEncodedPathSegment(0, "pa;WMm;G_LD0jC)Iv&");
      String string1 = "cur2uk;n{Zxf";
      String string2 = null;
      // Undeclared exception!
      try { 
        httpUrl_Builder0.setEncodedPathSegment(0, "%2e");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // unexpected path segment: %2e
         //
         verifyException("okhttp3.HttpUrl$Builder", e);
      }
  }
}
