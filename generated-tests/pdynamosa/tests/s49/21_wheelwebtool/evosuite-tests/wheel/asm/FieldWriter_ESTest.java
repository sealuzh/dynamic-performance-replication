/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 14:25:51 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visit(49, 27, ">MqjP", "93&Vgh[rdwK:z", "", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1998), "", "", "2u,f", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1439));
      classWriter0.index = (-1439);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "wheel.asm.ClassWriter", "p%{Wx-9Ta0k$)mfx", "p%{Wx-9Ta0k$)mfx", "wheel.asm.ClassWriter");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visit(49, 27, ">MqjP", "93&Vgh[rdwK:z", "", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1998), "", "", "2u,f", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1439));
      classWriter0.index = (-1439);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "wheel.asm.ClassWriter", "p%{Wx-9Ta0k$)mfx", "p%{Wx-9Ta0k$)mfx", "wheel.asm.ClassWriter");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2283));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1979, "", "org.apache.commons.io.filefilter.AndFileFilter", "RuntimeVisibleAnnotations", "");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "j|uMD<A0~!KJ>P16", "j|uMD<A0~!KJ>P16", "wheel.asm.ClassWr;ter", "j|uMD<A0~!KJ>P16");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3121));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "P^2weP<dY?C4h&#z", "p%JW9Ta0k$)m!tfx", "P^2weP<dY?C4h&#z", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(37);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-233), "JlB su", "JlB su", ")|uQMD<A06~!KJ>P16", ")|uQMD<A06~!KJ>P16");
      Attribute attribute0 = new Attribute(")|uQMD<A06~!KJ>P16");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3121));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-4049), "P^2weP<dY?C4h&#z", "p%JW9Ta0k$)m!tfx", "P^2weP<dY?C4h&#z", (Object) null);
      fieldWriter0.visitAnnotation("1>", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(Integer.MAX_VALUE);
      classWriter0.index = 0;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "D", "D", "D", "D");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2292));
      classWriter0.visit(62, (-2292), "", "wVtE-eHk", "", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2292), "9E%il\"f{hiJ?O%L%", "", "char", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(Integer.MAX_VALUE);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "D", "D", "D", "D");
      fieldWriter0.next = fieldWriter0;
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.next.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(Integer.MAX_VALUE);
      classWriter0.index = 0;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "D", "D", "D", "D");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2292));
      classWriter0.visit(62, (-2292), "", "wVtE-eHk", "", (String[]) null);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2292), "9E%il\"f{hiJ?O%L%", "", "char", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3121));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "P^2weP<dY?C4h&#z", "p%JW9Ta0k$)m!tfx", "P^2weP<dY?C4h&#z", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2292));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2292), "9E%il\"f{hiJ?O%L%", "", "char", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2292));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2292), "9E%il\"f{hiJ?O%L%", "", "char", "");
      fieldWriter0.visitAnnotation("org.apache.commons.io.filefilter.DirectoryFileFilter", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(21);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 5096, "<M(PP", "%", "Bj3JND", "");
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(42, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", (String) null, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@68579d3b
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1439));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "wheel.asm.ClassWriter", "p%{Wx-9Ta0k$)mfx", "p%{Wx-9Ta0k$)mfx", "wheel.asm.ClassWriter");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, (-2750), "p%{Wx-9Ta0k$)mfx", "p%{Wx-9Ta0k$)mfx", ")|uQMD<A06~!KP>P16", ")|uQMD<A06~!KP>P16");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3121));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-4049), "P^2weP<dY?C4h&#z", "p%JW9Ta0k$)m!tfx", "P^2weP<dY?C4h&#z", (Object) null);
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(37);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-233), "JlB su", "JlB su", ")|uQMD<A06~!KJ>P16", ")|uQMD<A06~!KJ>P16");
      Attribute attribute0 = new Attribute(")|uQMD<A06~!KJ>P16");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
