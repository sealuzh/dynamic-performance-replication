/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 21:36:32 GMT 2018
 */

package com.alibaba.fastjson.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.parser.JSONReaderScanner;
import com.alibaba.fastjson.parser.SymbolTable;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.CharArrayReader;
import java.io.InputStreamReader;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import java.math.BigDecimal;
import java.util.Calendar;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONReaderScanner_ESTest extends JSONReaderScanner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      jSONReaderScanner0.bytesValue();
      boolean boolean0 = jSONReaderScanner0.isEOF();
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("com.alibaba.fastjson.parser.JSONReaderScanner");
      boolean boolean0 = jSONReaderScanner0.hasSpecial;
      jSONReaderScanner0.close();
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFieldSymbol(charArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("&T@eD]@m4'YY");
      char[] charArray0 = new char[1];
      charArray0[0] = 'f';
      jSONReaderScanner0.scanFieldInt(charArray0);
      boolean boolean0 = jSONReaderScanner0.isEOF();
      assertEquals((-2), jSONReaderScanner0.matchStat);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("V `_4V*@:gRAV;ISBX2");
      jSONReaderScanner0.bytesValue();
      boolean boolean0 = jSONReaderScanner0.isEOF();
      assertFalse(boolean0);
      assertEquals('V', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '0';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArrayReader0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      char[] charArray0 = new char[1];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 5444, 5444);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.arrayCopy(5444, charArray0, 5444, 5444);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '^';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 83, 26);
      jSONReaderScanner0.subString(26, 83);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal state, textLength is zero");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.subString(1303, (-3946));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -3946
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal stat, textLength is zero", (-929));
      // Undeclared exception!
      try { 
        jSONReaderScanner0.sub_chars((-929), (-929));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -929
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("MtY~w.+|{Df:n7)_'&");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.copyTo(3, 675, (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("g-BWHe", 76);
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.charAt(76);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[6];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("kykIU");
      jSONReaderScanner0.close();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      char[] charArray0 = new char[1];
      charArray0[0] = 'J';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 100);
      jSONReaderScanner0.charArrayCompare(charArray0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 22);
      jSONReaderScanner0.indexOf('V', 9);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("null", 76);
      jSONReaderScanner0.sub_chars(76, 76);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[1];
      charArray0[0] = '\u0098';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArrayReader0);
      Locale.getISOLanguages();
      jSONReaderScanner0.scanIdent();
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.stringVal();
      jSONReaderScanner0.numberString();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ABZbo):qX7OB");
      jSONReaderScanner0.putChar('^');
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.numberString();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[1] = '\u0000';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("e.$?*aaYr%P", (-735));
      jSONReaderScanner0.token = (-938);
      jSONReaderScanner0.scanIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("com.alibaba.fa0tjson.parser.JSONReaderScanner");
      jSONReaderScanner0.putChar('@');
      SymbolTable symbolTable0 = new SymbolTable(4369);
      jSONReaderScanner0.addSymbol('@', '@', '@', symbolTable0);
      SymbolTable symbolTable1 = null;
      try {
        symbolTable1 = new SymbolTable(0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1185263
         //
         verifyException("com.alibaba.fastjson.parser.SymbolTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(":5K(FM-F");
      jSONReaderScanner0.bp = 1742;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.indexOf('^', 16383);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(" e)e>,ha%.vzg@*]");
      Object[] objectArray0 = new Object[7];
      objectArray0[0] = (Object) jSONReaderScanner0;
      jSONReaderScanner0.putChar('^');
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.setToken(0);
      jSONReaderScanner0.scanIdent();
      MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar();
      jSONReaderScanner0.indexOf('^', '^');
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int int0 = (-2772);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("com.aliCaba.fastjson.parser.JSONReaderacanner", (-2772));
      jSONReaderScanner0.np = (-4429);
      jSONReaderScanner0.isBlankInput();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.stringVal();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = 'k';
      charArray0[1] = '3';
      charArray0[2] = '.';
      charArray0[3] = 'Z';
      charArray0[4] = '=';
      charArray0[5] = '-';
      charArray0[6] = 'u';
      charArray0[7] = ' ';
      charArray0[8] = 'S';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 0);
      jSONReaderScanner0.sub_chars(0, 0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("W", 22);
      jSONReaderScanner0.indexOf('V', 9);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[1] = '*';
      charArray0[2] = ']';
      charArray0[3] = '*';
      charArray0[4] = '-';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 2100, 2100);
      jSONReaderScanner0.indexOf(']', 2);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.subString(34, (-4575));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -4575
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[6];
      charArray0[0] = '\"';
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("B2F]a");
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.stringVal();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("B2F]a");
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.stringVal();
      jSONReaderScanner0.numberString();
      jSONReaderScanner0.indexOf('\\', 818);
      jSONReaderScanner0.sub_chars(3654, 191);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[7];
      int int0 = 7;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 7);
      boolean boolean0 = jSONReaderScanner0.hasSpecial;
      jSONReaderScanner0.isEOF();
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.setToken(26);
      jSONReaderScanner0.stringVal();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.bytesValue();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // TODO
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("com.alibaba.fastjson.parser.JSONReaderScanner");
      jSONReaderScanner0.putChar('^');
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("S2%", 964);
      jSONReaderScanner1.putChar('U');
      jSONReaderScanner0.putChar('^');
      double double0 = Locale.LanguageRange.MIN_WEIGHT;
      boolean boolean0 = jSONReaderScanner0.hasSpecial;
      jSONReaderScanner0.setToken((-2353));
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner1.stringVal();
      jSONReaderScanner1.numberString();
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[1];
      charArray0[0] = '\u001D';
      // Undeclared exception!
      try { 
        jSONReaderScanner1.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char char0 = '#';
      char[] charArray0 = new char[8];
      charArray0[5] = 'T';
      charArray0[1] = 'T';
      charArray0[2] = '#';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("_vwLs\"", 52429);
      jSONReaderScanner0.isBlankInput();
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.scanIdent();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jSONReaderScanner0.scanIdent();
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      charArrayReader0.ready();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      uTF8Decoder0.reset();
      // Undeclared exception!
      try { 
        uTF8Decoder0.detectedCharset();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[5] = '#';
      charArray0[1] = 'T';
      charArray0[2] = '#';
      int int0 = 52429;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("_vwLs\"", 52429);
      jSONReaderScanner0.isBlankInput();
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.scanIdent();
      int int1 = 2945;
      jSONReaderScanner0.bp = 2945;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      jSONReaderScanner0.stringVal();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "_vwLs\"");
      jSONReaderScanner0.next();
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      jSONReaderScanner0.stringVal();
      jSONReaderScanner0.next();
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.isEOF();
      int int2 = 23;
      SymbolTable symbolTable0 = new SymbolTable(6);
      // Undeclared exception!
      try { 
        symbolTable0.addSymbol(charArray0, (-2), 799);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("com.alibaba.fastjson.parser.SymbolTable", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("com.alibaba.fastjson.Carser.JSONReaderScanner");
      jSONReaderScanner0.np = (int) '^';
      jSONReaderScanner0.scanString('n');
      char[] charArray0 = new char[3];
      charArray0[0] = 'n';
      charArray0[1] = '^';
      charArray0[2] = 'n';
      jSONReaderScanner0.numberString();
      jSONReaderScanner0.numberString();
      int int0 = (-1760);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("com.alibaba.fastjson.Carser.JSONReaderScanner", (-1760));
      int int1 = Calendar.JANUARY;
      jSONReaderScanner0.close();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      char[] charArray0 = new char[1];
      charArray0[0] = '\u0098';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArrayReader0);
      Locale.getISOLanguages();
      jSONReaderScanner0.scanIdent();
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.stringVal();
      jSONReaderScanner0.numberString();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("\u0098o");
      jSONReaderScanner0.scanFieldFloatArray(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner1.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)20;
      byteArray0[1] = (byte)88;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)67;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("ABZbo):qX7OB");
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanSymbolWithSeperator((SymbolTable) null, '_');
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      jSONReaderScanner0.stringVal();
      jSONReaderScanner0.next();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "ABZbo):qX7OB");
      jSONReaderScanner0.isEOF();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.numberString();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'D';
      charArray0[1] = 'Y';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArrayReader0);
      jSONReaderScanner0.scanFieldLong(charArray0);
      Locale.getISOLanguages();
      jSONReaderScanner0.scanIdent();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Locale locale0 = new Locale("");
      Locale locale1 = Locale.CANADA_FRENCH;
      locale1.getDisplayVariant();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArrayReader0, (-1));
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "Mn>!u8'CS/Gtw5V{");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner(charArrayReader0);
      jSONReaderScanner2.stringVal();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "j!");
      jSONReaderScanner2.isEOF();
      jSONReaderScanner2.scanIdent();
      jSONReaderScanner0.numberString();
      BigDecimal bigDecimal0 = new BigDecimal((long) 0);
      jSONReaderScanner0.bytesValue();
      System.setCurrentTimeMillis(0L);
  }
}
