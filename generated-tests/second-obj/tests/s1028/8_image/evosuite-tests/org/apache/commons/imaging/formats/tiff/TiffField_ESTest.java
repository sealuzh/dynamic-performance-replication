/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 13:17:44 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.ObjectStreamConstants;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.util.regex.Pattern;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-794), "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-794), (-794), fieldTypeByte0, (-1557L), 3695L, byteArray0, byteOrder0, 1156);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(40962, "V.. (");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40962, 40962, fieldTypeRational0, 40962, 40962, byteArray0, byteOrder0, 40962);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50727, 1877, fieldTypeRational0, 4L, 1560L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getTagName();
      assertEquals("AnalogBalance", string0);
      
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(50727, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(1877, tiffField0.getDirectoryType());
      assertEquals(1560, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37122, 2265, fieldTypeDouble0, 37122, 37122, (byte[]) null, byteOrder0, 2265);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "~,E!2eZI4LPZ]*v9I");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(563, 563, fieldTypeFloat0, 563, 563, (byte[]) null, byteOrder0, 563);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(563, 563);
      tiffField0.getFieldTypeName();
      assertEquals(563, tiffField0.getTag());
      assertEquals(563, tiffField0.getSortHint());
      assertEquals(563, tiffField0.getOffset());
      assertEquals(563, tiffField0.getDirectoryType());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)50;
      byteArray0[1] = (byte)99;
      byteArray0[2] = (byte)85;
      byteArray0[3] = (byte)21;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeByte0, 24, 24, byteArray0, byteOrder0, (byte)21);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(24, 532);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(21, tiffField0.getSortHint());
      assertEquals(24, tiffField0.getTag());
      assertEquals(24L, tiffField0.getCount());
      assertEquals(24, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(24, tiffField0.getOffset());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SByte", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byteArray0[0] = (byte)31;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-115), (-115), fieldTypeByte0, (-115), (-115), byteArray0, byteOrder0, (-115));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("-115 (0xffffff8d: Unknown Tag): ", string0);
      assertEquals((-115), tiffField0.getOffset());
      assertEquals((-115), tiffField0.getDirectoryType());
      assertEquals((-115), tiffField0.getSortHint());
      assertEquals((-115), tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(563, 563, fieldTypeFloat0, 563, 563, (byte[]) null, byteOrder0, 563);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[48];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2068, (-947), fieldTypeLong0, 2068, 2068, byteArray0, byteOrder0, 2068);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@5c138a10
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1332, 1332, fieldTypeByte0, 1332, 1332, byteArray0, byteOrder0, 65535);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@34da015c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[95];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-61), (byte)26, fieldTypeRational0, 1290L, (byte)26, byteArray0, byteOrder0, 42);
      tiffField0.getDoubleArrayValue();
      System.setCurrentTimeMillis(1290L);
      System.setCurrentTimeMillis((byte)26);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-23);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 255L, 41034L, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, 27, fieldTypeByte0, 27, 255L, byteArray0, byteOrder0, (-2615));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@62c0378d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)50;
      byteArray0[2] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2028, 2028, fieldTypeLong0, 2028, 2028, byteArray0, byteOrder0, 0);
      tiffField0.getIntArrayValue();
      assertEquals(8112, tiffField0.getBytesLength());
      assertEquals(2028, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2028, tiffField0.getOffset());
      assertEquals(2028, tiffField0.getTag());
      assertEquals(2028L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)87;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0, 65535, (-450L), byteArray0, byteOrder0, (byte)87);
      String string0 = tiffField0.getTagName();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(87, tiffField0.getSortHint());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals((-450), tiffField0.getOffset());
      assertEquals("Unknown Tag (0xffff)", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField((-700), 71, fieldTypeFloat0, (byte)0, 71, byteArray0, byteOrder0, 71);
      int int0 = tiffField0.getSortHint();
      assertEquals(71, int0);
      
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1), tagInfo0.tag);
      assertEquals(71, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-700), tiffField0.getTag());
      assertEquals(71, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-23);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeRational0, 255L, 41034L, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2040, tiffField0.getBytesLength());
      assertEquals(41034, tiffField0.getOffset());
      assertEquals(255L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeFloat0, (-932L), 6840L, (byte[]) null, byteOrder0, (-1));
      assertTrue(tiffField0.isLocalValue());
      
      tiffField0.getOversizeValueElement();
      assertEquals(6840, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[13];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 10L, 65535, byteArray0, byteOrder0, 65535);
      tiffField0.getValueDescription();
      int int0 = Double.BYTES;
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)95;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 65535, 65535, byteArray0, byteOrder0, 465);
      tiffField0.getIntArrayValue();
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-805), (byte)95);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(465, tiffField0.getSortHint());
      assertEquals(131070, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535L, tiffField0.getCount());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-60);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)36, (-1), fieldTypeShort0, (byte)36, (byte) (-122), byteArray0, byteOrder0, 315);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertArrayEquals(new int[] {50176, 0, 0}, intArray0);
      
      int int0 = Short.BYTES;
      int int1 = tiffField0.getBytesLength();
      assertEquals(72, int1);
      
      int int2 = tiffField0.getIntValueOrArraySum();
      assertEquals(315, tiffField0.getSortHint());
      assertEquals(36L, tiffField0.getCount());
      assertEquals(36, tiffField0.getTag());
      assertEquals((-15360), int2);
      assertEquals((-122), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-18), "DateTimeOriginal");
      byte[] byteArray0 = new byte[25];
      byteArray0[0] = (byte)94;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Md|<=*a");
      ByteOrder byteOrder2 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteOrder byteOrder3 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-18), 65535, fieldTypeRational0, (byte)94, (byte)94, byteArray0, byteOrder1, 112);
      tiffField0.getValueDescription();
      Object object0 = new Object();
      tiffField0.getDirectoryType();
      try { 
        fieldTypeRational0.FLOAT.writeData(byteOrder3, byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: LITTLE_ENDIAN (java.nio.ByteOrder)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[1] = (byte) (-117);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong1 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(35, (byte)1, fieldTypeLong1, 2068, 3290L, byteArray0, byteOrder0, (-1662));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(8272, tiffField0.getBytesLength());
      assertEquals(2068L, tiffField0.getCount());
      assertEquals(3290, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-1662), tiffField0.getSortHint());
      assertEquals(35, tiffField0.getTag());
      assertEquals(9109504, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[7];
      byteArray0[6] = (byte)50;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte)50;
      byteArray0[4] = (byte)37;
      byteArray0[5] = (byte) (-100);
      int int0 = Short.SIZE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(12, 315, fieldTypeRational0, (byte)50, 862L, byteArray0, byteOrder0, 16);
      int int1 = tiffField0.getIntValueOrArraySum();
      assertEquals(16, tiffField0.getSortHint());
      assertEquals(862, tiffField0.getOffset());
      assertEquals(0, int1);
      assertEquals(50L, tiffField0.getCount());
      assertEquals(12, tiffField0.getTag());
      assertEquals(315, tiffField0.getDirectoryType());
      assertEquals(400, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int int0 = (-18);
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[62];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      Pattern.quote("|{RS|;(s,pnMG");
      TiffField tiffField0 = new TiffField(95, 2627, fieldTypeRational0, 2627, (-18), byteArray0, byteOrder0, (-18));
      ByteOrder.nativeOrder();
      int int1 = (-2075);
      int int2 = 13;
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-59);
      byteArray0[1] = (byte)26;
      byteArray0[2] = (byte)30;
      byteArray0[3] = (byte)22;
      byteArray0[4] = (byte)63;
      byteArray0[5] = (byte) (-13);
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(540);
      ByteOrder byteOrder0 = byteBuffer0.order();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeByte0, 1L, (-1), byteArray0, byteOrder0, 326);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleArrayValue();
      assertEquals(326, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)20;
      byteArray0[1] = (byte)20;
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect((byte)20);
      ByteBuffer byteBuffer1 = byteBuffer0.putInt(1762);
      ByteBuffer byteBuffer2 = byteBuffer1.putFloat((float) (byte)20);
      ByteOrder byteOrder0 = byteBuffer2.order();
      TiffField tiffField0 = new TiffField(4443, 4443, fieldTypeShort0, 2152L, 2152L, byteArray0, byteOrder0, 20);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {5140.0, 0.0, 0.0, 0.0}, doubleArray0, 0.01);
      
      int int0 = tiffField0.getDirectoryType();
      assertEquals(20, tiffField0.getSortHint());
      assertEquals(4443, tiffField0.getTag());
      assertEquals(4304, tiffField0.getBytesLength());
      assertEquals(2152, tiffField0.getOffset());
      assertEquals(4443, int0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-4);
      byteArray0[1] = (byte) (-117);
      byteArray0[2] = (byte) (-117);
      byteArray0[3] = (byte)1;
      byteArray0[8] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray1 = new byte[4];
      byteArray0[1] = (byte)1;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray1[1] = (byte) (-117);
      byteArray1[2] = (byte)57;
      byteArray0[3] = (byte) (-4);
      TiffField tiffField0 = new TiffField(34850, (byte) (-117), fieldTypeLong0, (byte)1, (byte)1, byteArray1, byteOrder0, (byte) (-4));
      tiffField0.getIntValueOrArraySum();
      assertEquals(34850, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-4), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-117), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[239];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((byte) (-96), (byte)8, fieldTypeLong0, 131L, 1650L, byteArray0, byteOrder0, 34677);
      ByteOrder.nativeOrder();
      String string0 = tiffField0.getValueDescription();
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (59)", string0);
      assertNotNull(string0);
      
      int int0 = tiffField0.getTag();
      assertEquals(34677, tiffField0.getSortHint());
      assertEquals((-96), int0);
      assertEquals(1650, tiffField0.getOffset());
      assertEquals(8, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)48;
      char[] charArray0 = new char[2];
      charArray0[0] = 'j';
      charArray0[1] = ':';
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1918), (-699), fieldTypeLong0, 120L, 477L, byteArray0, byteOrder0, (-699));
      String string0 = tiffField0.getValueDescription();
      assertEquals(477, tiffField0.getOffset());
      assertEquals((-699), tiffField0.getDirectoryType());
      assertEquals((-699), tiffField0.getSortHint());
      assertEquals(480, tiffField0.getBytesLength());
      assertEquals((-1918), tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(50712, "");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)4;
      byteArray0[2] = (byte) (-27);
      byteArray0[3] = (byte)88;
      byteArray0[4] = (byte)22;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50712, 50712, fieldTypeDouble0, 50712, 997L, byteArray0, byteOrder0, (-2103657450));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@228f90ec for: 50712 (0xc618: LinearizationTable): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte) (-107);
      byteArray0[2] = (byte)9;
      byteArray0[3] = (byte)22;
      byteArray0[4] = (byte) (-112);
      byteArray0[5] = (byte)9;
      TiffField tiffField0 = new TiffField(16, 16, fieldTypeLong0, 16, 280L, byteArray0, (ByteOrder) null, (byte) (-1));
      tiffField0.getDoubleArrayValue();
      assertEquals(280, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(16, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getTag());
      assertEquals(64, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-3566), "");
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2179, (-1843), fieldTypeDouble0, 72L, (-3566), byteArray0, byteOrder0, (-3037));
      ByteOrder.nativeOrder();
      int int0 = tiffField0.getTag();
      assertEquals(2179, int0);
      
      String string0 = tiffField0.getValueDescription();
      assertEquals((-3037), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(576, tiffField0.getBytesLength());
      assertEquals((-1843), tiffField0.getDirectoryType());
      assertEquals((-3566), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[174];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      FieldType.getFieldType(1);
      ByteOrder byteOrder3 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder4 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1L, (-2558L), byteArray0, byteOrder4, 27);
      tiffField0.getValueDescription();
      System.setCurrentTimeMillis((-4854L));
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[183];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder2 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder3 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField((byte)45, 27, fieldTypeByte0, 1648L, 1L, byteArray0, byteOrder3, 27);
      String string0 = tiffField0.getValueDescription();
      assertEquals(27, tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(45, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1648, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)44;
      byteArray0[2] = (byte)8;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte) (-96);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2694, 2694, fieldTypeByte0, 2694, 2694, byteArray0, byteOrder0, 42006);
      String string0 = tiffField0.getValueDescription();
      assertEquals(42006, tiffField0.getSortHint());
      assertEquals(2694, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2694, tiffField0.getBytesLength());
      assertEquals(2694, tiffField0.getOffset());
      assertEquals(2694, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(50737, "");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-9);
      byteArray0[1] = (byte)43;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50737, 50737, fieldTypeDouble0, 50737, 47L, byteArray0, byteOrder0, (byte) (-9));
      tiffField0.getDoubleArrayValue();
      assertEquals(405896, tiffField0.getBytesLength());
      assertEquals(47, tiffField0.getOffset());
      assertEquals((-9), tiffField0.getSortHint());
      assertEquals(50737, tiffField0.getTag());
      assertEquals(50737, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[58];
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder3 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-3), (-423), fieldTypeDouble0, 1465, 65576, byteArray0, byteOrder0, 65576);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      int int0 = tiffField0.getBytesLength();
      assertEquals((-423), tiffField0.getDirectoryType());
      assertEquals(65576, tiffField0.getSortHint());
      assertEquals(11720, int0);
      assertEquals((-3), tiffField0.getTag());
      assertEquals(65576, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(38, "-1KR][{I(VC");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)16;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte)62;
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte) (-5);
      byteArray0[5] = (byte)116;
      TiffField tiffField0 = new TiffField((-1867), (-1867), fieldTypeFloat0, 38, 1757L, byteArray0, (ByteOrder) null, (-1867));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1867), tiffField0.getSortHint());
      assertEquals((-1867), tiffField0.getDirectoryType());
      assertEquals(1757, tiffField0.getOffset());
      assertEquals(152, tiffField0.getBytesLength());
      assertEquals((-1867), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)35;
      byteArray0[4] = (byte) (-70);
      byteArray0[5] = (byte)23;
      byteArray0[7] = (byte) (-70);
      byteArray0[8] = (byte) (-87);
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = byteBuffer0.asCharBuffer();
      charBuffer0.slice();
      charBuffer0.compact();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2019), (-2019), fieldTypeByte0, 1L, (-2019), byteArray0, byteOrder0, 42);
      tiffField0.getIntArrayValue();
      assertEquals((-2019), tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(42, tiffField0.getSortHint());
      assertEquals((-2019), tiffField0.getTag());
      assertEquals((-2019), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[183];
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder2 = ByteOrder.LITTLE_ENDIAN;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "HQIB71Os");
      ByteOrder byteOrder3 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)4, (byte)4, fieldTypeFloat0, (byte)8, 903L, byteArray0, byteOrder0, (-1515));
      String string0 = tiffField0.getValueDescription();
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertEquals(4, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(4, tiffField0.getTag());
      assertEquals(903, tiffField0.getOffset());
      assertEquals((-1515), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "Cz$`BP3hj");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-56);
      byteArray0[1] = (byte)46;
      byteArray0[2] = (byte)28;
      byteArray0[3] = (byte) (-61);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(489, 30, fieldTypeAscii0, 4L, (-4629L), byteArray0, byteOrder0, (-1049));
      tiffField0.toString();
      assertEquals(489, tiffField0.getTag());
      assertEquals((-4629), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-1049), tiffField0.getSortHint());
      assertEquals(30, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "Cz$`BP3hj");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-56);
      byteArray0[1] = (byte)46;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      fieldTypeAscii0.writeData("Cz$`BP3hj", byteOrder0);
      byteArray0[2] = (byte)60;
      byteArray0[3] = (byte) (-56);
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(489, 30, fieldTypeAscii0, 0, (-4629L), byteArray0, byteOrder1, 30);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(30, tiffField0.getDirectoryType());
      assertEquals(30, tiffField0.getSortHint());
      assertEquals((-4629), tiffField0.getOffset());
      assertEquals(489, tiffField0.getTag());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[102];
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1465, "OversizeValueElement, tag: ");
      TiffField tiffField0 = new TiffField((-48), 1126, fieldTypeAscii0, 255L, 50L, byteArray0, byteOrder1, 1899);
      ByteOrder byteOrder2 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder.nativeOrder();
      ByteOrder byteOrder3 = ByteOrder.LITTLE_ENDIAN;
      tiffField0.toString();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.String; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[138];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      String string0 = File.separator;
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/8_image/:");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "/");
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(51, 1, fieldTypeShort0, 4888L, 39936L, byteArray0, byteOrder1, 50);
      tiffField0.getOversizeValueElement();
      tiffField0.getValueDescription();
      System.setCurrentTimeMillis(4888L);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[296];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1189), 615, fieldTypeFloat0, 13656L, (-2263L), byteArray0, byteOrder0, 967);
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      tiffField0.getValueDescription();
      try { 
        FieldType.getFieldType(2457);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 2457 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[419];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray1 = new byte[1];
      byte byte0 = (byte)43;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)43, (byte)43, fieldTypeLong0.DOUBLE, 65490L, (byte)43, byteArray0, byteOrder0, (byte)43);
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder2 = ByteOrder.BIG_ENDIAN;
      EvoSuiteFile evoSuiteFile0 = null;
      tiffField0.getValueDescription();
      try { 
        FieldType.getFieldType((byte)43);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Field type 43 is unsupported
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType", e);
      }
  }
}
