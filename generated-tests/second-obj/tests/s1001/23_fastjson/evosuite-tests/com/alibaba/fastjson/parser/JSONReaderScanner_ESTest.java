/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 16:13:46 GMT 2018
 */

package com.alibaba.fastjson.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.parser.JSONReaderScanner;
import com.alibaba.fastjson.parser.SymbolTable;
import java.io.BufferedInputStream;
import java.io.CharArrayReader;
import java.io.File;
import java.io.InputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.StringReader;
import java.math.BigDecimal;
import java.util.Calendar;
import java.util.Locale;
import java.util.TimeZone;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.util.MockCalendar;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import sun.util.calendar.ZoneInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONReaderScanner_ESTest extends JSONReaderScanner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("3jU%H <OWAiRyHy");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      char[] charArray0 = new char[7];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 86);
      jSONReaderScanner0.bytesValue();
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal stat, textLength is zero");
      boolean boolean0 = jSONReaderScanner0.isEOF();
      assertEquals('i', jSONReaderScanner0.getCurrent());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("1W>Uo");
      char char0 = jSONReaderScanner0.charAt(66);
      assertFalse(jSONReaderScanner0.isEOF());
      assertEquals('1', jSONReaderScanner0.getCurrent());
      assertEquals('\u0000', char0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 40, 125);
      char char0 = jSONReaderScanner0.charAt(2440);
      assertEquals('\u001A', char0);
      
      jSONReaderScanner0.close();
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      jSONReaderScanner0.charAt(33);
      jSONReaderScanner0.isBlankInput();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("n%:4}Wf,");
      boolean boolean0 = jSONReaderScanner0.isBlankInput();
      assertFalse(boolean0);
      
      jSONReaderScanner0.close();
      assertEquals('n', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'J';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 8, 8);
      boolean boolean0 = jSONReaderScanner0.charArrayCompare(charArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      char[] charArray0 = new char[2];
      charArray0[0] = '|';
      charArray0[1] = '(';
      boolean boolean0 = jSONReaderScanner0.charArrayCompare(charArray0);
      assertFalse(boolean0);
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Locale locale0 = Locale.JAPAN;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal stat, textLength is zero");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.sub_chars((-196), (-196));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -196
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '[';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 8, 8);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.arrayCopy(8, charArray0, 8, 8);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 4);
      System.setCurrentTimeMillis((-127L));
      int int0 = jSONReaderScanner0.indexOf('W', 41);
      assertEquals((-1), int0);
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("!)g", 16384);
      jSONReaderScanner0.matchStat = 0;
      System.setCurrentTimeMillis(0);
      int int0 = jSONReaderScanner0.indexOf('N', 3);
      assertEquals('!', jSONReaderScanner0.getCurrent());
      assertTrue(jSONReaderScanner0.isEOF());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("MAD7P@/V0'");
      jSONReaderScanner0.scanString('V');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      jSONReaderScanner0.subString(0, 1779);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("}Q8c@=ho|eUR1 BjWT%", (-3224));
      char[] charArray0 = new char[2];
      charArray0[0] = '{';
      charArray0[1] = '(';
      // Undeclared exception!
      try { 
        jSONReaderScanner0.copyTo((-100), (-3224), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("!)g", 16384);
      jSONReaderScanner0.nextToken(16384);
      jSONReaderScanner0.matchStat = jSONReaderScanner0.matchStat;
      System.setCurrentTimeMillis(0);
      jSONReaderScanner0.indexOf('N', 16384);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.subString((-1), (-16));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -16
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("u3\"&:.", 2003);
      jSONReaderScanner0.sub_chars(2003, 2003);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = 99;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("]w^4", 99);
      jSONReaderScanner0.indexOf('n', 0);
      int int1 = 2672;
      jSONReaderScanner0.close();
      TimeZone timeZone0 = jSONReaderScanner0.getTimeZone();
      Locale locale0 = Locale.KOREA;
      MockCalendar.getInstance(timeZone0, locale0);
      System.setCurrentTimeMillis(0);
      jSONReaderScanner0.indexOf('S', 301);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.isBlankInput();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("", 4);
      System.setCurrentTimeMillis((-127L));
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.indexOf('W', 48);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(stringReader0);
      jSONReaderScanner0.scanIdent();
      char[] charArray0 = new char[9];
      charArray0[0] = 'w';
      charArray0[3] = 'w';
      charArray0[4] = 'L';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(stringReader0, '\u0000');
      jSONReaderScanner1.sub_chars(0, 71);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFalse();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parse false
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("LC' _DKxx`");
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.isBlankInput();
      jSONReaderScanner0.numberString();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("!)g", 16384);
      jSONReaderScanner0.nextToken(16384);
      jSONReaderScanner0.matchStat = 0;
      System.setCurrentTimeMillis(0);
      jSONReaderScanner0.indexOf('N', 16384);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("2");
      jSONReaderScanner0.nextToken(0);
      BigDecimal bigDecimal0 = new BigDecimal(0);
      char[] charArray0 = new char[4];
      charArray0[0] = '-';
      charArray0[3] = '\u0000';
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = '6';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 538);
      jSONReaderScanner0.lexError("W", (Object[]) null);
      jSONReaderScanner0.next();
      jSONReaderScanner0.isEOF();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("Lwz' _DKxx`");
      jSONReaderScanner0.scanIdent();
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte) (-113);
      byteArray0[4] = (byte) (-113);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = 16384;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("!)g", 16384);
      jSONReaderScanner0.nextToken(16384);
      char char0 = '`';
      jSONReaderScanner0.isEOF();
      int int1 = 2048;
      int int2 = 144;
      jSONReaderScanner0.bp = 144;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.charAt(26);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.StringReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("\":\"", 2063);
      jSONReaderScanner0.scanDate('{');
      jSONReaderScanner0.isEOF();
      jSONReaderScanner0.isEOF();
      jSONReaderScanner0.isBlankInput();
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        jSONReaderScanner0.arrayCopy(65536, charArray0, (-214748364), 463);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("LwC' _DKxx`");
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.next();
      jSONReaderScanner0.scanIdent();
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-113);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("LwC' _DKxx`");
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.next();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "LwC' _DKxx`");
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.numberString();
      jSONReaderScanner0.bytesValue();
      System.setCurrentTimeMillis(0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      StringReader stringReader0 = new StringReader("LwC' _DKxx`");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("LwC' _DKxx`");
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.numberString();
      jSONReaderScanner0.subString(70, 70);
      FileSystemHandling.shouldAllThrowIOExceptions();
      PipedReader pipedReader0 = new PipedReader();
      PipedWriter pipedWriter0 = new PipedWriter(pipedReader0);
      Locale locale0 = Locale.ITALY;
      Locale locale1 = Locale.KOREA;
      TimeZone timeZone0 = TimeZone.getTimeZone("");
      Locale locale2 = Locale.KOREAN;
      MockCalendar.getInstance(timeZone0, locale2);
      System.setCurrentTimeMillis(70);
      jSONReaderScanner0.bytesValue();
      BigDecimal bigDecimal0 = new BigDecimal(70);
      jSONReaderScanner0.charAt(34);
      jSONReaderScanner0.indexOf('\u001A', 70);
      jSONReaderScanner0.isBlankInput();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("pa6hBI4:d{7M(Z");
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.next();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "pa6hBI4:d{7M(Z");
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("com.alibaba.fastjson.parser.JSONReaderScanner");
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanIdent();
      char char0 = File.pathSeparatorChar;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "com.alibaba.fastjson.parser.JSONReaderScanner");
      jSONReaderScanner0.numberString();
      Locale locale0 = Locale.JAPANESE;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "com.alibaba.fastjson.parser.JSONReaderScanner");
      char[] charArray0 = new char[9];
      charArray0[0] = 'V';
      charArray0[1] = ':';
      charArray0[2] = 'F';
      charArray0[3] = ':';
      charArray0[4] = 'F';
      charArray0[5] = 'F';
      charArray0[6] = 'V';
      charArray0[7] = ':';
      charArray0[8] = 'V';
      jSONReaderScanner0.scanFieldInt(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanFieldDouble((char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("YvCL-lrL*Um9{f");
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.numberString();
      Locale locale0 = Locale.ENGLISH;
      TimeZone.getTimeZone("YvC");
      jSONReaderScanner0.getTimeZone();
      jSONReaderScanner0.bytesValue();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("fastjson.serializeFeatures.MapSortField");
      JSON.DEFAULT_PARSER_FEATURE = 0;
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.next();
      boolean boolean0 = jSONReaderScanner0.hasSpecial;
      jSONReaderScanner0.putChar('\u001A');
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanIdent();
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanIdent();
      char[] charArray0 = new char[2];
      charArray0[0] = '\u001A';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 1);
      jSONReaderScanner1.isEOF();
      SymbolTable symbolTable0 = new SymbolTable(67);
      ZoneInfo zoneInfo0 = (ZoneInfo)jSONReaderScanner0.timeZone;
      jSONReaderScanner0.scanFieldFloat(charArray0);
      TimeZone timeZone0 = jSONReaderScanner0.getTimeZone();
      jSONReaderScanner0.setTimeZone(timeZone0);
      jSONReaderScanner1.isBlankInput();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.addSymbol((-1314), 0, 110, symbolTable0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("Q8c$i_F9![b9e\"h2qJ", 66);
      Object[] objectArray0 = new Object[7];
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)82;
      byteArray0[1] = (byte) (-2);
      byteArray0[2] = (byte)35;
      byteArray0[3] = (byte) (-116);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      objectArray0[0] = (Object) jSONReaderScanner0;
      jSONReaderScanner0.resetStringPosition();
      objectArray0[1] = (Object) "Q8c$i_F9![b9e\"h2qJ";
      objectArray0[2] = (Object) "Q8c$i_F9![b9e\"h2qJ";
      objectArray0[3] = (Object) "Q8c$i_F9![b9e\"h2qJ";
      objectArray0[4] = (Object) "Q8c$i_F9![b9e\"h2qJ";
      objectArray0[5] = (Object) jSONReaderScanner0;
      jSONReaderScanner0.hasSpecial = true;
      objectArray0[6] = (Object) jSONReaderScanner0;
      jSONReaderScanner0.lexError("Q8c$i_F9![b9e\"h2qJ", objectArray0);
      jSONReaderScanner0.stringVal();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.subString(66, (-821));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -821
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      char char0 = Locale.PRIVATE_USE_EXTENSION;
      Object[] objectArray0 = new Object[3];
      Object object0 = new Object();
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("\"");
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.isBlankInput();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ", fieldName ");
      char[] charArray0 = new char[8];
      charArray0[0] = 'v';
      charArray0[1] = '!';
      charArray0[2] = 'J';
      charArray0[3] = '0';
      charArray0[4] = 'X';
      charArray0[5] = 'F';
      charArray0[6] = '0';
      charArray0[7] = '?';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 16384, 16384);
      jSONReaderScanner0.next();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.numberString();
      jSONReaderScanner0.bytesValue();
      Object object0 = new Object();
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(", fieldName ", 16384);
      jSONReaderScanner1.nextToken();
      jSONReaderScanner1.bytesValue();
      JSONReaderScanner jSONReaderScanner2 = new JSONReaderScanner("");
      jSONReaderScanner2.scanIdent();
      jSONReaderScanner2.numberString();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("com.alibaba.fastjson.parser.JSONReaderScanner");
      jSONReaderScanner0.scanIdent();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanIdent();
      char char0 = File.pathSeparatorChar;
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner("illegal s[at, extLength is zero", ':');
      jSONReaderScanner1.scanIdent();
      int int0 = Calendar.UNDECIMBER;
      jSONReaderScanner0.numberString();
      Locale locale0 = Locale.JAPAN;
      jSONReaderScanner1.scanDecimal(':');
      TimeZone.getTimeZone("illegal s[at, extLength is zero");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jSONReaderScanner1.subString(2, 2449);
      char[] charArray0 = new char[4];
      charArray0[0] = ':';
      charArray0[1] = ':';
      charArray0[2] = ':';
      jSONReaderScanner0.sbuf = charArray0;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "illegal s[at, extLength is zero");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      jSONReaderScanner1.close();
      jSONReaderScanner1.getTimeZone();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }
}
