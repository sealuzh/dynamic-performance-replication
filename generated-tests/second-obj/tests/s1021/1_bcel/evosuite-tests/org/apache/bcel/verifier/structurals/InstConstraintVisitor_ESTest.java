/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 07:52:21 GMT 2018
 */

package org.apache.bcel.verifier.structurals;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.OutputStream;
import java.lang.reflect.Array;
import java.util.regex.Pattern;
import org.apache.bcel.Constants;
import org.apache.bcel.classfile.Constant;
import org.apache.bcel.classfile.ConstantFieldref;
import org.apache.bcel.classfile.ConstantFloat;
import org.apache.bcel.classfile.ConstantInteger;
import org.apache.bcel.classfile.ConstantInterfaceMethodref;
import org.apache.bcel.classfile.ConstantMethodType;
import org.apache.bcel.classfile.ConstantMethodref;
import org.apache.bcel.classfile.ConstantNameAndType;
import org.apache.bcel.classfile.ConstantPool;
import org.apache.bcel.classfile.ConstantString;
import org.apache.bcel.classfile.ConstantUtf8;
import org.apache.bcel.classfile.Method;
import org.apache.bcel.generic.AALOAD;
import org.apache.bcel.generic.AASTORE;
import org.apache.bcel.generic.ACONST_NULL;
import org.apache.bcel.generic.ALOAD;
import org.apache.bcel.generic.ANEWARRAY;
import org.apache.bcel.generic.ARETURN;
import org.apache.bcel.generic.ARRAYLENGTH;
import org.apache.bcel.generic.ASTORE;
import org.apache.bcel.generic.ATHROW;
import org.apache.bcel.generic.BASTORE;
import org.apache.bcel.generic.BIPUSH;
import org.apache.bcel.generic.BREAKPOINT;
import org.apache.bcel.generic.BranchHandle;
import org.apache.bcel.generic.BranchInstruction;
import org.apache.bcel.generic.CALOAD;
import org.apache.bcel.generic.CHECKCAST;
import org.apache.bcel.generic.CompoundInstruction;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.D2F;
import org.apache.bcel.generic.D2I;
import org.apache.bcel.generic.D2L;
import org.apache.bcel.generic.DADD;
import org.apache.bcel.generic.DALOAD;
import org.apache.bcel.generic.DASTORE;
import org.apache.bcel.generic.DCMPG;
import org.apache.bcel.generic.DCMPL;
import org.apache.bcel.generic.DCONST;
import org.apache.bcel.generic.DDIV;
import org.apache.bcel.generic.DLOAD;
import org.apache.bcel.generic.DMUL;
import org.apache.bcel.generic.DNEG;
import org.apache.bcel.generic.DREM;
import org.apache.bcel.generic.DRETURN;
import org.apache.bcel.generic.DSTORE;
import org.apache.bcel.generic.DSUB;
import org.apache.bcel.generic.DUP;
import org.apache.bcel.generic.DUP2;
import org.apache.bcel.generic.DUP2_X1;
import org.apache.bcel.generic.DUP2_X2;
import org.apache.bcel.generic.DUP_X1;
import org.apache.bcel.generic.DUP_X2;
import org.apache.bcel.generic.F2D;
import org.apache.bcel.generic.F2I;
import org.apache.bcel.generic.F2L;
import org.apache.bcel.generic.FADD;
import org.apache.bcel.generic.FASTORE;
import org.apache.bcel.generic.FCMPG;
import org.apache.bcel.generic.FCMPL;
import org.apache.bcel.generic.FCONST;
import org.apache.bcel.generic.FDIV;
import org.apache.bcel.generic.FLOAD;
import org.apache.bcel.generic.FMUL;
import org.apache.bcel.generic.FNEG;
import org.apache.bcel.generic.FREM;
import org.apache.bcel.generic.FRETURN;
import org.apache.bcel.generic.FSTORE;
import org.apache.bcel.generic.FSUB;
import org.apache.bcel.generic.GETFIELD;
import org.apache.bcel.generic.GETSTATIC;
import org.apache.bcel.generic.GOTO;
import org.apache.bcel.generic.GOTO_W;
import org.apache.bcel.generic.I2B;
import org.apache.bcel.generic.I2C;
import org.apache.bcel.generic.I2D;
import org.apache.bcel.generic.I2F;
import org.apache.bcel.generic.I2L;
import org.apache.bcel.generic.I2S;
import org.apache.bcel.generic.IADD;
import org.apache.bcel.generic.IAND;
import org.apache.bcel.generic.IASTORE;
import org.apache.bcel.generic.ICONST;
import org.apache.bcel.generic.IDIV;
import org.apache.bcel.generic.IFEQ;
import org.apache.bcel.generic.IFGE;
import org.apache.bcel.generic.IFGT;
import org.apache.bcel.generic.IFLT;
import org.apache.bcel.generic.IFNE;
import org.apache.bcel.generic.IFNULL;
import org.apache.bcel.generic.IF_ICMPEQ;
import org.apache.bcel.generic.IF_ICMPGE;
import org.apache.bcel.generic.IF_ICMPLT;
import org.apache.bcel.generic.IF_ICMPNE;
import org.apache.bcel.generic.IINC;
import org.apache.bcel.generic.ILOAD;
import org.apache.bcel.generic.IMPDEP1;
import org.apache.bcel.generic.IMPDEP2;
import org.apache.bcel.generic.IMUL;
import org.apache.bcel.generic.INEG;
import org.apache.bcel.generic.INSTANCEOF;
import org.apache.bcel.generic.INVOKEDYNAMIC;
import org.apache.bcel.generic.INVOKEINTERFACE;
import org.apache.bcel.generic.INVOKESPECIAL;
import org.apache.bcel.generic.INVOKESTATIC;
import org.apache.bcel.generic.IOR;
import org.apache.bcel.generic.IREM;
import org.apache.bcel.generic.IRETURN;
import org.apache.bcel.generic.ISHL;
import org.apache.bcel.generic.ISHR;
import org.apache.bcel.generic.ISTORE;
import org.apache.bcel.generic.ISUB;
import org.apache.bcel.generic.IUSHR;
import org.apache.bcel.generic.IXOR;
import org.apache.bcel.generic.IfInstruction;
import org.apache.bcel.generic.Instruction;
import org.apache.bcel.generic.InstructionConstants;
import org.apache.bcel.generic.InstructionHandle;
import org.apache.bcel.generic.InstructionList;
import org.apache.bcel.generic.JSR;
import org.apache.bcel.generic.JSR_W;
import org.apache.bcel.generic.L2D;
import org.apache.bcel.generic.L2F;
import org.apache.bcel.generic.L2I;
import org.apache.bcel.generic.LADD;
import org.apache.bcel.generic.LAND;
import org.apache.bcel.generic.LASTORE;
import org.apache.bcel.generic.LCMP;
import org.apache.bcel.generic.LCONST;
import org.apache.bcel.generic.LDC2_W;
import org.apache.bcel.generic.LDC_W;
import org.apache.bcel.generic.LDIV;
import org.apache.bcel.generic.LLOAD;
import org.apache.bcel.generic.LMUL;
import org.apache.bcel.generic.LNEG;
import org.apache.bcel.generic.LOR;
import org.apache.bcel.generic.LREM;
import org.apache.bcel.generic.LRETURN;
import org.apache.bcel.generic.LSHL;
import org.apache.bcel.generic.LSHR;
import org.apache.bcel.generic.LSTORE;
import org.apache.bcel.generic.LSUB;
import org.apache.bcel.generic.LUSHR;
import org.apache.bcel.generic.LXOR;
import org.apache.bcel.generic.MONITORENTER;
import org.apache.bcel.generic.MONITOREXIT;
import org.apache.bcel.generic.MULTIANEWARRAY;
import org.apache.bcel.generic.MethodGen;
import org.apache.bcel.generic.NEW;
import org.apache.bcel.generic.NEWARRAY;
import org.apache.bcel.generic.NOP;
import org.apache.bcel.generic.ObjectType;
import org.apache.bcel.generic.POP;
import org.apache.bcel.generic.POP2;
import org.apache.bcel.generic.PUSH;
import org.apache.bcel.generic.PUTFIELD;
import org.apache.bcel.generic.PUTSTATIC;
import org.apache.bcel.generic.RET;
import org.apache.bcel.generic.SALOAD;
import org.apache.bcel.generic.SASTORE;
import org.apache.bcel.generic.SIPUSH;
import org.apache.bcel.generic.SWAP;
import org.apache.bcel.generic.StackInstruction;
import org.apache.bcel.generic.TABLESWITCH;
import org.apache.bcel.generic.Type;
import org.apache.bcel.util.BCELComparator;
import org.apache.bcel.util.ByteSequence;
import org.apache.bcel.verifier.structurals.Frame;
import org.apache.bcel.verifier.structurals.InstConstraintVisitor;
import org.apache.bcel.verifier.structurals.LocalVariables;
import org.apache.bcel.verifier.structurals.OperandStack;
import org.apache.bcel.verifier.structurals.UninitializedObjectType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InstConstraintVisitor_ESTest extends InstConstraintVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEDYNAMIC((INVOKEDYNAMIC) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INVOKEDYNAMIC instruction is not supported at this time
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IMPDEP1 iMPDEP1_0 = new IMPDEP1();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMPDEP1(iMPDEP1_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as IMPDEP1.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LLOAD lLOAD0 = new LLOAD(182);
      instConstraintVisitor0.visitLLOAD(lLOAD0);
      assertEquals(182, lLOAD0.getIndex());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(10, 782);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEINTERFACE(iNVOKEINTERFACE0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IMPDEP2 iMPDEP2_0 = new IMPDEP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMPDEP2(iMPDEP2_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as IMPDEP2.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStackInstruction((StackInstruction) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IREM iREM0 = new IREM();
      // Undeclared exception!
      try { 
        iREM0.accept(instConstraintVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitBREAKPOINT(bREAKPOINT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as BREAKPOINT.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BIPUSH bIPUSH0 = new BIPUSH((byte) (-3));
      instConstraintVisitor0.visitBIPUSH(bIPUSH0);
      assertEquals(2, bIPUSH0.getLength());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ILOAD iLOAD0 = new ILOAD(67);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      instConstraintVisitor0.visitGOTO((GOTO) null);
      FSTORE fSTORE0 = new FSTORE(67);
      instConstraintVisitor0.visitFSTORE(fSTORE0);
      D2I d2I0 = new D2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2I(d2I0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LSTORE lSTORE0 = new LSTORE(178);
      instConstraintVisitor0.visitLSTORE(lSTORE0);
      assertEquals(2, lSTORE0.getLength());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DLOAD dLOAD0 = new DLOAD(55);
      instConstraintVisitor0.visitDLOAD(dLOAD0);
      assertEquals(2, dLOAD0.getLength());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FLOAD fLOAD0 = new FLOAD(3016);
      instConstraintVisitor0.visitFLOAD(fLOAD0);
      instConstraintVisitor0.setMethodGen((MethodGen) null);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ALOAD aLOAD0 = new ALOAD(3);
      instConstraintVisitor0.visitALOAD(aLOAD0);
      DASTORE dASTORE0 = new DASTORE();
      DUP2_X1 dUP2_X1_0 = new DUP2_X1();
      assertEquals("dup2_x1", dUP2_X1_0.getName());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      CALOAD cALOAD0 = new CALOAD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCALOAD(cALOAD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ARETURN aRETURN0 = new ARETURN();
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY((byte)64);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCPInstruction(aNEWARRAY0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DSTORE dSTORE0 = new DSTORE(212);
      instConstraintVisitor0.visitDSTORE(dSTORE0);
      assertEquals("dstore", dSTORE0.getName());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GETSTATIC gETSTATIC0 = new GETSTATIC(76);
      instConstraintVisitor0.visitGETSTATIC(gETSTATIC0);
      assertEquals("getstatic", gETSTATIC0.getName());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FCONST fCONST0 = new FCONST(0.0F);
      instConstraintVisitor0.visitFCONST(fCONST0);
      assertEquals(1, fCONST0.getLength());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      D2L d2L0 = new D2L();
      InstructionList instructionList0 = new InstructionList();
      instructionList0.getEnd();
      String string0 = Constants.ILLEGAL_OPCODE;
      DADD dADD0 = new DADD();
      GOTO_W gOTO_W0 = new GOTO_W((InstructionHandle) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitGOTO_W(gOTO_W0);
      assertEquals("goto_w", gOTO_W0.getName());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ICONST iCONST0 = new ICONST(0);
      instConstraintVisitor0.visitICONST(iCONST0);
      assertEquals("iconst_0", iCONST0.getName());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(2642, 2642);
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ISTORE iSTORE0 = new ISTORE(2642);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStoreInstruction(iSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISTORE constraint violated: Cannot STORE: Stack to read from is empty.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantString constantString0 = new ConstantString(234);
      Frame frame0 = new Frame(234, 234);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      IMUL iMUL0 = new IMUL();
      String string0 = Constants.CONSTRUCTOR_NAME;
      IMUL iMUL1 = new IMUL();
      IINC iINC0 = new IINC(234, 234);
      iINC0.toString(true);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIINC(iINC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IINC constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      DUP2_X2 dUP2_X2_0 = new DUP2_X2();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitDCONST((DCONST) null);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      I2C i2C0 = new I2C();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitLCONST((LCONST) null);
      FCMPG fCMPG0 = new FCMPG();
      FCMPG fCMPG1 = new FCMPG();
      DNEG dNEG0 = new DNEG();
      ConstantPool constantPool0 = new ConstantPool((Constant[]) null);
      dNEG0.toString(constantPool0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDNEG(dNEG0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ISHL iSHL0 = new ISHL();
      FCMPG fCMPG0 = new FCMPG();
      DUP_X2 dUP_X2_0 = new DUP_X2();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitTABLESWITCH((TABLESWITCH) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      JSR jSR0 = new JSR((InstructionHandle) null);
      instConstraintVisitor0.visitJSR(jSR0);
      assertEquals(0, jSR0.getIndex());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3459, objectType0);
      Frame.getThis();
      operandStack0.initializeObject((UninitializedObjectType) null);
      OperandStack operandStack1 = new OperandStack((-800));
      LocalVariables localVariables0 = new LocalVariables(3459);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack2 = new OperandStack((-800));
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      localVariables0.toString();
      localVariables0.getClone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      D2I d2I0 = new D2I();
      DALOAD dALOAD0 = new DALOAD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDALOAD(dALOAD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DALOAD constraint violated: The 'index' is not of type int but of type ~,z(5.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      Frame frame0 = new Frame(166, 560);
      Frame frame1 = frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      IMUL iMUL0 = new IMUL();
      String string0 = Constants.CONSTRUCTOR_NAME;
      IINC iINC0 = new IINC(56, 2675);
      iINC0.toString(true);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIINC(iINC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IINC constraint violated: The 'index' is not of type int but of type <unknown object>.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(2);
      OperandStack operandStack0 = new OperandStack(2);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      NOP nOP0 = new NOP();
      instConstraintVisitor0.visitNOP(nOP0);
      FADD fADD0 = (FADD)InstructionConstants.FADD;
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStackConsumer(fADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FADD constraint violated: Cannot consume 2 stack slots: only 0 slot(s) left on stack!
         // Stack:
         // Slots used: 0 MaxStack: 2.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FMUL fMUL0 = new FMUL();
      ISHL iSHL0 = new ISHL();
      short short0 = Constants.LCONST_1;
      LocalVariables localVariables0 = new LocalVariables((short)10);
      ObjectType objectType0 = new ObjectType("Tf~Vd5KhF@0");
      OperandStack operandStack0 = new OperandStack((short)10, objectType0);
      OperandStack operandStack1 = new OperandStack((short)10, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.toString();
      objectType0.toString();
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      frame0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.clone();
      INVOKESPECIAL iNVOKESPECIAL0 = new INVOKESPECIAL((short)10);
      FSTORE fSTORE0 = new FSTORE((short)10);
      // Undeclared exception!
      try { 
        fSTORE0.accept(instConstraintVisitor0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FSTORE constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3421, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3421);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.toString();
      localVariables0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      NEWARRAY nEWARRAY0 = new NEWARRAY((byte) (-53));
      nEWARRAY0.copy();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitNEWARRAY(nEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction NEWARRAY constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("N!~,z(5");
      OperandStack operandStack0 = new OperandStack(3455, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3455);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.clone();
      String string0 = Constants.ILLEGAL_TYPE;
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      FNEG fNEG0 = new FNEG();
      D2F d2F0 = new D2F();
      instConstraintVisitor0.setFrame(frame0);
      byte[] byteArray0 = new byte[1];
      d2F0.toString();
      byteArray0[0] = (byte) (-52);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2F(d2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction D2F constraint violated: The value at the stack top is not of type 'double', but of type 'N!~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(18);
      ObjectType objectType0 = new ObjectType("");
      ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(18, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.toString();
      OperandStack operandStack1 = new OperandStack(18);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      ISUB iSUB0 = new ISUB();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      constantPoolGen0.addUtf8("0: <unknown object>\n1: <unknown object>\n2: <unknown object>\n3: <unknown object>\n4: <unknown object>\n5: <unknown object>\n6: <unknown object>\n7: <unknown object>\n8: <unknown object>\n9: <unknown object>\n10: <unknown object>\n11: <unknown object>\n12: <unknown object>\n13: <unknown object>\n14: <unknown object>\n15: <unknown object>\n16: <unknown object>\n17: <unknown object>\n");
      LOR lOR0 = new LOR();
      lOR0.toString();
      IAND iAND0 = new IAND();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIAND(iAND0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IAND constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("N!~,z(5");
      OperandStack operandStack0 = new OperandStack(3455, objectType0);
      int int0 = 111;
      LocalVariables localVariables0 = new LocalVariables(111);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.getClone();
      frame0.clone();
      localVariables0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      frame0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "N!~,z(5");
      instConstraintVisitor0.setFrame(frame0);
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(1);
      DUP2_X1 dUP2_X1_0 = new DUP2_X1();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2_X1(dUP2_X1_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FMUL fMUL0 = new FMUL();
      ISHL iSHL0 = new ISHL();
      short short0 = Constants.LCONST_1;
      LocalVariables localVariables0 = new LocalVariables((short)10);
      ObjectType objectType0 = new ObjectType("Tf~Vd5KhF@0");
      OperandStack operandStack0 = new OperandStack((short)10, objectType0);
      OperandStack operandStack1 = new OperandStack((short)10, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.toString();
      objectType0.toString();
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      frame0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LOR lOR0 = new LOR();
      IOR iOR0 = new IOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIOR(iOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IOR constraint violated: The value at the stack top is not of type 'int', but of type 'Tf~Vd5KhF@0'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("~P#:,>_");
      OperandStack operandStack0 = new OperandStack(3368, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3368);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~P#:,>_");
      LocalVariables localVariables1 = new LocalVariables(1461);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ConstantInterfaceMethodref constantInterfaceMethodref0 = new ConstantInterfaceMethodref(0, 1461);
      LOR lOR0 = new LOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLOR(lOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LOR constraint violated: The value at the stack top is not of type 'long', but of type '~P#:,>_'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      AALOAD aALOAD0 = new AALOAD();
      IRETURN iRETURN0 = new IRETURN();
      ObjectType objectType0 = new ObjectType("UQTf~Vd1F@0");
      OperandStack operandStack0 = new OperandStack(202, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables((byte)2);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.toString();
      operandStack0.getClone();
      localVariables0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ISTORE iSTORE0 = new ISTORE((byte)2);
      frame0.clone();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      frame0.toString();
      DADD dADD0 = new DADD();
      FSUB fSUB0 = new FSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFSUB(fSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FSUB constraint violated: The value at the stack top is not of type 'float', but of type 'UQTf~Vd1F@0'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      DADD dADD0 = new DADD();
      LocalVariables localVariables0 = new LocalVariables(35);
      IMUL iMUL0 = new IMUL();
      ObjectType objectType0 = new ObjectType("0n&$[31$R");
      OperandStack operandStack0 = new OperandStack(35, objectType0);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      operandStack0.toString();
      operandStack0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      ISUB iSUB0 = new ISUB();
      IOR iOR0 = new IOR();
      I2S i2S0 = new I2S();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2S(i2S0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2S constraint violated: The value at the stack top is not of type 'int', but of type '0n&$[31$R'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      AALOAD aALOAD0 = new AALOAD();
      IRETURN iRETURN0 = new IRETURN();
      IRETURN iRETURN1 = new IRETURN();
      iRETURN0.toString(false);
      FMUL fMUL0 = new FMUL();
      ISHL iSHL0 = new ISHL();
      ISUB iSUB0 = new ISUB();
      short short0 = Constants.LCONST_1;
      LocalVariables localVariables0 = new LocalVariables((short)10);
      ObjectType objectType0 = new ObjectType("Tf~Vd1F@0");
      OperandStack operandStack0 = new OperandStack(202, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.toString();
      localVariables0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      SALOAD sALOAD0 = new SALOAD();
      F2I f2I0 = new F2I();
      int int0 = Character.BYTES;
      DADD dADD0 = new DADD();
      I2F i2F0 = new I2F();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2F(i2F0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2F constraint violated: The value at the stack top is not of type 'int', but of type 'Tf~Vd1F@0'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(18);
      IMUL iMUL0 = new IMUL();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.toString();
      OperandStack operandStack1 = new OperandStack(18);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      ISUB iSUB0 = new ISUB();
      IOR iOR0 = new IOR();
      FCMPG fCMPG0 = new FCMPG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPG(fCMPG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FCMPG constraint violated: The value at the stack top is not of type 'float', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(18);
      ObjectType objectType0 = new ObjectType("Tf~Vd1F@0");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      OperandStack operandStack1 = new OperandStack(3458);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      OperandStack operandStack2 = new OperandStack(3458, objectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      DCMPL dCMPL0 = new DCMPL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDCMPL(dCMPL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DCMPL constraint violated: The value at the stack top is not of type 'double', but of type 'Tf~Vd1F@0'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      AALOAD aALOAD0 = new AALOAD();
      IRETURN iRETURN0 = new IRETURN();
      String string0 = File.pathSeparator;
      ISHL iSHL0 = new ISHL();
      ISUB iSUB0 = new ISUB();
      short short0 = Constants.LCONST_1;
      LocalVariables localVariables0 = new LocalVariables((short)10);
      ObjectType objectType0 = new ObjectType(":");
      OperandStack operandStack0 = new OperandStack((short)10, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      FMUL fMUL0 = new FMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFMUL(fMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FMUL constraint violated: The value at the stack top is not of type 'float', but of type ':'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConstantInterfaceMethodref constantInterfaceMethodref0 = new ConstantInterfaceMethodref(3458, 3458);
      ConstantInteger constantInteger0 = new ConstantInteger(3458);
      ConstantMethodType constantMethodType0 = new ConstantMethodType(3458);
      constantMethodType0.clone();
      ConstantMethodType constantMethodType1 = new ConstantMethodType(constantMethodType0);
      ConstantFieldref constantFieldref0 = new ConstantFieldref(45, 3458);
      ConstantFloat constantFloat0 = new ConstantFloat(45);
      BCELComparator bCELComparator0 = Method.getComparator();
      Constant.setComparator(bCELComparator0);
      ConstantFloat constantFloat1 = new ConstantFloat(constantFloat0);
      LocalVariables localVariables0 = new LocalVariables(3458);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      POP2 pOP2_0 = new POP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitPOP2(pOP2_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction POP2 constraint violated: Stack top size should be 2 but stack top is '' of size '1'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitJSR_W((JSR_W) null);
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3443, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3443);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      OperandStack operandStack1 = new OperandStack(3443);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      IFGE iFGE0 = new IFGE((InstructionHandle) null);
      iFGE0.negate();
      IMPDEP2 iMPDEP2_0 = new IMPDEP2();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      SIPUSH sIPUSH0 = new SIPUSH((short)1647);
      instConstraintVisitor0.visitSIPUSH(sIPUSH0);
      int int0 = 2084;
      IADD iADD0 = new IADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIADD(iADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IADD constraint violated: The value at the stack top is not of type 'int', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      OperandStack operandStack1 = new OperandStack((-800));
      LocalVariables localVariables0 = new LocalVariables(3458);
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      OperandStack operandStack2 = new OperandStack((-800));
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)59;
      byteArray0[7] = (byte)59;
      instConstraintVisitor0.visitGOTO((GOTO) null);
      FSTORE fSTORE0 = new FSTORE(1670);
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF((byte)59);
      iNSTANCEOF0.toString(false);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINSTANCEOF(iNSTANCEOF0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(18);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("Tf~Vd1F@0");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      OperandStack operandStack1 = new OperandStack(3458);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.equals((Object) null);
      OperandStack operandStack2 = new OperandStack(3458);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      LSHL lSHL0 = new LSHL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHL(lSHL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSHL constraint violated: The value at the stack top is not of type 'int', but of type 'Tf~Vd1F@0'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FMUL fMUL0 = new FMUL();
      ISHL iSHL0 = new ISHL();
      short short0 = Constants.LCONST_1;
      LocalVariables localVariables0 = new LocalVariables((short)10);
      ObjectType objectType0 = new ObjectType("Tf~Vd5KhF@0");
      ObjectType objectType1 = new ObjectType("Tf~Vd5KhF@0");
      OperandStack operandStack0 = new OperandStack((short)10, objectType0);
      OperandStack operandStack1 = new OperandStack((short)10, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      objectType0.toString();
      Frame.getThis();
      frame0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      frame1.equals((Object) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      I2B i2B0 = new I2B();
      D2L d2L0 = new D2L();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2L(d2L0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction D2L constraint violated: The value at the stack top is not of type 'double', but of type 'Tf~Vd5KhF@0'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(18);
      IMUL iMUL0 = new IMUL();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.toString();
      localVariables0.getClone();
      OperandStack operandStack1 = new OperandStack((-2976));
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      ISUB iSUB0 = new ISUB();
      IOR iOR0 = new IOR();
      FCMPG fCMPG0 = new FCMPG();
      DREM dREM0 = new DREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDREM(dREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DREM constraint violated: The value at the stack top is not of type 'double', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = 31;
      LocalVariables localVariables0 = new LocalVariables(31);
      Boolean boolean0 = new Boolean(false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("m");
      OperandStack operandStack0 = new OperandStack(31, objectType0);
      OperandStack operandStack1 = new OperandStack(31);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Class<NEWARRAY> class0 = NEWARRAY.class;
      Type.getType(class0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      Frame.setThis(uninitializedObjectType0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MULTIANEWARRAY mULTIANEWARRAY0 = new MULTIANEWARRAY((short)1, (short)1);
      I2D i2D0 = new I2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPGE((IF_ICMPGE) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      IRETURN iRETURN0 = new IRETURN();
      IRETURN iRETURN1 = new IRETURN();
      iRETURN0.toString(true);
      FMUL fMUL0 = new FMUL();
      ISHL iSHL0 = new ISHL();
      ISUB iSUB0 = new ISUB();
      short short0 = Constants.IFGE;
      LocalVariables localVariables0 = new LocalVariables((short)156);
      ObjectType objectType0 = new ObjectType("ireturn[172](1)");
      OperandStack operandStack0 = new OperandStack((short)156, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)0;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitGETFIELD((GETFIELD) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(18);
      IMUL iMUL0 = new IMUL();
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.toString();
      OperandStack operandStack1 = new OperandStack((-2976));
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      IRETURN iRETURN0 = new IRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIRETURN(iRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IRETURN constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      IRETURN iRETURN0 = new IRETURN();
      iRETURN0.copy();
      IRETURN iRETURN1 = new IRETURN();
      FMUL fMUL0 = new FMUL();
      ISHL iSHL0 = new ISHL();
      ISUB iSUB0 = new ISUB();
      short short0 = Constants.LCONST_1;
      LocalVariables localVariables0 = new LocalVariables((short)10);
      ObjectType objectType0 = new ObjectType("Tf~Vd5F@0");
      OperandStack operandStack0 = new OperandStack(202, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.toString();
      localVariables0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.clone();
      ObjectType objectType1 = new ObjectType("6jV6U9GE5fp6W_@6_Q|");
      DRETURN dRETURN0 = new DRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDRETURN(dRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DRETURN constraint violated: The value at the stack top is not of type 'double', but of type 'Tf~Vd5F@0'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(18);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("Tf~Vd1F@0");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      OperandStack operandStack1 = new OperandStack(3458);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.equals((Object) null);
      OperandStack operandStack2 = new OperandStack(3458);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      LSHL lSHL0 = new LSHL();
      instConstraintVisitor0.visitFLOAD((FLOAD) null);
      POP pOP0 = new POP();
      instConstraintVisitor0.visitPOP(pOP0);
      DASTORE dASTORE0 = new DASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDASTORE(dASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DASTORE constraint violated: The value at the stack top is not of type 'double', but of type 'Tf~Vd1F@0'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      OperandStack operandStack1 = new OperandStack((-800));
      LocalVariables localVariables0 = new LocalVariables(3458);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      instConstraintVisitor0.setFrame(frame1);
      LNEG lNEG0 = new LNEG();
      ISUB iSUB0 = new ISUB();
      D2L d2L0 = new D2L();
      int int0 = Pattern.MULTILINE;
      BASTORE bASTORE0 = new BASTORE();
      FLOAD fLOAD0 = new FLOAD(3458);
      F2I f2I0 = new F2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2I(f2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2I constraint violated: The value at the stack top is not of type 'float', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(31);
      ObjectType objectType0 = new ObjectType("m");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      OperandStack operandStack1 = new OperandStack(3458);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Class<NEWARRAY> class0 = NEWARRAY.class;
      Type.getType(class0);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      ISUB iSUB0 = new ISUB();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      LSUB lSUB0 = new LSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSUB(lSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSUB constraint violated: The value at the stack top is not of type 'long', but of type 'm'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      AALOAD aALOAD0 = new AALOAD();
      IRETURN iRETURN0 = new IRETURN();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      IRETURN iRETURN1 = new IRETURN();
      iRETURN0.toString(true);
      ISHL iSHL0 = new ISHL();
      ISUB iSUB0 = new ISUB();
      Constant[] constantArray0 = new Constant[0];
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      short short0 = Constants.LCONST_1;
      LocalVariables localVariables0 = new LocalVariables((short)10);
      ObjectType objectType0 = new ObjectType("Tf~Vd1F@0");
      OperandStack operandStack0 = new OperandStack((short)10, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.toString();
      localVariables0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2L((I2L) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = 18;
      LocalVariables localVariables0 = new LocalVariables(18);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      OperandStack operandStack1 = new OperandStack(3458);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack2 = new OperandStack(3458);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LDIV lDIV0 = new LDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLDIV(lDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LDIV constraint violated: The value at the stack top is not of type 'long', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(18);
      IMUL iMUL0 = new IMUL();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack1 = new OperandStack(3458);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LDIV lDIV0 = new LDIV();
      F2D f2D0 = new F2D();
      f2D0.toString(false);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2D(f2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2D constraint violated: The value at the stack top is not of type 'float', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(18);
      IMUL iMUL0 = new IMUL();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      OperandStack operandStack1 = new OperandStack(3458, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      OperandStack operandStack2 = new OperandStack(18, objectType0);
      localVariables0.getClone();
      localVariables0.toString();
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      instConstraintVisitor1.setFrame(frame0);
      ISTORE iSTORE0 = new ISTORE(261);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      InstConstraintVisitor instConstraintVisitor2 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor1.visitDUP_X1((DUP_X1) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3443, objectType0);
      ObjectType.getInstance("~,z(5");
      OperandStack operandStack1 = new OperandStack((-820));
      LocalVariables localVariables0 = new LocalVariables(3443);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack2 = new OperandStack((-820));
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.toString();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SIPUSH sIPUSH0 = new SIPUSH((byte)69);
      instConstraintVisitor0.visitSIPUSH(sIPUSH0);
      FRETURN fRETURN0 = new FRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFRETURN(fRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FRETURN constraint violated: The value at the stack top is not of type 'float', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("N~,(5");
      OperandStack operandStack0 = new OperandStack(3443, objectType0);
      LocalVariables localVariables0 = new LocalVariables(1011);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      Boolean boolean0 = new Boolean("~,z(5");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-124);
      byteArray0[1] = (byte) (-124);
      byteArray0[2] = (byte) (-124);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      ISTORE iSTORE0 = new ISTORE(1011);
      FDIV fDIV0 = new FDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFDIV(fDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FDIV constraint violated: The value at the stack top is not of type 'float', but of type 'N~,(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(18);
      ObjectType objectType0 = new ObjectType("Tf~Vd1F@0");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      OperandStack operandStack1 = new OperandStack(3458);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.toString();
      OperandStack operandStack2 = new OperandStack(3458);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      IASTORE iASTORE0 = new IASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIASTORE(iASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IASTORE constraint violated: The value at the stack top is not of type 'int', but of type 'Tf~Vd1F@0'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3443, objectType0);
      OperandStack operandStack1 = new OperandStack((-820));
      LocalVariables localVariables0 = new LocalVariables(3443);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      SIPUSH sIPUSH0 = new SIPUSH((byte)78);
      instConstraintVisitor0.visitSIPUSH(sIPUSH0);
      ISTORE iSTORE0 = new ISTORE(3443);
      instConstraintVisitor0.visitISTORE(iSTORE0);
      I2B i2B0 = new I2B();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2B(i2B0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2B constraint violated: The value at the stack top is not of type 'int', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      operandStack0.toString();
      LocalVariables localVariables0 = new LocalVariables(3458);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      instConstraintVisitor0.setFrame(frame0);
      ConstantInterfaceMethodref constantInterfaceMethodref0 = new ConstantInterfaceMethodref(3458, 3458);
      ConstantInteger constantInteger0 = new ConstantInteger(3458);
      ObjectType objectType1 = new ObjectType("~,z(5");
      OperandStack operandStack1 = new OperandStack(46, objectType1);
      FRETURN fRETURN0 = new FRETURN();
      I2B i2B0 = new I2B();
      DSUB dSUB0 = new DSUB();
      DSUB dSUB1 = new DSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDSUB(dSUB1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DSUB constraint violated: The value at the stack top is not of type 'double', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType objectType0 = new ObjectType("~,z(5");
      ObjectType objectType1 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3479, objectType0);
      LocalVariables localVariables0 = new LocalVariables(882);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables1.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      localVariables1.toString();
      localVariables1.merge(localVariables0);
      frame0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LSUB lSUB0 = new LSUB();
      ALOAD aLOAD0 = new ALOAD(5);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLoadInstruction(aLOAD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ALOAD constraint violated: Read-Access on local variable 5 with unknown content.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3430, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3430);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      frame1.toString();
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      OperandStack operandStack1 = new OperandStack(158);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      LNEG lNEG0 = new LNEG();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)78;
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      LCMP lCMP0 = new LCMP();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLCMP(lCMP0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LCMP constraint violated: The value at the stack top is not of type 'long', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(18);
      IMUL iMUL0 = new IMUL();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      OperandStack operandStack1 = new OperandStack(3458);
      operandStack1.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      operandStack0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      instConstraintVisitor0.visitGOTO((GOTO) null);
      ATHROW aTHROW0 = new ATHROW();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitATHROW(aTHROW0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid class name 
         //
         verifyException("org.apache.bcel.util.MemorySensitiveClassPathRepository", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      operandStack0.toString();
      LocalVariables localVariables0 = new LocalVariables(3458);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      instConstraintVisitor0.setFrame(frame0);
      ConstantInterfaceMethodref constantInterfaceMethodref0 = new ConstantInterfaceMethodref(3458, 3458);
      ConstantInteger constantInteger0 = new ConstantInteger(3458);
      ConstantMethodType constantMethodType0 = new ConstantMethodType(3458);
      constantMethodType0.clone();
      ConstantMethodType constantMethodType1 = new ConstantMethodType(constantMethodType0);
      LDC2_W lDC2_W0 = new LDC2_W(3458);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-7);
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-34);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY((byte)50);
      ARETURN aRETURN0 = new ARETURN();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LREM lREM0 = new LREM();
      lREM0.getType(constantPoolGen0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLREM(lREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LREM constraint violated: The value at the stack top is not of type 'long', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      AALOAD aALOAD0 = new AALOAD();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      IRETURN iRETURN0 = new IRETURN();
      iRETURN0.copy();
      iRETURN0.toString(false);
      FMUL fMUL0 = new FMUL();
      ISHL iSHL0 = new ISHL();
      ISUB iSUB0 = new ISUB();
      Constant[] constantArray0 = new Constant[0];
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      short short0 = Constants.IFGE;
      LocalVariables localVariables0 = new LocalVariables((short)156);
      ObjectType objectType0 = new ObjectType("ireturn");
      OperandStack operandStack0 = new OperandStack((short)156, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-47);
      byteArray0[0] = (byte) (-1);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      frame0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen1 = new ConstantPoolGen();
      ISTORE iSTORE0 = new ISTORE(56);
      localVariables0.clone();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      IREM iREM0 = new IREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIREM(iREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IREM constraint violated: The value at the stack top is not of type 'int', but of type 'ireturn'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ISHL iSHL0 = new ISHL();
      short short0 = Constants.LCONST_1;
      LocalVariables localVariables0 = new LocalVariables((short)10);
      ObjectType objectType0 = new ObjectType("Tf~Vd5KhF@0");
      ObjectType.getInstance("Tf~Vd5KhF@0");
      OperandStack operandStack0 = new OperandStack((short)10, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      Frame.getThis();
      frame0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.clone();
      INVOKESPECIAL iNVOKESPECIAL0 = new INVOKESPECIAL((short)10);
      FSTORE fSTORE0 = new FSTORE((short)10);
      IXOR iXOR0 = new IXOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIXOR(iXOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IXOR constraint violated: The value at the stack top is not of type 'int', but of type 'Tf~Vd5KhF@0'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = ObjectType.getInstance("N~,(5");
      OperandStack operandStack0 = new OperandStack(3443, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables(232);
      LocalVariables localVariables1 = localVariables0.getClone();
      FileSystemHandling.shouldAllThrowIOExceptions();
      OperandStack operandStack2 = operandStack1.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack2);
      Frame.getThis();
      OperandStack operandStack3 = new OperandStack(754);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      I2D i2D0 = new I2D();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      i2D0.produceStack(constantPoolGen0);
      ILOAD iLOAD0 = new ILOAD(754);
      instConstraintVisitor0.visitILOAD(iLOAD0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2D(i2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2D constraint violated: The value at the stack top is not of type 'int', but of type 'N~,(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("UQTf~Vd1l~0");
      OperandStack operandStack0 = new OperandStack(216, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables((byte)2);
      LocalVariables localVariables1 = new LocalVariables((byte)2);
      Frame frame0 = new Frame(localVariables1, operandStack1);
      OperandStack operandStack2 = new OperandStack(125);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables2 = localVariables0.getClone();
      localVariables2.toString();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte) (-38);
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      localVariables2.toString();
      DUP dUP0 = new DUP();
      instConstraintVisitor0.visitDUP(dUP0);
      ILOAD iLOAD0 = null;
      try {
        iLOAD0 = new ILOAD((byte) (-38));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Illegal value: -38
         //
         verifyException("org.apache.bcel.generic.LocalVariableInstruction", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(18);
      IMUL iMUL0 = new IMUL();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables1 = new LocalVariables(170);
      ObjectType objectType0 = ObjectType.getInstance("pop");
      OperandStack operandStack0 = new OperandStack(46, objectType0);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LSHR lSHR0 = new LSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHR(lSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSHR constraint violated: The value at the stack top is not of type 'int', but of type 'pop'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      OperandStack operandStack1 = new OperandStack((-800));
      LocalVariables localVariables0 = new LocalVariables(3458);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.toString();
      OperandStack operandStack2 = new OperandStack((-800));
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      LNEG lNEG0 = new LNEG();
      byte[] byteArray0 = new byte[9];
      byteArray0[2] = (byte)107;
      byteArray0[3] = (byte)101;
      DUP_X2 dUP_X2_0 = new DUP_X2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP_X2(dUP_X2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("~P#:,>_");
      OperandStack operandStack0 = new OperandStack(3368, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3368);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~P#:,>_");
      LocalVariables localVariables1 = new LocalVariables(1461);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ConstantInterfaceMethodref constantInterfaceMethodref0 = new ConstantInterfaceMethodref(0, 1461);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLNEG((LNEG) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(56);
      ObjectType objectType0 = ObjectType.getInstance("Tf~Vd1F@0");
      LocalVariables localVariables1 = (LocalVariables)localVariables0.clone();
      OperandStack operandStack0 = new OperandStack(5, objectType0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Tf~Vd1F@0");
      OperandStack operandStack1 = new OperandStack(56);
      LocalVariables localVariables2 = localVariables1.getClone();
      Frame frame0 = new Frame(localVariables2, operandStack0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      frame0.clone();
      IASTORE iASTORE0 = new IASTORE();
      OperandStack operandStack2 = new OperandStack(3052);
      Frame.getThis();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Tf~Vd1F@0");
      ILOAD iLOAD0 = new ILOAD(1474);
      instConstraintVisitor0.visitILOAD(iLOAD0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCHECKCAST((CHECKCAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3443, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3443);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      OperandStack operandStack1 = new OperandStack(158);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ISTORE iSTORE0 = new ISTORE(158);
      InstructionList instructionList0 = new InstructionList(iSTORE0);
      IFGE iFGE0 = new IFGE((InstructionHandle) null);
      IfInstruction ifInstruction0 = iFGE0.negate();
      instructionList0.insert((BranchInstruction) ifInstruction0);
      BranchHandle branchHandle0 = instructionList0.append((BranchInstruction) iFGE0);
      IF_ICMPEQ iF_ICMPEQ0 = new IF_ICMPEQ(branchHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPEQ(iF_ICMPEQ0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPEQ constraint violated: The value at the stack top is not of type 'int', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      OperandStack operandStack1 = new OperandStack(3458);
      LocalVariables localVariables0 = new LocalVariables(3458);
      Frame frame0 = new Frame(3458, 3458);
      localVariables0.toString();
      OperandStack operandStack2 = new OperandStack(3458);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      LNEG lNEG0 = new LNEG();
      LMUL lMUL0 = new LMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLMUL(lMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LMUL constraint violated: The value at the stack top is not of type 'long', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3430, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3430);
      ObjectType objectType1 = new ObjectType("Tf~Vd5KhF@0");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);
      OperandStack operandStack1 = new OperandStack(514, objectType0);
      OperandStack operandStack2 = new OperandStack(3430, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.toString();
      objectType1.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.clone();
      INVOKESPECIAL iNVOKESPECIAL0 = new INVOKESPECIAL(3430);
      FSTORE fSTORE0 = new FSTORE(1851);
      // Undeclared exception!
      try { 
        fSTORE0.accept(instConstraintVisitor0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FSTORE constraint violated: Stack top type and STOREing Instruction type mismatch: Stack top: '~,z(5'; Instruction type: 'float'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("N!~,z(5");
      OperandStack operandStack0 = new OperandStack(3455, objectType0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      OperandStack operandStack1 = new OperandStack(2);
      LocalVariables localVariables0 = new LocalVariables(10);
      localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      IASTORE iASTORE0 = new IASTORE();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame1);
      localVariables0.clone();
      Constant[] constantArray0 = new Constant[1];
      ConstantNameAndType constantNameAndType0 = new ConstantNameAndType(2, 3455);
      ConstantNameAndType constantNameAndType1 = new ConstantNameAndType(constantNameAndType0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      Boolean boolean0 = new Boolean("N!~,z(5");
      PUSH pUSH0 = new PUSH(constantPoolGen0, boolean0);
      InstructionList instructionList0 = new InstructionList();
      InstructionHandle instructionHandle0 = instructionList0.insert((Instruction) iASTORE0);
      IFNE iFNE0 = new IFNE(instructionHandle0);
      IFNE iFNE1 = new IFNE(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFNE(iFNE1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFNE constraint violated: The value at the stack top is not of type 'int', but of type 'N!~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ObjectType objectType0 = ObjectType.getInstance("UQTf~Vd1l~0");
      OperandStack operandStack0 = new OperandStack(216, objectType0);
      OperandStack operandStack1 = new OperandStack((byte)2, objectType0);
      LocalVariables localVariables0 = new LocalVariables((byte)2);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack1);
      OperandStack operandStack2 = new OperandStack(202);
      Boolean boolean0 = new Boolean("UQTf~Vd1l~0");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = Constants.CONSTRUCTOR_NAME;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)46;
      byteArray0[1] = (byte) (-38);
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      DADD dADD0 = new DADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDADD(dADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DADD constraint violated: The value at the stack top is not of type 'double', but of type 'UQTf~Vd1l~0'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("~,z(5");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      OperandStack operandStack0 = new OperandStack(3443, objectType0);
      OperandStack operandStack1 = new OperandStack((-800));
      LocalVariables localVariables0 = new LocalVariables(3443);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      OperandStack operandStack2 = new OperandStack((-800));
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      frame0.clone();
      DDIV dDIV0 = new DDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDDIV(dDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DDIV constraint violated: The value at the stack top is not of type 'double', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3459, objectType0);
      OperandStack operandStack1 = new OperandStack(3459);
      LocalVariables localVariables0 = new LocalVariables(3459);
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      localVariables0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ISUB iSUB0 = new ISUB();
      D2L d2L0 = new D2L();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "R");
      int int0 = Pattern.MULTILINE;
      BASTORE bASTORE0 = new BASTORE();
      ISHL iSHL0 = new ISHL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISHL(iSHL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISHL constraint violated: The value at the stack top is not of type 'int', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = 18;
      LocalVariables localVariables0 = new LocalVariables(18);
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      OperandStack operandStack1 = new OperandStack(3458);
      operandStack1.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack2 = new OperandStack(3458);
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      ISUB iSUB0 = new ISUB();
      OperandStack operandStack3 = new OperandStack(18, objectType0);
      DCMPG dCMPG0 = new DCMPG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDCMPG(dCMPG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DCMPG constraint violated: The value at the stack top is not of type 'double', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3447, objectType0);
      OperandStack operandStack1 = new OperandStack(3447);
      LocalVariables localVariables0 = new LocalVariables(3447);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      OperandStack operandStack2 = new OperandStack(3447);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      Frame.getThis();
      Class<FSTORE> class0 = FSTORE.class;
      Type.getType(class0);
      Frame.setThis((UninitializedObjectType) null);
      instConstraintVisitor0.setFrame(frame1);
      LNEG lNEG0 = new LNEG();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2F((L2F) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType objectType0 = new ObjectType("~,z(5");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      OperandStack operandStack0 = new OperandStack(3479, objectType0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      OperandStack operandStack1 = new OperandStack(3479);
      LocalVariables localVariables0 = new LocalVariables(3479);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.getClone();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~,z(5");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DNEG dNEG0 = new DNEG();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      dNEG0.getType(constantPoolGen0);
      SASTORE sASTORE0 = new SASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitSASTORE(sASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction SASTORE constraint violated: The value at the stack top is not of type 'int', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("N!~,z(5");
      OperandStack operandStack0 = new OperandStack(3455, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3455);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "sM?fH!}");
      operandStack0.equals((Object) null);
      localVariables0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      FNEG fNEG0 = new FNEG();
      INVOKEDYNAMIC iNVOKEDYNAMIC0 = new INVOKEDYNAMIC(3455);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      instConstraintVisitor0.visitInvokeInstruction(iNVOKEDYNAMIC0);
      LXOR lXOR0 = new LXOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLXOR(lXOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LXOR constraint violated: The value at the stack top is not of type 'long', but of type 'N!~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType objectType0 = new ObjectType("~,z(5");
      ObjectType objectType1 = new ObjectType("' not found in ");
      OperandStack operandStack0 = new OperandStack(3479, objectType0);
      LocalVariables localVariables0 = new LocalVariables(882);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables1.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Boolean boolean0 = new Boolean("' not found in ");
      localVariables1.merge(localVariables0);
      frame0.clone();
      OperandStack operandStack1 = new OperandStack(882, objectType0);
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte)70;
      ObjectType objectType2 = ObjectType.getInstance("' not found in ");
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType2);
      Frame.setThis(uninitializedObjectType0);
      Pattern.quote("D");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      DUP dUP0 = new DUP();
      ARRAYLENGTH aRRAYLENGTH0 = new ARRAYLENGTH();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitARRAYLENGTH(aRRAYLENGTH0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ARRAYLENGTH constraint violated: The 'arrayref' does not refer to an array but is of type ~,z(5.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3421, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3421);
      operandStack0.clone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      localVariables0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ConstantInterfaceMethodref constantInterfaceMethodref0 = new ConstantInterfaceMethodref(3421, (-800));
      ConstantMethodType constantMethodType0 = new ConstantMethodType(3421);
      instConstraintVisitor0.setFrame(frame0);
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(3421);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitANEWARRAY(aNEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ANEWARRAY constraint violated: The 'count' at the stack top is not of type 'int' but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      operandStack0.toString();
      LocalVariables localVariables0 = new LocalVariables(3458);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ConstantInterfaceMethodref constantInterfaceMethodref0 = new ConstantInterfaceMethodref(3458, 3458);
      ConstantInteger constantInteger0 = new ConstantInteger(3458);
      ConstantFieldref constantFieldref0 = new ConstantFieldref(45, 3458);
      ConstantFloat constantFloat0 = new ConstantFloat(45);
      ConstantFloat constantFloat1 = new ConstantFloat(constantFloat0);
      constantInteger0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "CONSTANT_Integer[3](bytes = 3458)");
      Constant[] constantArray0 = new Constant[2];
      constantArray0[1] = (Constant) constantInteger0;
      FLOAD fLOAD0 = new FLOAD(45);
      String string0 = Constants.CONSTRUCTOR_NAME;
      F2I f2I0 = new F2I();
      F2I f2I1 = new F2I();
      F2I f2I2 = new F2I();
      LASTORE lASTORE0 = new LASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLASTORE(lASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LASTORE constraint violated: The value at the stack top is not of type 'long', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3458);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.equals(fileSystemHandling0);
      LocalVariables localVariables1 = new LocalVariables(3458);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ConstantInteger constantInteger0 = new ConstantInteger(3458);
      ConstantMethodType constantMethodType0 = new ConstantMethodType(3458);
      ConstantMethodType constantMethodType1 = new ConstantMethodType(constantMethodType0);
      ConstantFieldref constantFieldref0 = new ConstantFieldref(45, 3458);
      ConstantFloat constantFloat0 = new ConstantFloat(45);
      localVariables0.toString();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Constant[] constantArray0 = new Constant[0];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      mONITOREXIT0.toString(constantPool0);
      MONITOREXIT mONITOREXIT1 = new MONITOREXIT();
      instConstraintVisitor0.visitMONITOREXIT(mONITOREXIT1);
      PUSH pUSH0 = new PUSH(constantPoolGen0, (long) 45);
      InstructionList instructionList0 = new InstructionList(pUSH0);
      InstructionList instructionList1 = pUSH0.getInstructionList();
      InstructionHandle instructionHandle0 = instructionList0.append(instructionList1);
      GOTO_W gOTO_W0 = new GOTO_W(instructionHandle0);
      InstructionList instructionList2 = new InstructionList(mONITOREXIT0);
      instructionList0.getStart();
      IF_ICMPNE iF_ICMPNE0 = new IF_ICMPNE(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPNE(iF_ICMPNE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPNE constraint violated: The value at the stack top is not of type 'int', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("~,z(5");
      OperandStack operandStack0 = new OperandStack(3443, objectType0);
      OperandStack operandStack1 = new OperandStack((-800));
      LocalVariables localVariables0 = new LocalVariables(3443);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      OperandStack operandStack2 = new OperandStack((-800));
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables1 = new LocalVariables(3443);
      localVariables0.merge(localVariables1);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      LNEG lNEG0 = new LNEG();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ISUB iSUB0 = new ISUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISUB(iSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISUB constraint violated: The value at the stack top is not of type 'int', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("~P#:,>_");
      OperandStack operandStack0 = new OperandStack(3368, objectType0);
      int int0 = 1461;
      LocalVariables localVariables0 = new LocalVariables(3368);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~P#:,>_");
      LocalVariables localVariables1 = new LocalVariables(1461);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      IMPDEP2 iMPDEP2_0 = new IMPDEP2();
      iMPDEP2_0.toString();
      ILOAD iLOAD0 = new ILOAD(3368);
      instConstraintVisitor0.visitILOAD(iLOAD0);
      byte[] byteArray0 = new byte[0];
      InstructionList instructionList0 = new InstructionList(byteArray0);
      InstructionHandle instructionHandle0 = instructionList0.insert((Instruction) iMPDEP2_0);
      IF_ICMPLT iF_ICMPLT0 = new IF_ICMPLT(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPLT(iF_ICMPLT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPLT constraint violated: The value at the stack top is not of type 'int', but of type '~P#:,>_'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("~,z(5");
      LocalVariables localVariables0 = new LocalVariables(2434);
      ObjectType objectType1 = ObjectType.getInstance("5<");
      OperandStack operandStack0 = new OperandStack(2434, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.toString();
      OperandStack operandStack1 = new OperandStack(2434, objectType1);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      L2D l2D0 = new L2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2D(l2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2D constraint violated: The value at the stack top is not of type 'long', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("~,z(5");
      ObjectType objectType1 = new ObjectType("' not found in ");
      OperandStack operandStack0 = new OperandStack(3479, objectType0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      OperandStack operandStack1 = new OperandStack((-32768));
      LocalVariables localVariables0 = new LocalVariables(3479);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "' not found in ");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MULTIANEWARRAY mULTIANEWARRAY0 = new MULTIANEWARRAY((short)1, (short)1);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitMULTIANEWARRAY(mULTIANEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction MULTIANEWARRAY constraint violated: The '1' upper stack types should be 'int' but aren't.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3443, objectType0);
      int int0 = (-820);
      LocalVariables localVariables0 = new LocalVariables(3443);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack1 = new OperandStack((-820));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~,z(5");
      operandStack0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.toString();
      Class<I2C>[] classArray0 = (Class<I2C>[]) Array.newInstance(Class.class, 1);
      Class<I2C> class0 = I2C.class;
      classArray0[0] = class0;
      Type.getTypes(classArray0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDNEG((DNEG) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("~,z(5");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      ObjectType objectType1 = new ObjectType("' not found in ");
      OperandStack operandStack0 = new OperandStack(3443, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3443);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack1 = new OperandStack(3443);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType1);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      ISUB iSUB0 = new ISUB();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)114;
      int int0 = Pattern.MULTILINE;
      UninitializedObjectType uninitializedObjectType1 = new UninitializedObjectType(uninitializedObjectType0.CLASS);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      RET rET0 = new RET(3364);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitRET(rET0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction RET constraint violated: Expecting a ReturnaddressType in local variable 3364.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("~P#:,>_");
      OperandStack operandStack0 = new OperandStack(3368, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3368);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "K6x}BG9#sb");
      LocalVariables localVariables1 = new LocalVariables(1435);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ConstantInterfaceMethodref constantInterfaceMethodref0 = new ConstantInterfaceMethodref(3368, 1435);
      ConstantFloat constantFloat0 = new ConstantFloat(0.75F);
      ConstantFloat constantFloat1 = new ConstantFloat(constantFloat0);
      Constant[] constantArray0 = new Constant[6];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      FADD fADD0 = new FADD();
      ASTORE aSTORE0 = new ASTORE(2182);
      instConstraintVisitor0.visitASTORE(aSTORE0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantPool0);
      FADD fADD1 = new FADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFADD(fADD1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FADD constraint violated: The value at the stack top is not of type 'float', but of type '~P#:,>_'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FMUL fMUL0 = new FMUL();
      ISHL iSHL0 = new ISHL();
      short short0 = Constants.LCONST_1;
      LocalVariables localVariables0 = new LocalVariables((short)10);
      ObjectType objectType0 = new ObjectType("Tf~Vd5KhF@0");
      OperandStack operandStack0 = new OperandStack((short)10, objectType0);
      OperandStack operandStack1 = new OperandStack((short)10, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      frame0.toString();
      objectType0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.clone();
      FSTORE fSTORE0 = new FSTORE(2965);
      LADD lADD0 = new LADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLADD(lADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LADD constraint violated: The value at the stack top is not of type 'long', but of type 'Tf~Vd5KhF@0'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = ObjectType.getInstance("~,z(5");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      LocalVariables localVariables0 = new LocalVariables(1150);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LSUB lSUB0 = new LSUB();
      LXOR lXOR0 = new LXOR();
      LXOR lXOR1 = new LXOR();
      LRETURN lRETURN0 = new LRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLRETURN(lRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LRETURN constraint violated: The value at the stack top is not of type 'long', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = ObjectType.getInstance("~,z(5");
      OperandStack operandStack0 = new OperandStack(3490, objectType0);
      LocalVariables localVariables0 = new LocalVariables(1150);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Pattern.quote("~,z(5");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LUSHR lUSHR0 = new LUSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLUSHR(lUSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LUSHR constraint violated: The value at the stack top is not of type 'int', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("~,z(5");
      ObjectType objectType1 = new ObjectType("' not found in ");
      OperandStack operandStack0 = new OperandStack(3443, objectType0);
      ObjectType.getInstance("' not found in ");
      LocalVariables localVariables0 = new LocalVariables(3443);
      LocalVariables localVariables1 = localVariables0.getClone();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      OperandStack operandStack1 = new OperandStack(3443);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType1);
      Frame.setThis(uninitializedObjectType0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      ISUB iSUB0 = new ISUB();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)108;
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      Instruction.readInstruction(byteSequence0);
      I2D i2D0 = new I2D();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      IUSHR iUSHR0 = new IUSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIUSHR(iUSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IUSHR constraint violated: The value at the stack top is not of type 'int', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("~,z(5");
      ObjectType objectType1 = new ObjectType("' not found in ");
      OperandStack operandStack0 = new OperandStack(3479, objectType0);
      OperandStack operandStack1 = new OperandStack((-32768));
      LocalVariables localVariables0 = new LocalVariables(3479);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "' not found in ");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      ISUB iSUB0 = new ISUB();
      I2D i2D0 = new I2D();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      i2D0.produceStack(constantPoolGen0);
      FREM fREM0 = new FREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFREM(fREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FREM constraint violated: The value at the stack top is not of type 'float', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("fnL@PJ4,IOHhU^");
      int int0 = 3459;
      OperandStack operandStack0 = new OperandStack(3459, objectType0);
      LocalVariables localVariables0 = new LocalVariables(2434);
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      localVariables0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      ISUB iSUB0 = new ISUB();
      D2L d2L0 = new D2L();
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      classLoader0.getParent();
      IFEQ iFEQ0 = new IFEQ((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFEQ(iFEQ0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFEQ constraint violated: The value at the stack top is not of type 'int', but of type 'fnL@PJ4,IOHhU^'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(18);
      IMUL iMUL0 = new IMUL();
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(3458, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.toString();
      OperandStack operandStack1 = new OperandStack(3458);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      IRETURN iRETURN0 = new IRETURN();
      DUP2_X2 dUP2_X2_0 = new DUP2_X2();
      DUP2_X2 dUP2_X2_1 = new DUP2_X2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2_X2(dUP2_X2_1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FMUL fMUL0 = new FMUL();
      ISHL iSHL0 = new ISHL();
      short short0 = Constants.LCONST_1;
      LocalVariables localVariables0 = new LocalVariables((short)10);
      ObjectType objectType0 = new ObjectType("Tf~Vd5KhF@0");
      Class<IF_ICMPEQ> class0 = IF_ICMPEQ.class;
      Type.getType(class0);
      OperandStack operandStack0 = new OperandStack((short)10, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      objectType0.toString();
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      frame0.toString();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.clone();
      INVOKESPECIAL iNVOKESPECIAL0 = new INVOKESPECIAL((short)10);
      FASTORE fASTORE0 = new FASTORE();
      FASTORE fASTORE1 = new FASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFASTORE(fASTORE1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FASTORE constraint violated: The value at the stack top is not of type 'float', but of type 'Tf~Vd5KhF@0'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3452, objectType0);
      operandStack0.toString();
      OperandStack operandStack1 = new OperandStack((-800));
      LocalVariables localVariables0 = new LocalVariables(3452);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      LNEG lNEG0 = new LNEG();
      I2C i2C0 = new I2C();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2C(i2C0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2C constraint violated: The value at the stack top is not of type 'int', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType objectType0 = new ObjectType("~,z(5");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~,z(5");
      OperandStack operandStack0 = new OperandStack(1, objectType0);
      LocalVariables localVariables0 = new LocalVariables(1);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      instConstraintVisitor0.visitGOTO((GOTO) null);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      PUSH pUSH0 = new PUSH(constantPoolGen0, false);
      InstructionList instructionList0 = pUSH0.getInstructionList();
      InstructionList instructionList1 = instructionList0.copy();
      instructionList1.append((CompoundInstruction) pUSH0);
      LAND lAND0 = new LAND();
      LAND lAND1 = new LAND();
      LAND lAND2 = new LAND();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLAND(lAND2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LAND constraint violated: The value at the stack top is not of type 'long', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      LocalVariables localVariables0 = new LocalVariables(521);
      ObjectType objectType0 = new ObjectType("Tf~Vd1F@0");
      LocalVariables localVariables1 = (LocalVariables)localVariables0.clone();
      OperandStack operandStack0 = new OperandStack(521, objectType0);
      OperandStack operandStack1 = new OperandStack(521);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      DUP2_X1 dUP2_X1_0 = new DUP2_X1();
      frame0.equals(dUP2_X1_0);
      localVariables0.toString();
      localVariables1.merge(localVariables1);
      Class<D2F> class0 = D2F.class;
      Type.getType(class0);
      Frame frame1 = (Frame)frame0.clone();
      IASTORE iASTORE0 = new IASTORE();
      OperandStack operandStack2 = new OperandStack(521);
      frame1.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      MONITORENTER mONITORENTER0 = new MONITORENTER();
      instConstraintVisitor0.visitMONITORENTER(mONITORENTER0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINEG((INEG) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("N!~,z(5");
      OperandStack operandStack0 = new OperandStack(3455, objectType0);
      LocalVariables localVariables0 = new LocalVariables(111);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack1 = new OperandStack(1);
      localVariables0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(1);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      FNEG fNEG0 = new FNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFNEG(fNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FNEG constraint violated: The value at the stack top is not of type 'float', but of type 'N!~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      AALOAD aALOAD0 = new AALOAD();
      ObjectType objectType0 = new ObjectType("UQTf~Vd1F@0");
      OperandStack operandStack0 = new OperandStack(216, objectType0);
      operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables((byte)2);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack1 = new OperandStack((byte)2);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.toString();
      DMUL dMUL0 = new DMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDMUL(dMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DMUL constraint violated: The value at the stack top is not of type 'double', but of type 'UQTf~Vd1F@0'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      AALOAD aALOAD0 = new AALOAD();
      ObjectType objectType0 = new ObjectType("UQTf~Vd1F@0");
      OperandStack operandStack0 = new OperandStack(216, objectType0);
      operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables((byte)2);
      LocalVariables localVariables1 = new LocalVariables((byte)2);
      localVariables0.merge(localVariables1);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack1 = new OperandStack((byte)2);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldAllThrowIOExceptions();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.toString();
      DMUL dMUL0 = new DMUL();
      F2L f2L0 = new F2L();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2L(f2L0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2L constraint violated: The value at the stack top is not of type 'float', but of type 'UQTf~Vd1F@0'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ObjectType objectType0 = ObjectType.getInstance("~,z(5");
      OperandStack operandStack0 = new OperandStack(3443, objectType0);
      operandStack0.getClone();
      OperandStack operandStack1 = new OperandStack((-788));
      LocalVariables localVariables0 = new LocalVariables(3443);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      OperandStack operandStack2 = new OperandStack((-788));
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables1 = new LocalVariables(3443);
      localVariables0.merge(localVariables1);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      LNEG lNEG0 = new LNEG();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ISUB iSUB0 = new ISUB();
      ARETURN aRETURN0 = new ARETURN();
      instConstraintVisitor0.visitARETURN(aRETURN0);
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("UQTf~Vd1l~0");
      OperandStack operandStack0 = new OperandStack(216, objectType0);
      operandStack0.getClone();
      LocalVariables localVariables0 = new LocalVariables((byte)2);
      operandStack0.getClone();
      OperandStack operandStack1 = new OperandStack(216);
      LocalVariables localVariables1 = new LocalVariables((byte)2);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      int int0 = 171;
      OperandStack operandStack2 = new OperandStack(171);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables2 = new LocalVariables(171);
      localVariables1.merge(localVariables0);
      operandStack0.equals(localVariables2);
      Frame frame1 = new Frame(localVariables1, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ISUB iSUB0 = new ISUB();
      L2I l2I0 = new L2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2I(l2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2I constraint violated: The value at the stack top is not of type 'long', but of type 'UQTf~Vd1l~0'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LocalVariables localVariables0 = new LocalVariables(18);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("Tf~Vd1F@0");
      OperandStack operandStack0 = new OperandStack(18, objectType0);
      OperandStack operandStack1 = new OperandStack(18);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.equals((Object) null);
      OperandStack operandStack2 = new OperandStack(18);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LSHL lSHL0 = new LSHL();
      instConstraintVisitor0.visitFLOAD((FLOAD) null);
      POP pOP0 = new POP();
      instConstraintVisitor0.visitPOP(pOP0);
      DASTORE dASTORE0 = new DASTORE();
      FSTORE fSTORE0 = new FSTORE(18);
      instConstraintVisitor0.visitFSTORE(fSTORE0);
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3421, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3421);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      String string0 = File.pathSeparator;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~,z(5");
      localVariables0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ConstantInterfaceMethodref constantInterfaceMethodref0 = new ConstantInterfaceMethodref(157, (-773));
      ConstantMethodType constantMethodType0 = new ConstantMethodType(3421);
      ConstantMethodType constantMethodType1 = new ConstantMethodType((-773));
      ConstantFieldref constantFieldref0 = new ConstantFieldref(3421, 3421);
      ConstantFloat constantFloat0 = new ConstantFloat(157);
      ConstantFloat constantFloat1 = new ConstantFloat((-773));
      Constant[] constantArray0 = new Constant[0];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      constantPool0.copy();
      FADD fADD0 = new FADD();
      frame0.toString();
      ASTORE aSTORE0 = new ASTORE(2207);
      instConstraintVisitor0.visitASTORE(aSTORE0);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantPool0);
      instConstraintVisitor0.setConstantPoolGen(constantPoolGen0);
      PUTFIELD pUTFIELD0 = new PUTFIELD(157);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFieldInstruction(pUTFIELD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction PUTFIELD constraint violated: Index '157' should refer to a CONSTANT_Fieldref_info structure, but refers to 'null'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3421, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3421);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Character.getName(3421);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~,z(5");
      localVariables0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ConstantInterfaceMethodref constantInterfaceMethodref0 = new ConstantInterfaceMethodref(157, (-773));
      ConstantMethodType constantMethodType0 = new ConstantMethodType(3421);
      ConstantMethodType constantMethodType1 = new ConstantMethodType((-773));
      ConstantFieldref constantFieldref0 = new ConstantFieldref(3421, 3421);
      ConstantFloat constantFloat0 = new ConstantFloat(157);
      ConstantFloat constantFloat1 = new ConstantFloat((-773));
      Constant[] constantArray0 = new Constant[0];
      ConstantPool constantPool0 = new ConstantPool(constantArray0);
      IFGT iFGT0 = new IFGT((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFGT(iFGT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFGT constraint violated: The value at the stack top is not of type 'int', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("N!~,z(5");
      OperandStack operandStack0 = new OperandStack(3455, objectType0);
      LocalVariables localVariables0 = new LocalVariables(111);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      frame0.toString();
      OperandStack operandStack1 = new OperandStack(111);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      OperandStack operandStack2 = new OperandStack(3455);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISHR((ISHR) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string0 = "~,a:7";
      ObjectType objectType0 = new ObjectType("~,a:7");
      OperandStack operandStack0 = new OperandStack(2377, objectType0);
      LocalVariables localVariables0 = new LocalVariables(26);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      String string1 = Constants.ILLEGAL_TYPE;
      Character.getName(2377);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFGE((IFGE) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ObjectType objectType0 = new ObjectType("N!~,z(5");
      OperandStack operandStack0 = new OperandStack(3455, objectType0);
      LocalVariables localVariables0 = new LocalVariables(111);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.toString();
      LocalVariables localVariables1 = new LocalVariables(1);
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      OperandStack operandStack1 = new OperandStack(963);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      LNEG lNEG0 = new LNEG();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Frame frame1 = new Frame(864, 3455);
      D2I d2I0 = new D2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2I(d2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction D2I constraint violated: The value at the stack top is not of type 'double', but of type 'N!~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ObjectType objectType0 = new ObjectType("~,z(5");
      int int0 = 3479;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      OperandStack operandStack0 = new OperandStack(3479, objectType0);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      OperandStack operandStack1 = new OperandStack((-32768));
      LocalVariables localVariables0 = new LocalVariables(3479);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.toString();
      localVariables0.getClone();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "~,z(5");
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      IDIV iDIV0 = new IDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIDIV(iDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IDIV constraint violated: The value at the stack top is not of type 'int', but of type '~,z(5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("~,z(5");
      OperandStack operandStack0 = new OperandStack(3421, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3421);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      String string0 = File.pathSeparator;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~,z(5");
      localVariables0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      int int0 = 157;
      ConstantInterfaceMethodref constantInterfaceMethodref0 = new ConstantInterfaceMethodref(157, (-773));
      ConstantMethodType constantMethodType0 = new ConstantMethodType(3421);
      ConstantMethodType constantMethodType1 = new ConstantMethodType((-773));
      ConstantFieldref constantFieldref0 = new ConstantFieldref(3421, 3421);
      ConstantFloat constantFloat0 = new ConstantFloat(157);
      ConstantFloat constantFloat1 = new ConstantFloat((-773));
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPL((FCMPL) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("N!~,z(5");
      OperandStack operandStack0 = new OperandStack(3455, objectType0);
      LocalVariables localVariables0 = new LocalVariables(158);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.toString();
      OperandStack operandStack1 = operandStack0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      operandStack1.getClone();
      OperandStack operandStack2 = new OperandStack(3455);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      Frame.setThis(uninitializedObjectType0);
      I2S i2S0 = new I2S();
      instConstraintVisitor0.setFrame(frame0);
      LXOR lXOR0 = new LXOR();
      InstructionList instructionList0 = new InstructionList();
      SIPUSH sIPUSH0 = new SIPUSH((short) (-1417));
      IUSHR iUSHR0 = (IUSHR)InstructionConstants.IUSHR;
      InstructionHandle instructionHandle0 = instructionList0.insert((Instruction) iUSHR0);
      IFNULL iFNULL0 = new IFNULL(instructionHandle0);
      instConstraintVisitor0.visitIFNULL(iFNULL0);
      SIPUSH sIPUSH1 = new SIPUSH((short)760);
      instConstraintVisitor0.visitSIPUSH(sIPUSH0);
      DUP2 dUP2_0 = new DUP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2(dUP2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("~P#:,>_");
      OperandStack operandStack0 = new OperandStack(3368, objectType0);
      LocalVariables localVariables0 = new LocalVariables(27);
      operandStack0.clone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      frame0.clone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      localVariables0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-106);
      byteArray0[1] = (byte)111;
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ByteSequence byteSequence1 = new ByteSequence(byteArray0);
      Instruction.readInstruction(byteSequence1);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      IMUL iMUL0 = new IMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMUL(iMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IMUL constraint violated: The value at the stack top is not of type 'int', but of type '~P#:,>_'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("z(5");
      int int0 = 3421;
      OperandStack operandStack0 = new OperandStack(3421, objectType0);
      LocalVariables localVariables0 = new LocalVariables(3421);
      operandStack0.clone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "z(5");
      localVariables0.clone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      ConstantInterfaceMethodref constantInterfaceMethodref0 = new ConstantInterfaceMethodref(197, (-800));
      ConstantMethodType constantMethodType0 = new ConstantMethodType(3421);
      ConstantFieldref constantFieldref0 = new ConstantFieldref(3421, 3421);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      InstConstraintVisitor instConstraintVisitor2 = new InstConstraintVisitor();
      InstConstraintVisitor instConstraintVisitor3 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFLT((IFLT) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }
}
