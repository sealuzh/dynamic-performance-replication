/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 19:36:04 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2264));
      classWriter0.index = (-1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2456), "\"5-ph;w8", "))q[4ch)+=c", "\"5-ph;w8", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "", "");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2879);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "Synthetic", "Synthetic");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.SizeFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 575);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "Synhed=c", "gJ(O=[CxOnaJ", "gJ(O=[CxOnaJ", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(86);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2114), "", "XzH6.4.", "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1437);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 21, "Signature", "y8", "org.apache.commons.io.filefilter.SuffixFileFilter", "<");
      ByteVector byteVector0 = classWriter0.pool;
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4688);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4688, "[V-Z=Lx+E4y+2ibJ", "[V-Z=Lx+E4y+2ibJ", "[V-Z=Lx+E4y+2ibJ", "[V-Z=Lx+E4y+2ibJ");
      fieldWriter0.visitAnnotation("[V-Z=Lx+E4y+2ibJ", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2879);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "!pP~?0F~)?`f%@Yy", "!pP~?0F~)?`f%@Yy", "", "!pP~?0F~)?`f%@Yy");
      fieldWriter0.visitAnnotation("!pP~?0F~)?`f%@Yy", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(86);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 127, "Y(6\".lrx", "wheel.asm.Label", (String) null, "0NG");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(86);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2114), "", "XzH6.4.", "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter");
      ByteVector byteVector0 = new ByteVector(65535);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4688);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4688, "[V-Z=Lx+E4y+2ibJ", "[V-Z=Lx+E4y+2ibJ", "[V-Z=Lx+E4y+2ibJ", "[V-Z=Lx+E4y+2ibJ");
      ByteVector byteVector0 = new ByteVector();
      classWriter0.version = 4688;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(86);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1896, "<", "y8", "y8", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(86);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1596, "wheel.asm.Label", "Y6\".lZrI", "0NG", "0NG");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4690);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "DB#@p#Zwx%B}l2N";
      stringArray0[1] = "DB#@p#Zwx%B}l2N";
      stringArray0[2] = "[V-Z=Lx+E4y+2ibJ";
      stringArray0[3] = "Vo?CLw0$f-~!#pkY";
      stringArray0[4] = "[V-Z=Lx+E4y+2ibJ";
      stringArray0[5] = "[V-Z=Lx+E4y+2ibJ";
      classWriter0.visit((-3500), 4690, "[V-Z=Lx+E4y+2ibJ", "DB#@p#Zwx%B}l2N", "Vo?CLw0$f-~!#pkY", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4690, "[V-Z=Lx+E4y+2ibJ", "[V-Z=Lx+E4y+2ibJ", "[V-Z=Lx+E4y+2ibJ", "[V-Z=Lx+E4y+2ibJ");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2879);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "!pP~?0F~)?`f%@Yy", "!pP~?0F~)?`f%@Yy", "", "!pP~?0F~)?`f%@Yy");
      fieldWriter0.visitAnnotation("!pP~?0F~)?`f%@Yy", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4688);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4688, "[V-Z=Lx+E4y+2ibJ", "[V-Z=Lx+E4y+2ibJ", "[V-Z=Lx+E4y+2ibJ", "[V-Z=Lx+E4y+2ibJ");
      fieldWriter0.visitAnnotation("[V-Z=Lx+E4y+2ibJ", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(42, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(86);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 127, "Y(6\".lrx", "wheel.asm.Label", (String) null, "0NG");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(447);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(447, "wheel.asm.Label", "wheel.asm.Label", "", "");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "wheel.asm.Label", "", "wheel.asm.Label", "");
      assertFalse(fieldWriter0.equals((Object)fieldVisitor0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(83);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "", "", "");
      fieldWriter0.visitEnd();
  }
}
