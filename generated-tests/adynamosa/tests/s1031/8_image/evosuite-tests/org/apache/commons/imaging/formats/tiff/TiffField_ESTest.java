/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 24 02:06:55 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)71;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50971, 50971, fieldTypeShort0, 50971, 50971, byteArray0, byteOrder0, 50971);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50971, tiffField0.getSortHint());
      assertEquals(50971, tiffField0.getTag());
      assertEquals(71, int0);
      assertEquals(50971, tiffField0.getOffset());
      assertEquals(50971, tiffField0.getDirectoryType());
      assertEquals(101942, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-7);
      byteArray0[6] = (byte)64;
      TiffField tiffField0 = new TiffField((byte)64, 33432, fieldTypeRational0, 2140L, 255L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(64, tiffField0.getTag());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(17120, tiffField0.getBytesLength());
      assertEquals(33432, tiffField0.getDirectoryType());
      assertEquals((-7168), int0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(13, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)1, (-2519), fieldTypeLong0, 1, (byte)1, byteArray0, byteOrder0, (byte)1);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-2519), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(27, (-2147483647), fieldTypeShort0, (-1180), (-1180), byteArray0, byteOrder0, 27);
      tiffField0.dump();
      assertEquals((-2147483647), tiffField0.getDirectoryType());
      assertEquals((-1180), tiffField0.getOffset());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2114), "*");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(191, 191, fieldTypeLong0, 191, 191, byteArray0, byteOrder0, (-2114));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2114), tiffField0.getSortHint());
      assertEquals(191, tiffField0.getTag());
      assertEquals(191, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(764, tiffField0.getBytesLength());
      assertEquals(191, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)27, (-4307), fieldTypeRational0, (byte) (-125), 5748L, byteArray0, byteOrder0, (byte) (-125));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-125), tiffField0.getSortHint());
      assertEquals(5748, tiffField0.getOffset());
      assertEquals((-4307), tiffField0.getDirectoryType());
      assertEquals(27, tagInfo0.tag);
      assertEquals(27, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(513, 0, fieldTypeAscii0.SRATIONAL, (-461), (byte) (-25), byteArray0, (ByteOrder) null, (byte) (-25));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-25), tiffField0.getOffset());
      assertTrue(tagInfo0.isOffset());
      assertEquals(513, tagInfo0.tag);
      assertEquals(513, tiffField0.getTag());
      assertEquals((-25), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(824, (-2369), fieldTypeAscii0.LONG, (-2369), 0L, byteArray0, byteOrder0, (-2369));
      int int0 = tiffField0.getTag();
      assertEquals(824, int0);
      assertEquals((-2369), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2369), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2851), (-2851), fieldTypeAscii0, (-1L), 1588L, byteArray0, byteOrder0, (-4530));
      int int0 = tiffField0.getTag();
      assertEquals((-2851), int0);
      assertEquals((-4530), tiffField0.getSortHint());
      assertEquals((-2851), tiffField0.getDirectoryType());
      assertEquals(1588, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1404), "... (");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1221), (-1404), fieldTypeAscii0, 396, (-1L), byteArray0, byteOrder0, 396);
      String string0 = tiffField0.getStringValue();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1404), tiffField0.getDirectoryType());
      assertEquals((-1221), tiffField0.getTag());
      assertEquals(396, tiffField0.getBytesLength());
      assertEquals(396, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-28), (-28), fieldTypeRational0, (-28), (-28), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-28), tiffField0.getTag());
      assertEquals((-28), tiffField0.getOffset());
      assertEquals((-28), tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2129), "*");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146306944, 2146306944, fieldTypeLong0, 3535L, (-2129), byteArray0, byteOrder0, (byte)6);
      int int0 = tiffField0.getSortHint();
      assertEquals(2146306944, tiffField0.getDirectoryType());
      assertEquals((-2129), tiffField0.getOffset());
      assertEquals(2146306944, tiffField0.getTag());
      assertEquals(6, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 1L, 2245L, byteArray0, byteOrder0, (byte) (-24));
      int int0 = tiffField0.getOffset();
      assertEquals((-24), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2245, int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[10];
      TiffField tiffField0 = new TiffField(0, (-7), fieldTypeLong0, 0, (-7), byteArray0, (ByteOrder) null, 49);
      int int0 = tiffField0.getOffset();
      assertEquals(49, tiffField0.getSortHint());
      assertEquals((-7), int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals((-7), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)24;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-428), (byte)115, fieldTypeLong0, 70, (-2718L), byteArray0, byteOrder0, (byte)115);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-428), tiffField0.getTag());
      assertEquals(115, tiffField0.getDirectoryType());
      assertEquals(280, tiffField0.getBytesLength());
      assertEquals(115, tiffField0.getSortHint());
      assertEquals((-2718), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-71);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, 211, fieldTypeAscii0.SBYTE, (byte)1, 2, byteArray0, byteOrder0, 2);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(211, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, 50, fieldTypeDouble0, 1L, (byte)116, byteArray0, byteOrder0, (byte)50);
      tiffField0.getIntValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(116, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      TiffField tiffField0 = new TiffField((-2643), (byte)0, fieldTypeShort0, 1L, (byte)0, byteArray0, byteOrder0, (byte) (-27));
      tiffField0.getIntValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-27), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-2643), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte) (-82);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-82), 2677, fieldTypeShort0, (byte)1, (-44L), byteArray0, byteOrder0, 2677);
      tiffField0.getIntValue();
      assertEquals((-44), tiffField0.getOffset());
      assertEquals((-82), tiffField0.getTag());
      assertEquals(2677, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(2677, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(13, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-2519), fieldTypeLong0, (-2519), 2147483647L, (byte[]) null, byteOrder0, (byte) (-104));
      tiffField0.getFieldTypeName();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-104), tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals((-2519), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1), "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 2038, fieldTypeShort0, 629L, (-1), byteArray0, byteOrder0, (byte)50);
      tiffField0.getFieldTypeName();
      assertEquals(2038, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(41990);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(624, 751, (FieldType) null, 624, 0L, byteArray0, byteOrder0, (-4284));
      tiffField0.getFieldType();
      assertEquals(624, tiffField0.getTag());
      assertEquals((-4284), tiffField0.getSortHint());
      assertEquals(751, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((byte)0, (String) null);
      TiffField tiffField0 = new TiffField((byte) (-25), 2279, fieldTypeByte0, (byte)0, 65535, byteArray0, byteOrder0, (byte) (-82));
      tiffField0.getFieldType();
      assertEquals(2279, tiffField0.getDirectoryType());
      assertEquals((-25), tiffField0.getTag());
      assertEquals((-82), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2114), "*");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(191, 191, fieldTypeLong0, 191, 191, byteArray0, byteOrder0, (-2114));
      tiffField0.getFieldType();
      assertEquals(191, tiffField0.getOffset());
      assertEquals((-2114), tiffField0.getSortHint());
      assertEquals(191, tiffField0.getTag());
      assertEquals(191, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-3577), "");
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, 2060, fieldTypeShort0, 1, 2147483646, byteArray0, byteOrder0, 1717986918);
      tiffField0.getDoubleValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2147483646, tiffField0.getOffset());
      assertEquals(2060, tiffField0.getDirectoryType());
      assertEquals(1717986918, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byteArray0[0] = (byte)50;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 1L, 2245L, byteArray0, byteOrder0, (byte) (-24));
      tiffField0.getDoubleValue();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2245, tiffField0.getOffset());
      assertEquals((-24), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-3758), "%");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-121);
      TiffField tiffField0 = new TiffField(2147483646, (-3571), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).BYTE).SSHORT, 1, 374L, byteArray0, byteOrder0, (-2643));
      tiffField0.getDoubleValue();
      assertEquals((-3571), tiffField0.getDirectoryType());
      assertEquals(374, tiffField0.getOffset());
      assertEquals(2147483646, tiffField0.getTag());
      assertEquals((-2643), tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText$TextEncoding");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(1, 0, fieldTypeRational0.UNDEFINED, 1L, 51328L, byteArray0, byteOrder0, 2355);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(2355, tiffField0.getSortHint());
      assertEquals(51328, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-743), (-743), fieldTypeRational0, 0L, (-743), byteArray0, byteOrder0, (byte)32);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-743), int0);
      assertEquals((-743), tiffField0.getOffset());
      assertEquals((-743), tiffField0.getTag());
      assertEquals(32, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(467, 2556, (FieldType) null, 0L, 467, byteArray0, byteOrder0, 0);
      tiffField0.getCount();
      assertEquals(2556, tiffField0.getDirectoryType());
      assertEquals(467, tiffField0.getTag());
      assertEquals(467, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.allocateDirect(424);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1744), 554, fieldTypeFloat0, 3751L, (-1L), (byte[]) null, byteOrder0, (-1744));
      tiffField0.getCount();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(554, tiffField0.getDirectoryType());
      assertEquals((-1744), tiffField0.getSortHint());
      assertEquals((-1744), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-3186), (-1866), fieldTypeAscii0, (-1866), (-120L), byteArray0, (ByteOrder) null, 1959);
      tiffField0.getCount();
      assertEquals(1959, tiffField0.getSortHint());
      assertEquals((-1866), tiffField0.getDirectoryType());
      assertEquals((-3186), tiffField0.getTag());
      assertEquals((-120), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-743), (-743), fieldTypeRational0, 0L, (-743), byteArray0, byteOrder0, (byte)32);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-743), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-743), tiffField0.getTag());
      assertEquals((-743), tiffField0.getOffset());
      assertEquals(32, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, (-4530), fieldTypeAscii0, 142L, 1588L, byteArray0, byteOrder0, 770);
      int int0 = tiffField0.getBytesLength();
      assertEquals(1588, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-4530), tiffField0.getDirectoryType());
      assertEquals(142, int0);
      assertEquals(770, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte) (-45), 1, fieldTypeDouble0, (-2129), 725L, byteArray0, (ByteOrder) null, (byte)2);
      tiffField0.getByteOrder();
      assertEquals((-45), tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(725, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-814), 1, fieldTypeFloat0, 457L, (byte)0, byteArray0, byteOrder0, (byte)71);
      tiffField0.getByteArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-814), tiffField0.getTag());
      assertEquals(71, tiffField0.getSortHint());
      assertEquals(1828, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, (-3254), fieldTypeDouble0, 0, 0, byteArray0, (ByteOrder) null, (byte) (-87));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, byteArray1.length);
      assertEquals((-3254), tiffField0.getDirectoryType());
      assertEquals((-87), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1), "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)120, (byte)46, fieldTypeShort0, 1L, (-439L), byteArray0, byteOrder0, 41985);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("50");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(120, tiffField0.getTag());
      assertEquals((-439), tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(46, tiffField0.getDirectoryType());
      assertEquals(41985, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-1209), (FieldType) null, (-1209), 0L, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-3758), "");
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-882), 297, fieldTypeShort0, (-3758), 2147483647L, byteArray0, byteOrder0, (-2449));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(185, 3127, (FieldType) null, 0L, 185, byteArray0, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(27, (-2147483647), fieldTypeShort0, (-1180), (-1180), byteArray0, byteOrder0, 27);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1470), 783, fieldTypeShort0, (-1470), (-1470), byteArray0, byteOrder0, (byte)27);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(13, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-2519), fieldTypeLong0, (-2519), 2147483647L, (byte[]) null, byteOrder0, (byte) (-104));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(513, 0, fieldTypeAscii0.SRATIONAL, (-461), (byte) (-25), byteArray0, (ByteOrder) null, (byte) (-25));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(13, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-2519), fieldTypeLong0, (-2519), 2147483647L, (byte[]) null, byteOrder0, (byte) (-104));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2851), (-2851), fieldTypeAscii0, (-1L), 1588L, byteArray0, byteOrder0, (-4530));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-3577), "");
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3577), 2060, fieldTypeShort0, (-3577), (-3577), byteArray0, byteOrder0, 1717986916);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte) (-25), 2279, fieldTypeRational0, (-1), (-1L), byteArray0, byteOrder0, (byte) (-25));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1404), "... (");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1404), (-1180), fieldTypeAscii0, (-294L), 1, byteArray0, byteOrder0, (-1221));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), 50711, fieldTypeFloat0, (byte)66, 50711, byteArray0, byteOrder0, (-369));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "N~9r:_ebECgBD;Yu");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-305), 0, fieldTypeLong0, (-305), 0L, byteArray0, byteOrder0, (-1589));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("50");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "50");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(262, 131, (FieldType) null, 262, 131, byteArray0, byteOrder0, (-1522));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, (FieldType) null, 1, 2370L, byteArray0, byteOrder0, (byte) (-88));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3131, 1, fieldTypeShort0, (byte) (-27), (byte) (-27), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2114), "*");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(191, 33446, fieldTypeLong0, 33446, 33446, byteArray0, byteOrder0, 191);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("[REZm:b<U6#/h");
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(33446, tiffField0.getOffset());
      assertEquals(191, tiffField0.getTag());
      assertEquals(191, tiffField0.getSortHint());
      assertEquals(133784, tiffField0.getBytesLength());
      assertEquals(33446, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-743), (-743), fieldTypeRational0, 0L, (-743), byteArray0, byteOrder0, (byte)32);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(32, tiffField0.getSortHint());
      assertEquals((-743), tiffField0.getOffset());
      assertEquals((-743), tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals((-743), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50971, 50971, fieldTypeShort0, 50971, 50971, byteArray0, byteOrder0, 50971);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(50971, tiffField0.getDirectoryType());
      assertEquals(50971, tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(50971, tiffField0.getTag());
      assertEquals(50971, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(824, (-2369), fieldTypeAscii0.LONG, (-2369), 0L, byteArray0, byteOrder0, (-2369));
      tiffField0.getFieldType();
      assertEquals(824, tiffField0.getTag());
      assertEquals((-2369), tiffField0.getDirectoryType());
      assertEquals((-2369), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(0, (-1133), fieldTypeRational0, (-3466L), (-3466L), (byte[]) null, byteOrder0, 405);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals((-3466), tiffField0.getOffset());
      assertEquals((-1133), tiffField0.getDirectoryType());
      assertEquals(405, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-2577), (-2577), fieldTypeRational0, (-2577), (-790L), (byte[]) null, byteOrder0, 9);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-2577), tiffField0.getDirectoryType());
      assertEquals((-2577), tiffField0.getTag());
      assertEquals((-790), tiffField0.getOffset());
      assertEquals((-20616), int0);
      assertEquals(9, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-428), (byte)115, fieldTypeLong0, 70, (-2718L), byteArray0, byteOrder0, (byte)115);
      tiffField0.getIntValueOrArraySum();
      assertEquals(115, tiffField0.getDirectoryType());
      assertEquals(115, tiffField0.getSortHint());
      assertEquals((-428), tiffField0.getTag());
      assertEquals((-2718), tiffField0.getOffset());
      assertEquals(280, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)64, 33432, fieldTypeRational0, 2140L, 255L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)111, 1177, fieldTypeAscii0, 3376L, (byte) (-71), byteArray0, byteOrder0, 68);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@214e0752 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 50736, fieldTypeAscii0.DOUBLE, 0L, 0L, byteArray0, byteOrder0, 50736);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(50736, tiffField0.getSortHint());
      assertEquals(50736, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-253), (-1), fieldTypeFloat0, 1288L, 8L, byteArray0, byteOrder0, (-1));
      tiffField0.getDoubleArrayValue();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-253), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(5152, tiffField0.getBytesLength());
      assertEquals(8, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33432, 33432, fieldTypeLong0, 994L, 994L, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      assertEquals(3976, tiffField0.getBytesLength());
      assertEquals(33432, tiffField0.getTag());
      assertEquals(33432, tiffField0.getDirectoryType());
      assertEquals(994, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[105];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2146306982, 1373, fieldTypeShort0, 1373, 2146306982, byteArray0, byteOrder0, 1373);
      tiffField0.getDoubleArrayValue();
      assertEquals(2146306982, tiffField0.getOffset());
      assertEquals(1373, tiffField0.getDirectoryType());
      assertEquals(1373, tiffField0.getSortHint());
      assertEquals(2746, tiffField0.getBytesLength());
      assertEquals(2146306982, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)64, 33432, fieldTypeRational0, 2140L, 255L, byteArray0, byteOrder0, (byte)0);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(33432, tiffField0.getDirectoryType());
      assertEquals(17120, tiffField0.getBytesLength());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(255, tiffField0.getOffset());
      assertEquals(64, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-82), 2677, fieldTypeShort0, (byte)1, (-44L), byteArray0, byteOrder0, 2677);
      tiffField0.getDoubleArrayValue();
      assertEquals(2677, tiffField0.getSortHint());
      assertEquals(2677, tiffField0.getDirectoryType());
      assertEquals((-82), tiffField0.getTag());
      assertEquals((-44), tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-71), (byte) (-71), fieldTypeAscii0, (byte)81, (-74L), byteArray0, byteOrder0, (byte) (-25));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@611b77ca for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[10];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)89, (byte)0, fieldTypeLong0, 0L, (byte)89, byteArray0, byteOrder0, (-3517));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(89, tiffField0.getTag());
      assertEquals(0, intArray0.length);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-3517), tiffField0.getSortHint());
      assertEquals(89, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), 50711, fieldTypeFloat0, (byte)66, 50711, byteArray0, byteOrder0, (-369));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@2f4a825d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)64, 33432, fieldTypeRational0, 2140L, 255L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-45), (-1717986917), fieldTypeFloat0.SRATIONAL, 290L, (-68L), byteArray0, byteOrder0, 2147039677);
      tiffField0.getIntArrayValue();
      assertEquals((-45), tiffField0.getTag());
      assertEquals((-68), tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(2147039677, tiffField0.getSortHint());
      assertEquals(2320, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, 50, fieldTypeDouble0, 1L, (byte)116, byteArray0, byteOrder0, (byte)50);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(116, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 1367, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeAscii0).SRATIONAL.IFD).SHORT, 290L, (-68L), byteArray0, byteOrder0, (byte) (-82));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-82), tiffField0.getSortHint());
      assertEquals(580, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertEquals(290L, tiffField0.getCount());
      assertEquals(1367, tiffField0.getDirectoryType());
      assertEquals((-68), tiffField0.getOffset());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-71);
      byteArray0[1] = (byte) (-105);
      byteArray0[2] = (byte) (-25);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-71), (byte) (-71), fieldTypeAscii0, (byte)81, (-74L), byteArray0, byteOrder0, (byte) (-25));
      String string0 = tiffField0.getStringValue();
      assertEquals((-25), tiffField0.getSortHint());
      assertEquals((-71), tiffField0.getDirectoryType());
      assertEquals((-71), tiffField0.getTag());
      assertEquals(81, tiffField0.getBytesLength());
      assertEquals((-74), tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-71), (byte) (-71), fieldTypeAscii0, (byte)81, (-74L), byteArray0, byteOrder0, (byte) (-25));
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@75f666b8
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-3186), (-1866), fieldTypeAscii0, (-1866), (-120L), byteArray0, (ByteOrder) null, 1959);
      String string0 = tiffField0.getTagName();
      assertEquals((-1866), tiffField0.getDirectoryType());
      assertEquals(1959, tiffField0.getSortHint());
      assertEquals((-120), tiffField0.getOffset());
      assertEquals("Unknown Tag (0xfffff38e)", string0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)0, (byte) (-1), fieldTypeLong0, (byte)0, 3976L, byteArray0, (ByteOrder) null, (-1605));
      String string0 = tiffField0.getTagName();
      assertEquals("GPSVersionID", string0);
      assertEquals((-1605), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(3976, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[222];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(37125, 37125, fieldTypeShort0.FLOAT, 37125, 37125, byteArray0, byteOrder0, 37125);
      tiffField0.dump();
      assertEquals(37125L, tiffField0.getCount());
      assertEquals(37125, tiffField0.getTag());
      assertEquals(37125, tiffField0.getOffset());
      assertEquals(148500, tiffField0.getBytesLength());
      assertEquals(37125, tiffField0.getSortHint());
      assertEquals(37125, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2146306982, "... (");
      byte[] byteArray0 = new byte[58];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 2146929172, fieldTypeShort0.BYTE, 65535, 65535, byteArray0, byteOrder0, 32946);
      String string0 = tiffField0.toString();
      assertEquals(2146929172, tiffField0.getDirectoryType());
      assertEquals(32946, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals("65535 (0xffff: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (58) (65535 Byte)", string0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-3758), "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (byte)50, fieldTypeShort0.SBYTE, (byte)50, (-3577), byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(50L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-3577), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[421];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(632, 1824, fieldTypeDouble0, 632, 1824, byteArray0, byteOrder0, 632);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1824, tiffField0.getDirectoryType());
      assertEquals(632L, tiffField0.getCount());
      assertEquals(5056, tiffField0.getBytesLength());
      assertEquals(632, tiffField0.getSortHint());
      assertEquals(1824, tiffField0.getOffset());
      assertEquals(632, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[105];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2146306982, 0, fieldTypeShort0.DOUBLE, 1148L, 2146306982, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.toString();
      assertEquals("2146306982 (0x7fee0ba6: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (1148 Double)", string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(9184, tiffField0.getBytesLength());
      assertEquals(2146306982, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[216];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(7, (-1197), fieldTypeLong0, 5143L, (-177L), byteArray0, byteOrder0, (-1197));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1197), tiffField0.getDirectoryType());
      assertEquals((-1197), tiffField0.getSortHint());
      assertEquals(20572, tiffField0.getBytesLength());
      assertEquals(7, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals((-177), tiffField0.getOffset());
      assertEquals(5143L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[105];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2146306982, 1373, fieldTypeShort0, 1373, 2146306982, byteArray0, byteOrder0, 1373);
      String string0 = tiffField0.toString();
      assertEquals(2746, tiffField0.getBytesLength());
      assertEquals("2146306982 (0x7fee0ba6: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (1373 SShort)", string0);
      assertEquals(1373, tiffField0.getSortHint());
      assertEquals(1373, tiffField0.getDirectoryType());
      assertEquals(2146306982, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 1367, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeAscii0).SRATIONAL.LONG).SSHORT, 290L, (-68L), byteArray0, byteOrder0, (byte) (-82));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("]");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "Unknown Tag");
      assertEquals((-82), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(580, tiffField0.getBytesLength());
      assertEquals(1367, tiffField0.getDirectoryType());
      assertEquals((-68), tiffField0.getOffset());
      assertEquals(290L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[79];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1303), 1942, fieldTypeShort0.ASCII, 6416L, (-1L), byteArray0, byteOrder0, (-2147483646));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1303), tiffField0.getTag());
      assertEquals(1942, tiffField0.getDirectoryType());
      assertEquals((-2147483646), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(6416, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, (-4530), fieldTypeAscii0, 142L, 1588L, byteArray0, byteOrder0, 770);
      tiffField0.dump();
      assertEquals(770, tiffField0.getSortHint());
      assertEquals(1588, tiffField0.getOffset());
      assertEquals(142L, tiffField0.getCount());
      assertEquals(142, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-4530), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2621, 88, fieldTypeFloat0, 2621, (-56L), byteArray0, byteOrder0, (byte)50);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-56), tiffField0.getOffset());
      assertEquals(2621L, tiffField0.getCount());
      assertEquals(2621, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(10484, tiffField0.getBytesLength());
      assertEquals(88, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 1L, 2245L, byteArray0, byteOrder0, (byte) (-24));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("o=Btk");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-24), tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2245, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeLong0, 535L, (-1714L), byteArray0, (ByteOrder) null, 50);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)53, (byte)73);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertNull(string0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1714), tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(535L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 123, fieldTypeDouble0, (-5013L), (byte)0, byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50972, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(0, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Double", string0);
      assertEquals(123, tiffField0.getDirectoryType());
      assertEquals((-40104), tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-318), 2501, fieldTypeAscii0, 1762L, 0L, byteArray0, byteOrder0, (byte) (-75));
      tiffField0.getFieldTypeName();
      assertEquals((-318), tiffField0.getTag());
      assertEquals((-75), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2501, tiffField0.getDirectoryType());
      assertFalse(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-428), (byte)115, fieldTypeLong0, 70, (-2718L), byteArray0, byteOrder0, (byte)115);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(115, int0);
      assertEquals((-428), tiffField0.getTag());
      assertEquals(70L, tiffField0.getCount());
      assertEquals(115, tiffField0.getSortHint());
      assertEquals((-2718), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-2129), "*");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2135812540), 253, fieldTypeLong0, 0L, 2254L, byteArray0, byteOrder0, (byte) (-115));
      int int0 = tiffField0.getSortHint();
      assertEquals((-2135812540), tiffField0.getTag());
      assertEquals(2254, tiffField0.getOffset());
      assertEquals((-115), int0);
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(253, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(71, 71, fieldTypeDouble0, 71, 71, byteArray0, byteOrder0, 135);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(71, tiffField0.getDirectoryType());
      assertEquals(71, tiffField0.getOffset());
      assertEquals("71 (0x47: Unknown Tag): ", string0);
      assertEquals(135, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(2501, (-318), fieldTypeAscii0, 777L, 255L, byteArray0, byteOrder0, (-2214));
      tiffField0.dump();
      assertEquals(777, tiffField0.getBytesLength());
      assertEquals((-2214), tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(2501, tiffField0.getTag());
      assertEquals(777L, tiffField0.getCount());
      assertEquals((-318), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-2577), (-2577), fieldTypeRational0, (-2577), (-790L), (byte[]) null, byteOrder0, 9);
      tiffField0.getByteOrder();
      assertEquals((-2577), tiffField0.getTag());
      assertEquals(9, tiffField0.getSortHint());
      assertEquals((-2577), tiffField0.getDirectoryType());
      assertEquals((-790), tiffField0.getOffset());
      assertEquals((-2577L), tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-814), 1, fieldTypeFloat0, 457L, (byte)0, byteArray0, byteOrder0, (byte)71);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-814), tiffField0.getTag());
      assertEquals(0L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(71, tiffField0.getSortHint());
  }
}
