/*
 * This file was automatically generated by EvoSuite
 * Thu Jul 04 11:02:30 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)96;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3519, 3519, fieldTypeShort0, 2118L, 3219L, byteArray0, byteOrder0, (byte)96);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(96, int0);
      assertEquals(3519, tiffField0.getDirectoryType());
      assertEquals(3519, tiffField0.getTag());
      assertEquals(96, tiffField0.getSortHint());
      assertEquals(3219, tiffField0.getOffset());
      assertEquals(4236, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-15);
      byteArray0[4] = (byte) (-31);
      TiffField tiffField0 = new TiffField(855, 855, fieldTypeShort0.RATIONAL, 855, 208L, byteArray0, byteOrder0, (byte) (-31));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(6840, tiffField0.getBytesLength());
      assertEquals(208, tiffField0.getOffset());
      assertEquals(855, tiffField0.getTag());
      assertEquals(1, int0);
      assertEquals(855, tiffField0.getDirectoryType());
      assertEquals((-31), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-31);
      TiffField tiffField0 = new TiffField(855, 855, fieldTypeShort0.RATIONAL, 855, 208L, byteArray0, byteOrder0, (byte) (-31));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-31), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(208, tiffField0.getOffset());
      assertEquals(6840, tiffField0.getBytesLength());
      assertEquals(855, tiffField0.getDirectoryType());
      assertEquals(855, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-602), "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, (-602), fieldTypeRational0.FLOAT, 1L, 1, byteArray0, byteOrder0, 1);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals((-602), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(28, (-1269), fieldTypeShort0, (-1095L), (-4149), byteArray0, byteOrder0, 682);
      String string0 = tiffField0.toString();
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (-1095 Short)", string0);
      assertEquals(28, tiffField0.getTag());
      assertEquals((-1269), tiffField0.getDirectoryType());
      assertEquals(682, tiffField0.getSortHint());
      assertEquals((-4149), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3519, (-288), fieldTypeShort0.FLOAT, 1166, (-960L), byteArray0, byteOrder0, (-288));
      tiffField0.dump();
      assertEquals(3519, tiffField0.getTag());
      assertEquals((-288), tiffField0.getDirectoryType());
      assertEquals(4664, tiffField0.getBytesLength());
      assertEquals((-960), tiffField0.getOffset());
      assertEquals((-288), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3519, 3519, fieldTypeShort0, 3519, 3519, byteArray0, byteOrder0, 3519);
      tiffField0.getValue();
      assertEquals(3519, tiffField0.getDirectoryType());
      assertEquals(3519, tiffField0.getSortHint());
      assertEquals(3519, tiffField0.getTag());
      assertEquals(7038, tiffField0.getBytesLength());
      assertEquals(3519, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(330, 330, fieldTypeShort0, 0L, 330, byteArray0, byteOrder0, (-2211));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-2211), tiffField0.getSortHint());
      assertEquals(330, tiffField0.getDirectoryType());
      assertEquals(330, tagInfo0.tag);
      assertEquals(330, tiffField0.getOffset());
      assertEquals(330, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(0, 20, fieldTypeRational0, 0, 11040L, byteArray0, byteOrder0, 3621);
      int int0 = tiffField0.getTag();
      assertEquals(11040, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(3621, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte) (-45), (byte) (-45), fieldTypeLong0, (byte)0, (byte)34, byteArray0, (ByteOrder) null, (byte)34);
      int int0 = tiffField0.getTag();
      assertEquals((-45), tiffField0.getDirectoryType());
      assertEquals((-45), int0);
      assertEquals(34, tiffField0.getOffset());
      assertEquals(34, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-114);
      byteArray0[1] = (byte) (-114);
      byteArray0[2] = (byte) (-114);
      byteArray0[3] = (byte) (-114);
      byteArray0[4] = (byte) (-114);
      byteArray0[5] = (byte)5;
      byteArray0[6] = (byte)78;
      TiffField tiffField0 = new TiffField(9, (-3158), fieldTypeAscii0, 135L, 1338L, byteArray0, byteOrder0, (byte) (-114));
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(135, tiffField0.getBytesLength());
      assertEquals((-3158), tiffField0.getDirectoryType());
      assertEquals((-114), tiffField0.getSortHint());
      assertEquals(9, tiffField0.getTag());
      assertEquals(1338, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, (-1296), byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-1296), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((-1959), 65535, fieldTypeAscii0, 1L, 1L, byteArray0, (ByteOrder) null, (-1));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1959), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-45), (-1906), fieldTypeLong0.SRATIONAL, (byte)96, 1572L, byteArray0, byteOrder0, (-2078));
      int int0 = tiffField0.getOffset();
      assertEquals((-45), tiffField0.getTag());
      assertEquals((-2078), tiffField0.getSortHint());
      assertEquals(1572, int0);
      assertEquals((-1906), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((-1362), 51041, fieldTypeLong0, (-2267L), (-2267L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals((-1362), tiffField0.getTag());
      assertEquals(51041, tiffField0.getDirectoryType());
      assertEquals((-2267), int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[2] = (byte)34;
      TiffField tiffField0 = new TiffField(2, 50, fieldTypeLong0, (byte)34, (-2327L), byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2327), tiffField0.getOffset());
      assertEquals(136, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((byte)96, "2");
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-45);
      TiffField tiffField0 = new TiffField((-82), (-2702), fieldTypeRational0.SHORT, 1L, (byte) (-45), byteArray0, byteOrder0, 899);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-2702), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(899, tiffField0.getSortHint());
      assertEquals((-82), tiffField0.getTag());
      assertEquals((-45), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2101792506, 10, fieldTypeShort0.IFD, 1L, (-740L), byteArray0, byteOrder0, 10);
      tiffField0.getIntValue();
      assertEquals((-740), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(2101792506, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)96;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3519, 34732, fieldTypeShort0, 1L, 4L, byteArray0, byteOrder0, 2);
      tiffField0.getIntValue();
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(3519, tiffField0.getTag());
      assertEquals(34732, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-115);
      TiffField tiffField0 = new TiffField((-1405), (-1405), fieldTypeShort0, 1L, 1036L, byteArray0, (ByteOrder) null, (byte) (-16));
      tiffField0.getIntValue();
      assertEquals(1036, tiffField0.getOffset());
      assertEquals((-16), tiffField0.getSortHint());
      assertEquals((-1405), tiffField0.getDirectoryType());
      assertEquals((-1405), tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(37391, (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-112), 37391, fieldTypeFloat0, 1664L, (-625L), byteArray0, byteOrder0, (-112));
      tiffField0.getFieldTypeName();
      assertEquals((-112), tiffField0.getTag());
      assertEquals((-625), tiffField0.getOffset());
      assertEquals(37391, tiffField0.getDirectoryType());
      assertEquals((-112), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-602), "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1548, (-602), fieldTypeRational0, 853L, 853L, byteArray0, byteOrder0, 3529);
      tiffField0.getFieldTypeName();
      assertEquals((-602), tiffField0.getDirectoryType());
      assertEquals(853, tiffField0.getOffset());
      assertEquals(3529, tiffField0.getSortHint());
      assertEquals(1548, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, "D`]^eQ^L,qOR");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1595, 1, fieldTypeAscii0, 0, 1, byteArray0, byteOrder0, 21);
      tiffField0.getFieldType();
      assertEquals(1595, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(21, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3570), (-3570), fieldTypeLong0, 630L, 624L, byteArray0, byteOrder0, (-3114));
      tiffField0.getFieldType();
      assertEquals(624, tiffField0.getOffset());
      assertEquals((-3570), tiffField0.getTag());
      assertEquals((-3114), tiffField0.getSortHint());
      assertEquals((-3570), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-602), "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-602), (-602), fieldTypeRational0, 0, (-959L), byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-602), tiffField0.getDirectoryType());
      assertEquals((-602), tiffField0.getTag());
      assertEquals((-959), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-206), 2539, fieldTypeShort0, 1L, (-206), byteArray0, byteOrder0, (-1664));
      tiffField0.getDoubleValue();
      assertEquals((-206), tiffField0.getTag());
      assertEquals((-1664), tiffField0.getSortHint());
      assertEquals((-206), tiffField0.getOffset());
      assertEquals(2539, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-12);
      TiffField tiffField0 = new TiffField(3461, 831, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 2450);
      tiffField0.getDoubleValue();
      assertEquals(2450, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(831, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(3461, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((byte)96, "2");
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-45);
      TiffField tiffField0 = new TiffField((-82), (-2702), fieldTypeRational0.SHORT, 1L, (byte) (-45), byteArray0, byteOrder0, 899);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals((-45), tiffField0.getOffset());
      assertEquals((-82), tiffField0.getTag());
      assertEquals((-2702), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(899, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(3577, 0, fieldTypeLong0, 0L, (-2267L), byteArray0, byteOrder0, (byte)78);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2267), tiffField0.getOffset());
      assertEquals(78, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(3577, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3570), (-3570), fieldTypeLong0, 630L, 624L, byteArray0, byteOrder0, (-3114));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-3114), tiffField0.getSortHint());
      assertEquals(624, tiffField0.getOffset());
      assertEquals((-3570), int0);
      assertEquals((-3570), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte) (-45), (byte) (-45), fieldTypeLong0, (byte)0, (byte)34, byteArray0, (ByteOrder) null, (byte)34);
      tiffField0.getCount();
      assertEquals(34, tiffField0.getSortHint());
      assertEquals((-45), tiffField0.getDirectoryType());
      assertEquals((-45), tiffField0.getTag());
      assertEquals(34, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)96, 34910, fieldTypeLong0.SRATIONAL, (byte)96, (-3740L), byteArray0, byteOrder0, (-2078));
      long long0 = tiffField0.getCount();
      assertEquals(96L, long0);
      assertEquals(96, tiffField0.getTag());
      assertEquals(34910, tiffField0.getDirectoryType());
      assertEquals((-2078), tiffField0.getSortHint());
      assertEquals((-3740), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 1817, fieldTypeShort0, 0L, 267L, byteArray0, byteOrder0, 3519);
      int int0 = tiffField0.getBytesLength();
      assertEquals(3519, tiffField0.getSortHint());
      assertEquals(1817, tiffField0.getDirectoryType());
      assertEquals(267, tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (byte)34, fieldTypeLong0, (byte) (-128), 4L, byteArray0, byteOrder0, 461);
      int int0 = tiffField0.getBytesLength();
      assertEquals(34, tiffField0.getDirectoryType());
      assertEquals((-512), int0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(461, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((byte)50, (-4166), fieldTypeDouble0, (-1L), (-1L), byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getByteOrder();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-4166), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3519, (byte)57, fieldTypeShort0, 2118L, (byte)57, byteArray0, byteOrder0, 48278);
      tiffField0.getByteArrayValue();
      assertEquals(57, tiffField0.getOffset());
      assertEquals(4236, tiffField0.getBytesLength());
      assertEquals(48278, tiffField0.getSortHint());
      assertEquals(57, tiffField0.getDirectoryType());
      assertEquals(3519, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "Invalid value: ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(561, 561, fieldTypeRational0, 0L, 561, byteArray0, byteOrder0, (byte)0);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(561, tiffField0.getOffset());
      assertEquals(561, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(561, tiffField0.getDirectoryType());
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3519, (-288), fieldTypeShort0.FLOAT, 1200, (-960L), byteArray0, byteOrder0, (-288));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(636, 636, fieldTypeByte0, 636, 636, (byte[]) null, byteOrder0, 636);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(2144025504, 2144025504, fieldTypeRational0, 2144025504, 2144025504, byteArray0, byteOrder0, 2144025504);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeLong0, 8, 8, (byte[]) null, byteOrder0, 8);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(2144025504, 2144025504, fieldTypeRational0, 2144025504, 2144025504, byteArray0, byteOrder0, 2144025504);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(969, 969, fieldTypeDouble0, 1L, 1L, byteArray0, byteOrder0, 969);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(40092, "");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40092, 138, fieldTypeShort0, 138, 138, byteArray0, byteOrder0, 4737);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-610), (-610), fieldTypeAscii0, (-610), (-610), byteArray0, byteOrder0, (-610));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, (-1593));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-3857), (-3857), fieldTypeShort0, (-3857), (-3857), byteArray0, byteOrder0, (-3857));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(137, 137, fieldTypeRational0, 1L, 137, byteArray0, byteOrder0, 137);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(33448, 33448, fieldTypeRational0, 33448, 33448, (byte[]) null, byteOrder0, 33448);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50710, 50710, fieldTypeShort0, 50710, 50710, (byte[]) null, byteOrder0, 50710);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(2144025450, 2144025450, fieldTypeRational0, 2144025450, 2144025450, byteArray0, byteOrder0, 2144025450);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(40092, 40092, fieldTypeRational0, (-521L), 40092, byteArray0, byteOrder0, 40092);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1009, 1009, fieldTypeDouble0, 1009, 1009, (byte[]) null, byteOrder0, 1009);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1750), (-1750), fieldTypeByte0, (-1750), (-1750), byteArray0, byteOrder0, (-1750));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2133447818, 2133447818, fieldTypeByte0, 2133447818, 2133447818, byteArray0, byteOrder0, 2133447818);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeRational0, 1L, 11, byteArray0, byteOrder0, 11);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3550, 3550, fieldTypeShort0, 3550, 3550, (byte[]) null, byteOrder0, 3550);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1452), (-1452), fieldTypeShort0, (-1452), (-1452), byteArray0, byteOrder0, (-1452));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(95, 95, fieldTypeRational0, 1L, 95, byteArray0, byteOrder0, 95);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-53), (byte) (-53), (FieldType) null, (byte)38, 3565, byteArray0, byteOrder0, (byte)27);
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[76];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(40093, 40093, fieldTypeRational0, 40093, 40093, byteArray0, byteOrder0, (-1388));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1789, 1789, fieldTypeRational0, 1789, 1789, (byte[]) null, byteOrder0, 1789);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(2144025450, 2144025450, fieldTypeRational0, 2144025450, 2144025450, byteArray0, byteOrder0, 2144025450);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(107, 107, fieldTypeRational0, 1L, 107, byteArray0, byteOrder0, 107);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(39, 39, fieldTypeShort0, 39, 39, (byte[]) null, byteOrder0, 39);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(2144025450, 2144025450, fieldTypeRational0, 2144025450, 2144025450, byteArray0, byteOrder0, 2144025450);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(1818, 1818, fieldTypeByte0, (-2147483648L), 1818, byteArray0, byteOrder0, 1818);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(272, 272, fieldTypeShort0, (-980L), (-980L), byteArray0, byteOrder0, 272);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("!o#");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "!o#");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-1), 54, fieldTypeRational0, (-939L), (-1), byteArray0, byteOrder0, 2147335963);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(50, 1, fieldTypeFloat0.RATIONAL, 1, 13352L, byteArray0, byteOrder0, 1);
      MockFile mockFile0 = new MockFile("ru$9i;+PFgpW*FnyX|b");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3562, 3562, fieldTypeShort0, 3562, 413L, (byte[]) null, byteOrder0, 3562);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1076, 65535, fieldTypeShort0, 0L, 2199L, byteArray0, byteOrder0, (byte)96);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("HostComputer");
      DataOutputStream dataOutputStream0 = new DataOutputStream(mockFileOutputStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(dataOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(1076, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(96, tiffField0.getSortHint());
      assertEquals(2199, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(3577, 0, fieldTypeLong0, 0L, (-2267L), byteArray0, byteOrder0, (byte)78);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertTrue(boolean0);
      assertEquals(78, tiffField0.getSortHint());
      assertEquals(3577, tiffField0.getTag());
      assertEquals((-2267), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3519, (-288), fieldTypeShort0.FLOAT, 1166, (-960L), byteArray0, byteOrder0, (-288));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-288), tiffField0.getSortHint());
      assertFalse(boolean0);
      assertEquals(3519, tiffField0.getTag());
      assertEquals((-960), tiffField0.getOffset());
      assertEquals((-288), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1701), " for: ");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1701), 65535, fieldTypeLong0, 65535, 65535, byteArray0, byteOrder0, (byte)57);
      tiffField0.getByteOrder();
      assertEquals(57, tiffField0.getSortHint());
      assertEquals((-1701), tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(537, 537, fieldTypeLong0, 537, 537, (byte[]) null, (ByteOrder) null, 537);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2145713257, 2145713257, (FieldType) null, (-2147483648L), 2145713257, (byte[]) null, byteOrder0, 2145713257);
      tiffField0.getFieldType();
      assertEquals(2145713257, tiffField0.getSortHint());
      assertEquals(2145713257, tiffField0.getTag());
      assertEquals(2145713257, tiffField0.getDirectoryType());
      assertEquals(2145713257, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 17179869176L, 1, byteArray0, (ByteOrder) null, 2147374110);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, int0);
      assertEquals(2147374110, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3565, 3565, fieldTypeShort0, 3565, 3565, byteArray0, byteOrder0, 3565);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, (-132), (FieldType) null, (-132), (-132), byteArray0, byteOrder0, (-132));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, (-1740L), 0, byteArray0, byteOrder0, (byte)11);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(28, (-2420), fieldTypeRational0, (-904L), (-2420), byteArray0, byteOrder0, (-2420));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-2420), tiffField0.getDirectoryType());
      assertEquals((-2420), tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
      assertEquals(28, tagInfo0.tag);
      assertEquals((-2420), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(3346, 3346, fieldTypeShort0, 3346, 3346, (byte[]) null, byteOrder0, 65535);
      int int0 = tiffField0.getTag();
      assertEquals(3346, int0);
      assertEquals(3346, tiffField0.getDirectoryType());
      assertEquals(3346, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(102, 102, fieldTypeFloat0, (-290L), 0L, byteArray0, byteOrder0, 102);
      long long0 = tiffField0.getCount();
      assertEquals(102, tiffField0.getTag());
      assertEquals(102, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-290L), long0);
      assertEquals(102, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(873, "YClipPathUnits");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1687, 0, fieldTypeShort0, 2227L, 1687, byteArray0, byteOrder0, (byte)80);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1687, tiffField0.getOffset());
      assertEquals(4454, int0);
      assertEquals(1687, tiffField0.getTag());
      assertEquals(80, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3519, 3519, fieldTypeShort0, 3519, 3519, byteArray0, byteOrder0, 3519);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[223];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1831, 1831, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 1831);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2133447818, 2133447818, fieldTypeByte0, 2133447818, 2133447818, byteArray0, byteOrder0, 2133447818);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@71335f9d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[80];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(137, 137, fieldTypeRational0, 137, 137, byteArray0, byteOrder0, 137);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2133447818, 2133447818, fieldTypeByte0, 2133447818, 2133447818, byteArray0, byteOrder0, 2133447818);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@1bd7fb5 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[215];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1009, 1009, fieldTypeDouble0, 1009, 1009, byteArray0, byteOrder0, 1009);
      tiffField0.getDoubleArrayValue();
      assertEquals(1009, tiffField0.getDirectoryType());
      assertEquals(1009, tiffField0.getSortHint());
      assertEquals(1009, tiffField0.getTag());
      assertEquals(1009, tiffField0.getOffset());
      assertEquals(8072, tiffField0.getBytesLength());
      assertEquals(1009L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[71];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((byte)93, (byte)93, fieldTypeLong0, (byte)93, (byte)93, byteArray0, byteOrder0, (byte)93);
      tiffField0.getDoubleArrayValue();
      assertEquals(93, tiffField0.getTag());
      assertEquals(93, tiffField0.getOffset());
      assertEquals(93, tiffField0.getDirectoryType());
      assertEquals(93, tiffField0.getSortHint());
      assertEquals(93L, tiffField0.getCount());
      assertEquals(372, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3542, 3542, fieldTypeShort0, 3542, 3542, byteArray0, byteOrder0, 3542);
      tiffField0.getDoubleArrayValue();
      assertEquals(3542, tiffField0.getSortHint());
      assertEquals(3542, tiffField0.getDirectoryType());
      assertEquals(3542L, tiffField0.getCount());
      assertEquals(7084, tiffField0.getBytesLength());
      assertEquals(3542, tiffField0.getOffset());
      assertEquals(3542, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3519, 3519, fieldTypeShort0, 3519, 3519, byteArray0, byteOrder0, 3519);
      tiffField0.getDoubleArrayValue();
      assertEquals(3519, tiffField0.getSortHint());
      assertEquals(3519, tiffField0.getDirectoryType());
      assertEquals(3519, tiffField0.getTag());
      assertEquals(7038, tiffField0.getBytesLength());
      assertEquals(3519L, tiffField0.getCount());
      assertEquals(3519, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(137, 137, fieldTypeRational0, 137, 137, byteArray0, byteOrder0, 137);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(137, tiffField0.getDirectoryType());
      assertEquals(137, tiffField0.getOffset());
      assertEquals(1096, tiffField0.getBytesLength());
      assertEquals(137, tiffField0.getTag());
      assertEquals(137, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(137L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[176];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1, 579, fieldTypeDouble0, 1, 579, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(579, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(579, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(1831, 1831, fieldTypeLong0, 1831, 1831, byteArray0, byteOrder0, 1831);
      tiffField0.getIntArrayValue();
      assertEquals(1831, tiffField0.getDirectoryType());
      assertEquals(7324, tiffField0.getBytesLength());
      assertEquals(1831L, tiffField0.getCount());
      assertEquals(1831, tiffField0.getTag());
      assertEquals(1831, tiffField0.getSortHint());
      assertEquals(1831, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3498, 3498, fieldTypeShort0, 3498, 3498, byteArray0, byteOrder0, 3498);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(3498, tiffField0.getSortHint());
      assertEquals(3498, tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(3498, tiffField0.getTag());
      assertEquals(3498, tiffField0.getOffset());
      assertEquals(6996, tiffField0.getBytesLength());
      assertEquals(3498L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(47, 47, fieldTypeRational0, 47, 47, byteArray0, byteOrder0, 47);
      tiffField0.getIntArrayValue();
      assertEquals(47, tiffField0.getDirectoryType());
      assertEquals(47, tiffField0.getOffset());
      assertEquals(47, tiffField0.getSortHint());
      assertEquals(47, tiffField0.getTag());
      assertEquals(376, tiffField0.getBytesLength());
      assertEquals(47L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeRational0, 6, 6, byteArray0, byteOrder0, 6);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2133447818, 2133447818, fieldTypeByte0, 2133447818, 2133447818, byteArray0, byteOrder0, 2133447818);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@4b0c2910 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(20, 2223, fieldTypeAscii0, 2688L, (-9800L), byteArray0, byteOrder0, 2223);
      String string0 = tiffField0.getStringValue();
      assertEquals((-9800), tiffField0.getOffset());
      assertEquals(2688, tiffField0.getBytesLength());
      assertEquals(2223, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(20, tiffField0.getTag());
      assertEquals(2223, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(2144025553, 2144025553, fieldTypeShort0.UNDEFINED, 2144025553, 2144025553, byteArray0, byteOrder0, 2144025553);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@1857eebc
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2133447818, 2133447818, fieldTypeByte0, 2133447818, 2133447818, byteArray0, byteOrder0, 2133447818);
      String string0 = tiffField0.getTagName();
      assertEquals(2133447818, tiffField0.getDirectoryType());
      assertEquals(2133447818, tiffField0.getSortHint());
      assertEquals(2133447818, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x7f29d48a)", string0);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(11, 11, fieldTypeRational0, 11, 11, byteArray0, byteOrder0, 11);
      String string0 = tiffField0.getTagName();
      assertEquals(11, tiffField0.getOffset());
      assertEquals("ProcessingSoftware", string0);
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(11, tiffField0.getTag());
      assertEquals(11, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[140];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeFloat0, 8, 8, byteArray0, byteOrder0, 8);
      String string0 = tiffField0.getValueDescription();
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getOffset());
      assertEquals(8L, tiffField0.getCount());
      assertEquals(8, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertEquals(8, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[75];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(1173, (-31), fieldTypeFloat0.UNDEFINED, 1173, 1173, byteArray0, byteOrder0, (-31));
      String string0 = tiffField0.toString();
      assertEquals(1173, tiffField0.getOffset());
      assertEquals("1173 (0x495: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (75) (1173 Undefined)", string0);
      assertEquals(1173, tiffField0.getBytesLength());
      assertEquals((-31), tiffField0.getSortHint());
      assertEquals((-31), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(2144025547, 2144025547, fieldTypeShort0.UNDEFINED, 2144025547, 2144025547, byteArray0, byteOrder0, 2144025547);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2144025547, tiffField0.getOffset());
      assertEquals(2144025547, tiffField0.getDirectoryType());
      assertEquals(2144025547, tiffField0.getBytesLength());
      assertEquals(2144025547, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(2144025547L, tiffField0.getCount());
      assertEquals(2144025547, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[215];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeDouble0, 33, 33, byteArray0, byteOrder0, 33);
      String string0 = tiffField0.getValueDescription();
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(33, tiffField0.getTag());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0", string0);
      assertEquals(33, tiffField0.getOffset());
      assertEquals(33L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(33, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)93, (byte)93, fieldTypeDouble0, (byte)93, (byte)93, byteArray0, byteOrder0, (byte)93);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(744, tiffField0.getBytesLength());
      assertEquals(93, tiffField0.getOffset());
      assertEquals(93, tiffField0.getDirectoryType());
      assertEquals(93, tiffField0.getSortHint());
      assertEquals(93, tiffField0.getTag());
      assertEquals(93L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[259];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(993, (-1401), fieldTypeDouble0.IFD, 993, 993, byteArray0, byteOrder0, (-1401));
      String string0 = tiffField0.getValueDescription();
      assertEquals(993, tiffField0.getTag());
      assertEquals(993L, tiffField0.getCount());
      assertEquals(3972, tiffField0.getBytesLength());
      assertEquals((-1401), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(993, tiffField0.getOffset());
      assertEquals((-1401), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[71];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((byte)93, (byte)93, fieldTypeLong0, (byte)93, (byte)93, byteArray0, byteOrder0, (byte)93);
      String string0 = tiffField0.toString();
      assertEquals(93, tiffField0.getOffset());
      assertEquals(93, tiffField0.getSortHint());
      assertEquals("93 (0x5d: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (93 Long)", string0);
      assertEquals(93, tiffField0.getDirectoryType());
      assertEquals(372, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[240];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(2, 2, fieldTypeFloat0, 304L, 2411L, byteArray0, byteOrder0, 2);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(2411, tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(1216, tiffField0.getBytesLength());
      assertEquals(304L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[240];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(969, 3090, fieldTypeDouble0.ASCII, 3090, 3090, byteArray0, byteOrder0, 468);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(3090, tiffField0.getOffset());
      assertEquals(969, tiffField0.getTag());
      assertEquals(3090, tiffField0.getBytesLength());
      assertEquals(468, tiffField0.getSortHint());
      assertEquals(3090, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(10, 10, fieldTypeRational0, 10, 10, byteArray0, byteOrder0, 10);
      String string0 = tiffField0.getValueDescription();
      assertEquals(10, tiffField0.getTag());
      assertEquals(10, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(80, tiffField0.getBytesLength());
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(10L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[224];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(993, 993, fieldTypeShort0, 993, 2011L, byteArray0, byteOrder0, 993);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(993, tiffField0.getDirectoryType());
      assertEquals(993, tiffField0.getSortHint());
      assertEquals(1986, tiffField0.getBytesLength());
      assertEquals(993L, tiffField0.getCount());
      assertEquals(993, tiffField0.getTag());
      assertEquals(2011, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[28];
      TiffField tiffField0 = new TiffField((-2147290336), (-2147290336), fieldTypeShort0.ASCII, (byte)0, (byte)0, byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.toString();
      assertEquals((-2147290336), tiffField0.getDirectoryType());
      assertEquals((-2147290336), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)96, 34910, fieldTypeLong0.SRATIONAL, (byte)96, (-3740L), byteArray0, byteOrder0, (-2078));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)96, (-2078));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(34910, tiffField0.getDirectoryType());
      assertEquals(96, tiffField0.getTag());
      assertEquals((-2078), tiffField0.getSortHint());
      assertFalse(tiffField0.isLocalValue());
      assertEquals((-3740), tiffField0.getOffset());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[252];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1007, 1007, fieldTypeDouble0, 1007, 1007, byteArray0, byteOrder0, 1007);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      String string0 = tiffElement0.getElementDescription();
      assertEquals(1007, tiffField0.getSortHint());
      assertEquals(1007, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Double", string0);
      assertEquals(1007, tiffField0.getDirectoryType());
      assertEquals(1007L, tiffElement0.offset);
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1233), (-1233), fieldTypeRational0, (-1233), 3535L, byteArray0, byteOrder0, (-1233));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(3535, tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals((-1233), tiffField0.getSortHint());
      assertEquals((-1233), tiffField0.getDirectoryType());
      assertEquals((-1233), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(47, 47, fieldTypeRational0, 47, 47, byteArray0, byteOrder0, 47);
      tiffField0.getFieldTypeName();
      assertEquals(47, tiffField0.getSortHint());
      assertEquals(47, tiffField0.getOffset());
      assertEquals(47, tiffField0.getTag());
      assertEquals(47, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3519, 3519, fieldTypeShort0, 3519, 3519, byteArray0, byteOrder0, 3519);
      int int0 = tiffField0.getSortHint();
      assertEquals(3519, tiffField0.getOffset());
      assertEquals(3519, tiffField0.getTag());
      assertEquals(3519, int0);
      assertEquals(3519, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 2909L, 0, byteArray0, (ByteOrder) null, 2001);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2001, tiffField0.getSortHint());
      assertEquals("0 (0x0: Unknown Tag): ", string0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(2909L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1162), (-1162), fieldTypeShort0, (-1162), (-1162), byteArray0, byteOrder0, (-1162));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[140];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeFloat0, 8, 8, byteArray0, byteOrder0, 8);
      tiffField0.getDoubleArrayValue();
      assertEquals(8, tiffField0.getTag());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8L, tiffField0.getCount());
      assertEquals(32, tiffField0.getBytesLength());
      assertEquals(8, tiffField0.getOffset());
      assertEquals(8, tiffField0.getDirectoryType());
  }
}
