/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 06 05:41:28 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2042), "@4b9R");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-66);
      TiffField tiffField0 = new TiffField((-644), (-644), fieldTypeShort0, 2779L, (-800L), byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-644), tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(190, int0);
      assertEquals((-644), tiffField0.getDirectoryType());
      assertEquals((-800), tiffField0.getOffset());
      assertEquals(5558, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)95;
      byteArray0[4] = (byte)71;
      TiffField tiffField0 = new TiffField(50, (-1622), fieldTypeRational0, 9504L, (-1622), byteArray0, (ByteOrder) null, (byte) (-88));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1622), tiffField0.getDirectoryType());
      assertEquals((-88), tiffField0.getSortHint());
      assertEquals(1, int0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(76032, tiffField0.getBytesLength());
      assertEquals((-1622), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)71;
      TiffField tiffField0 = new TiffField(50, (-1622), fieldTypeRational0, 9504L, (-1622), byteArray0, (ByteOrder) null, (byte) (-88));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1622), tiffField0.getOffset());
      assertEquals((-88), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-1622), tiffField0.getDirectoryType());
      assertEquals(76032, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)115, (byte)0, fieldTypeLong0, 1L, 1802L, byteArray0, byteOrder0, (byte)88);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(88, tiffField0.getSortHint());
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1802, tiffField0.getOffset());
      assertEquals(115, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1123, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(28, (-279), fieldTypeShort0, 2743L, 8L, byteArray0, byteOrder0, (-279));
      String string0 = tiffField0.toString();
      assertEquals((-279), tiffField0.getSortHint());
      assertEquals(8, tiffField0.getOffset());
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (2743 null)", string0);
      assertEquals((-279), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1123, 1123, fieldTypeShort0, 1123, 1123, byteArray0, byteOrder0, 1123);
      tiffField0.dump();
      assertEquals(2246, tiffField0.getBytesLength());
      assertEquals(1123, tiffField0.getDirectoryType());
      assertEquals(1123, tiffField0.getSortHint());
      assertEquals(1123, tiffField0.getTag());
      assertEquals(1123, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 602, fieldTypeLong0, 4L, (byte)0, byteArray0, byteOrder0, 3998);
      tiffField0.getValue();
      assertEquals(602, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(3998, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[49];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(400, (-1807), fieldTypeDouble0, 1450L, 2656L, byteArray0, (ByteOrder) null, 0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1807), tiffField0.getDirectoryType());
      assertEquals(400, tagInfo0.tag);
      assertEquals(400, tiffField0.getTag());
      assertEquals(2656, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(1672, 1672, fieldTypeLong0, 1672, 28L, byteArray0, (ByteOrder) null, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1672, tiffField0.getDirectoryType());
      assertEquals(1672, int0);
      assertEquals(28, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1540), (-1540), fieldTypeAscii0, (-1540), 0L, byteArray0, byteOrder0, (byte)85);
      int int0 = tiffField0.getTag();
      assertEquals((-1540), int0);
      assertEquals((-1540), tiffField0.getDirectoryType());
      assertEquals(85, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1196), "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)82;
      TiffField tiffField0 = new TiffField(377, 266, fieldTypeAscii0, 266, (byte)82, byteArray0, byteOrder0, (-1196));
      String string0 = tiffField0.getStringValue();
      assertEquals(377, tiffField0.getTag());
      assertEquals(266, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(266, tiffField0.getDirectoryType());
      assertEquals(82, tiffField0.getOffset());
      assertEquals((-1196), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 745, (FieldType) null, 0L, 0L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getTag());
      assertEquals(745, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-478), "+[e{:]>");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1267), (-478), fieldTypeRational0, (-470L), (-470L), byteArray0, byteOrder0, (-478));
      int int0 = tiffField0.getSortHint();
      assertEquals((-478), int0);
      assertEquals((-1267), tiffField0.getTag());
      assertEquals((-470), tiffField0.getOffset());
      assertEquals((-478), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2, (byte) (-100), fieldTypeDouble0.SBYTE, 132L, 0, byteArray0, byteOrder0, (-800));
      int int0 = tiffField0.getOffset();
      assertEquals((-800), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals((-100), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, (-1L), 3256L, byteArray0, byteOrder0, 315);
      int int0 = tiffField0.getOffset();
      assertEquals(3256, int0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(315, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(65535, "%}!BuCo`2/5dVM=");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, 836, fieldTypeLong0, (byte)1, (byte)0, byteArray0, byteOrder0, 1285);
      tiffField0.getIntValueOrArraySum();
      assertEquals(836, tiffField0.getDirectoryType());
      assertEquals(1285, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byteArray0[0] = (byte) (-1);
      TiffField tiffField0 = new TiffField(2414, (-1717986917), fieldTypeByte0, 1L, (-1717986917), byteArray0, byteOrder0, 2147257620);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(2414, tiffField0.getTag());
      assertEquals(2147257620, tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(65535, "%}!BuCo`2/5dVM=");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)1, 836, fieldTypeLong0, (byte)1, (byte)0, byteArray0, byteOrder0, 1285);
      tiffField0.getIntValue();
      assertEquals(1285, tiffField0.getSortHint());
      assertEquals(836, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(1, "ModelPixelScaleTag");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-111);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1302), 1, fieldTypeShort0, 1, (-828L), byteArray0, byteOrder0, 1);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-1302), tiffField0.getTag());
      assertEquals((-828), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1303, 1303, fieldTypeDouble0, 1303, 1303, byteArray0, byteOrder0, 1303);
      tiffField0.getFieldTypeName();
      assertEquals(1303, tiffField0.getTag());
      assertEquals(1303, tiffField0.getSortHint());
      assertEquals(1303, tiffField0.getDirectoryType());
      assertEquals(1303, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1449), "");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(336, (-3186), fieldTypeShort0, (byte)0, (-2147384249), byteArray0, byteOrder0, 1);
      tiffField0.getFieldTypeName();
      assertEquals((-2147384249), tiffField0.getOffset());
      assertEquals(336, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-3186), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1303, fieldTypeDouble0, (byte) (-100), 1761L, byteArray0, byteOrder0, 2);
      tiffField0.getFieldType();
      assertEquals(1303, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1761, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1809), 65535, fieldTypeByte0, 1L, (-1333L), byteArray0, byteOrder0, (-1070));
      tiffField0.getFieldType();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-1070), tiffField0.getSortHint());
      assertEquals((-1809), tiffField0.getTag());
      assertEquals((-1333), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-635), "%}!BuCo`2/5dVM=");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-635), (-635), fieldTypeLong0, (-635), (-635), byteArray0, (ByteOrder) null, (-635));
      tiffField0.getFieldType();
      assertEquals((-635), tiffField0.getSortHint());
      assertEquals((-635), tiffField0.getOffset());
      assertEquals((-635), tiffField0.getTag());
      assertEquals((-635), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[34];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(338, 338, fieldTypeShort0, 1L, 338, byteArray0, byteOrder0, 338);
      tiffField0.getDoubleValue();
      assertEquals(338, tiffField0.getSortHint());
      assertEquals(338, tiffField0.getTag());
      assertEquals(338, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(338, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[21];
      byteArray0[0] = (byte)3;
      TiffField tiffField0 = new TiffField((byte)3, (-903), fieldTypeLong0.SSHORT, 1L, 12360L, byteArray0, byteOrder0, (-415));
      tiffField0.getDoubleValue();
      assertEquals((-903), tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getTag());
      assertEquals((-415), tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(12360, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byteArray0[0] = (byte) (-1);
      TiffField tiffField0 = new TiffField(2414, (-1717986917), fieldTypeByte0, 1L, (-1717986917), byteArray0, byteOrder0, 2147257620);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(2414, tiffField0.getTag());
      assertEquals(2147257620, tiffField0.getSortHint());
      assertEquals((-1717986917), tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (-1L), (-1L), byteArray0, byteOrder0, (byte) (-80));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-80), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-635), "%}!BuCo`2/5dVM=");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)0, 50, fieldTypeLong0.ASCII, 50, 0L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, int0);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1196), "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(377, 266, fieldTypeAscii0, 266, (byte)82, byteArray0, byteOrder0, (-1196));
      long long0 = tiffField0.getCount();
      assertEquals((-1196), tiffField0.getSortHint());
      assertEquals(266L, long0);
      assertEquals(377, tiffField0.getTag());
      assertEquals(82, tiffField0.getOffset());
      assertEquals(266, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 7, fieldTypeDouble0, (-684L), 8608L, byteArray0, byteOrder0, (-20));
      long long0 = tiffField0.getCount();
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals((-684L), long0);
      assertEquals(65535, tiffField0.getTag());
      assertEquals(8608, tiffField0.getOffset());
      assertEquals((-20), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, " ");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-635), "%}!BuCo`2/5dVM=");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-635), (-635), fieldTypeLong0, (-635), (-635), byteArray0, (ByteOrder) null, (-635));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-635), tiffField0.getOffset());
      assertEquals((-635), tiffField0.getDirectoryType());
      assertEquals((-635), tiffField0.getSortHint());
      assertEquals((-635), tiffField0.getTag());
      assertEquals((-2540), int0);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeRational0, 528L, 50, byteArray0, (ByteOrder) null, 0);
      tiffField0.getByteOrder();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte)0, "U6Q:{");
      byte[] byteArray0 = new byte[21];
      TiffField tiffField0 = new TiffField(3, 9, fieldTypeShort0, 1L, (byte)0, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getByteOrder();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(3, tiffField0.getTag());
      assertEquals(9, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      byte[] byteArray0 = new byte[49];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(400, (-1807), fieldTypeDouble0, 1450L, 2656L, byteArray0, (ByteOrder) null, 0);
      tiffField0.getByteArrayValue();
      assertEquals(400, tiffField0.getTag());
      assertEquals(2656, tiffField0.getOffset());
      assertEquals(11600, tiffField0.getBytesLength());
      assertEquals((-1807), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "JDpa");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 223L, 0L, byteArray0, byteOrder0, 0);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(892, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-242), 2414, fieldTypeByte0, 2577L, (-242), byteArray0, byteOrder0, 955);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1696, (String) null);
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1966), (byte)0, fieldTypeAscii0, 4L, (byte)0, byteArray0, byteOrder0, (byte)0);
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1570, 1570, (FieldType) null, 1570, 1570, byteArray0, byteOrder0, 1570);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-3), (-3), fieldTypeRational0, (-3), (-3), byteArray0, (ByteOrder) null, (-3));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(23, 23, fieldTypeRational0, 23, 23, (byte[]) null, (ByteOrder) null, 23);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, (ByteOrder) null, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-1), fieldTypeFloat0, (-1), 1226L, byteArray0, byteOrder0, 27);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-14), (-14), fieldTypeLong0, (-14), (-14), byteArray0, byteOrder0, (-14));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-1933), fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(7, 7, (FieldType) null, 7, 7, byteArray0, byteOrder0, 7);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, (ByteOrder) null, (-1));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(45, 26, (FieldType) null, 26, 26, byteArray0, (ByteOrder) null, 45);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(0, 3, (FieldType) null, 3, 3, byteArray0, (ByteOrder) null, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-3738), (-3738), fieldTypeShort0, (-3738), (-3738), byteArray0, byteOrder0, (-3738));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, (FieldType) null, 50, 50, (byte[]) null, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-4), (-4), fieldTypeRational0, (-4), (-4), byteArray0, (ByteOrder) null, (-4));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(17, 17, fieldTypeShort0, 17, 17, byteArray0, byteOrder0, 17);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1571, 1571, fieldTypeShort0, 1L, 1571, byteArray0, byteOrder0, 1571);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(27, 9, fieldTypeRational0, 9, 9, (byte[]) null, (ByteOrder) null, 27);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2093), (-2093), fieldTypeShort0, (-2093), (-2093), byteArray0, byteOrder0, (-2093));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(28, (-203), fieldTypeRational0, 28, (-203), byteArray0, (ByteOrder) null, (-203));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeRational0, 9, (-1412L), (byte[]) null, byteOrder0, 9);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-39), (-39), fieldTypeRational0, (-39), (-39), byteArray0, (ByteOrder) null, (-39));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(18, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 0, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(2120300271, 2120300271, fieldTypeRational0, 2120300271, 2120300271, byteArray0, (ByteOrder) null, 2120300271);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2093), (-2093), fieldTypeShort0, (-2093), (-2093), byteArray0, byteOrder0, (-2093));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[39];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(325, 325, fieldTypeShort0, 325, 325, byteArray0, byteOrder0, 325);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(232, "O&@?EwUg$V");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(232, 232, fieldTypeFloat0, 1L, 232, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-109), (-109), fieldTypeDouble0, (-109), (-109), (byte[]) null, byteOrder0, (-109));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-1), (-1), byteArray0, (ByteOrder) null, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(15, 33, fieldTypeRational0, (-1905L), 33, byteArray0, (ByteOrder) null, 33);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(" (");
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1477), (byte)1, fieldTypeLong0, (byte)0, (byte)1, byteArray0, byteOrder0, (byte) (-38));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-1477), tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals((-38), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2376, 2376, fieldTypeLong0, 2376, 2376, byteArray0, (ByteOrder) null, (-1534));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(2376, tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(2376, tiffField0.getOffset());
      assertEquals(2376, tiffField0.getTag());
      assertEquals((-1534), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50, "3zb");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeShort0, 3380L, 0L, (byte[]) null, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(412, 412, (FieldType) null, 412, 412, byteArray0, byteOrder0, (-1493));
      tiffField0.getFieldType();
      assertEquals((-1493), tiffField0.getSortHint());
      assertEquals(412, tiffField0.getDirectoryType());
      assertEquals(412, tiffField0.getTag());
      assertEquals(412, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-635), "%}!BuCo`2/5dVM=");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-635), (-635), fieldTypeLong0, (-635), (-635), byteArray0, (ByteOrder) null, (-635));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-635), int0);
      assertEquals((-635), tiffField0.getSortHint());
      assertEquals((-635), tiffField0.getTag());
      assertEquals((-635), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-2098), (-2098), fieldTypeShort0, (-2098), (-2098), byteArray0, byteOrder0, (-2098));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2689, 2689, (FieldType) null, 2689, 2689, (byte[]) null, byteOrder0, 2689);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-635), "%}!BuCo`2/5dVM=");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-635), (-635), fieldTypeLong0, (-635), (-635), byteArray0, (ByteOrder) null, (-635));
      int int0 = tiffField0.getOffset();
      assertEquals((-635), tiffField0.getDirectoryType());
      assertEquals((-635), tiffField0.getSortHint());
      assertEquals((-635), tiffField0.getTag());
      assertEquals((-635), int0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(27, "L)9aV7B");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-2106), fieldTypeRational0, (-33112L), (-33112L), byteArray0, byteOrder0, (byte) (-26));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tagInfo0.tag);
      assertEquals((-33112), tiffField0.getOffset());
      assertEquals((-2106), tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
      assertEquals((-26), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, 602, fieldTypeLong0, 4L, (byte)0, byteArray0, byteOrder0, 3998);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(3998, tiffField0.getSortHint());
      assertEquals(602, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2277, 0, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, (-1581));
      tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-1581), tiffField0.getSortHint());
      assertEquals(2277, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(878, "Y<m~G4o\"");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 878, fieldTypeByte0, 874L, 698L, byteArray0, byteOrder0, (byte) (-107));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-107), tiffField0.getSortHint());
      assertEquals(874, int0);
      assertEquals(878, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals(698, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1123, 1123, fieldTypeShort0, 1123, 1123, byteArray0, byteOrder0, 1123);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(1123, tiffField0.getOffset());
      assertEquals("1123 (0x463: Unknown Tag): ", string0);
      assertEquals(1123, tiffField0.getSortHint());
      assertEquals(1123, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1122, 1122, fieldTypeShort0, 1122, 1122, byteArray0, byteOrder0, 1122);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(21, 21, fieldTypeRational0, 1L, 1L, byteArray0, (ByteOrder) null, 21);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[17];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1571, 1571, fieldTypeLong0, 1571, 1571, byteArray0, byteOrder0, 1571);
      tiffField0.getIntValueOrArraySum();
      assertEquals(1571, tiffField0.getOffset());
      assertEquals(1571, tiffField0.getDirectoryType());
      assertEquals(1571, tiffField0.getSortHint());
      assertEquals(1571, tiffField0.getTag());
      assertEquals(1571L, tiffField0.getCount());
      assertEquals(6284, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[30];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(64, 64, fieldTypeFloat0, 64, 64, byteArray0, byteOrder0, 64);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@47428c9d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeRational0, 3, 3, byteArray0, (ByteOrder) null, 3);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(65510, 65510, fieldTypeByte0, 65510, 65510, byteArray0, byteOrder0, 65510);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@697ae241 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[176];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(223, 223, fieldTypeDouble0, 223, 223, byteArray0, byteOrder0, 223);
      tiffField0.getDoubleArrayValue();
      assertEquals(223, tiffField0.getDirectoryType());
      assertEquals(223, tiffField0.getTag());
      assertEquals(223, tiffField0.getOffset());
      assertEquals(223, tiffField0.getSortHint());
      assertEquals(1784, tiffField0.getBytesLength());
      assertEquals(223L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(1662, 1662, fieldTypeLong0, 1662, 1662, byteArray0, byteOrder0, 1662);
      tiffField0.getDoubleArrayValue();
      assertEquals(1662, tiffField0.getDirectoryType());
      assertEquals(1662, tiffField0.getSortHint());
      assertEquals(1662L, tiffField0.getCount());
      assertEquals(6648, tiffField0.getBytesLength());
      assertEquals(1662, tiffField0.getTag());
      assertEquals(1662, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(237, 237, fieldTypeLong0, 237, 237, byteArray0, byteOrder0, 237);
      tiffField0.getDoubleArrayValue();
      assertEquals(237, tiffField0.getOffset());
      assertEquals(237, tiffField0.getDirectoryType());
      assertEquals(237, tiffField0.getSortHint());
      assertEquals(237, tiffField0.getTag());
      assertEquals(237L, tiffField0.getCount());
      assertEquals(948, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1123, 1123, fieldTypeShort0, 1123, 1123, byteArray0, byteOrder0, 1123);
      tiffField0.getDoubleArrayValue();
      assertEquals(2246, tiffField0.getBytesLength());
      assertEquals(1123, tiffField0.getOffset());
      assertEquals(1123, tiffField0.getSortHint());
      assertEquals(1123, tiffField0.getTag());
      assertEquals(1123, tiffField0.getDirectoryType());
      assertEquals(1123L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[30];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1192, 1192, fieldTypeFloat0, 1192, 1192, byteArray0, byteOrder0, 1192);
      tiffField0.getDoubleArrayValue();
      assertEquals(1192, tiffField0.getOffset());
      assertEquals(4768, tiffField0.getBytesLength());
      assertEquals(1192L, tiffField0.getCount());
      assertEquals(1192, tiffField0.getDirectoryType());
      assertEquals(1192, tiffField0.getSortHint());
      assertEquals(1192, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[151];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeFloat0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeRational0, 3, 3, byteArray0, (ByteOrder) null, 3);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getTag());
      assertEquals(3, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(24, tiffField0.getBytesLength());
      assertEquals(3L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[30];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(64, 64, fieldTypeFloat0, 64, 64, byteArray0, byteOrder0, 64);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@56f20005 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1123, 1123, fieldTypeShort0, 1123, 1123, byteArray0, byteOrder0, 1123);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(1123L, tiffField0.getCount());
      assertEquals(1123, tiffField0.getTag());
      assertEquals(1123, tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {0, 0, 0, 0, 0}, intArray0);
      assertEquals(2246, tiffField0.getBytesLength());
      assertEquals(1123, tiffField0.getSortHint());
      assertEquals(1123, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, (ByteOrder) null, 0);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[19];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, 0, byteArray0, (ByteOrder) null, 0);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, intArray0.length);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(9, 9, fieldTypeRational0, 1L, 9, byteArray0, (ByteOrder) null, 9);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(3, 3, fieldTypeRational0, 3, 3, byteArray0, (ByteOrder) null, 3);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1122, "ProfileCalibrationSignature");
      TiffField tiffField0 = new TiffField(1122, 1122, fieldTypeAscii0, 1122, 1122, byteArray0, byteOrder0, 2477);
      String string0 = tiffField0.getStringValue();
      assertEquals(1122, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(1122, tiffField0.getOffset());
      assertEquals(1122, tiffField0.getDirectoryType());
      assertEquals(1122, tiffField0.getBytesLength());
      assertEquals(2477, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, 0, byteArray0, (ByteOrder) null, 0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Lorg.apache.commons.imaging.common.RationalNumber;@277a8e84
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1104, 1104, fieldTypeShort0, 1104, 1104, byteArray0, byteOrder0, 1104);
      String string0 = tiffField0.getTagName();
      assertEquals(1104, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x450)", string0);
      assertEquals(1104, tiffField0.getSortHint());
      assertEquals(1104, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[39];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(325, 325, fieldTypeShort0, 325, 325, byteArray0, byteOrder0, 325);
      String string0 = tiffField0.getTagName();
      assertEquals(325, tiffField0.getSortHint());
      assertEquals("TileByteCounts", string0);
      assertEquals(325, tiffField0.getOffset());
      assertEquals(325, tiffField0.getTag());
      assertEquals(325, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(10, 10, fieldTypeRational0, 10, 10, byteArray0, (ByteOrder) null, 10);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "#cU|9n&N&@E*0IsAV");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[223];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(54, 54, fieldTypeFloat0, 54, 320L, byteArray0, byteOrder0, 54);
      String string0 = tiffField0.toString();
      assertEquals(54, tiffField0.getDirectoryType());
      assertEquals(54, tiffField0.getSortHint());
      assertEquals("54 (0x36: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (54) (54 Float)", string0);
      assertEquals(320, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[52];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-1), 65511, fieldTypeShort0.SBYTE, 65511, (-336L), byteArray0, byteOrder0, (-1));
      String string0 = tiffField0.toString();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals("-1 (0xffffffff: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (65511 SByte)", string0);
      assertEquals(65511, tiffField0.getDirectoryType());
      assertEquals((-336), tiffField0.getOffset());
      assertEquals(65511, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[30];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(64, 64, fieldTypeFloat0, 64, 64, byteArray0, byteOrder0, 64);
      String string0 = tiffField0.toString();
      assertEquals(64, tiffField0.getOffset());
      assertEquals("64 (0x40: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (64 Float)", string0);
      assertEquals(256, tiffField0.getBytesLength());
      assertEquals(64, tiffField0.getDirectoryType());
      assertEquals(64, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[176];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(223, 223, fieldTypeDouble0, 223, 223, byteArray0, byteOrder0, 223);
      String string0 = tiffField0.toString();
      assertEquals(223, tiffField0.getSortHint());
      assertEquals(223, tiffField0.getOffset());
      assertEquals(1784, tiffField0.getBytesLength());
      assertEquals("223 (0xdf: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (223 Double)", string0);
      assertEquals(223, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[214];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 92, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).ASCII).SLONG, 92, 92, byteArray0, byteOrder0, 267);
      String string0 = tiffField0.getValueDescription();
      assertEquals(92, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53)", string0);
      assertEquals(267, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(92, tiffField0.getDirectoryType());
      assertEquals(92L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(1101, 1101, fieldTypeLong0, 1101, 1101, byteArray0, byteOrder0, 1101);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1101, tiffField0.getSortHint());
      assertEquals(1101, tiffField0.getDirectoryType());
      assertEquals(1101L, tiffField0.getCount());
      assertEquals(4404, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1101, tiffField0.getTag());
      assertEquals(1101, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[106];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(338, 338, fieldTypeShort0, 338, 338, byteArray0, byteOrder0, 338);
      String string0 = tiffField0.getValueDescription();
      assertEquals(338, tiffField0.getDirectoryType());
      assertEquals(338, tiffField0.getTag());
      assertEquals(338, tiffField0.getOffset());
      assertEquals(338, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(676, tiffField0.getBytesLength());
      assertEquals(338L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[52];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1016), "c:hloQE-JD^!");
      TiffField tiffField0 = new TiffField(2429, 2429, fieldTypeAscii0, 338, (-1L), byteArray0, byteOrder0, (-1));
      tiffField0.toString();
      assertEquals(2429, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(2429, tiffField0.getTag());
      assertEquals(338, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(338L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-2769), "DeviceSettingDescription");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeAscii0, (byte)0, 43L, byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.toString();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(43, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(65510, 1503, fieldTypeRational0, 0L, 65510, byteArray0, (ByteOrder) null, 65510);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1503, 1503);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(65510, tiffField0.getOffset());
      assertEquals(65510, tiffField0.getSortHint());
      assertEquals(65510, tiffField0.getTag());
      assertNull(string0);
      assertEquals(1503, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1038, 1038, fieldTypeRational0, 1038, (-2072L), byteArray0, (ByteOrder) null, 1038);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      String string0 = tiffElement0.getElementDescription();
      assertEquals(1038, tiffField0.getSortHint());
      assertEquals(1038, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Rational", string0);
      assertEquals((-2072L), tiffElement0.offset);
      assertNotNull(string0);
      assertEquals(1038, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(24, 24, fieldTypeShort0, 24, 24, byteArray0, byteOrder0, 24);
      tiffField0.getFieldTypeName();
      assertEquals(24, tiffField0.getOffset());
      assertEquals(24, tiffField0.getSortHint());
      assertEquals(24, tiffField0.getDirectoryType());
      assertEquals(24, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(298, 0, fieldTypeShort0, 175L, 298, byteArray0, byteOrder0, 298);
      int int0 = tiffField0.getSortHint();
      assertEquals(298, int0);
      assertEquals(298, tiffField0.getTag());
      assertEquals(298, tiffField0.getOffset());
      assertEquals(350, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(27, (-3150), fieldTypeRational0, 27, (-3150), byteArray0, (ByteOrder) null, (-3150));
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(2120300289, 1, fieldTypeRational0, 1, 2120300289, byteArray0, (ByteOrder) null, 2120300289);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, (ByteOrder) null, 1);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(1L, tiffField0.getCount());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
  }
}
