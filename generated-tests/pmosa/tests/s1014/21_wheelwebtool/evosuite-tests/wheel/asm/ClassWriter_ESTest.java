/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 05:12:16 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;
import wheel.asm.Label;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      Item item0 = classWriter0.newInteger(4);
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(item0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.Item@6
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.IOCase");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      classReader0.getInterfaces();
      classWriter0.visitOuterClass("org.apache.commons.io.IOCase", "org.apache.commons.io.IOCase", "org.apache.commons.io.IOCase");
      classReader0.getSuperName();
      String string0 = "";
      classReader0.accept((ClassVisitor) classWriter0, 1);
      classReader0.getInterfaces();
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("org.apache.commons.io.IOCase", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      classWriter0.toByteArray();
      int int0 = classWriter0.newUTF8("Q#]|Us?43`");
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-979));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "re$swHF9{wSe";
      classWriter0.visit((-979), 1040, "re$swHF9{wSe", "wheel.asm.Type", "re$swHF9{wSe", stringArray0);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      classWriter0.visitOuterClass("Ytr6(C", (String) null, "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.IOCase");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(6, 446);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-38));
      classWriter0.toByteArray();
      Integer integer0 = new Integer(1);
      int int0 = classWriter0.newConst(integer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.CanWriteFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      Item item0 = classWriter0.newDouble((-1160.2196));
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-38));
      classWriter0.toByteArray();
      Byte byte0 = new Byte((byte)118);
      Item item0 = classWriter0.newConstItem(byte0);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2205));
      classWriter0.toByteArray();
      int int0 = classWriter0.newNameType("char", "char");
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-596));
      String[] stringArray0 = new String[0];
      classWriter0.visit((-596), 172, "float", "float", "float", stringArray0);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-596), (-596));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      String string0 = classWriter0.getCommonSuperClass("java/lang/String", "org.apache.commons.io.filefilter.DirectoryFileFilter");
      assertEquals("java/lang/Object", string0);
      
      Boolean boolean0 = Boolean.valueOf("java/lang/Object");
      int int0 = classWriter0.newConst(boolean0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(663);
      classWriter0.visitField(255, "Xh\"", "XZWmdrJ=y,O`4D5", "Xh\"", "XZWmdrJ=y,O`4D5");
      classWriter0.visitAnnotation("XZWmdrJ=y,O`4D5", false);
      classWriter0.newNameType("/z,vG@>", "InnerClasses");
      classWriter0.newClassItem("");
      classWriter0.addUninitializedType("yn]1- dCpB4V0\u0002C ", 663);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "3-A#ljW=";
      stringArray0[1] = "";
      stringArray0[2] = "/z,vG@>";
      stringArray0[3] = "/z,vG@>";
      stringArray0[4] = "wheel.asm.ClassWriter";
      stringArray0[5] = "s";
      classWriter0.version = 1;
      stringArray0[6] = "/z,vG@>";
      // Undeclared exception!
      try { 
        classWriter0.visit(1, 663, (String) null, "DErS\u0004aa+OLzwgM~J", "DErS\u0004aa+OLzwgM~J", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.IOCase");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      AnnotationVisitor annotationVisitor0 = classWriter0.visitAnnotation("java/lang/String", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-748));
      classWriter0.toByteArray();
      classWriter0.newUTF8("");
      classWriter0.addUninitializedType("", 0);
      String string0 = "";
      String string1 = "";
      classWriter0.visitOuterClass("", (String) null, "");
      String string2 = "PKuw7";
      // Undeclared exception!
      try { 
        classWriter0.newFieldItem("kA(Imx-X", (String) null, "PKuw7");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int int0 = 963;
      ClassWriter classWriter0 = new ClassWriter(963);
      classWriter0.toByteArray();
      classWriter0.newDouble(963);
      classWriter0.visitInnerClass("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", (-687));
      Double double0 = new Double(2);
      Double.min(963, (-1.0));
      classWriter0.newNameType("AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHAFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII");
      classWriter0.newConstItem(double0);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.firstField = null;
      classWriter0.toByteArray();
      String string0 = null;
      // Undeclared exception!
      try { 
        classWriter0.newClassItem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      classWriter0.visitInnerClass("wrgm9", (String) null, (String) null, (-4402));
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      classWriter0.newDouble(2208.9591226324737);
      int int0 = Float.MIN_EXPONENT;
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(825);
      classWriter0.newClassItem("%@w");
      String string0 = "";
      Attribute attribute0 = new Attribute("");
      classWriter0.visitAttribute(attribute0);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        classWriter0.visitField(2076, "Y9XeYS", "", "HWHuW8:D9DboUH", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@4eaff29f
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-38));
      classWriter0.newMethodItem("w;a<c.6D]K}bT cr", "w;a<c.6D]K}bT cr", "w;a<c.6D]K}bT cr", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2205));
      Double double0 = new Double(2108.716511562);
      Type type0 = Type.DOUBLE_TYPE;
      int int0 = classWriter0.newConst(type0);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      Type type0 = Type.BYTE_TYPE;
      classWriter0.visitField(789, "V!rlZ9rY.8Wx+GQ", "", "", type0);
      classWriter0.visitInnerClass("V!rlZ9rY.8Wx+GQ", (String) null, (String) null, 0);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      int int0 = 21;
      String[] stringArray0 = new String[2];
      stringArray0[0] = "`$r";
      stringArray0[1] = "Signature";
      classWriter0.visit(1120, 21, "Signature", "Y?88/!~#~>vtbJLhr&", "Y?88/!~#~>vtbJLhr&", stringArray0);
      String string0 = "";
      // Undeclared exception!
      try { 
        classWriter0.newMethod("", (String) null, "`$r", false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      int int0 = classWriter0.newField("", "", "");
      assertEquals(4, int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-38));
      int int0 = Double.BYTES;
      Item item0 = classWriter0.newFloat(8);
      assertNotNull(item0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212684);
      String[] stringArray0 = new String[2];
      classWriter0.addUninitializedType("Signature", 2989);
      stringArray0[0] = "Signature";
      stringArray0[1] = "Signature";
      Short short0 = new Short((short) (-1388));
      classWriter0.newConstItem(short0);
      classWriter0.toByteArray();
      classWriter0.visitInnerClass("B\"fp+G)", "", "Signature", (-1558));
      classWriter0.visitMethod(0, "Signature", "Signature", "Signature", stringArray0);
      classWriter0.visitInnerClass("Signature", "Signature", "", 285212684);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(1, 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'Signature.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-624));
      classWriter0.visitAnnotation(":b)f-#0{im)uB<-G`[", false);
      String string0 = "PNH";
      classWriter0.visitInnerClass("oI$p%X{v", "", "PNH", (-624));
      classWriter0.newDouble((-624));
      String string1 = "";
      // Undeclared exception!
      try { 
        classWriter0.newField("g", "", (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1059));
      String string0 = "boolean";
      classWriter0.visitSource("boolean", "]tw~?13YCf");
      Character character0 = Character.valueOf('1');
      Character.compare('1', 'n');
      String string1 = "";
      classWriter0.newMethod(">4IOWmd2]|\"W36N6:", "", "", false);
      Character.lowSurrogate(5);
      Character.lowSurrogate(65535);
      Character.isIdeographic((-5099));
      classWriter0.visitField((-5099), "", ">4IOWmd2]|\"W36N6:", "]tw~?13YCf", character0);
      classWriter0.addUninitializedType(">4IOWmd2]|\"W36N6:", (-5099));
      classWriter0.newNameType("SourceFile", "SourceFile");
      classWriter0.addUninitializedType("]tw~?13YCf", (-1137));
      classWriter0.addUninitializedType(">4IOWmd2]|\"W36N6:", (-5099));
      String string2 = "";
      Attribute attribute0 = new Attribute("");
      classWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        classWriter0.visitMethod(2, "", ">4IOWmd2]|\"W36N6:", (String) null, (String[]) null);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newClassItem("");
      classWriter0.newClass("B*]% a.IwZ<Noo}.u");
      classWriter0.visitOuterClass("", "B*]% a.IwZ<Noo}.u", (String) null);
      assertEquals(2, ClassWriter.COMPUTE_FRAMES);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-9));
      classWriter0.addType("char");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.newDouble(1.0);
      classWriter0.visitInnerClass((String) null, "", "", 63);
      classWriter0.newDouble(1.0);
      String string0 = "V5sV-vk@4b),lq=Jp,";
      classWriter0.newField("", "}d", "G{;=~JyHFZ5pjlG");
      MockHijrahDate mockHijrahDate0 = new MockHijrahDate();
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(mockHijrahDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate@626d2485
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      classWriter0.visit(59, 128, "D)?+az Mt,j\" !8", "LocalVariableTypeTable", "D)?+az Mt,j\" !8", (String[]) null);
      classWriter0.visitOuterClass("", "", "");
      int int0 = classWriter0.newClass("");
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.IOCase");
      ClassWriter classWriter0 = new ClassWriter(classReader0, (-114));
      classWriter0.getCommonSuperClass("org.apache.commons.io.IOCase", "java/lang/String");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertNotNull(byteArray0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212684);
      String[] stringArray0 = new String[2];
      classWriter0.addUninitializedType("Signature", 2989);
      stringArray0[0] = "Signature";
      stringArray0[1] = "Signature";
      classWriter0.visitField((-3558), "Signature", "Ljava/lang/Synthetic;", "Signature", "Signature");
      classWriter0.newConstItem("Signature");
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      int int0 = classWriter0.newField("", "", "");
      assertEquals(4, int0);
      
      classWriter0.newMethod("\"iW4x2s", "", "", false);
      int int1 = classWriter0.newMethod("Y_Pmb3:B63l~%0m{>", "KIM", "", false);
      assertEquals(12, int1);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(4);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter0.visitSource("FU[S", "FU[S");
      Item item0 = classWriter0.newFloat(4);
      Item item1 = classWriter0.newFloat(4);
      assertSame(item1, item0);
      
      int int0 = classWriter0.addUninitializedType("", (-406));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2205));
      classWriter0.newConstItem("XZI%)mHdEH| |cQ");
      byte[] byteArray0 = classWriter0.toByteArray();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Rm:^~WO6a:Ok7<R[Q";
      stringArray0[1] = "XZI%)mHdEH| |cQ";
      stringArray0[2] = "*hiz8a-#=w";
      classWriter0.visit((-2205), (-2205), "#}!k_x?!XL0HWE>bFRt", "#}!k_x?!XL0HWE>bFRt", "Rm:^~WO6a:Ok7<R[Q", stringArray0);
      byte[] byteArray1 = classWriter0.toByteArray();
      assertNotSame(byteArray1, byteArray0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      classWriter0.visitSource((String) null, "}K:uTl?dmdDR<<_M");
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-2278), (-2278));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.IOCase");
      ClassWriter classWriter0 = new ClassWriter(10);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 10);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 1);
      classReader0.accept((ClassVisitor) classWriter1, 1);
      Item item0 = classWriter1.newInteger(2);
      Item item1 = classWriter1.newClassItem("v19zu;]B_8");
      assertNotSame(item1, item0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = 9;
      ClassReader classReader0 = new ClassReader("java/lang/Object");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classReader0.accept((ClassVisitor) classWriter0, (-114));
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("gC`?!|mG?", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'gC`?!|mG?.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      classWriter0.newInteger(9);
      classWriter0.visit(9, 65, "", "m2YJ^w$|?z\":DW &f1", (String) null, (String[]) null);
      classWriter0.newInteger(9);
      classWriter0.visitAnnotation("", false);
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("RuntimeVisibleAnnotations", "m2YJ^w$|?z\":DW &f1");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'RuntimeVisibleAnnotations.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.IOCase");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1531);
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.FileFileFilter", "org.apache.commons.io.IOCase");
      Boolean.valueOf(false);
      classWriter0.newConstItem("org.apache.commons.io.IOCase");
      classReader0.copyPool(classWriter0);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-939), 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }
}
