/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 10:19:41 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.GDS;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.jni.EmbeddedGDSImpl;
import org.firebirdsql.gds.impl.jni.NativeGDSImpl;
import org.firebirdsql.jca.FBConnectionRequestInfo;
import org.firebirdsql.jca.FBManagedConnection;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBConnection;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[5][6];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)100;
      byteArray1[1] = (byte)57;
      byteArray1[2] = (byte)45;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte)57;
      byteArray2[1] = (byte)57;
      byteArray2[2] = (byte)57;
      byteArray2[3] = (byte)100;
      byteArray2[4] = (byte)100;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte)45;
      byteArray3[1] = (byte)45;
      byteArray3[2] = (byte)57;
      byteArray3[3] = (byte)57;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[7];
      byteArray4[0] = (byte)100;
      byteArray4[1] = (byte)45;
      byteArray4[2] = (byte)57;
      byteArray4[3] = (byte)100;
      byteArray4[4] = (byte)45;
      byteArray4[5] = (byte)100;
      byteArray4[6] = (byte)100;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[4];
      byteArray5[0] = (byte)45;
      byteArray5[1] = (byte)45;
      byteArray5[2] = (byte)100;
      byteArray5[3] = (byte)45;
      byteArray0[4] = byteArray5;
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.last();
      linkedList0.add(fBResultSet0.row);
      fBCachedFetcher0.isFirst();
      fBCachedFetcher0.afterLast();
      assertEquals(2, fBCachedFetcher0.getRowNum());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][8];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)74;
      byteArray1[2] = (byte)59;
      byteArray1[3] = (byte)57;
      byteArray1[4] = (byte)57;
      byteArray1[5] = (byte)67;
      byteArray1[6] = (byte) (-4);
      byteArray1[7] = (byte)57;
      byteArray0[1] = byteArray1;
      byte[] byteArray2 = new byte[0];
      byteArray0[2] = byteArray2;
      byte[] byteArray3 = new byte[2];
      byteArray3[0] = (byte) (-41);
      byteArray3[1] = (byte)59;
      byteArray0[3] = byteArray3;
      linkedList0.addLast(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.isBeforeFirst();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[9][9];
      byte[] byteArray1 = new byte[8];
      byteArray1[0] = (byte)1;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte) (-119);
      byteArray1[3] = (byte) (-5);
      byteArray1[4] = (byte) (-24);
      byteArray1[5] = (byte) (-1);
      byteArray1[6] = (byte)96;
      byteArray1[7] = (byte)123;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte) (-5);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte)0;
      byteArray3[1] = (byte)1;
      byteArray3[2] = (byte)123;
      byteArray3[3] = (byte) (-1);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      byteArray4[0] = (byte)96;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[2];
      byteArray5[0] = (byte) (-1);
      byteArray5[1] = (byte)96;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[9];
      byteArray6[0] = (byte) (-24);
      byteArray6[1] = (byte)0;
      byteArray6[2] = (byte)0;
      byteArray6[3] = (byte) (-119);
      byteArray6[4] = (byte) (-24);
      byteArray6[5] = (byte) (-119);
      byteArray6[6] = (byte)96;
      byteArray6[7] = (byte) (-5);
      byteArray6[8] = (byte)96;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[6];
      byteArray7[0] = (byte)0;
      byteArray7[1] = (byte)96;
      byteArray7[2] = (byte) (-119);
      byteArray7[3] = (byte) (-119);
      byteArray7[4] = (byte)96;
      byteArray7[5] = (byte)117;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[8];
      byteArray8[0] = (byte) (-5);
      byteArray8[1] = (byte) (-5);
      byteArray8[2] = (byte)117;
      byteArray8[3] = (byte)123;
      byteArray8[4] = (byte)117;
      byteArray8[5] = (byte) (-5);
      byteArray8[6] = (byte)1;
      byteArray8[7] = (byte)96;
      byteArray0[7] = byteArray8;
      byte[] byteArray9 = new byte[5];
      byteArray9[0] = (byte)117;
      byteArray9[1] = (byte)123;
      byteArray9[2] = (byte) (-119);
      byteArray9[3] = (byte)117;
      byteArray9[4] = (byte)117;
      byteArray0[8] = byteArray9;
      linkedList0.add(byteArray0);
      int int0 = 0;
      fBCachedFetcher0.beforeFirst();
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.relative(65531);
      fBCachedFetcher0.relative(1337);
      fBCachedFetcher0.close();
      fBCachedFetcher0.next();
      byte[][] byteArray0 = new byte[1][5];
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-119);
      byteArray0[0] = byteArray1;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][0];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)9;
      byteArray1[1] = (byte) (-44);
      byteArray1[2] = (byte)100;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte)100;
      byteArray2[1] = (byte)9;
      byteArray2[2] = (byte)9;
      byteArray2[3] = (byte)100;
      byteArray2[4] = (byte)100;
      byteArray2[5] = (byte)9;
      byteArray2[6] = (byte)100;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[8];
      byteArray3[0] = (byte)9;
      byteArray3[1] = (byte)100;
      byteArray3[2] = (byte)9;
      byteArray3[3] = (byte) (-44);
      byteArray3[4] = (byte) (-44);
      byteArray3[5] = (byte)1;
      byteArray3[6] = (byte)100;
      byteArray3[7] = (byte)102;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      byteArray4[0] = (byte)1;
      byteArray0[3] = byteArray4;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArrayArray0 = null;
      linkedList0.add((byte[][]) null);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = 711;
      fBCachedFetcher0.setFetchSize(711);
      fBCachedFetcher0.updateRow((byte[][]) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
      
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      boolean boolean0 = fBCachedFetcher0.absolute(2185);
      assertFalse(boolean0);
      assertTrue(fBCachedFetcher0.isLast());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.relative(65531);
      fBCachedFetcher0.relative(1337);
      fBCachedFetcher0.close();
      fBCachedFetcher0.next();
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isLast());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[8][9];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-14);
      byteArray1[1] = (byte)52;
      byteArray1[2] = (byte) (-109);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[6];
      byteArray2[0] = (byte)52;
      byteArray2[1] = (byte) (-14);
      byteArray2[2] = (byte)52;
      byteArray2[3] = (byte) (-109);
      byteArray2[4] = (byte) (-109);
      byteArray2[5] = (byte)52;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[8];
      byteArray3[0] = (byte)52;
      byteArray3[1] = (byte)52;
      byteArray3[2] = (byte) (-109);
      byteArray3[3] = (byte)52;
      byteArray3[4] = (byte) (-14);
      byteArray3[5] = (byte)52;
      byteArray3[6] = (byte) (-14);
      byteArray3[7] = (byte) (-14);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[2];
      byteArray4[0] = (byte)52;
      byteArray4[1] = (byte) (-14);
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[5];
      byteArray5[0] = (byte) (-14);
      byteArray5[1] = (byte) (-14);
      byteArray5[2] = (byte) (-11);
      byteArray5[3] = (byte) (-14);
      byteArray5[4] = (byte) (-109);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[2];
      byteArray6[0] = (byte) (-14);
      byteArray6[1] = (byte) (-14);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[4];
      byteArray7[0] = (byte)52;
      byteArray7[1] = (byte) (-11);
      byteArray7[2] = (byte) (-109);
      byteArray7[3] = (byte) (-11);
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[6];
      byteArray8[0] = (byte) (-14);
      byteArray8[1] = (byte) (-109);
      byteArray8[2] = (byte)52;
      byteArray8[3] = (byte)52;
      byteArray8[4] = (byte)90;
      byteArray8[5] = (byte) (-14);
      byteArray0[7] = byteArray8;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.clear();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[0][4];
      linkedList0.add(byteArray0);
      fBCachedFetcher0.setFetchSize(2185);
      fBCachedFetcher0.setFetchSize(132);
      fBCachedFetcher0.setFetchSize(132);
      linkedList0.clone();
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.close();
      fBCachedFetcher0.relative(0);
      linkedList0.pollLast();
      fBCachedFetcher0.setFetchSize((-608));
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.close();
      fBCachedFetcher0.beforeFirst();
      byte[][] byteArray1 = new byte[7][8];
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte) (-30);
      byteArray2[1] = (byte) (-9);
      byteArray2[2] = (byte) (-8);
      byteArray2[3] = (byte) (-115);
      byteArray2[4] = (byte) (-113);
      byteArray2[5] = (byte) (-9);
      byteArray2[6] = (byte)87;
      byteArray2[7] = (byte)30;
      byteArray2[8] = (byte) (-32);
      byteArray1[0] = byteArray2;
      byte[] byteArray3 = new byte[2];
      byteArray3[0] = (byte) (-115);
      byteArray3[1] = (byte) (-30);
      byteArray1[1] = byteArray3;
      byte[] byteArray4 = new byte[5];
      byteArray4[0] = (byte) (-113);
      byteArray4[1] = (byte) (-30);
      byteArray4[2] = (byte) (-9);
      byteArray4[3] = (byte) (-8);
      byteArray4[4] = (byte) (-8);
      byteArray1[2] = byteArray4;
      byte[] byteArray5 = new byte[9];
      byteArray5[0] = (byte)44;
      byteArray5[1] = (byte) (-8);
      byteArray5[2] = (byte) (-119);
      byteArray5[3] = (byte) (-1);
      byteArray5[4] = (byte) (-113);
      byteArray5[5] = (byte) (-115);
      byteArray5[6] = (byte) (-9);
      byteArray5[7] = (byte) (-8);
      byteArray5[8] = (byte) (-9);
      byteArray1[3] = byteArray5;
      byte[] byteArray6 = new byte[5];
      byteArray6[0] = (byte) (-113);
      byteArray6[1] = (byte) (-9);
      byteArray6[2] = (byte)87;
      byteArray6[3] = (byte)13;
      byteArray6[4] = (byte) (-9);
      byteArray1[4] = byteArray6;
      byte[] byteArray7 = new byte[9];
      byteArray7[0] = (byte) (-119);
      byteArray7[1] = (byte) (-8);
      byteArray7[2] = (byte) (-30);
      byteArray7[3] = (byte) (-32);
      byteArray7[4] = (byte)30;
      byteArray7[5] = (byte) (-30);
      byteArray7[6] = (byte)87;
      byteArray7[7] = (byte) (-8);
      byteArray7[8] = (byte) (-30);
      byteArray1[5] = byteArray7;
      byte[] byteArray8 = new byte[6];
      byteArray8[0] = (byte) (-30);
      byteArray8[1] = (byte)44;
      byteArray8[2] = (byte)87;
      byteArray8[3] = (byte) (-9);
      byteArray8[4] = (byte) (-9);
      byteArray8[5] = (byte) (-32);
      byteArray1[6] = byteArray8;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-112);
      byteArray0[1] = (byte) (-13);
      byteArray0[2] = (byte) (-112);
      byteArray0[3] = (byte)77;
      byteArray0[4] = (byte)77;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "4#");
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      fBResultSet0.last();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.last();
      fBCachedFetcher0.updateRow((byte[][]) null);
      fBCachedFetcher0.relative((-2));
      fBCachedFetcher0.previous();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.getRowNum();
      fBCachedFetcher0.relative((byte)77);
      fBCachedFetcher0.afterLast();
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertEquals(1, fBResultSet0.getRow());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[3];
      FBManagedConnection fBManagedConnection0 = mock(FBManagedConnection.class, new ViolatedAssumptionAnswer());
      doReturn((FBConnectionRequestInfo) null).when(fBManagedConnection0).getConnectionRequestInfo();
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection(fBManagedConnection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[9];
      FBConnection fBConnection0 = null;
      try {
        fBConnection0 = new FBConnection((FBManagedConnection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractConnection", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      NativeGDSImpl nativeGDSImpl0 = null;
      try {
        nativeGDSImpl0 = new NativeGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GDS gDS0 = null;
      EmbeddedGDSImpl embeddedGDSImpl0 = null;
      try {
        embeddedGDSImpl0 = new EmbeddedGDSImpl();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.relative(65531);
      fBCachedFetcher0.relative(1337);
      fBCachedFetcher0.close();
      boolean boolean0 = fBCachedFetcher0.next();
      assertEquals(1, fBCachedFetcher0.getRowNum());
      assertFalse(boolean0);
  }
}
