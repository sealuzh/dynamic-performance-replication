/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 20:32:36 GMT 2018
 */

package okio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import okio.Segment;
import okio.SegmentPool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Segment_ESTest extends Segment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)97;
      Segment segment0 = new Segment(byteArray0, 11, (byte)97, true, true);
      // Undeclared exception!
      try { 
        segment0.split(11);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)97;
      Segment segment0 = new Segment(byteArray0, (byte)97, (byte)97, true, true);
      SegmentPool.next = segment0;
      // Undeclared exception!
      try { 
        segment0.split((byte)97);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = segment0.unsharedCopy();
      assertFalse(segment1.equals((Object)segment0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.next = segment0;
      Segment segment1 = segment0.push(segment0);
      // Undeclared exception!
      try { 
        segment0.next.writeTo(segment1, 8210);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment((byte[]) null, 495, 495, true, false);
      // Undeclared exception!
      try { 
        segment0.writeTo(segment1, 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      segment0.next = segment0;
      SegmentPool.next = segment0;
      SegmentPool.next.prev = segment0;
      segment0.push(segment1);
      segment1.compact();
      // Undeclared exception!
      try { 
        SegmentPool.next.writeTo(segment1, (-2032));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.next = segment0;
      // Undeclared exception!
      try { 
        segment0.next.pop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.next = segment0;
      segment0.next.push(segment0);
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      segment0.next = segment0;
      SegmentPool.next = segment0;
      SegmentPool.next.owner = false;
      SegmentPool.next.limit = 369;
      SegmentPool.next.prev = segment0;
      segment0.push(segment1);
      segment1.compact();
      segment0.next.sharedCopy();
      // Undeclared exception!
      try { 
        SegmentPool.next.writeTo(segment1, (-2711));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.next = segment0;
      SegmentPool.next = segment0;
      SegmentPool.next.prev = segment0;
      segment0.push(segment0);
      segment0.next.sharedCopy();
      // Undeclared exception!
      try { 
        SegmentPool.next.writeTo(segment0, 8252);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      segment0.next = segment0;
      SegmentPool.next = segment0;
      SegmentPool.next.shared = true;
      SegmentPool.next.prev = segment0;
      segment0.push(segment1);
      segment1.compact();
      segment0.next.sharedCopy();
      // Undeclared exception!
      try { 
        SegmentPool.next.writeTo(segment1, 8260);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte byte0 = (byte) (-100);
      byteArray0[0] = (byte) (-100);
      Segment segment0 = new Segment(byteArray0, (byte) (-100), 8192, true, false);
      Segment segment1 = new Segment();
      // Undeclared exception!
      try { 
        segment0.split(1068);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      segment0.next = segment0;
      SegmentPool.next = segment0;
      segment0.next.limit = 8443;
      SegmentPool.next.prev = segment0;
      segment0.push(segment1);
      segment1.compact();
      segment0.next.sharedCopy();
      // Undeclared exception!
      try { 
        SegmentPool.next.prev.split((-2032));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.next = segment0;
      SegmentPool.next = segment0.next;
      SegmentPool.next.prev = segment0;
      SegmentPool.next.prev.prev = segment0;
      SegmentPool.next.prev.prev.pos = 221;
      Segment segment1 = new Segment();
      // Undeclared exception!
      try { 
        segment0.writeTo(SegmentPool.next, 8197);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }
}
