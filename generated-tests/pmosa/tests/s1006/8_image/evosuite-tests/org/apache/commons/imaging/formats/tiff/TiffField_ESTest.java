/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 07:03:11 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ObjectStreamConstants;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.util.regex.Pattern;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(10, 10, fieldTypeDouble0, 10, 10, byteArray0, byteOrder0, 10);
      tiffField0.getDoubleArrayValue();
      int int0 = ObjectStreamConstants.baseWireHandle;
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(80, tiffField0.getBytesLength());
      assertEquals(10, tiffField0.getOffset());
      assertEquals(10L, tiffField0.getCount());
      assertEquals(10, tiffField0.getTag());
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(10, tiffField0.getSortHint());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(17, 17, fieldTypeFloat0, 17, 17, byteArray0, byteOrder0, 17);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(17L, tiffField0.getCount());
      assertNotNull(tiffElement0);
      assertEquals(17, tiffField0.getTag());
      assertEquals(17, tiffField0.getSortHint());
      assertEquals(17L, tiffElement0.offset);
      assertEquals(68, tiffField0.getBytesLength());
      assertEquals(17, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeByte0, 0L, 0L, byteArray0, byteOrder0, 1);
      tiffField0.getByteArrayValue();
      tiffField0.getValue();
      tiffField0.getTag();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeFloat0, 4, 4, byteArray0, byteOrder0, 4);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "0.0");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-38);
      byteArray0[1] = (byte) (-108);
      byteArray0[2] = (byte)76;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-67);
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "92=Q_s~mMR^2b");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-67), fieldTypeDouble0, (byte)76, (byte) (-1), byteArray0, byteOrder0, 0);
      fieldTypeByte0.getValue(tiffField0);
      assertFalse(tiffField0.isLocalValue());
      assertEquals((-67), tiffField0.getDirectoryType());
      assertEquals(608, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField1 = new TiffField((-3278), (-3278), fieldTypeByte0, 1L, 1L, byteArray0, byteOrder1, (byte) (-67));
      tiffField1.getDescriptionWithoutValue();
      tiffField1.getValue();
      assertEquals(1L, tiffField1.getCount());
      
      tiffField1.getIntArrayValue();
      ByteOrder.nativeOrder();
      tiffField1.getCount();
      String string0 = tiffField1.getDescriptionWithoutValue();
      assertEquals("-3278 (0xfffff332: Unknown Tag): ", string0);
      
      tiffField1.toString();
      int int0 = tiffField1.getSortHint();
      assertEquals((-67), int0);
      
      TiffElement tiffElement0 = tiffField1.getOversizeValueElement();
      assertNull(tiffElement0);
      
      int int1 = tiffField1.getDirectoryType();
      assertEquals((-3278), int1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147074525, 2147074525, fieldTypeLong0, 4L, 2147074525, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(2147074525, tiffField0.getTag());
      assertEquals(2147074525, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2147074525, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)36;
      byteArray0[1] = (byte)86;
      byteArray0[2] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 228L, byteArray0, byteOrder0, 0);
      tiffField0.getDoubleArrayValue();
      tiffField0.getValue();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(31, (String) null);
      TiffField tiffField0 = new TiffField(31, 31, fieldTypeLong0, 31, 31, byteArray0, byteOrder0, 31);
      String string0 = tiffField0.getValueDescription();
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(31, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(124, tiffField0.getBytesLength());
      assertEquals(31, tiffField0.getTag());
      assertEquals(31, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1365), "a`4l=g@a(n!");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-32);
      byteArray0[1] = (byte) (-56);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)102;
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)86;
      byteArray0[7] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1365), (-1365), fieldTypeLong0, 38L, (-1365), byteArray0, byteOrder0, (byte) (-32));
      tiffField0.getFieldTypeName();
      ByteOrder.nativeOrder();
      tiffField0.toString();
      tiffField0.getFieldType();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeRational0, 2854L, 2267L, byteArray0, byteOrder0, 58);
      tiffField0.getIntArrayValue();
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getTag());
      assertEquals(22832, tiffField0.getBytesLength());
      assertEquals(58, tiffField0.getSortHint());
      assertEquals(2267, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-482), "GiorwF:kZ{cLZ");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)24;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte)109;
      byteArray0[6] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-482), (-482), fieldTypeShort0, 0L, (-1554L), byteArray0, byteOrder0, (-482));
      tiffField0.getIntArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1556), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147381411, (-83), fieldTypeShort0, 5380L, (-1556), byteArray0, byteOrder0, 2147381411);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(10760, tiffField0.getBytesLength());
      assertEquals((-1556), tiffField0.getOffset());
      assertEquals(2147381411, tiffField0.getTag());
      assertEquals(2147381411, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals((-83), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-469), "GiorwF:kZ{cLZ");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)24;
      byteArray0[2] = (byte)14;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-1);
      byteArray0[4] = (byte)109;
      byteArray0[6] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-469), (-469), fieldTypeShort0, 0L, (-1554L), byteArray0, byteOrder0, (-469));
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField1 = new TiffField((byte)0, (byte)2, fieldTypeShort0, (byte)2, (-42L), byteArray0, byteOrder0, (-469));
      FieldType fieldType0 = tiffField1.getFieldType();
      TiffField tiffField2 = new TiffField((-202), 2, fieldType0, 4L, 2147483647L, byteArray0, byteOrder1, (-469));
      String string0 = tiffField2.toString();
      assertEquals("-202 (0xffffff36: Unknown Tag): 6146, 14, 109 (4 GiorwF:kZ{cLZ)", string0);
      
      String string1 = tiffField2.getTagName();
      assertEquals((-469), tiffField2.getSortHint());
      assertEquals(8, tiffField2.getBytesLength());
      assertEquals("Unknown Tag (0xffffff36)", string1);
      assertEquals(2, tiffField2.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField2.getOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-3270), (-346), fieldTypeShort0, 4, 4, byteArray0, byteOrder0, (-346));
      tiffField0.getDoubleArrayValue();
      assertEquals((-346), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-3270), tiffField0.getTag());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-346), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-482), "GiorwF:kZ{cLZ");
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)2;
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte)14;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)14, 38, fieldTypeShort0, 0, 0, byteArray0, byteOrder0, (byte)14);
      tiffField0.getDoubleArrayValue();
      tiffField0.getValue();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)36;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)109, (byte)109, fieldTypeDouble0, 228L, (byte)109, byteArray0, byteOrder0, 33434);
      PrintWriter printWriter0 = null;
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@1ea3671f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-38);
      byteArray0[1] = (byte) (-108);
      byteArray0[2] = (byte)76;
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-67);
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "92=Q_s~mMR^2b");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-1), (byte) (-67), fieldTypeDouble0, (byte)76, (byte) (-1), byteArray0, byteOrder0, 0);
      fieldTypeByte0.getValue(tiffField0);
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField1 = new TiffField((-3278), (-3278), fieldTypeByte0, 1L, 1L, byteArray0, byteOrder1, (byte) (-67));
      tiffField1.getDescriptionWithoutValue();
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField1.new OversizeValueElement((-702), (-455));
      tiffField_OversizeValueElement0.getElementDescription(true);
      tiffField1.getDoubleArrayValue();
      tiffField0.getOversizeValueElement();
      tiffField_OversizeValueElement0.getElementDescription();
      tiffField1.getSortHint();
      tiffField_OversizeValueElement0.getElementDescription(true);
      tiffField0.getFieldTypeName();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-52), (-1117), fieldTypeDouble0, 228L, 2147483647L, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      tiffField0.dump();
      int int0 = tiffField0.getOffset();
      assertEquals(Integer.MAX_VALUE, int0);
      
      int int1 = tiffField0.getDirectoryType();
      assertEquals((-1117), int1);
      
      String string1 = tiffField0.getDescriptionWithoutValue();
      assertEquals("-52 (0xffffffcc: Unknown Tag): ", string1);
      assertEquals(1824, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(41494, 41494, fieldTypeDouble0, 228L, 145L, byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(41494 (0xa216: TIFF-EPStandardID): ): [D@3e00e26b
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)99;
      byteArray0[1] = (byte) (-125);
      byteArray0[2] = (byte) (-125);
      byteArray0[3] = (byte) (-52);
      byteArray0[4] = (byte) (-52);
      byteArray0[5] = (byte)114;
      byteArray0[6] = (byte)114;
      byteArray0[6] = (byte)1;
      TiffField tiffField0 = new TiffField((byte) (-125), (-1117), fieldTypeByte0, 1374, 2147483647L, byteArray0, byteOrder1, (byte) (-125));
      String string0 = tiffField0.getValueDescription();
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-1117), tiffField0.getDirectoryType());
      assertEquals(1374, tiffField0.getBytesLength());
      assertEquals((-125), tiffField0.getSortHint());
      assertEquals((-125), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0L, (byte[]) null, byteOrder0, 0);
      tiffField0.getTagName();
      tiffField0.getCount();
      ByteOrder byteOrder1 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField1 = new TiffField(7, (-1828), fieldTypeDouble0, 0L, 0L, (byte[]) null, byteOrder0, 4);
      tiffField1.getTagName();
      tiffField1.getDescriptionWithoutValue();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-312), 0, fieldTypeDouble0, 228L, 0, byteArray0, byteOrder0, (byte) (-52));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@3d6af5a8 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FieldTypeDouble fieldTypeDouble1 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-52);
      byteArray0[1] = (byte) (-52);
      byteArray0[2] = (byte) (-52);
      byteArray0[3] = (byte) (-52);
      byteArray0[4] = (byte) (-91);
      byteArray0[5] = (byte) (-52);
      byteArray0[6] = (byte) (-52);
      byteArray0[7] = (byte) (-52);
      TiffField tiffField0 = new TiffField((-312), 2143934088, fieldTypeDouble0, 228L, 1L, byteArray0, byteOrder0, 80);
      tiffField0.dump();
      assertEquals(80, tiffField0.getSortHint());
      assertEquals(1824, tiffField0.getBytesLength());
      assertEquals(2143934088, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-312), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-2309), "R'=T");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-7);
      byteArray0[1] = (byte) (-108);
      byteArray0[2] = (byte) (-85);
      byteArray0[3] = (byte) (-105);
      byteArray0[4] = (byte)107;
      byteArray0[5] = (byte)50;
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)1;
      byteArray0[8] = (byte)41;
      TiffField tiffField0 = new TiffField(954, 954, fieldTypeFloat0, 954, (-1490L), byteArray0, byteOrder1, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1490), tiffField0.getOffset());
      assertEquals(3816, tiffField0.getBytesLength());
      assertEquals(954, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(954, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(10, "<uc[1kpIOw-FUL@:8");
      TiffField tiffField0 = new TiffField(10, 10, fieldTypeAscii0, 10, 10, byteArray0, byteOrder0, 10);
      String string0 = tiffField0.getValueDescription();
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(10, tiffField0.getOffset());
      assertEquals(10, tiffField0.getTag());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(10, tiffField0.getBytesLength());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational1 = new FieldTypeRational(37391, "AFH");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-22);
      byteArray0[1] = (byte)108;
      byteArray0[2] = (byte) (-120);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-1);
      byteArray0[5] = (byte) (-16);
      byteArray0[6] = (byte)82;
      byteArray0[7] = (byte) (-76);
      byteArray0[8] = (byte) (-114);
      TiffField tiffField0 = new TiffField(37391, (-305), fieldTypeRational1, 37391, 37391, byteArray0, byteOrder0, (byte) (-120));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      tiffField0.getValue();
      assertEquals((-120), tiffField0.getSortHint());
      assertEquals(37391, tiffField0.getOffset());
      assertEquals((-305), tiffField0.getDirectoryType());
      assertEquals(37391, tiffField0.getTag());
      assertEquals(299128, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)1;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte)1;
      byteArray1[1] = (byte)111;
      byteArray1[2] = (byte)1;
      byteArray1[3] = (byte)1;
      byteArray1[4] = (byte)1;
      byteArray1[5] = (byte)1;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)1, 3, fieldTypeLong0, 3, (byte)1, byteArray1, byteOrder0, (byte)1);
      tiffField0.getIntValueOrArraySum();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(18, (-2684), fieldTypeFloat0, 3645L, 18, byteArray0, byteOrder1, 1008);
      assertEquals(1008, tiffField0.getSortHint());
      assertEquals((-2684), tiffField0.getDirectoryType());
      
      TiffField tiffField1 = new TiffField((-711), 172, fieldTypeFloat0, 1824L, (-2684), byteArray0, byteOrder1, 172);
      tiffField1.getDoubleArrayValue();
      int int0 = tiffField1.getBytesLength();
      assertEquals(7296, int0);
      
      String string0 = tiffField1.getValueDescription();
      assertNotNull(string0);
      assertEquals((-711), tiffField1.getTag());
      assertEquals((-2684), tiffField1.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(93, 93, fieldTypeLong0, 688L, (-1286L), byteArray0, (ByteOrder) null, (-2792));
      tiffField0.getDoubleArrayValue();
      int int0 = tiffField0.getBytesLength();
      assertEquals(2752, int0);
      
      tiffField0.getValue();
      assertEquals(93, tiffField0.getDirectoryType());
      assertEquals((-1286), tiffField0.getOffset());
      assertEquals((-2792), tiffField0.getSortHint());
      assertEquals(93, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(4, "^1LRxs>O#{>");
      TiffField tiffField0 = new TiffField(4, 4, fieldTypeLong0, 4, 80L, byteArray0, byteOrder0, 4);
      tiffField0.getDoubleArrayValue();
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(16, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getTag());
      assertEquals(80, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(273, 65535, fieldTypeAscii0, 0L, 608L, byteArray0, byteOrder0, (-2146379542));
      fieldTypeAscii0.getValue(tiffField0);
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)50;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      TiffField tiffField1 = new TiffField(1878, (-2146379542), fieldTypeAscii0, 1878, (-1940L), byteArray0, byteOrder1, 33434);
      tiffField1.getTagName();
      String string0 = tiffField1.getTagName();
      assertEquals("Unknown Tag (0x756)", string0);
      
      ByteOrder.nativeOrder();
      String string1 = tiffField1.getStringValue();
      assertNotNull(string1);
      
      TiffElement tiffElement0 = tiffField1.getOversizeValueElement();
      assertNotNull(tiffElement0);
      
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      tiffField1.getByteArrayValue();
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(608, tiffField0.getOffset());
      assertEquals((-2146379542), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertTrue(tiffField0.isLocalValue());
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder byteOrder1 = ByteOrder.nativeOrder();
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(3, 18, fieldTypeByte0, (-3221225470L), 3, byteArray0, byteOrder1, (-1610612735));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@17f392bc for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(10, 274, fieldTypeShort0, 608L, 799L, byteArray0, byteOrder0, 10);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      tiffField0.getCount();
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(799, tiffField0.getOffset());
      assertEquals(274, tiffField0.getDirectoryType());
      assertEquals(10, tiffField0.getTag());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(1216, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      ByteOrder.nativeOrder();
      int int0 = Pattern.UNICODE_CASE;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(65535, " for: ");
      TiffField tiffField0 = new TiffField(65535, (-2285), fieldTypeRational0, 0L, 0L, byteArray0, byteOrder0, 65535);
      tiffField0.getValueDescription();
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      tiffField0.getIntValueOrArraySum();
      tiffField0.getValueDescription();
      tiffField0.getBytesLength();
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(2, 51008, fieldTypeRational0, 1333L, 4L, byteArray0, byteOrder0, (-2378));
      tiffField0.getDoubleArrayValue();
      int int0 = Pattern.UNICODE_CASE;
      ByteOrder.nativeOrder();
      String string0 = tiffField0.getValueDescription();
      assertEquals("", string0);
      assertNotNull(string0);
      
      int int1 = tiffField0.getIntValueOrArraySum();
      assertEquals(2, tiffField0.getTag());
      assertEquals(0, int1);
      assertEquals(51008, tiffField0.getDirectoryType());
      assertEquals((-2378), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(10664, tiffField0.getBytesLength());
  }
}
