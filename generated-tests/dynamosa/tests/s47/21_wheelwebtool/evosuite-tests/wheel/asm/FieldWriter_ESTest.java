/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 15:07:16 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;
import wheel.asm.Item;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3878));
      String[] stringArray0 = new String[2];
      stringArray0[0] = "LGiBx";
      stringArray0[1] = "LGiBx";
      classWriter0.visit((-3878), (-3878), "LGiBx", "LGiBx", "LGiBx", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3878), "t+", "LGiBx", "LGiBx", "LGiBx");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3878));
      classWriter0.index = (-3878);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3878), "org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.DirectoryFileFilter");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3898));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "T#iu3'8hs", "T#iu3'8hs", "T#iu3'8hs", "T#iu3'8hs");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "PH`wM$#v;L\"`cn", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations", "^`ygaj7zU'^_].`W2");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(17);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 17, "3Y", "3Y", "3Y", "3Y");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-833));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-833), "&LIaO[BLhZ*yxPJBo", "&LIaO[BLhZ*yxPJBo", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.length = (-833);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -833
         //
         verifyException("wheel.asm.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3878));
      classWriter0.index = 65408;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3878), "org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.DirectoryFileFilter");
      // Undeclared exception!
      fieldWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3869));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "T#iu3'8hs", "T#iu3'8hs", "T#iu3'8hs", "T#iu3'8hs");
      ByteVector byteVector0 = classWriter0.pool;
      byte[] byteArray0 = new byte[6];
      byteVector0.data = byteArray0;
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3874));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, (String) null, "?KkMqx[ )nr@,", "?KkMqx[ )nr@,", (Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(49);
      Item item0 = classWriter0.newInteger(49);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 3354, "Q[vlnxQi,DW{rJ]&%", "^`ygaj7zU'^_].`W2", "Q[vlnxQi,DW{rJ]&%", item0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.Item@6
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3874));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "wheel.asm.FieldWriter", "", "");
      fieldWriter0.visitAnnotation("", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3891));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "LGiBx";
      stringArray0[1] = "LGiBx";
      stringArray0[2] = "\"^)_,r`";
      stringArray0[3] = "LGiBx";
      stringArray0[4] = "\"^)_,r`";
      stringArray0[5] = "LGiBx";
      classWriter0.visit(49, 46, "LGiBx", "LGiBx", "\"^)_,r`", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3891), "LGiBx", "AOZ.#YEz^d[q.@te", "wheel.asm.FieldWriter", (Object) null);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3874));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3874), "FN/vMaS'*F>7 <!B", "FN/vMaS'*F>7 <!B", (String) null, "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3874));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "tFu", "tFu", "tFu", "tFu");
      Attribute attribute0 = new Attribute("tFu");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3874));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3874), "3", "3", "3", "3");
      fieldWriter0.visitAnnotation("3", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3898));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "T#iu3'8hs", "T#iu3'8hs", "T#iu3'8hs", "T#iu3'8hs");
      fieldWriter0.visitAnnotation("T#iu3'8hs", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3870));
      classWriter0.version = (-3870);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3870), "3Y", "3Y", "3Y", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3874));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3874), "FN/vMaS'*F>7 <!B", "FN/vMaS'*F>7 <!B", (String) null, "");
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3841));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3841), "org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.DirectoryFileFilter", "org.apache.commons.io.filefilter.DirectoryFileFilter");
      fieldWriter0.visitAnnotation("org.apache.commons.io.filefilter.DirectoryFileFilter", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3874));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3874), "FN/vMaS'*F>7 <!B", "", "", "");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2, ")J|\"6EE#_", ")J|\"6EE#_", "owb$/U3-l<0zkql*", "^`ygaj7zU'^_].`W2");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3874));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3874), "FN/vMaS'*F>7 <!B", "FN/vMaS'*F>7 <!B", (String) null, "");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3874));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3874), "", "", "", "");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(2);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
