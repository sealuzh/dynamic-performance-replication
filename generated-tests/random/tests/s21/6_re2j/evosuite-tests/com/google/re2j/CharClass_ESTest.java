/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 05:53:32 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = 2052;
      int int0 = 879424;
      intArray0[1] = 879424;
      intArray0[2] = 1316;
      int int1 = 66639;
      intArray0[3] = 66639;
      CharClass charClass0 = new CharClass(intArray0);
      int[] intArray1 = new int[6];
      intArray1[0] = 1316;
      intArray1[1] = 879424;
      intArray1[2] = 2052;
      intArray1[3] = 879424;
      intArray1[4] = 66639;
      intArray1[5] = 66639;
      CharClass charClass1 = charClass0.appendNegatedClass(intArray1);
      // Undeclared exception!
      charClass1.appendFoldedClass(intArray1);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[9];
      intArray0[0] = 4;
      intArray0[1] = 64;
      intArray0[2] = 119989;
      intArray0[3] = 183;
      intArray0[4] = 1936;
      int int0 = 3411;
      intArray0[5] = 3411;
      intArray0[6] = 458751;
      intArray0[7] = 35088;
      intArray0[8] = 3941;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendFoldedRange(119989, 64);
      // Undeclared exception!
      charClass1.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[1] = 343;
      intArray0[2] = 1114111;
      intArray0[3] = 1114111;
      intArray0[4] = 35088;
      intArray0[5] = 181;
      intArray0[6] = (-1869);
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[0][3];
      CharClass charClass1 = charClass0.appendTableWithSign(intArray1, 47728);
      CharClass charClass2 = charClass1.appendTable(intArray1);
      charClass2.appendFoldedRange(35088, 181);
      charClass0.appendTable(intArray1);
      CharClass charClass3 = charClass2.cleanClass();
      charClass3.toArray();
      charClass3.appendFoldedRange((-10303), 906);
      int[] intArray2 = charClass0.toArray();
      assertArrayEquals(new int[] {(-1869), 343, 35088, 181, 1114111, 1114111, (-10303), 65}, intArray0);
      assertEquals(258, intArray2.length);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 917503;
      intArray0[1] = 4;
      intArray0[2] = 346;
      intArray0[3] = (-2954);
      intArray0[4] = 667;
      intArray0[5] = (-2254);
      intArray0[6] = 1100;
      intArray0[7] = (-2957);
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[2][1];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      CharClass charClass1 = charClass0.appendTableWithSign(intArray1, (-886));
      CharClass charClass2 = charClass1.appendClassWithSign(intArray0, (-2954));
      CharClass charClass3 = charClass2.cleanClass();
      CharClass charClass4 = charClass3.appendNegatedClass(intArray0);
      CharClass charClass5 = charClass4.appendClass(intArray0);
      CharClass charClass6 = charClass5.appendTable(intArray1);
      assertSame(charClass6, charClass2);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 997;
      intArray0[1] = 343;
      intArray0[2] = 1114111;
      intArray0[3] = 38249;
      intArray0[4] = 35088;
      intArray0[5] = 181;
      intArray0[6] = (-1869);
      intArray0[7] = 57209;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[0][3];
      CharClass charClass1 = charClass0.appendTableWithSign(intArray1, 47729);
      CharClass charClass2 = charClass1.appendTable(intArray1);
      CharClass charClass3 = charClass2.appendFoldedRange(35088, 181);
      CharClass charClass4 = charClass3.negateClass();
      CharClass charClass5 = charClass4.cleanClass();
      int[] intArray2 = charClass5.toArray();
      assertArrayEquals(new int[] {0, 1114111, 344, 1114110, 57210, 1114111, (-1869), 57209}, intArray0);
      assertArrayEquals(new int[] {0, 1114111}, intArray2);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      intArray0[0] = 1124;
      intArray0[1] = 598;
      intArray0[2] = 1377;
      intArray0[3] = 3524;
      CharClass charClass1 = charClass0.appendClass(intArray0);
      int[][] intArray1 = new int[2][0];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      charClass1.appendTableWithSign(intArray1, 1660);
      CharClass charClass2 = charClass0.cleanClass();
      charClass2.toString();
      charClass2.negateClass();
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 1124);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 7005;
      intArray0[1] = (-2328);
      intArray0[2] = 1063;
      intArray0[3] = 621;
      intArray0[4] = 1066;
      intArray0[5] = (-221);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      charClass1.cleanClass();
      CharClass charClass2 = charClass1.appendClassWithSign(intArray0, (-2328));
      int[] intArray1 = new int[5];
      intArray1[0] = 1097;
      intArray1[1] = 621;
      intArray1[2] = (-2328);
      charClass2.negateClass();
      intArray1[3] = 7005;
      intArray1[4] = 7005;
      // Undeclared exception!
      try { 
        charClass2.appendClass(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 1114111;
      intArray0[1] = 668;
      intArray0[2] = 3460;
      intArray0[3] = (-84);
      intArray0[4] = 79;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendLiteral((-84), 79);
      int[][] intArray1 = new int[7][9];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      int[] intArray2 = new int[4];
      intArray2[0] = 668;
      intArray2[1] = 8968;
      intArray2[2] = 3460;
      intArray2[3] = 1114111;
      intArray1[2] = intArray2;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      CharClass charClass2 = charClass1.appendTableWithSign(intArray1, 3140);
      CharClass charClass3 = charClass2.appendFoldedRange((-334), 1114111);
      CharClass charClass4 = charClass3.appendNegatedClass(intArray2);
      CharClass charClass5 = charClass4.appendNegatedTable(intArray1);
      charClass5.appendNegatedTable(intArray1);
      assertArrayEquals(new int[] {1114111, 668, 3460, (-84), 79}, intArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 120146;
      intArray0[1] = (-16748824);
      intArray0[2] = 2037;
      intArray0[3] = (-16747148);
      intArray0[4] = 4;
      intArray0[5] = 93;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, (-16732063));
      CharClass charClass2 = charClass1.cleanClass();
      CharClass charClass3 = charClass1.appendNegatedClass(intArray0);
      int[][] intArray1 = new int[0][1];
      CharClass.charClassToString(intArray0, (-16748824));
      CharClass charClass4 = charClass3.appendNegatedTable(intArray1);
      charClass4.negateClass();
      CharClass charClass5 = charClass4.appendLiteral((-16733741), (-16747148));
      CharClass charClass6 = charClass2.cleanClass();
      charClass6.cleanClass();
      charClass5.appendFoldedRange((-16733741), (-16747148));
      charClass5.appendClassWithSign(intArray0, (-16748824));
      assertArrayEquals(new int[] {(-16733741), (-16733741), (-16748823), 1114111, 120146, (-16748824)}, intArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 1652;
      intArray0[1] = 76;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      CharClass charClass2 = charClass1.appendClassWithSign(intArray0, 0);
      int[][] intArray1 = new int[4][7];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      // Undeclared exception!
      try { 
        charClass2.appendTableWithSign(intArray1, 1114111);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[2];
      int int0 = 29;
      intArray0[0] = 29;
      intArray0[1] = (-589);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      int int1 = 2447;
      CharClass charClass2 = charClass1.appendLiteral(29, 2447);
      int int2 = 65;
      CharClass charClass3 = charClass2.appendLiteral((-589), 65);
      int int3 = 91;
      charClass2.appendFoldedClass(intArray0);
      charClass3.toString();
      charClass3.appendLiteral(91, (-1652));
      charClass3.appendFoldedClass(intArray0);
      int[][] intArray1 = new int[6][4];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      // Undeclared exception!
      try { 
        charClass1.appendTableWithSign(intArray1, (-589));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange((-1679), (-1679));
      CharClass charClass2 = charClass1.appendRange((-1679), 2168);
      CharClass charClass3 = charClass2.negateClass();
      int[] intArray0 = new int[0];
      CharClass charClass4 = charClass3.appendNegatedClass(intArray0);
      CharClass charClass5 = charClass2.appendRange(2168, (-1679));
      CharClass charClass6 = charClass1.appendRange((-1679), 91);
      CharClass charClass7 = charClass1.cleanClass();
      CharClass charClass8 = charClass7.appendFoldedClass(intArray0);
      int[] intArray1 = charClass6.toArray();
      charClass5.appendClassWithSign(intArray1, 156);
      charClass8.toString();
      charClass3.appendLiteral(156, 1082);
      CharClass charClass9 = charClass4.cleanClass();
      assertSame(charClass0, charClass9);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int[] intArray0 = null;
      CharClass charClass0 = null;
      try {
        charClass0 = new CharClass((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArray1 = new int[4][1];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      // Undeclared exception!
      try { 
        charClass1.appendNegatedTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int int0 = 2037;
      int[][] intArray0 = new int[0][1];
      int[] intArray1 = new int[3];
      intArray1[0] = 2037;
      CharClass.charClassToString(intArray1, (-16748824));
      CharClass charClass0 = new CharClass(intArray1);
      CharClass charClass1 = charClass0.appendTableWithSign(intArray0, (-18263081));
      // Undeclared exception!
      try { 
        charClass1.appendNegatedClass(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      intArray0[0] = (-1467);
      intArray0[1] = 3545;
      intArray0[2] = 64;
      intArray0[3] = (-1306);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      charClass1.appendClassWithSign(intArray0, (-1306));
      int[][] intArray1 = new int[2][7];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      CharClass charClass2 = charClass0.appendTable(intArray1);
      CharClass charClass3 = charClass0.negateClass();
      CharClass charClass4 = charClass3.appendRange(492, 91);
      int[] intArray2 = new int[0];
      charClass4.appendClass(intArray2);
      charClass3.appendClass(intArray2);
      charClass2.appendNegatedTable(intArray1);
      String string0 = charClass3.toString();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = 5669;
      intArray0[1] = (-18286909);
      int int0 = 902;
      intArray0[2] = 902;
      intArray0[3] = 2097;
      intArray0[4] = 1;
      intArray0[5] = (-3231);
      intArray0[6] = 32;
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendTable((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral((-1679), (-1679));
      CharClass charClass2 = charClass1.appendRange((-1679), 2168);
      CharClass charClass3 = charClass2.negateClass();
      int[] intArray0 = new int[0];
      CharClass charClass4 = charClass3.appendNegatedClass(intArray0);
      CharClass charClass5 = charClass2.appendRange(2168, (-1679));
      CharClass charClass6 = charClass1.appendRange((-1679), 91);
      CharClass charClass7 = charClass3.appendRange(91, 91);
      CharClass charClass8 = charClass7.appendFoldedClass(intArray0);
      charClass6.toArray();
      charClass5.appendRange((-1679), 91);
      charClass8.toString();
      charClass3.appendLiteral(156, 1081);
      charClass4.cleanClass();
      int[][] intArray1 = new int[0][2];
      CharClass charClass9 = charClass8.appendNegatedTable(intArray1);
      assertSame(charClass9, charClass3);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int[] intArray0 = new int[4];
      int int0 = (-536);
      intArray0[0] = (-536);
      int int1 = (-18261246);
      intArray0[1] = (-18261246);
      intArray0[2] = (-18281409);
      int int2 = (-18270412);
      intArray0[3] = (-18270412);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      CharClass charClass2 = charClass1.negateClass();
      int int3 = (-2117);
      CharClass charClass3 = charClass2.appendLiteral((-2117), (-536));
      int int4 = 3595;
      CharClass charClass4 = charClass1.appendClassWithSign(intArray0, 3595);
      charClass2.negateClass();
      charClass4.negateClass();
      int[][] intArray1 = new int[5][3];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      charClass0.appendTableWithSign(intArray1, (-18270412));
      // Undeclared exception!
      try { 
        charClass3.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }
}
