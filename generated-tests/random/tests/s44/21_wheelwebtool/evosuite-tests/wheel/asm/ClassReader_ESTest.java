/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 06:02:17 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.PipedInputStream;
import java.io.PushbackInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      classReader0.getClassName();
      int int0 = 2682;
      ClassWriter classWriter0 = new ClassWriter(2682);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      classWriter0.newInteger(2288);
      classReader0.copyPool(classWriter0);
      classReader0.copyPool(classWriter0);
      classReader0.getClassName();
      classReader0.readInt(2682);
      classReader0.getInterfaces();
      classReader0.readUnsignedShort(2682);
      classReader0.getAccess();
      classReader0.readShort(2682);
      char[] charArray0 = new char[5];
      charArray0[0] = 'Y';
      charArray0[1] = '!';
      charArray0[2] = 'J';
      char char0 = '{';
      charArray0[3] = '{';
      charArray0[4] = 'Y';
      // Undeclared exception!
      try { 
        classReader0.readClass(2682, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AgeFileFilter");
      classReader0.getSuperName();
      classReader0.readByte(1001);
      classReader0.getInterfaces();
      char[] charArray0 = new char[5];
      ClassWriter classWriter0 = new ClassWriter(2352);
      classReader0.accept((ClassVisitor) classWriter0, 0);
      charArray0[0] = '4';
      charArray0[1] = '1';
      charArray0[2] = '(';
      charArray0[3] = '3';
      charArray0[4] = 'A';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(2352, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.OrFileFilter");
      assertEquals(1512, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(4);
      Attribute[] attributeArray0 = new Attribute[5];
      Attribute attribute0 = new Attribute("K%~g+N.=cT$rCa9~u");
      attributeArray0[0] = attribute0;
      Attribute attribute1 = attribute0.next;
      attributeArray0[1] = null;
      Attribute attribute2 = new Attribute("K%~g+N.=cT$rCa9~u");
      attributeArray0[2] = attribute2;
      Attribute attribute3 = new Attribute("K%~g+N.=cT$rCa9~u");
      attributeArray0[3] = attribute3;
      Attribute attribute4 = attribute2.next;
      attributeArray0[3] = null;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 2);
      int int0 = classReader0.getItem(67);
      assertEquals(977, int0);
      
      int int1 = classReader0.readInt(67);
      assertEquals(4524800, int1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      char[] charArray0 = new char[9];
      charArray0[1] = 'G';
      charArray0[2] = 'b';
      charArray0[3] = 'L';
      charArray0[4] = '';
      charArray0[5] = 'd';
      charArray0[6] = 'o';
      charArray0[7] = '\'';
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2431);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      charArray0[8] = '%';
      classReader0.getSuperName();
      classReader0.readInt(2431);
      classReader0.getInterfaces();
      // Undeclared exception!
      try { 
        classReader0.readUTF8(76, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)6;
      byteArray0[1] = (byte) (-81);
      byteArray0[2] = (byte) (-8);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-8), 2132);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      int int0 = 2682;
      ClassWriter classWriter0 = new ClassWriter(2682);
      classWriter0.newInteger(2288);
      classReader0.copyPool(classWriter0);
      classReader0.copyPool(classWriter0);
      classReader0.getClassName();
      classReader0.readInt(2682);
      classReader0.getInterfaces();
      classReader0.readUnsignedShort(2682);
      classReader0.getAccess();
      classReader0.readShort(2682);
      char[] charArray0 = new char[5];
      charArray0[0] = 'Y';
      charArray0[1] = '!';
      charArray0[2] = 'J';
      char char0 = '{';
      charArray0[3] = '{';
      charArray0[4] = 'Y';
      // Undeclared exception!
      try { 
        classReader0.readClass(2682, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      char[] charArray0 = new char[9];
      charArray0[1] = 'G';
      charArray0[3] = 'W';
      classReader0.getSuperName();
      charArray0[5] = 'd';
      charArray0[6] = 'Y';
      charArray0[7] = '*';
      charArray0[8] = '%';
      classReader0.getSuperName();
      classReader0.readInt(2431);
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter('');
      // Undeclared exception!
      try { 
        classReader0.readUTF8(76, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.AgeFileFilter");
      classReader0.readByte(1001);
      classReader0.getInterfaces();
      char[] charArray0 = new char[5];
      charArray0[0] = '4';
      charArray0[1] = '1';
      charArray0[2] = '(';
      charArray0[3] = '3';
      charArray0[4] = 'A';
      // Undeclared exception!
      try { 
        classReader0.readUTF8(2352, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.OrFileFilter");
      assertEquals(1512, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(4);
      Attribute[] attributeArray0 = new Attribute[5];
      Attribute attribute0 = new Attribute("K%~g+N.=cT$rCa9~u");
      attributeArray0[0] = attribute0;
      Attribute attribute1 = attribute0.next;
      attributeArray0[1] = null;
      Attribute attribute2 = new Attribute("K%~g+N.=cT$rCa9~u");
      attributeArray0[2] = attribute2;
      Attribute attribute3 = new Attribute("K%~g+N.=cT$rCa9~u");
      Attribute attribute4 = attribute2.next;
      attributeArray0[4] = null;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 235);
      int int0 = classReader0.getItem(67);
      assertEquals(977, int0);
      
      int int1 = classReader0.readInt(67);
      assertEquals(4524800, int1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      int int0 = 2431;
      char[] charArray0 = new char[9];
      charArray0[1] = 'G';
      charArray0[2] = 'b';
      charArray0[3] = 'W';
      charArray0[4] = '';
      classReader0.getSuperName();
      charArray0[5] = 'd';
      charArray0[6] = 'o';
      charArray0[7] = '*';
      charArray0[8] = '%';
      // Undeclared exception!
      try { 
        classReader0.readConst(2431, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2431
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.OrFileFilter");
      assertEquals(1512, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(4);
      Attribute[] attributeArray0 = new Attribute[5];
      Attribute attribute0 = new Attribute("K%~g+N.=cT$rCa9~u");
      attributeArray0[0] = attribute0;
      Attribute attribute1 = attribute0.next;
      attributeArray0[1] = null;
      Attribute attribute2 = new Attribute("K%~g+N.=cT$rCa9~u");
      attributeArray0[2] = attribute2;
      Attribute attribute3 = new Attribute("K%~g+N.=cT$rCa9~u");
      attributeArray0[3] = attribute3;
      Attribute attribute4 = attribute2.next;
      attributeArray0[4] = null;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 201);
      classReader0.getItem(67);
      int int0 = classReader0.readInt(67);
      assertEquals(4524800, int0);
      
      int int1 = classReader0.readByte(977);
      assertEquals(0, int1);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-90);
      byteArray0[1] = (byte) (-12);
      byteArray0[2] = (byte)5;
      byteArray0[3] = (byte)117;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.skip(4294967295L);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArrayInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-70);
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte) (-78);
      byteArray0[3] = (byte) (-124);
      byteArray0[4] = (byte)68;
      byteArray0[5] = (byte) (-74);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-9);
      byte byte0 = (byte)81;
      byteArray0[1] = (byte)81;
      byteArray0[2] = (byte)29;
      byte byte1 = (byte)42;
      byteArray0[3] = (byte)42;
      byteArray0[4] = (byte)92;
      byte byte2 = (byte)101;
      byteArray0[5] = (byte)101;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte)42, 3180);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      String string0 = "aF>1nL/SvgV";
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("aF>1nL/SvgV");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("sHm`uoH+ei");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.OrFileFilter");
      assertEquals(1512, classReader0.header);
      
      ClassWriter classWriter0 = new ClassWriter(4);
      Attribute[] attributeArray0 = new Attribute[5];
      Attribute attribute0 = new Attribute("K%~g+N.=cT$rCa9~u");
      attributeArray0[0] = attribute0;
      Attribute attribute1 = attribute0.next;
      attributeArray0[1] = null;
      Attribute attribute2 = new Attribute("K%~g+N.=cT$rCa9~u");
      attributeArray0[2] = attribute2;
      Attribute attribute3 = new Attribute("K%~g+N.=cT$rCa9~u");
      attributeArray0[3] = attribute3;
      Attribute attribute4 = attribute2.next;
      attributeArray0[4] = null;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 201);
      int int0 = classReader0.getItem(67);
      assertEquals(977, int0);
      
      int int1 = classReader0.readInt(67);
      assertEquals(4524800, int1);
      
      String[] stringArray0 = classReader0.getInterfaces();
      assertEquals(1, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      int int0 = 2431;
      char[] charArray0 = new char[9];
      charArray0[0] = 'W';
      charArray0[1] = 'G';
      charArray0[2] = 'b';
      charArray0[3] = 'L';
      charArray0[4] = '';
      charArray0[5] = 'd';
      charArray0[6] = 'o';
      charArray0[7] = '*';
      charArray0[8] = '%';
      // Undeclared exception!
      try { 
        classReader0.readConst(2431, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2431
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.OrFileFilter");
      ClassWriter classWriter0 = new ClassWriter(4);
      Attribute[] attributeArray0 = new Attribute[5];
      Attribute attribute0 = new Attribute("K%~g+N.=cT$rCa9~u");
      attributeArray0[0] = attribute0;
      Attribute attribute1 = attribute0.next;
      attributeArray0[1] = null;
      Attribute attribute2 = new Attribute("K%~g+N.=cT$rCa9~u");
      attribute2.next = null;
      attributeArray0[2] = attribute2;
      Attribute attribute3 = new Attribute("K%~g+N.=cT$rCa9~u");
      Attribute attribute4 = attribute2.next;
      attributeArray0[4] = null;
      classReader0.getItem(67);
      classReader0.readInt(67);
      classReader0.getInterfaces();
      classReader0.getItem(2);
      char[] charArray0 = new char[3];
      charArray0[0] = 'I';
      charArray0[1] = 'Y';
      charArray0[2] = '\"';
      // Undeclared exception!
      try { 
        classReader0.readConst(16, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.TrueFileFilter");
      ClassReader classReader1 = new ClassReader(classReader0.b);
      ClassWriter classWriter0 = new ClassWriter(classReader1, (-1));
      classReader0.accept((ClassVisitor) classWriter0, 24117248);
      // Undeclared exception!
      try { 
        classReader0.readLong((-868));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -868
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(pushbackInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }
}
