/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 06:45:14 GMT 2019
 */

package org.apache.commons.imaging.common.mylzw;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.nio.ByteOrder;
import org.apache.commons.imaging.common.mylzw.MyLzwCompressor;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MyLzwCompressor_ESTest extends MyLzwCompressor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      MyLzwCompressor myLzwCompressor0 = new MyLzwCompressor(8, byteOrder0, false);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-54);
      ByteOrder.nativeOrder();
      byte byte0 = (byte) (-1);
      ByteOrder.nativeOrder();
      byteArray0[1] = (byte) (-1);
      byte byte1 = (byte)0;
      ByteOrder.nativeOrder();
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte) (-20);
      byte byte2 = (byte) (-1);
      byteArray0[4] = (byte) (-1);
      myLzwCompressor0.compress(byteArray0);
      // Undeclared exception!
      try { 
        myLzwCompressor0.compress((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.mylzw.MyLzwCompressor", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      MyLzwCompressor.Listener myLzwCompressor_Listener0 = mock(MyLzwCompressor.Listener.class, new ViolatedAssumptionAnswer());
      MyLzwCompressor myLzwCompressor0 = new MyLzwCompressor(0, (ByteOrder) null, false, myLzwCompressor_Listener0);
      byte[] byteArray0 = new byte[0];
      try { 
        myLzwCompressor0.compress(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // CodeFromString
         //
         verifyException("org.apache.commons.imaging.common.mylzw.MyLzwCompressor", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      MyLzwCompressor.Listener myLzwCompressor_Listener0 = mock(MyLzwCompressor.Listener.class, new ViolatedAssumptionAnswer());
      MyLzwCompressor myLzwCompressor0 = new MyLzwCompressor(8, byteOrder0, true, myLzwCompressor_Listener0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)76;
      byte[] byteArray1 = myLzwCompressor0.compress(byteArray0);
      byteArray0[2] = (byte) (-1);
      ByteOrder.nativeOrder();
      byteArray0[3] = (byte) (-22);
      byteArray0[4] = (byte)90;
      byteArray0[5] = (byte)83;
      byte[] byteArray2 = myLzwCompressor0.compress(byteArray1);
      assertEquals(12, byteArray2.length);
      assertArrayEquals(new byte[] {(byte)0, (byte) (-1), (byte)49, (byte)1, (byte)64, (byte) (-112), (byte)96, (byte)64}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      MyLzwCompressor myLzwCompressor0 = new MyLzwCompressor(0, byteOrder0, false);
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byte byte1 = (byte) (-41);
      byteArray0[1] = (byte) (-41);
      byte byte2 = (byte) (-97);
      byteArray0[2] = (byte) (-97);
      byte byte3 = (byte)9;
      byteArray0[3] = (byte)9;
      byte byte4 = (byte) (-109);
      byteArray0[4] = (byte) (-109);
      byte byte5 = (byte)120;
      byteArray0[5] = (byte)120;
      try { 
        myLzwCompressor0.compress(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // CodeFromString
         //
         verifyException("org.apache.commons.imaging.common.mylzw.MyLzwCompressor", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      MyLzwCompressor myLzwCompressor0 = new MyLzwCompressor((-3549), byteOrder0, false);
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-27);
      byteArray0[1] = (byte) (-38);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte)58;
      byteArray0[5] = (byte)2;
      byteArray0[6] = (byte)122;
      byteArray0[7] = (byte)0;
      try { 
        myLzwCompressor0.compress(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // CodeFromString
         //
         verifyException("org.apache.commons.imaging.common.mylzw.MyLzwCompressor", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      MyLzwCompressor.Listener myLzwCompressor_Listener0 = mock(MyLzwCompressor.Listener.class, new ViolatedAssumptionAnswer());
      MyLzwCompressor myLzwCompressor0 = new MyLzwCompressor(3141, byteOrder0, false, myLzwCompressor_Listener0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)10;
      byteArray0[2] = (byte)73;
      byteArray0[3] = (byte)0;
      try { 
        myLzwCompressor0.compress(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // CodeFromString
         //
         verifyException("org.apache.commons.imaging.common.mylzw.MyLzwCompressor", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      ByteOrder.nativeOrder();
      MyLzwCompressor myLzwCompressor0 = new MyLzwCompressor(0, byteOrder0, false);
      byte[] byteArray0 = new byte[3];
      myLzwCompressor0.compress(byteArray0);
      byteArray0[0] = (byte)48;
      ByteOrder.nativeOrder();
      try { 
        myLzwCompressor0.compress(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // CodeFromString
         //
         verifyException("org.apache.commons.imaging.common.mylzw.MyLzwCompressor", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      MyLzwCompressor myLzwCompressor0 = new MyLzwCompressor((-280), byteOrder0, true);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)103;
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-25);
      byteArray0[4] = (byte)1;
      byteArray0[5] = (byte) (-126);
      byteArray0[6] = (byte)12;
      byteArray0[7] = (byte)13;
      byteArray0[8] = (byte)112;
      byte[] byteArray1 = myLzwCompressor0.compress(byteArray0);
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      MyLzwCompressor.Listener myLzwCompressor_Listener0 = mock(MyLzwCompressor.Listener.class, new ViolatedAssumptionAnswer());
      MyLzwCompressor myLzwCompressor0 = new MyLzwCompressor(255, byteOrder0, false, myLzwCompressor_Listener0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-91);
      byteArray0[2] = (byte)125;
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte) (-57);
      try { 
        myLzwCompressor0.compress(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // CodeFromString
         //
         verifyException("org.apache.commons.imaging.common.mylzw.MyLzwCompressor", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      MyLzwCompressor.Listener myLzwCompressor_Listener0 = mock(MyLzwCompressor.Listener.class, new ViolatedAssumptionAnswer());
      MyLzwCompressor myLzwCompressor0 = new MyLzwCompressor(1, byteOrder0, true, myLzwCompressor_Listener0);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)62;
      byteArray0[3] = (byte)68;
      byteArray0[4] = (byte)85;
      try { 
        myLzwCompressor0.compress(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // CodeFromString
         //
         verifyException("org.apache.commons.imaging.common.mylzw.MyLzwCompressor", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      MyLzwCompressor.Listener myLzwCompressor_Listener0 = mock(MyLzwCompressor.Listener.class, new ViolatedAssumptionAnswer());
      MyLzwCompressor myLzwCompressor0 = new MyLzwCompressor(8, byteOrder0, true, myLzwCompressor_Listener0);
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-1);
      byteArray0[1] = (byte)76;
      myLzwCompressor0.compress(byteArray0);
      byteArray0[2] = (byte) (-1);
      ByteOrder.nativeOrder();
      byteArray0[3] = (byte) (-22);
      byteArray0[4] = (byte)90;
      byteArray0[5] = (byte)83;
      byteArray0[6] = (byte) (-36);
      byte[] byteArray1 = myLzwCompressor0.compress(byteArray0);
      myLzwCompressor0.compress(byteArray1);
      byte[] byteArray2 = myLzwCompressor0.compress(byteArray1);
      // Undeclared exception!
      myLzwCompressor0.compress(byteArray2);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      MyLzwCompressor myLzwCompressor0 = new MyLzwCompressor(1542, (ByteOrder) null, true);
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte)8;
      try { 
        myLzwCompressor0.compress(byteArray0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // CodeFromString
         //
         verifyException("org.apache.commons.imaging.common.mylzw.MyLzwCompressor", e);
      }
  }
}
