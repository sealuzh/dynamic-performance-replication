/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 00:01:48 GMT 2018
 */

package org.apache.commons.imaging.common.itu_t4;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.imaging.common.itu_t4.T4AndT6Compression;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class T4AndT6Compression_ESTest extends T4AndT6Compression_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      try { 
        T4AndT6Compression.compressT6(byteArray0, 2285, 2);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)43;
      byteArray0[1] = (byte)12;
      byteArray0[2] = (byte)0;
      byte byte0 = (byte) (-70);
      byteArray0[3] = (byte) (-70);
      byte byte1 = (byte)0;
      byteArray0[4] = (byte)0;
      T4AndT6Compression.compressT6(byteArray0, (byte)12, (byte)0);
      byte[] byteArray1 = T4AndT6Compression.compressModifiedHuffman(byteArray0, (-985), 0);
      int int0 = (-1248);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, (-2507), (-1248), false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)0;
      byte byte0 = (byte)14;
      byteArray0[1] = (byte)14;
      byteArray0[2] = (byte)0;
      boolean boolean0 = false;
      T4AndT6Compression.compressT4_1D(byteArray0, (byte)14, (-1103), false);
      boolean boolean1 = false;
      // Undeclared exception!
      T4AndT6Compression.compressT4_1D(byteArray0, (-1103), 685, false);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      try { 
        T4AndT6Compression.compressT4_1D(byteArray0, 19, 8, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte) (-28), (byte) (-28), true);
      T4AndT6Compression.decompressModifiedHuffman(byteArray1, (byte) (-28), (-1013));
      assertArrayEquals(new byte[] {(byte)0, (byte)1}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 1, (-1881));
      assertArrayEquals(new byte[] {(byte)0, (byte)16, (byte)1}, byteArray1);
      
      byte[] byteArray2 = T4AndT6Compression.compressModifiedHuffman(byteArray0, (-2674), 1);
      assertArrayEquals(new byte[] {(byte)53}, byteArray2);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)81;
      byteArray0[1] = (byte)76;
      byteArray0[2] = (byte)42;
      byteArray0[3] = (byte)39;
      byteArray0[4] = (byte)39;
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 0, (-1902), true);
      T4AndT6Compression.compressT6(byteArray1, 0, 2209);
      T4AndT6Compression.decompressModifiedHuffman(byteArray0, 0, 0);
      byte[] byteArray2 = T4AndT6Compression.decompressT4_2D(byteArray1, 0, (-3263), true);
      byte[] byteArray3 = T4AndT6Compression.compressT4_2D(byteArray2, 16, 0, false, (byte)39);
      T4AndT6Compression.decompressT4_2D(byteArray3, 0, 0, false);
      byte[] byteArray4 = T4AndT6Compression.compressT4_2D(byteArray3, 0, (byte)76, false, (-282));
      T4AndT6Compression.decompressT4_1D(byteArray4, 52, 0, true);
      assertArrayEquals(new byte[] {(byte)0, (byte)1}, byteArray1);
      assertArrayEquals(new byte[] {(byte)0, (byte)16}, byteArray3);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      T4AndT6Compression.compressT6(byteArray0, 0, 1);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 1, 744, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 0, 0);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 0, 57, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 4, 4, false, 4);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      T4AndT6Compression.compressT4_2D(byteArray0, (byte)2, (byte)2, false, (byte)2);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (-3096), (byte)2, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)1;
      byteArray0[2] = (byte)65;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)100;
      byteArray0[5] = (byte) (-14);
      byte byte0 = (byte)83;
      byteArray0[6] = (byte)83;
      byteArray0[7] = (byte)4;
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray0, (byte)4, 63);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      try { 
        T4AndT6Compression.compressModifiedHuffman(byteArray0, 290, 290);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)20;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)20, (byte)20, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte) (-12);
      byteArray0[0] = (byte) (-12);
      byte byte1 = (byte) (-103);
      byteArray0[1] = (byte) (-103);
      byte byte2 = (byte)0;
      byteArray0[2] = (byte)0;
      byte byte3 = (byte)95;
      byteArray0[3] = (byte)95;
      byte byte4 = (byte)83;
      byteArray0[4] = (byte)83;
      byteArray0[5] = (byte)0;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)95, (byte)95, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      int int0 = (-1020);
      T4AndT6Compression.compressModifiedHuffman(byteArray0, (-1020), (-1020));
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, (-1020), 3430);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)64;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byte[] byteArray1 = T4AndT6Compression.decompressT4_2D(byteArray0, (byte)64, (byte)0, false);
      T4AndT6Compression.decompressModifiedHuffman(byteArray1, (byte)0, (byte)64);
      T4AndT6Compression.compressT6(byteArray0, (byte)64, (byte)0);
      byte[] byteArray2 = new byte[8];
      byteArray2[0] = (byte)0;
      byteArray2[1] = (byte)0;
      byteArray2[2] = (byte)64;
      byteArray2[3] = (byte)0;
      byteArray2[4] = (byte)0;
      byteArray2[5] = (byte)0;
      byteArray2[6] = (byte)0;
      byteArray2[7] = (byte)64;
      T4AndT6Compression.decompressT6(byteArray2, 0, (-4019));
      byte[] byteArray3 = T4AndT6Compression.compressModifiedHuffman(byteArray1, (-4019), (-3182));
      assertArrayEquals(new byte[] {}, byteArray3);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      T4AndT6Compression.decompressT6(byteArray0, (byte)0, (byte)0);
      byte[] byteArray1 = T4AndT6Compression.decompressT4_1D(byteArray0, (-1952), (-1952), true);
      assertFalse(byteArray1.equals((Object)byteArray0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte)30;
      byteArray0[3] = (byte)77;
      byteArray0[4] = (byte)0;
      byte byte0 = (byte) (-3);
      byteArray0[5] = (byte) (-3);
      byteArray0[6] = (byte)39;
      byteArray0[7] = (byte)0;
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, (byte)0, 1, true, 0);
      T4AndT6Compression.compressT6(byteArray1, 3, (byte)0);
      int int0 = 1807;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 1218, 1807, true, (byte)39);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      try { 
        T4AndT6Compression.compressT4_1D(byteArray0, 2, 4584, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)42;
      byteArray0[1] = (byte)42;
      byteArray0[2] = (byte) (-94);
      byteArray0[3] = (byte)49;
      byteArray0[4] = (byte)64;
      byteArray0[5] = (byte) (-14);
      byte byte1 = (byte) (-93);
      byteArray0[6] = (byte) (-93);
      byte[] byteArray1 = T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)64, (-1002));
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray1, (byte) (-93), 1590);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)33;
      byte byte0 = (byte)42;
      byteArray0[1] = (byte)42;
      byteArray0[2] = (byte) (-94);
      byteArray0[3] = (byte)49;
      byteArray0[4] = (byte)64;
      byteArray0[5] = (byte) (-14);
      byte byte1 = (byte) (-93);
      byteArray0[6] = (byte) (-93);
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, 117, 1590);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)64;
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, 4, (byte)64);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[11];
      byte[] byteArray1 = T4AndT6Compression.decompressT6(byteArray0, (byte)0, 2);
      assertArrayEquals(new byte[] {}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)20;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 1, (byte)20, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      T4AndT6Compression.decompressT4_1D(byteArray0, (byte)0, (byte)0, false);
      byte[] byteArray1 = new byte[1];
      byteArray1[0] = (byte) (-77);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray1, 2, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (byte)1, (byte)1, false);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, (byte)1, (byte)1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 0, 0);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 1, 1, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, (byte)1, (byte)1);
      assertArrayEquals(new byte[] {(byte) (-128), (byte)8, (byte)0, (byte) (-128)}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[1] = (byte)30;
      try { 
        T4AndT6Compression.decompressT6(byteArray0, 1, 23);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unknown T.6 control code 000000000001
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      T4AndT6Compression.compressModifiedHuffman(byteArray0, 2560, (-1279));
      int int0 = 19;
      byte[] byteArray1 = T4AndT6Compression.compressT4_2D(byteArray0, 2560, (-1279), true, 19);
      try { 
        T4AndT6Compression.decompressT6(byteArray1, 10, 13);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid/unknown T.6 control code 0000000000000001
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[14];
      byteArray0[0] = (byte)20;
      byteArray0[1] = (byte) (-5);
      byteArray0[2] = (byte) (-28);
      byte[] byteArray1 = T4AndT6Compression.compressT6(byteArray0, 40, (byte) (-5));
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (-4467), 960, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-1577), (-1577), false);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, (-1577), 2416, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[25];
      byteArray0[0] = (byte)20;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte)20, (byte)20, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      T4AndT6Compression.decompressT4_1D(byteArray0, (byte)0, (byte)0, true);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 64, 64, false, 64);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byte[] byteArray1 = new byte[2];
      byteArray1[0] = (byte) (-126);
      byteArray1[1] = (byte)1;
      T4AndT6Compression.compressModifiedHuffman(byteArray1, (byte)1, (-2));
      try { 
        T4AndT6Compression.compressT4_1D(byteArray0, 64, 63, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-126);
      byteArray0[1] = (byte)1;
      T4AndT6Compression.compressModifiedHuffman(byteArray0, (byte)1, (-2));
      try { 
        T4AndT6Compression.compressT6(byteArray0, (byte)1, 2112);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte[] byteArray1 = new byte[3];
      byteArray1[1] = (byte) (-26);
      try { 
        T4AndT6Compression.compressT6(byteArray1, 2, 11);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte) (-64);
      byteArray0[2] = (byte)117;
      byteArray0[3] = (byte)33;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-64);
      byteArray0[6] = (byte) (-64);
      byteArray0[7] = (byte) (-64);
      byteArray0[8] = (byte) (-64);
      try { 
        T4AndT6Compression.compressT6(byteArray0, 4, 64);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte)117;
      byteArray0[2] = (byte)117;
      byteArray0[3] = (byte)33;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)117;
      byteArray0[7] = (byte) (-64);
      byteArray0[8] = (byte)117;
      try { 
        T4AndT6Compression.compressT6(byteArray0, 4, 64);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-64);
      byteArray0[1] = (byte) (-64);
      byteArray0[2] = (byte)117;
      byteArray0[3] = (byte)33;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-64);
      try { 
        T4AndT6Compression.decompressModifiedHuffman(byteArray0, (byte)33, (byte)33);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-30);
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-30);
      byteArray0[3] = (byte)106;
      byteArray0[4] = (byte)76;
      byteArray0[5] = (byte) (-108);
      boolean boolean0 = false;
      T4AndT6Compression.compressT4_2D(byteArray0, (byte)2, (byte)2, false, (byte)2);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, (byte) (-30), (-3), false);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-33);
      byteArray0[1] = (byte) (-127);
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)13;
      byteArray0[4] = (byte)45;
      byteArray0[5] = (byte)63;
      byteArray0[6] = (byte)11;
      byteArray0[7] = (byte) (-82);
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)13, (byte)45, true, (-3096));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[79];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-2636), 1, false);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 1, 1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-2622), 50, true);
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 1424, 1265, true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1424
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      int int0 = 50;
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, (-2622), 50, true);
      boolean boolean0 = true;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, 1424, 1424, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)30;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)30, (byte)30, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)64;
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)0;
      byteArray0[5] = (byte)0;
      T4AndT6Compression.compressT6(byteArray0, (byte)64, (byte)0);
      byte[] byteArray1 = new byte[9];
      byteArray1[0] = (byte)0;
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte)64;
      byteArray1[3] = (byte)0;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray1, 1984, 1648, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 23, (byte)1, false);
      byte[] byteArray2 = T4AndT6Compression.decompressT4_2D(byteArray1, (byte)1, (byte)1, false);
      assertArrayEquals(new byte[] {(byte)0}, byteArray2);
      assertArrayEquals(new byte[] {(byte)0, (byte)16, (byte) (-128), (byte)2}, byteArray1);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 23, (byte)1, false);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 23, 8, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)30;
      byteArray0[2] = (byte)25;
      byteArray0[3] = (byte)20;
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 33, (byte)20, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)30;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray0, 1, 1, false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 44, (byte)1, false);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 5, 9, false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      byte[] byteArray0 = new byte[12];
      byte[] byteArray1 = T4AndT6Compression.compressT4_1D(byteArray0, 23, (byte)1, false);
      try { 
        T4AndT6Compression.decompressT4_2D(byteArray1, 786, 20, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Decompression error
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)10;
      byteArray0[1] = (byte) (-62);
      byteArray0[2] = (byte) (-1);
      byteArray0[3] = (byte) (-1);
      byteArray0[4] = (byte) (-72);
      byteArray0[5] = (byte) (-114);
      byteArray0[2] = (byte)76;
      byteArray0[7] = (byte)14;
      try { 
        T4AndT6Compression.compressT6(byteArray0, (byte)14, (byte)10);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      boolean boolean0 = true;
      byte[] byteArray0 = new byte[7];
      byte byte0 = (byte)0;
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)3;
      byteArray0[2] = (byte)23;
      byte byte1 = (byte) (-2);
      byteArray0[3] = (byte) (-2);
      byteArray0[4] = (byte)3;
      byteArray0[5] = (byte) (-11);
      byteArray0[6] = (byte) (-51);
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (byte)0, 3258, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected EOL not found
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      byteArray0[1] = (byte)10;
      try { 
        T4AndT6Compression.decompressT4_1D(byteArray0, (-2), 6, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unrecoverable row length error in image row 0
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[31];
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, 187, 3413, false, 2045);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      byteArray0[0] = (byte) (-36);
      byteArray0[2] = (byte)2;
      byteArray0[3] = (byte)31;
      try { 
        T4AndT6Compression.compressT4_2D(byteArray0, (byte)31, (byte)31, true, (byte)31);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Error reading image to compress
         //
         verifyException("org.apache.commons.imaging.common.itu_t4.T4AndT6Compression", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte) (-1);
      byteArray0[0] = (byte) (-1);
      byte byte1 = (byte)64;
      byteArray0[1] = (byte)64;
      byte byte2 = (byte) (-110);
      byteArray0[2] = (byte) (-110);
      byteArray0[3] = (byte)1;
      // Undeclared exception!
      try { 
        T4AndT6Compression.decompressT6(byteArray0, (byte)1, 1012);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
