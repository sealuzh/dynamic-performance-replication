/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 04:45:39 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1883), "As^P");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-90);
      byteArray0[4] = (byte)11;
      TiffField tiffField0 = new TiffField(1076, 604, fieldTypeRational0, 82880L, 277L, byteArray0, (ByteOrder) null, (byte) (-100));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1076, tiffField0.getTag());
      assertEquals((-100), tiffField0.getSortHint());
      assertEquals(15, int0);
      assertEquals(604, tiffField0.getDirectoryType());
      assertEquals(277, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4399, (-644), fieldTypeRational0, 0L, (-644), byteArray0, byteOrder0, (-1979));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1979), tiffField0.getSortHint());
      assertEquals((-644), tiffField0.getOffset());
      assertEquals(4399, tiffField0.getTag());
      assertEquals((-644), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeByte0, 0L, (-730L), byteArray0, byteOrder0, (byte)0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals((-1), tagInfo0.length);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
      assertEquals((-730), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-2147165830), fieldTypeFloat0, 50896L, 660L, byteArray0, byteOrder0, (-1618));
      int int0 = tiffField0.getTag();
      assertEquals((-2147165830), tiffField0.getDirectoryType());
      assertEquals((-1618), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(660, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2696, "");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(2696, 2696, fieldTypeAscii0, 0L, (-1L), byteArray0, (ByteOrder) null, 3039);
      int int0 = tiffField0.getTag();
      assertEquals(3039, tiffField0.getSortHint());
      assertEquals(2696, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2696, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)49;
      TiffField tiffField0 = new TiffField(1, 41501, fieldTypeShort0.ASCII, 1, 0L, byteArray0, byteOrder0, (byte)1);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(1, tiffField0.getTag());
      assertEquals(41501, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "qdL,@");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 0, fieldTypeByte0, 0L, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3528, 1, fieldTypeRational0, (byte)0, 1, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getSortHint();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(3528, tiffField0.getTag());
      assertEquals(50, int0);
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(806, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(3, 806, fieldTypeRational0, 594L, (byte)0, byteArray0, byteOrder0, (byte) (-116));
      int int0 = tiffField0.getOffset();
      assertEquals((-116), tiffField0.getSortHint());
      assertEquals(806, tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0, 882L, 313L, byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getOffset();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(313, int0);
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)58;
      TiffField tiffField0 = new TiffField((-2133071005), 50778, fieldTypeShort0.SBYTE, 1L, (byte)0, byteArray0, byteOrder0, (-2133071005));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-2133071005), tiffField0.getTag());
      assertEquals((-2133071005), tiffField0.getSortHint());
      assertEquals(50778, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-70);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-70), 37387, fieldTypeShort0, 978, (byte)1, byteArray0, byteOrder0, (-2144867954));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(37387, tiffField0.getDirectoryType());
      assertEquals((-17920), int0);
      assertEquals((-2144867954), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-70), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)59;
      TiffField tiffField0 = new TiffField(65535, 1, fieldTypeRational0.UNDEFINED, 1, (-36L), byteArray0, byteOrder0, 1669);
      tiffField0.getIntValue();
      assertEquals(65535, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1669, tiffField0.getSortHint());
      assertEquals((-36), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-36);
      TiffField tiffField0 = new TiffField((byte)59, 1, fieldTypeRational0.SHORT, 1, 1339L, byteArray0, byteOrder0, (byte)59);
      tiffField0.getIntValue();
      assertEquals(59, tiffField0.getTag());
      assertEquals(59, tiffField0.getSortHint());
      assertEquals(1339, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1117, (String) null);
      TiffField tiffField0 = new TiffField(1117, (-1321), fieldTypeLong0, 1117, 1117, byteArray0, byteOrder0, (-885));
      tiffField0.getFieldTypeName();
      assertEquals((-1321), tiffField0.getDirectoryType());
      assertEquals(1117, tiffField0.getTag());
      assertEquals(1117, tiffField0.getOffset());
      assertEquals((-885), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1003, 1003, fieldTypeByte0, 1003, 0L, (byte[]) null, byteOrder0, 1003);
      tiffField0.getFieldTypeName();
      assertEquals(1003, tiffField0.getTag());
      assertEquals(1003, tiffField0.getDirectoryType());
      assertEquals(1003, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-705), (-705), (FieldType) null, (-705), 1178L, byteArray0, byteOrder0, 1797);
      tiffField0.getFieldType();
      assertEquals((-705), tiffField0.getTag());
      assertEquals((-705), tiffField0.getDirectoryType());
      assertEquals(1178, tiffField0.getOffset());
      assertEquals(1797, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "lz\"/@uhRz{W-hYiDHa^");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1775), 65535, fieldTypeByte0, (byte)35, (byte)46, byteArray0, byteOrder0, (-1301));
      tiffField0.getFieldType();
      assertEquals((-1775), tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(46, tiffField0.getOffset());
      assertEquals((-1301), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-1883), "As^P");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(1076, 604, fieldTypeRational0, 82880L, 277L, byteArray0, (ByteOrder) null, (byte) (-100));
      tiffField0.getFieldType();
      assertEquals(1076, tiffField0.getTag());
      assertEquals(277, tiffField0.getOffset());
      assertEquals(604, tiffField0.getDirectoryType());
      assertEquals((-100), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)58;
      TiffField tiffField0 = new TiffField((-2133071005), 50778, fieldTypeShort0.BYTE, 1L, (byte)0, byteArray0, byteOrder0, (-2133071005));
      tiffField0.getDoubleValue();
      assertEquals((-2133071005), tiffField0.getTag());
      assertEquals(50778, tiffField0.getDirectoryType());
      assertEquals((-2133071005), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-5777), "Rd-'l%Coh0/");
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-116);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-5777), fieldTypeByte0, 1, 1093L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1093, tiffField0.getOffset());
      assertEquals((-5777), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 3413L, 0L, byteArray0, byteOrder0, (-1357));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-1357), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(806, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(3, 806, fieldTypeRational0, 594L, (byte)0, byteArray0, byteOrder0, (byte) (-116));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-116), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(3, tiffField0.getTag());
      assertEquals(806, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeAscii0, 851L, (-6508L), byteArray0, byteOrder0, 2147269435);
      tiffField0.getCount();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-6508), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(2147269435, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-253), (-253), fieldTypeLong0, (-253), (-1L), (byte[]) null, byteOrder0, (-253));
      tiffField0.getCount();
      assertEquals((-253), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-253), tiffField0.getSortHint());
      assertEquals((-253), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 0, (-1L), byteArray0, byteOrder0, (byte)109);
      tiffField0.getBytesLength();
      assertEquals(109, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[2];
      char[] charArray0 = new char[4];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, (int) (byte)0, (int) (byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(33918, 33918, fieldTypeRational0, (-1L), 4L, byteArray0, byteOrder0, 0);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(33918, tiffField0.getDirectoryType());
      assertEquals(33918, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1717986918, (-2144867954), fieldTypeLong0, 1717986918, (-3365), byteArray0, (ByteOrder) null, (-2147483646));
      tiffField0.getByteOrder();
      assertEquals((-3365), tiffField0.getOffset());
      assertEquals((-2147483646), tiffField0.getSortHint());
      assertEquals(1717986918, tiffField0.getTag());
      assertEquals((-2144867954), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3528, 1, fieldTypeRational0, (byte)0, 1, byteArray0, byteOrder0, 50);
      tiffField0.getByteArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(3528, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1003, 1003, fieldTypeByte0, 1003, 0L, (byte[]) null, byteOrder0, 1003);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "l'");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-705), (-705), (FieldType) null, (-705), 1178L, byteArray0, byteOrder0, 1797);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[59];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3092), 1838, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).SLONG).FLOAT, (-3092), (-1L), byteArray0, byteOrder0, 1838);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 976, fieldTypeRational0, 1568L, 0L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(1717986918, (-2144867954), fieldTypeLong0, 1717986918, (-3365), byteArray0, (ByteOrder) null, (-2147483646));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1667, 1667, (FieldType) null, 1667, 0L, byteArray0, byteOrder0, (byte)1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(332, 332, fieldTypeLong0, 332, 332, byteArray0, byteOrder0, 2121294823);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, (-290L), 0L, byteArray0, byteOrder0, (-1353));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 3413L, 0L, byteArray0, byteOrder0, (-1357));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1003, 1003, fieldTypeByte0, 1003, 0L, (byte[]) null, byteOrder0, 1003);
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(1003, tiffField0.getDirectoryType());
      assertEquals(1003, tiffField0.getTag());
      assertEquals(1003, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-930), (-2147483646), fieldTypeLong0, 533L, 6384L, byteArray0, byteOrder0, (-2147483646));
      tiffField0.getByteOrder();
      assertEquals(6384, tiffField0.getOffset());
      assertEquals((-930), tiffField0.getTag());
      assertEquals((-2147483646), tiffField0.getSortHint());
      assertEquals((-2147483646), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(11, "Missing value: ");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 11, 0L, byteArray0, byteOrder0, 204);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(204, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeAscii0, 851L, (-6508L), byteArray0, byteOrder0, 2147269435);
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-6508), tiffField0.getOffset());
      assertEquals(2147269435, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2147483646), (-2147169733), fieldTypeRational0, 2147483647L, (byte)0, byteArray0, byteOrder0, 41484);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2147169733), int0);
      assertEquals((-2147483646), tiffField0.getTag());
      assertEquals(41484, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "qdL,@");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 0, fieldTypeByte0, 0L, (byte) (-1), byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getValue();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(78, 78, fieldTypeByte0, 1285L, (-2316L), byteArray0, (ByteOrder) null, 78);
      int int0 = tiffField0.getOffset();
      assertEquals(78, tiffField0.getDirectoryType());
      assertEquals(78, tiffField0.getSortHint());
      assertEquals((-2316), int0);
      assertEquals(78, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(513, 513, fieldTypeRational0, 513, 513, byteArray0, byteOrder0, 513);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertTrue(tagInfo0.isOffset());
      assertEquals(513, tiffField0.getSortHint());
      assertEquals(513, tiffField0.getTag());
      assertEquals(513, tiffField0.getOffset());
      assertEquals(513, tagInfo0.tag);
      assertEquals(513, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-250), (-250), fieldTypeLong0, 0L, (-250), byteArray0, byteOrder0, (-250));
      int int0 = tiffField0.getTag();
      assertEquals((-250), int0);
      assertEquals((-250), tiffField0.getDirectoryType());
      assertEquals((-250), tiffField0.getSortHint());
      assertEquals((-250), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-250), (-250), fieldTypeLong0, 0L, (-250), byteArray0, byteOrder0, (-250));
      tiffField0.getCount();
      assertEquals((-250), tiffField0.getOffset());
      assertEquals((-250), tiffField0.getTag());
      assertEquals((-250), tiffField0.getSortHint());
      assertEquals((-250), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0, 519L, (-1L), byteArray0, byteOrder0, (byte)109);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(109, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-49), 1377, fieldTypeShort0, (byte)1, 2578L, byteArray0, byteOrder0, (-280));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(2578, tiffField0.getOffset());
      assertEquals((-280), tiffField0.getSortHint());
      assertEquals("-49 (0xffffffcf: Unknown Tag): ", string0);
      assertEquals(1377, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-5777), "Rd-'l%Coh0/");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1, (-5777), fieldTypeByte0, 1, 1093L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleValue();
      assertEquals((-5777), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1093, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-930), (byte)1, fieldTypeFloat0, (byte)1, (-930), byteArray0, byteOrder0, (-2147483646));
      tiffField0.getIntValue();
      assertEquals((-2147483646), tiffField0.getSortHint());
      assertEquals((-930), tiffField0.getTag());
      assertEquals((-930), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-2578), ")");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2578), (-2578), fieldTypeFloat0, 0L, (-2578), byteArray0, byteOrder0, (byte) (-1));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@492955ab for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-939), (-831), fieldTypeLong0, 2364L, (-1709), byteArray0, byteOrder0, 2142825332);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-939), tiffField0.getTag());
      assertEquals((-831), tiffField0.getDirectoryType());
      assertEquals(2142825332, tiffField0.getSortHint());
      assertEquals((-1709), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)10, (-2147311199), fieldTypeFloat0.RATIONAL, 7024L, (-2147311199), byteArray0, byteOrder0, (byte)10);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(270, Integer.MAX_VALUE, fieldTypeRational0.DOUBLE, 65535, (-3151L), byteArray0, byteOrder0, 316);
      tiffField0.getDoubleArrayValue();
      assertEquals(Integer.MAX_VALUE, tiffField0.getDirectoryType());
      assertEquals((-3151), tiffField0.getOffset());
      assertEquals(316, tiffField0.getSortHint());
      assertEquals(270, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1596, 1596, fieldTypeFloat0, 1546L, 1546L, byteArray0, byteOrder0, 32897);
      tiffField0.getDoubleArrayValue();
      assertEquals(1596, tiffField0.getTag());
      assertEquals(1546, tiffField0.getOffset());
      assertEquals(1596, tiffField0.getDirectoryType());
      assertEquals(32897, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-930), (-2147483646), fieldTypeLong0, 533L, 6384L, byteArray0, byteOrder0, (-2147483646));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2147483646), tiffField0.getSortHint());
      assertEquals((-2147483646), tiffField0.getDirectoryType());
      assertEquals(6384, tiffField0.getOffset());
      assertEquals((-930), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 3785, fieldTypeByte0, 4958L, (-2147483648L), byteArray0, byteOrder0, 65535);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@1975dac0 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1810), "gD ;|WYdW'LoC-*]2");
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)107, 1688, fieldTypeShort0, (byte)51, (-1810), byteArray0, byteOrder0, (-2147169733));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2147169733), tiffField0.getSortHint());
      assertEquals((-1810), tiffField0.getOffset());
      assertEquals(1688, tiffField0.getDirectoryType());
      assertEquals(107, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[37];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)13);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2145769774, 1060, fieldTypeDouble0.RATIONAL, 1166L, 0L, byteArray0, byteOrder0, 338);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(338, tiffField0.getSortHint());
      assertEquals(1060, tiffField0.getDirectoryType());
      assertEquals(2145769774, tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1596, (byte)0, fieldTypeFloat0, (byte)1, (-544L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getDoubleArrayValue();
      assertEquals(1596, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-544), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-322), 65535, fieldTypeLong0, 65535, 792L, byteArray0, byteOrder0, 2239);
      tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-322), tiffField0.getTag());
      assertEquals(2239, tiffField0.getSortHint());
      assertEquals(792, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 3673, fieldTypeByte0, 50, 2818L, byteArray0, byteOrder0, (byte)51);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@5cf8740e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-1810), "gD ;|WYdW'LoC-*]2");
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)107, 1688, fieldTypeShort0, (byte)51, (-1810), byteArray0, byteOrder0, (-2147169733));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-2147169733), tiffField0.getSortHint());
      assertEquals(1688, tiffField0.getDirectoryType());
      assertEquals(107, tiffField0.getTag());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals((-1810), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(37387, (-2133071005), fieldTypeRational0, (-2133071005), (-567L), byteArray0, byteOrder0, (byte)24);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(806, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(3, 806, fieldTypeRational0, 594L, (byte)0, byteArray0, byteOrder0, (byte) (-116));
      tiffField0.getIntArrayValue();
      assertEquals((-116), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(3, tiffField0.getTag());
      assertEquals(806, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1596, (byte)0, fieldTypeFloat0, (byte)1, (-544L), byteArray0, byteOrder0, (byte)0);
      assertEquals(1L, tiffField0.getCount());
      assertEquals(4, tiffField0.getBytesLength());
      
      tiffField0.getIntArrayValue();
      assertEquals(1596, tiffField0.getTag());
      assertEquals((-544), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-322), 65535, fieldTypeLong0, 65535, 792L, byteArray0, byteOrder0, 2239);
      tiffField0.getIntArrayValue();
      assertEquals(262140, tiffField0.getBytesLength());
      assertEquals(792, tiffField0.getOffset());
      assertEquals(65535L, tiffField0.getCount());
      assertEquals((-322), tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(2239, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      byte[] byteArray0 = new byte[209];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(2521, 34, fieldTypeLong0, 2521, 464L, byteArray0, byteOrder0, 34);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@384291fa
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[24];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147430106, (-1996), fieldTypeShort0.ASCII, 1L, (-270L), byteArray0, byteOrder0, (-1996));
      String string0 = tiffField0.getStringValue();
      assertEquals(2147430106, tiffField0.getTag());
      assertEquals((-1996), tiffField0.getSortHint());
      assertEquals((-1996), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-270), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(121, (-1709), fieldTypeLong0, 294L, 121, byteArray0, byteOrder0, 50);
      String string0 = tiffField0.getTagName();
      assertEquals(121, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x79)", string0);
      assertEquals((-1709), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-2147165830), fieldTypeFloat0, 50896L, 660L, byteArray0, byteOrder0, (-1618));
      String string0 = tiffField0.getTagName();
      assertEquals(660, tiffField0.getOffset());
      assertEquals("GPSVersionID", string0);
      assertEquals((-1618), tiffField0.getSortHint());
      assertEquals((-2147165830), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeLong0, 65535, 65535, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      byte[] byteArray0 = new byte[178];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(37391, 37391, fieldTypeFloat0, 37391, 37391, byteArray0, byteOrder0, 37391);
      String string0 = tiffField0.getValueDescription();
      assertEquals(37391, tiffField0.getDirectoryType());
      assertEquals(37391, tiffField0.getOffset());
      assertEquals(37391, tiffField0.getTag());
      assertEquals(37391, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(149564, tiffField0.getBytesLength());
      assertEquals(37391L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0, false);
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeByte0, (byte)107, (byte)107, byteArray0, byteOrder0, 1714);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals(42, charArrayWriter0.size());
      assertEquals("1 (0x1: Unknown Tag): 0, 0, 0 (107 SByte)\n", charArrayWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      byte[] byteArray0 = new byte[59];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(351, 338, fieldTypeFloat0.UNDEFINED, 1997L, (byte)22, byteArray0, byteOrder0, 16);
      String string0 = tiffField0.toString();
      assertEquals(16, tiffField0.getSortHint());
      assertEquals("351 (0x15f: OPIProxy): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (59) (1997 Undefined)", string0);
      assertEquals(22, tiffField0.getOffset());
      assertEquals(338, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2145769774, 1060, fieldTypeShort0.DOUBLE, (byte)13, (-1040L), byteArray0, byteOrder0, 2145769774);
      String string0 = tiffField0.toString();
      assertEquals(2145769774, tiffField0.getSortHint());
      assertEquals(1060, tiffField0.getDirectoryType());
      assertEquals("2145769774 (0x7fe5d92e: Unknown Tag): 0.0, 0.0 (13 Double)", string0);
      assertEquals((-1040), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[209];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(2521, 34, fieldTypeLong0, 2521, 464L, byteArray0, byteOrder0, 34);
      String string0 = tiffField0.toString();
      assertEquals(34, tiffField0.getDirectoryType());
      assertEquals(34, tiffField0.getSortHint());
      assertEquals("2521 (0x9d9: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (2521 IFD)", string0);
      assertEquals(464, tiffField0.getOffset());
      assertEquals(10084, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[215];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeFloat0, 347L, 12800L, byteArray0, byteOrder0, 787);
      String string0 = tiffField0.toString();
      assertEquals(787, tiffField0.getSortHint());
      assertEquals("8 (0x8: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53) (347 Float)", string0);
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals(12800, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37387, (-3967), fieldTypeShort0, 37387, 1091L, byteArray0, byteOrder0, (byte) (-49));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-3967), tiffField0.getDirectoryType());
      assertEquals(37387, tiffField0.getTag());
      assertEquals(74774, tiffField0.getBytesLength());
      assertEquals(37387L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals((-49), tiffField0.getSortHint());
      assertEquals(1091, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      byte[] byteArray0 = new byte[106];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(517, 2038, fieldTypeLong0.SSHORT, 517, (byte)93, byteArray0, byteOrder0, (byte)93);
      String string0 = tiffField0.toString();
      assertEquals(1034, tiffField0.getBytesLength());
      assertEquals("517 (0x205: JPEGLosslessPredictors): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (53) (517 SShort)", string0);
      assertEquals(93, tiffField0.getSortHint());
      assertEquals(2038, tiffField0.getDirectoryType());
      assertEquals(93, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      byte[] byteArray0 = new byte[59];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)22);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(0, (byte)22, fieldTypeAscii0, 3026L, 3026L, byteArray0, byteOrder0, (byte)22);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getTag());
      assertEquals(22, tiffField0.getDirectoryType());
      assertEquals(22, tiffField0.getSortHint());
      assertEquals(3026, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((byte)13, " for: ");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-2147165830), 50, fieldTypeLong0.ASCII, 2147483647L, 2147379989, byteArray0, byteOrder0, (byte)13);
      assertEquals(Integer.MAX_VALUE, tiffField0.getBytesLength());
      
      tiffField0.toString();
      assertEquals(2147483647L, tiffField0.getCount());
      assertEquals(13, tiffField0.getSortHint());
      assertEquals((-2147165830), tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(2147379989, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 1L, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(65535, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(50, 709, fieldTypeLong0, (-8589934592L), (-2670L), byteArray0, byteOrder0, 438);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-2670), tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals(438, tiffField0.getSortHint());
      assertEquals(709, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-2578), ")");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2578), (-2578), fieldTypeFloat0, 0L, (-2578), byteArray0, byteOrder0, (byte) (-1));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(34954, (byte) (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-2578), tiffField0.getDirectoryType());
      assertEquals((-2578), tiffField0.getOffset());
      assertNull(string0);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-2578), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3528, 1, fieldTypeRational0, (byte)0, 1, byteArray0, byteOrder0, 50);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2323), (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(3528, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: SRational", string0);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0.IFD, 1L, 1L, (byte[]) null, byteOrder0, 50);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50, tiffField0.getSortHint());
      assertTrue(boolean0);
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1709), (-1709), fieldTypeLong0, (-1709), 0L, byteArray0, byteOrder0, (-1709));
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1709), tiffField0.getSortHint());
      assertEquals((-1709), tiffField0.getTag());
      assertEquals((-1709), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4399, (-644), fieldTypeRational0, 0L, (-644), byteArray0, byteOrder0, (-1979));
      tiffField0.dump();
      assertEquals((-644), tiffField0.getOffset());
      assertEquals((-1979), tiffField0.getSortHint());
      assertEquals(4399, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-644), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(165, (-1717986917), fieldTypeLong0, (-1717986917), 1L, byteArray0, byteOrder0, (-70));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals(1717986924, tiffField0.getBytesLength());
      assertEquals((-70), int0);
      assertEquals(165, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[32];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)28, (-2147165830), fieldTypeFloat0, 35L, (byte)1, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.toString();
      assertEquals((-2147165830), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (35 Float)", string0);
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(121, (-1709), fieldTypeLong0, 294L, 121, byteArray0, byteOrder0, 50);
      MockFile mockFile0 = new MockFile("n?v<K3", "Unknown Tag (0x79)");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(121, tiffField0.getOffset());
      assertEquals((-1709), tiffField0.getDirectoryType());
      assertEquals(121, tiffField0.getTag());
      assertEquals(1176, tiffField0.getBytesLength());
      assertEquals(38L, mockFile0.length());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147284677, 2147284677, fieldTypeByte0.SRATIONAL, 2147284677, 2147284677, byteArray0, byteOrder0, 2144761868);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(2147284677L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(2147284677, tiffField0.getDirectoryType());
      assertEquals(2144761868, tiffField0.getSortHint());
      assertEquals(2147284677, tiffField0.getTag());
  }
}
