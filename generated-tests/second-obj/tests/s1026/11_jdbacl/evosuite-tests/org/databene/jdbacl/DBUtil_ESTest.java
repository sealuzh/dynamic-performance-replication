/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 12:00:31 GMT 2018
 */

package org.databene.jdbacl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Proxy;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.chrono.ChronoLocalDate;
import java.util.List;
import java.util.Properties;
import org.apache.derby.diag.ErrorMessages;
import org.apache.derby.iapi.services.io.FormatableProperties;
import org.apache.derby.iapi.sql.conn.LanguageConnectionContext;
import org.apache.derby.iapi.sql.dictionary.ColumnDescriptorList;
import org.apache.derby.iapi.store.raw.ContainerHandle;
import org.databene.commons.ErrorHandler;
import org.databene.commons.Level;
import org.databene.jdbacl.DBExecutionResult;
import org.databene.jdbacl.DBUtil;
import org.databene.jdbacl.JDBCConnectData;
import org.databene.jdbacl.model.DBNotNullConstraint;
import org.databene.jdbacl.model.DBPrimaryKeyConstraint;
import org.databene.jdbacl.model.DBSchema;
import org.databene.jdbacl.model.DBTable;
import org.databene.jdbacl.model.DBUniqueConstraint;
import org.databene.jdbacl.model.DBUniqueIndex;
import org.databene.jdbacl.model.DefaultDBTable;
import org.databene.jdbacl.model.TableContainer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.firebirdsql.jdbc.FBArray;
import org.h2.Driver;
import org.h2.engine.Right;
import org.h2.engine.SessionRemote;
import org.h2.expression.Function;
import org.h2.tools.Csv;
import org.h2.tools.SimpleResultSet;
import org.h2.value.ValueDecimal;
import org.hsqldb.Session;
import org.hsqldb.jdbc.jdbcConnection;
import org.hsqldb.jdbcDriver;
import org.junit.runner.RunWith;
import org.postgresql.ds.PGConnectionPoolDataSource;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DBUtil_ESTest extends DBUtil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      csv0.readRow();
      System.setCurrentTimeMillis(450);
      DBUtil.getOpenConnectionCount();
      DBUtil.getOpenConnectionCount();
      SessionRemote sessionRemote0 = new SessionRemote();
      sessionRemote0.getLobConnection();
      // Undeclared exception!
      try { 
        DBUtil.queryLong("a0w{-", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int int0 = Right.DELETE;
      String string0 = "XRE40";
      DBUtil.existsEnvironment("user.country");
      String string1 = "";
      // Undeclared exception!
      try { 
        DBUtil.query("rJWm=;lhO", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DBUtil.assertAllDbResourcesClosed(false);
      int int0 = Function.MONTH_NAME;
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ZERO;
      FBArray fBArray0 = new FBArray();
      jdbcDriver.getConnection("", (Properties) null);
      // Undeclared exception!
      try { 
        DBUtil.query("^eyY}8-P&p=4j,]", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DBUtil.resetMonitors();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "";
      Connection connection0 = null;
      DBUtil.executeUpdate("", (Connection) null);
      ColumnDescriptorList columnDescriptorList0 = new ColumnDescriptorList();
      TableContainer tableContainer0 = new TableContainer("");
      tableContainer0.getSequences(false);
      ColumnDescriptorList columnDescriptorList1 = new ColumnDescriptorList();
      DBUtil.dependencyOrderedTables(tableContainer0);
      try { 
        DBUtil.connect("", "$(' /Q%ipdFcJCv", "", "", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting  failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      boolean boolean0 = DBUtil.available("--", "", "", (String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = "4p(\\t A@e\\)oK-/G";
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "4p(\t A@e)oK-/G", false, (-1011), (-1011), 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DBUtil.escape("DC))EQatQ");
      DBUtil.checkReadOnly(")0L", false);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String string0 = null;
      char char0 = 'c';
      String string1 = "x}DxN#%";
      // Undeclared exception!
      try { 
        DBUtil.connect("x}DxN#%", false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No environment definition 'x}DxN#%.env.properties' found
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DBUtil.executeUpdate("", (Connection) null);
      Level level0 = Level.trace;
      ErrorHandler.setDefaultLevel(level0);
      // Undeclared exception!
      try { 
        DBUtil.runScript("6", "", (Connection) null, false, (ErrorHandler) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Resource not found: 6
         //
         verifyException("org.databene.commons.IOUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DBUtil.executeUpdate("", (Connection) null);
      // Undeclared exception!
      try { 
        DBUtil.queryWithMetadata("", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      String string0 = null;
      Connection connection0 = null;
      DBUtil.executeUpdate((String) null, (Connection) null);
      String string1 = "3ZCp@q%bCL_=m";
      ErrorHandler errorHandler0 = null;
      try {
        errorHandler0 = new ErrorHandler((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // name argument cannot be null
         //
         verifyException("ch.qos.logback.classic.LoggerContext", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ResultSet resultSet0 = null;
      // Undeclared exception!
      try { 
        DBUtil.getStatement((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Connection connection0 = null;
      DBUtil.wrapWithPooledConnection((Connection) null, true);
      try { 
        DBUtil.connect("", "", "B0", "B0", true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting  failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Driver driver0 = Driver.load();
      FormatableProperties formatableProperties0 = new FormatableProperties();
      driver0.connect("nxwsXC*", formatableProperties0);
      Class<DBNotNullConstraint> class0 = DBNotNullConstraint.class;
      ErrorHandler errorHandler0 = new ErrorHandler(class0);
      DBExecutionResult dBExecutionResult0 = DBUtil.runScript("--", (Connection) null, true, errorHandler0);
      assertNotNull(dBExecutionResult0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Csv.getInstance();
      Level level0 = Level.trace;
      ErrorHandler.setDefaultLevel(level0);
      ErrorHandler errorHandler0 = ErrorHandler.getDefault();
      // Undeclared exception!
      try { 
        DBUtil.runScript("$TI1#+V}&m9RS", (Connection) null, false, errorHandler0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = "";
      Connection connection0 = null;
      DBUtil.executeUpdate("", (Connection) null);
      // Undeclared exception!
      try { 
        DBUtil.runScript("XRE40", (Connection) null, true, (ErrorHandler) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      boolean boolean0 = false;
      DBUtil.assertAllDbResourcesClosed(false);
      int int0 = Function.MONTH_NAME;
      Connection connection0 = null;
      ValueDecimal valueDecimal0 = (ValueDecimal)ValueDecimal.ZERO;
      FBArray fBArray0 = new FBArray();
      fBArray0.getResultSet((-1L), 111);
      // Undeclared exception!
      try { 
        DBUtil.currentLine((ResultSet) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Connection connection0 = null;
      DBUtil.executeUpdate("", (Connection) null);
      // Undeclared exception!
      try { 
        DBUtil.prepareStatement((Connection) null, "", true);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Tried to mutate a database with read-only settings: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)122;
      try { 
        DBUtil.connect("$(' /Q%ipdFcJCv", (String) null, "$(' /Q%ipdFcJCv", "$(' /Q%ipdFcJCv", false);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting $(' /Q%ipdFcJCv failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ErrorMessages errorMessages0 = new ErrorMessages();
      try { 
        DBUtil.parseAndSimplifyResultSet(errorMessages0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // getObject
         //
         verifyException("org.apache.derby.vti.VTITemplate", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Connection connection0 = null;
      DBUtil.executeUpdate("", (Connection) null);
      DBUtil.runScript("", (Connection) null, false, (ErrorHandler) null);
      Level level0 = Level.trace;
      ErrorHandler.setDefaultLevel(level0);
      DBUtil.getOpenConnectionCount();
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("7>#p!(et)f+Gez ", "orderedNulls", "orderedNulls", "orderedNulls", "C$?FD$Q06CWg*4p", "S");
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Connecting orderedNulls failed: 
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      DBUtil.executeUpdate("", (Connection) null);
      int int0 = LanguageConnectionContext.SINGLE_TRANSACTION_LOCK;
      jdbcDriver.getConnection("-{", (Properties) null);
      // Undeclared exception!
      try { 
        DBUtil.query("--kp%P", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = "\"";
      Connection connection0 = null;
      int int0 = ContainerHandle.MODE_CREATE_UNLOGGED;
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        DBUtil.queryAndSimplify("=DBmbas MF)mwMH3nA", (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Csv.getInstance();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("databene", 59);
      boolean boolean0 = NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      DBUtil.nextLine(simpleResultSet0);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("!8sZy", "COMMENT", "COMMENT", "----:!&C)DD)EQat");
      int int0 = LanguageConnectionContext.SINGLE_TRANSACTION_LOCK;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("----:!&C)DD)EQat", (DBSchema) null);
      defaultDBTable0.setDoc("Jane");
      String[] stringArray0 = new String[0];
      DBUniqueConstraint dBUniqueConstraint0 = new DBUniqueConstraint(defaultDBTable0, "Jane", true, stringArray0);
      DBUniqueIndex dBUniqueIndex0 = new DBUniqueIndex(")", true, dBUniqueConstraint0);
      DBTable dBTable0 = dBUniqueIndex0.getTable();
      DBPrimaryKeyConstraint dBPrimaryKeyConstraint0 = new DBPrimaryKeyConstraint(dBTable0, "$SqDLrx$qy,@m}1MPRw", true, stringArray0);
      boolean boolean1 = DBUtil.equivalent(dBPrimaryKeyConstraint0, dBPrimaryKeyConstraint0);
      assertTrue(boolean1 == boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Connection connection0 = null;
      DBUtil.executeUpdate("", (Connection) null);
      DBUtil.runScript("", (Connection) null, false, (ErrorHandler) null);
      Level level0 = Level.trace;
      ErrorHandler.setDefaultLevel(level0);
      DBUtil.getOpenConnectionCount();
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("7>#p!(et)f+Gez ", "", "", "", "C$?FD$Q06CWg*4p", "S");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, true);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC URL specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      String string0 = "";
      Connection connection0 = null;
      DBUtil.executeUpdate("", (Connection) null);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("", "org.databene.jdbacl.DBUtil", "--$TI1#+V}&m9RS", "--$TI1#+V}&m9RS", "", "--$TI1#+V}&m9RS");
      // Undeclared exception!
      try { 
        DBUtil.connect(jDBCConnectData0, false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // No JDBC driver class name specified
         //
         verifyException("org.databene.jdbacl.DBUtil", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      Object[] objectArray0 = new Object[3];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) simpleResultSet0;
      objectArray0[2] = (Object) csv0;
      simpleResultSet0.addRow(objectArray0);
      DBUtil.nextLine(simpleResultSet0);
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("!8sZy", "COMMENT", "COMMENT", "----:!&C)DD)EQat");
      int int0 = LanguageConnectionContext.SINGLE_TRANSACTION_LOCK;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("----:!&C)DD)EQat", (DBSchema) null);
      DBUtil.getOpenResultSetCount();
      DBUtil.parseAndSimplifyResultSet(simpleResultSet0);
      List<Object[]> list0 = DBUtil.parseResultSet(simpleResultSet0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      System.setCurrentTimeMillis(0L);
      Csv csv0 = Csv.getInstance();
      SimpleResultSet simpleResultSet0 = new SimpleResultSet();
      Object[] objectArray0 = new Object[3];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) simpleResultSet0;
      objectArray0[2] = (Object) csv0;
      simpleResultSet0.addRow(objectArray0);
      csv0.readRow();
      JDBCConnectData jDBCConnectData0 = new JDBCConnectData("!8sZy", "CO MENT", "CO MENT", "----:!&C)DD)EQat");
      int int0 = LanguageConnectionContext.SINGLE_TRANSACTION_LOCK;
      DefaultDBTable defaultDBTable0 = new DefaultDBTable("----:!&C)DD)EQat", (DBSchema) null);
      DBUtil.getOpenResultSetCount();
      Object object1 = DBUtil.parseAndSimplifyResultSet(simpleResultSet0);
      assertFalse(object1.equals((Object)object0));
  }
}
