/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 07:47:14 GMT 2018
 */

package okio;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import okio.Segment;
import okio.SegmentPool;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Segment_ESTest extends Segment_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = segment0.unsharedCopy();
      segment1.writeTo(segment0, 0);
      assertFalse(segment0.equals((Object)segment1));
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte)0;
      Segment segment0 = new Segment(byteArray0, (-4996), (byte)0, false, true);
      Segment segment1 = new Segment();
      segment0.prev = segment1;
      segment0.prev.next = segment1;
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[3] = (byte)0;
      Segment segment0 = new Segment(byteArray0, (-4996), (byte)0, false, true);
      Segment segment1 = new Segment();
      segment0.prev = segment1;
      segment0.prev.next = segment1;
      segment0.prev.next = segment0.prev.next;
      segment0.prev.next.sharedCopy();
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Segment segment0 = new Segment();
      // Undeclared exception!
      try { 
        segment0.pop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Segment segment0 = new Segment();
      // Undeclared exception!
      try { 
        segment0.split((-633));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Segment segment0 = new Segment();
      // Undeclared exception!
      try { 
        segment0.split(1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte)21;
      byteArray0[2] = (byte) (-63);
      byteArray0[3] = (byte)30;
      byteArray0[4] = (byte)0;
      Segment segment0 = new Segment(byteArray0, (byte)0, 637, false, true);
      // Undeclared exception!
      try { 
        segment0.split((byte)21);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)0;
      byte byte0 = (byte) (-43);
      byteArray0[2] = (byte) (-43);
      byteArray0[3] = (byte)0;
      Segment segment0 = new Segment(byteArray0, (-4996), (byte)0, false, false);
      Segment segment1 = new Segment();
      segment0.prev = segment1;
      // Undeclared exception!
      try { 
        segment0.split(1024);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Segment segment0 = new Segment();
      segment0.pos = (-889);
      Segment segment1 = segment0.sharedCopy();
      Segment segment2 = segment1.unsharedCopy();
      // Undeclared exception!
      try { 
        segment2.writeTo(segment1, (-889));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte)0;
      Segment segment0 = new Segment(byteArray0, (-4996), (byte)0, false, false);
      segment0.prev = segment0;
      segment0.prev.next = segment0;
      // Undeclared exception!
      try { 
        segment0.compact();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Segment segment0 = new Segment();
      // Undeclared exception!
      try { 
        segment0.writeTo(segment0, 8213);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Segment segment0 = new Segment();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      byte byte0 = (byte) (-1);
      byteArray0[1] = (byte) (-1);
      byteArray0[3] = (byte)1;
      byteArray0[4] = (byte) (-22);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte) (-96);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte) (-127);
      Segment segment1 = new Segment(byteArray0, 2468, (-1), false, false);
      segment0.prev = segment1;
      segment0.compact();
      // Undeclared exception!
      try { 
        segment1.split(1356);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)0;
      Segment segment0 = new Segment();
      Segment segment1 = new Segment(byteArray0, 8193, 8193, true, true);
      Segment segment2 = new Segment();
      SegmentPool.next = segment2;
      // Undeclared exception!
      try { 
        segment0.writeTo(segment1, 1660);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Segment segment0 = new Segment();
      Segment segment1 = new Segment();
      segment0.writeTo(segment1, 1648);
      segment0.writeTo(segment1, 2870);
      // Undeclared exception!
      try { 
        segment1.writeTo(segment0, 8209);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte)0;
      byteArray0[3] = (byte)0;
      Segment segment0 = new Segment(byteArray0, (-4996), (byte)0, false, true);
      Segment segment1 = new Segment();
      segment0.prev = segment1;
      segment0.prev.next = segment1;
      // Undeclared exception!
      try { 
        segment0.prev.pop();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("okio.Segment", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-44);
      byteArray0[3] = (byte) (-44);
      int int0 = (-4996);
      boolean boolean0 = false;
      Segment segment0 = new Segment(byteArray0, (-4996), (byte)73, false, false);
      Segment segment1 = new Segment();
      segment1.pos = (-4996);
      segment0.prev = segment1;
      segment0.compact();
      // Undeclared exception!
      try { 
        segment1.writeTo(segment0.prev, (-4996));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }
}
