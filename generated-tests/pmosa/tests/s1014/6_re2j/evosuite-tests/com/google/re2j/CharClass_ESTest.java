/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 04:05:56 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import com.google.re2j.CharGroup;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      charClass1.appendRange(179, 3154);
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.toString();
      CharClass charClass1 = charClass0.appendLiteral((-4029), (-2096));
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.negateClass();
      charClass0.toString();
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[5];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = (-1923);
      intArray0[3] = 0;
      intArray0[4] = 93;
      // Undeclared exception!
      try { 
        CharClass.charClassToString(intArray0, 93);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      int[] intArray0 = new int[7];
      intArray0[0] = 8032;
      int int0 = 801;
      intArray0[1] = 801;
      intArray0[2] = 4041;
      intArray0[3] = (-2124);
      intArray0[4] = 1060;
      intArray0[5] = 0;
      intArray0[6] = 370;
      CharClass charClass0 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendNegatedClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[2];
      charClass0.appendNegatedClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      assertSame(charClass0, charClass1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      charClass0.appendFoldedClass(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharGroup charGroup0 = null;
      boolean boolean0 = false;
      charClass0.cleanClass();
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.toString();
      charClass0.cleanClass();
      CharClass charClass1 = charClass0.appendClass(intArray0);
      CharClass charClass2 = charClass1.appendFoldedClass(intArray0);
      CharClass charClass3 = charClass2.appendClass(intArray0);
      CharClass charClass4 = charClass3.appendClass(intArray0);
      int[][] intArray1 = new int[1][1];
      charClass3.cleanClass();
      intArray1[0] = intArray0;
      // Undeclared exception!
      try { 
        charClass4.appendTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = charClass0.toArray();
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, 0);
      CharClass charClass2 = charClass1.appendLiteral(0, 0);
      assertSame(charClass2, charClass1);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      int[][] intArray0 = new int[4][0];
      int[] intArray1 = new int[3];
      intArray1[0] = (-1276);
      intArray1[1] = 0;
      intArray1[2] = (-712);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[6];
      intArray2[0] = (-712);
      intArray2[1] = 0;
      intArray2[2] = (-1276);
      intArray2[3] = 0;
      intArray2[4] = 0;
      intArray2[5] = (-1276);
      intArray0[1] = intArray2;
      int[] intArray3 = new int[6];
      intArray3[0] = 0;
      intArray3[1] = 0;
      intArray3[2] = 2154;
      intArray3[3] = 0;
      intArray3[4] = (-1276);
      intArray3[5] = (-712);
      intArray0[2] = intArray3;
      int[] intArray4 = new int[2];
      intArray4[0] = 0;
      intArray4[1] = (-1276);
      intArray0[3] = intArray4;
      charClass0.appendTable(intArray0);
      int[] intArray5 = new int[4];
      int int0 = 268;
      intArray5[0] = int0;
      int int1 = (-509);
      intArray5[1] = int1;
      int int2 = 3641;
      intArray5[2] = int2;
      int int3 = 2;
      intArray5[3] = int3;
      CharClass charClass2 = charClass1.appendFoldedClass(intArray5);
      charClass2.negateClass();
      int int4 = 215;
      charClass1.appendLiteral(int4, intArray5[3]);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[1][5];
      int[] intArray1 = new int[3];
      intArray1[0] = 1603;
      intArray1[1] = 627;
      intArray1[2] = 64288;
      intArray0[0] = intArray1;
      charClass0.appendTable(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendNegatedClass(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 3
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange(312, (-1348));
      int[][] intArray0 = new int[0][0];
      CharClass charClass2 = charClass1.appendTable(intArray0);
      CharClass charClass3 = charClass2.appendNegatedTable(intArray0);
      int[] intArray1 = new int[5];
      intArray1[0] = (-1348);
      intArray1[1] = 8127;
      intArray1[2] = (-1348);
      intArray1[3] = (-1348);
      intArray1[4] = 312;
      // Undeclared exception!
      try { 
        charClass3.appendNegatedClass(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][4];
      charClass0.appendNegatedTable(intArray0);
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[6];
      CharClass charClass0 = new CharClass();
      charClass0.appendFoldedRange(2300, 2300);
      CharClass charClass1 = new CharClass(intArray0);
      // Undeclared exception!
      try { 
        charClass1.appendGroup((CharGroup) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange((-22814195), (-22814195));
      int[][] intArray0 = new int[1][5];
      charClass1.appendTableWithSign(intArray0, (-22814195));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.cleanClass();
      CharClass charClass2 = charClass1.appendFoldedRange(0, 0);
      CharClass charClass3 = charClass2.appendRange((-1), 3262);
      CharClass charClass4 = charClass3.appendLiteral((-3415), (-1));
      int[][] intArray0 = new int[8][4];
      int[] intArray1 = new int[9];
      intArray1[0] = (-3415);
      intArray1[1] = 3262;
      intArray1[2] = 3262;
      intArray1[3] = 0;
      intArray1[4] = 0;
      intArray1[5] = (-1);
      intArray1[6] = 2911;
      intArray1[7] = (-1);
      intArray1[8] = (-3415);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[4];
      intArray2[0] = (-3415);
      intArray2[1] = (-3415);
      intArray2[2] = (-1);
      intArray2[3] = 0;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[1];
      intArray3[0] = 3262;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[2];
      intArray4[0] = 2911;
      intArray4[1] = 2911;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[0];
      intArray0[4] = intArray5;
      int[] intArray6 = new int[7];
      intArray6[0] = 3262;
      intArray6[1] = 0;
      intArray6[2] = 2911;
      intArray6[3] = (-1);
      intArray6[4] = 2911;
      intArray6[5] = 0;
      intArray6[6] = (-1);
      intArray0[5] = intArray6;
      int[] intArray7 = new int[2];
      intArray7[0] = (-3415);
      intArray7[1] = 3262;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[6];
      intArray8[0] = 0;
      intArray8[1] = 0;
      intArray8[2] = 3262;
      intArray8[3] = 0;
      intArray8[4] = (-1);
      intArray8[5] = 0;
      intArray0[7] = intArray8;
      charClass4.appendTableWithSign(intArray0, (-1366));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][2];
      charClass0.appendTableWithSign(intArray0, 8485);
      // Undeclared exception!
      try { 
        charClass0.appendGroup((CharGroup) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendFoldedRange((-17), (-17));
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.negateClass();
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 0;
      intArray0[2] = (-268);
      intArray0[3] = (-4057);
      intArray0[4] = 65;
      intArray0[5] = (-1577);
      CharClass charClass2 = charClass1.appendClassWithSign(intArray0, (-268));
      int[][] intArray1 = new int[7][7];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      CharClass charClass3 = charClass2.appendTable(intArray1);
      int int0 = (-4857);
      int int1 = 119146;
      CharClass charClass4 = charClass3.appendFoldedRange(int0, int1);
      charClass4.appendClass(intArray1[6]);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[0];
      charClass0.appendNegatedClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      assertSame(charClass1, charClass0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      CharClass charClass1 = charClass0.appendLiteral(398, 398);
      charClass1.appendLiteral(949, 1038);
      CharClass charClass2 = charClass0.negateClass();
      assertSame(charClass2, charClass0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      int[] intArray0 = new int[0];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      int int0 = 0;
      CharClass.charClassToString(intArray0, 0);
      CharClass charClass2 = charClass1.cleanClass();
      int int1 = 0;
      charClass2.appendLiteral(0, 0);
      int[][] intArray1 = new int[0][2];
      CharClass charClass3 = charClass1.appendTableWithSign(intArray1, 0);
      int[][] intArray2 = new int[5][8];
      intArray2[0] = intArray0;
      intArray2[1] = intArray0;
      charClass2.cleanClass();
      intArray2[2] = intArray0;
      intArray2[3] = intArray0;
      charClass2.appendLiteral(0, 0);
      charClass0.negateClass();
      intArray2[4] = intArray0;
      int int2 = 0;
      // Undeclared exception!
      try { 
        charClass3.appendTableWithSign(intArray2, 0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[3] = (-5757152);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendRange((-5760614), 0);
      charClass1.cleanClass();
      String string0 = charClass0.toString();
      assertArrayEquals(new int[] {(-5760614), 0, 0, 0}, intArray0);
      assertEquals("[0xffa8199a-0x0]", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      int[] intArray0 = new int[3];
      int int0 = 1318;
      intArray0[0] = 1318;
      int int1 = 1452;
      intArray0[1] = 1452;
      intArray0[2] = (-3174);
      CharClass charClass0 = new CharClass(intArray0);
      int int2 = (-1554);
      CharClass charClass1 = charClass0.appendRange(1452, (-1554));
      CharClass charClass2 = charClass1.cleanClass();
      int int3 = (-4249);
      int[][] intArray1 = new int[6][7];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      charClass1.appendTable(intArray1);
      int int4 = 0;
      CharClass charClass3 = charClass2.appendRange(int3, int4);
      CharClass charClass4 = charClass3.appendFoldedClass(intArray0);
      CharClass charClass5 = charClass3.cleanClass();
      CharClass charClass6 = charClass1.appendFoldedClass(intArray0);
      charClass6.appendClassWithSign(intArray0, intArray0[0]);
      CharClass charClass7 = charClass4.appendLiteral(int2, int1);
      int int5 = 0;
      CharClass.charClassToString(intArray0, int5);
      charClass7.appendNegatedClass(intArray0);
      int[][] intArray2 = new int[2][5];
      intArray2[0] = intArray0;
      intArray2[1] = intArray0;
      charClass0.appendTable(intArray2);
      charClass5.toArray();
      int[] intArray3 = new int[0];
      CharClass.charClassToString(intArray3, intArray0[1]);
      charClass7.appendFoldedRange(int3, int0);
      charClass6.toString();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = (-116);
      intArray0[1] = 1114111;
      intArray0[2] = 2206;
      intArray0[3] = (-992);
      intArray0[4] = 1;
      intArray0[5] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[3][6];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      int int0 = 4673;
      CharClass charClass1 = charClass0.appendTableWithSign(intArray1, 4673);
      CharClass charClass2 = charClass1.appendNegatedClass(intArray0);
      CharClass charClass3 = charClass2.appendLiteral(2010, 2);
      CharClass charClass4 = charClass3.appendNegatedTable(intArray1);
      CharClass charClass5 = charClass4.cleanClass();
      charClass5.appendFoldedRange(int0, intArray0[3]);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 4789;
      intArray0[2] = 2094;
      intArray0[3] = (-1025);
      intArray0[4] = 392;
      intArray0[5] = (-297);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClass(intArray0);
      charClass1.negateClass();
      CharClass.charClassToString(intArray0, (-297));
      CharClass charClass2 = charClass0.appendClass(intArray0);
      charClass0.toString();
      CharClass charClass3 = charClass0.appendNegatedClass(intArray0);
      int[][] intArray1 = new int[8][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      charClass3.appendTableWithSign(intArray1, 4992);
      CharClass charClass4 = charClass1.appendClassWithSign(intArray0, 392);
      String string0 = charClass4.toString();
      assertEquals("[0xfffffc00-0x187 0xfffffed8-0xffffffff 0xfffffc00-0x187 0xfffffc00-0x10ffff 0x82e-0xfffffbff]", string0);
      
      charClass1.cleanClass();
      int[] intArray2 = charClass2.toArray();
      assertArrayEquals(new int[] {(-1024), 1114111}, intArray2);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CharClass.charClassToString((int[]) null, 0);
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[8];
      intArray0[0] = 0;
      int int0 = 929;
      intArray0[1] = 929;
      intArray0[2] = 0;
      intArray0[3] = 0;
      intArray0[4] = 0;
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      CharClass charClass1 = charClass0.appendFoldedClass(intArray0);
      int int1 = (-249);
      int int2 = 0;
      charClass1.appendLiteral(int1, int2);
      int[][] intArrayArray0 = null;
      CharClass charClass2 = charClass1.appendTableWithSign(intArrayArray0, int0);
      charClass2.toString();
      charClass2.toString();
      CharClass charClass3 = charClass2.appendTable(intArrayArray0);
      CharClass charClass4 = charClass3.appendNegatedTable(intArrayArray0);
      charClass4.toArray();
      int int3 = 42775;
      charClass3.appendRange(intArray0[5], int3);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = (-116);
      intArray0[1] = 1114111;
      intArray0[2] = 2206;
      intArray0[3] = (-992);
      intArray0[4] = 1;
      intArray0[5] = 0;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.cleanClass();
      int[][] intArray1 = new int[3][6];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      CharClass charClass1 = charClass0.appendTableWithSign(intArray1, 4673);
      CharClass charClass2 = charClass1.appendNegatedClass(intArray0);
      CharClass charClass3 = charClass2.appendLiteral(2010, 2);
      CharClass charClass4 = charClass3.appendNegatedTable(intArray1);
      CharClass charClass5 = charClass4.cleanClass();
      charClass5.appendRange((-10561754), 2414);
      charClass5.appendFoldedRange(4673, 0);
      assertArrayEquals(new int[] {(-10561754), 1114111, 1, 0, 2206, (-992)}, intArray0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      charClass0.negateClass();
      int[][] intArray0 = new int[8][7];
      int[] intArray1 = new int[3];
      intArray1[2] = 1;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[0];
      intArray0[1] = intArray2;
      int[] intArray3 = new int[5];
      intArray3[1] = 1;
      intArray3[2] = 1;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[0];
      intArray0[3] = intArray4;
      int[] intArray5 = new int[5];
      intArray3[3] = 1;
      intArray5[3] = 1;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[6];
      intArray6[5] = 1;
      int[] intArray7 = new int[6];
      intArray7[2] = 120327;
      intArray7[3] = 1;
      intArray7[5] = 1;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[1];
      intArray0[7] = intArray8;
      // Undeclared exception!
      try { 
        charClass0.appendTableWithSign(intArray0, (-1781));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = 0;
      intArray0[1] = 848;
      intArray0[2] = 1240;
      int int0 = (-1452);
      intArray0[3] = (-1452);
      intArray0[4] = 0;
      intArray0[5] = 66639;
      CharClass charClass0 = new CharClass(intArray0);
      int int1 = 8055;
      CharClass charClass1 = charClass0.appendRange(8055, (-2468));
      int[][] intArray1 = new int[5][4];
      int[] intArray2 = new int[2];
      charClass0.cleanClass();
      intArray2[0] = 0;
      intArray2[1] = (-2468);
      intArray1[0] = intArray2;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      charClass0.appendFoldedRange(8967, 1044);
      // Undeclared exception!
      try { 
        charClass1.appendTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      int[] intArray0 = new int[6];
      int int0 = 0;
      intArray0[0] = 0;
      int int1 = 4789;
      intArray0[1] = 4789;
      intArray0[2] = 2094;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendRange(8055, (-891368));
      charClass1.cleanClass();
      int int2 = 0;
      CharClass charClass2 = charClass1.appendFoldedRange((-2025), 8967);
      int[][] intArray1 = new int[6][4];
      intArray1[0] = intArray0;
      int[] intArray2 = new int[3];
      intArray2[0] = int1;
      intArray2[1] = int1;
      intArray2[2] = int2;
      intArray1[1] = intArray2;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      CharClass charClass3 = charClass2.appendTable(intArray1);
      charClass1.appendLiteral(int0, intArray2[1]);
      CharClass charClass4 = charClass2.negateClass();
      charClass4.appendTableWithSign(intArray1, intArray0[2]);
      charClass3.appendFoldedClass(intArray1[5]);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      int[] intArray0 = new int[6];
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendNegatedClass(intArray0);
      CharClass charClass2 = charClass1.appendClassWithSign(intArray0, (-550));
      CharClass charClass3 = charClass2.appendRange(55203, (-550));
      charClass3.appendClassWithSign(intArray0, 474);
      assertArrayEquals(new int[] {0, 0, 0, 0, 0, 1114111}, intArray0);
  }
}
