/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 11:41:11 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.SequenceInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Qbbm12cmP&V<";
      stringArray0[1] = "bwY[`UKq*5#1oGwNEk";
      stringArray0[2] = "'{f@q&_";
      stringArray0[3] = "'{f@q&_";
      classWriter0.visit(1926, 0, "bwY[`UKq*5#1oGwNEk", "'{f@q&_", "'{f@q&_", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131049, ")7;!#@<Za-EM", ")7;!#@<Za-EM", ")7;!#@<Za-EM", ")7;!#@<Za-EM");
      ByteVector byteVector0 = new ByteVector(0);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      classWriter0.index = (-724);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1266), "!11t]&6`ZI:mRb}[u~p", "!11t]&6`ZI:mRb}[u~p", "", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[4];
      stringArray0[0] = "Qbbm12cmP&V<";
      stringArray0[1] = "bwY[`UKq*5#1oGwNEk";
      stringArray0[2] = "'{f@q&_";
      stringArray0[3] = "'{f@q&_";
      classWriter0.visit(1926, 0, "bwY[`UKq*5#1oGwNEk", "'{f@q&_", "'{f@q&_", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131049, ")7;!#@<Za-EM", ")7;!#@<Za-EM", ")7;!#@<Za-EM", ")7;!#@<Za-EM");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      classWriter0.index = (-724);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1266), "!11t]&6`ZI:mRb}[u~p", "!11t]&6`ZI:mRb}[u~p", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3289), ")7;!#@<Za-EM", "", ")7;!#@<Za-EM", ")7;!#@<Za-EM");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-16));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-4859), "?nF4c%MQcyyjG&:e", "?nF4c%MQcyyjG&:e", "?nF4c%MQcyyjG&:e", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212638);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, "", "org.apache.commons.io.filefilter.AgeFileFilter", "", "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(321);
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 2839);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(byteArrayInputStream0, byteArrayInputStream0);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2839, "bS!?@ l|", "&%", "&%", sequenceInputStream0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.io.SequenceInputStream@7b46fe6b
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1266), "!11t]&6`ZI:mRb}[u~p", "!11t]&6`ZI:mRb}[u~p", "", "");
      ByteVector byteVector0 = new ByteVector();
      Attribute attribute0 = new Attribute("!11t]&6`ZI:mRb}[u~p");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131034, "jk49?&;vrwDYKnm", "jk49?&;vrwDYKnm", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("u)Xr4Cf~HDT[Z|%", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[0];
      classWriter0.visit(49, 0, "THy_krr7", "THy_krr7", "THy_krr7", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131034, "jk49?&;vrwDYKnm", "jk49?&;vrwDYKnm", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "THy_krr7", "THy_krr7", (String) null, (Object) null);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, ")7;!#@<Za-EM", "Synthetic", "-J&NP7XX[", ")7;!#@<Za-EM");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(131072);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, ")7;!#@<Za-EM", "Synthetic", "-J&NP7XX[", ")7;!#@<Za-EM");
      fieldWriter0.visitAnnotation("_+)15,mB#TRr,?yu=DM", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, ".s.IFJDCS", ".s.IFJDCS", "", ".s.IFJDCS");
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[0];
      classWriter0.visit(49, 0, "THy_krr7", "THy_krr7", "THy_krr7", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131034, "jk49?&;vrwDYKnm", "jk49?&;vrwDYKnm", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "X", ")7;!#@<Za-EM", (String) null, (Object) null);
      fieldWriter0.visitAnnotation("The array of prefixes must not be null", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131034, "jk49?&;vrwDYKnm", "jk49?&;vrwDYKnm", (String) null, (Object) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 0, "THy_krr7", "THy_krr7", (String) null, (Object) null);
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131058, ")7;!#@<Za-EM", ")7;!#@<Za-EM", (String) null, (Object) null);
      fieldWriter0.visitEnd();
  }
}
