/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 16 14:54:36 GMT 2018
 */

package com.alibaba.fastjson.parser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.parser.Feature;
import com.alibaba.fastjson.parser.JSONLexerBase;
import com.alibaba.fastjson.parser.JSONReaderScanner;
import com.alibaba.fastjson.parser.SymbolTable;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.ByteArrayInputStream;
import java.io.CharArrayReader;
import java.io.InputStreamReader;
import java.io.PushbackReader;
import java.io.StringReader;
import java.util.Collection;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JSONReaderScanner_ESTest extends JSONReaderScanner_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 52, 52);
      jSONReaderScanner0.bytesValue();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.addSymbol(52, (-32), 52, (SymbolTable) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      StringReader stringReader0 = new StringReader(">OKyfQTEpA}f8}at");
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(stringReader0);
      char[] charArray0 = new char[3];
      charArray0[0] = 'c';
      stringReader0.read();
      charArray0[1] = 'A';
      stringReader0.skip(0L);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue(false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      char[] charArray0 = new char[1];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 16384);
      int int0 = jSONReaderScanner0.scanType("ay*)6I6x(H@");
      assertEquals((-2), int0);
      
      String string0 = jSONReaderScanner0.stringVal();
      assertEquals("", string0);
      
      jSONReaderScanner0.isBlankInput();
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("K");
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.scanIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal state, textLength is zero");
      Feature feature0 = Feature.CustomMapDeserializer;
      jSONReaderScanner0.config(feature0, true);
      int int0 = 191;
      jSONReaderScanner0.longValue();
      int int1 = 0;
      jSONReaderScanner0.subString(191, 0);
      char char0 = 'i';
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.scanDecimal('i');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      jSONReaderScanner0.close();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("K");
      jSONReaderScanner0.charAt(1286);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.subString(16381, 16381);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("GvA G}");
      assertEquals('G', jSONReaderScanner0.getCurrent());
      
      char char0 = jSONReaderScanner0.next();
      assertEquals('v', char0);
      
      int int0 = jSONReaderScanner0.indexOf('v', 125);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      char[] charArray0 = new char[1];
      charArray0[0] = 'b';
      int int0 = 112;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 112, 742);
      jSONReaderScanner0.scanBoolean('b');
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      jSONReaderScanner0.scanFieldUUID(charArray0);
      jSONReaderScanner0.features = 742;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("|K^,JzUF6He0mSf8");
      jSONReaderScanner0.isEOF();
      SymbolTable symbolTable0 = new SymbolTable(1314);
      // Undeclared exception!
      try { 
        symbolTable0.addSymbol("|K^,JzUF6He0mSf8", 103, 103, 876);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      char[] charArray0 = new char[1];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 16384);
      jSONReaderScanner0.scanDate('w');
      jSONReaderScanner0.isBlankInput();
      assertFalse(jSONReaderScanner0.isEOF());
      
      char char0 = jSONReaderScanner0.next();
      assertEquals('\u001A', jSONReaderScanner0.getCurrent());
      assertEquals('\u001A', char0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      char[] charArray0 = new char[1];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 19);
      jSONReaderScanner0.scanIdent();
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.charAt((-1507));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1507
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      jSONReaderScanner0.close();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.sub_chars((-462), 2450);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("com.alibaba.fastjson.serializer.SerializerFeature");
      char[] charArray0 = new char[2];
      charArray0[0] = '?';
      charArray0[1] = 'W';
      jSONReaderScanner0.scanFieldIntArray(charArray0);
      char[] charArray1 = new char[0];
      jSONReaderScanner0.scanFieldBoolean(charArray1);
      int int0 = 6200;
      // Undeclared exception!
      try { 
        JSONLexerBase.readString(charArray1, 6200);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'a';
      charArray0[1] = 'U';
      charArray0[2] = 'h';
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArrayReader0, (-846));
      boolean boolean0 = jSONReaderScanner0.charArrayCompare(charArray0);
      assertEquals('a', jSONReaderScanner0.getCurrent());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("com.alibaba.fastjson.parser.JSONReaderScanner", (-170));
      jSONReaderScanner0.nextIdent();
      char[] charArray0 = new char[3];
      charArray0[0] = 'q';
      charArray0[1] = 'w';
      charArray0[2] = 'X';
      jSONReaderScanner0.scanFieldDecimal(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.sub_chars((-170), 66);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      // Undeclared exception!
      try { 
        jSONReaderScanner0.floatValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      char[] charArray0 = new char[9];
      charArray0[0] = '(';
      charArray0[1] = 'h';
      charArray0[2] = 'Y';
      charArray0[3] = '\'';
      charArray0[4] = '6';
      charArray0[5] = 'A';
      char char0 = 'w';
      charArray0[6] = 'w';
      char char1 = 'P';
      charArray0[7] = 'P';
      charArray0[8] = ' ';
      int int0 = 0;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 0, 2545);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.numberString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("^sp=(Ruq;D");
      jSONReaderScanner0.scanIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue(false);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // For input string: \"^sp\", 
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      char[] charArray0 = new char[0];
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 494);
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.numberString();
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      int int0 = 1402;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("vt8o&Z Ri[~W1zT+C", 1402);
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        jSONReaderScanner0.scanString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unclosed string : \u001A
         //
         verifyException("com.alibaba.fastjson.parser.JSONLexerBase", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[0];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArrayReader0, 55);
      jSONReaderScanner0.ch = 'D';
      jSONReaderScanner0.subString(1563, 1563);
      jSONReaderScanner0.bytesValue();
      jSONReaderScanner0.close();
      jSONReaderScanner0.next();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      jSONReaderScanner0.indexOf('(', 55);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.copyTo((-1), 1563, charArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("");
      boolean boolean0 = jSONReaderScanner0.isBlankInput();
      assertFalse(boolean0);
      
      int int0 = jSONReaderScanner0.indexOf('B', 80);
      assertEquals((-1), int0);
      assertEquals('\u0000', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("illegal stat, textLength is zero", 2450);
      char[] charArray0 = new char[2];
      charArray0[0] = '^';
      charArray0[1] = 'n';
      // Undeclared exception!
      try { 
        jSONReaderScanner0.arrayCopy(196, charArray0, 2450, 196);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[0] = '$';
      charArray0[1] = '1';
      charArray0[2] = '*';
      charArray0[3] = '-';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 1826);
      jSONReaderScanner0.indexOf('-', 1826);
      jSONReaderScanner0.scanType("ay*)6I6x(H@");
      jSONReaderScanner0.scanFieldLong(charArray0);
      jSONReaderScanner0.stringVal();
      jSONReaderScanner0.isBlankInput();
      assertEquals((-2), jSONReaderScanner0.matchStat);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      char[] charArray0 = new char[5];
      charArray0[0] = 'L';
      charArray0[1] = 'L';
      charArray0[2] = 'D';
      charArray0[3] = ' ';
      charArray0[4] = 'e';
      int int0 = 1756;
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 1756, 5);
      jSONReaderScanner0.next();
      jSONReaderScanner0.isEOF();
      jSONReaderScanner0.scanIdent();
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.scanDecimal('e');
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      char[] charArray0 = new char[8];
      charArray0[0] = 'L';
      charArray0[1] = '{';
      charArray0[2] = 'A';
      charArray0[3] = '*';
      charArray0[4] = 'e';
      charArray0[5] = 's';
      charArray0[6] = 'G';
      charArray0[7] = 'f';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 'e');
      jSONReaderScanner0.isEOF();
      assertEquals('L', jSONReaderScanner0.getCurrent());
      
      jSONReaderScanner0.scanIdent();
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.numberString();
      assertEquals('{', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("^sB=QRuq;D");
      jSONReaderScanner0.scanIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = '\u001A';
      charArray0[1] = '\u001A';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 70, 70);
      jSONReaderScanner0.next();
      boolean boolean0 = jSONReaderScanner0.isEOF();
      assertFalse(boolean0);
      
      SymbolTable symbolTable0 = new SymbolTable(1217);
      String string0 = jSONReaderScanner0.addSymbol(70, 70, 70, symbolTable0);
      assertEquals("\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000", string0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("F~lk7VgAVa;Jve[@ALY", (-15));
      jSONReaderScanner0.scanIdent();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.decimalValue();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.math.BigDecimal", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      char[] charArray0 = new char[13];
      charArray0[1] = 'C';
      charArray0[2] = 'C';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("\"");
      assertFalse(jSONReaderScanner0.isEOF());
      
      jSONReaderScanner0.scanIdent();
      assertTrue(jSONReaderScanner0.isEOF());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("}\".(Ms{O'");
      char[] charArray0 = new char[1];
      charArray0[0] = ' ';
      JSONReaderScanner jSONReaderScanner1 = new JSONReaderScanner(charArray0, 545, 0);
      boolean boolean0 = jSONReaderScanner1.isBlankInput();
      assertFalse(boolean0);
      assertEquals(' ', jSONReaderScanner1.getCurrent());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[1] = 'G';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("yWHiMj07MF|3*!nBQz");
      jSONReaderScanner0.scanFieldBigInteger(charArray0);
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.numberString();
      assertEquals('|', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("^gBnkS*<GnE;gPU");
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.numberString();
      assertEquals('*', jSONReaderScanner0.getCurrent());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[2];
      charArray0[0] = 'G';
      charArray0[1] = 'G';
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0, uTF8Decoder0);
      PushbackReader pushbackReader0 = new PushbackReader(inputStreamReader0, 1921);
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(pushbackReader0, (byte)0);
      jSONReaderScanner0.scanIdent();
      boolean boolean0 = jSONReaderScanner0.isBlankInput();
      assertEquals(18, jSONReaderScanner0.token());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner("n^B,s 6");
      jSONReaderScanner0.nextIdent();
      jSONReaderScanner0.scanIdent();
      jSONReaderScanner0.next();
      jSONReaderScanner0.next();
      jSONReaderScanner0.isEOF();
      FileSystemHandling.shouldAllThrowIOExceptions();
      jSONReaderScanner0.numberString();
      jSONReaderScanner0.close();
      // Undeclared exception!
      try { 
        jSONReaderScanner0.isEOF();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      char[] charArray0 = new char[4];
      charArray0[1] = '$';
      charArray0[1] = '1';
      charArray0[2] = '*';
      charArray0[3] = '-';
      JSONReaderScanner jSONReaderScanner0 = new JSONReaderScanner(charArray0, 1826);
      jSONReaderScanner0.indexOf('-', 1826);
      jSONReaderScanner0.scanType("ay*)6I6x(H@");
      jSONReaderScanner0.close();
      jSONReaderScanner0.scanFieldLong(charArray0);
      // Undeclared exception!
      try { 
        jSONReaderScanner0.stringVal();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.parser.JSONReaderScanner", e);
      }
  }
}
