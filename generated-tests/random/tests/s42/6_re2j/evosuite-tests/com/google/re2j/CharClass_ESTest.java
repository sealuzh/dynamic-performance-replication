/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 04:01:10 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.CharClass;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CharClass_ESTest extends CharClass_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-3271);
      intArray0[1] = 4;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      CharClass charClass2 = charClass1.appendLiteral(2146, 4);
      int[][] intArray1 = new int[9][8];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      charClass0.appendNegatedClass(intArray0);
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      intArray1[6] = intArray0;
      intArray1[7] = intArray0;
      intArray1[8] = intArray0;
      // Undeclared exception!
      try { 
        charClass2.appendTableWithSign(intArray1, 1114111);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = (-87);
      intArray0[1] = 1327;
      intArray0[2] = 9666;
      intArray0[3] = (-66);
      intArray0[4] = 91;
      intArray0[5] = (-2655);
      intArray0[6] = (-200);
      intArray0[7] = 702;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, 43064);
      CharClass charClass2 = charClass1.appendFoldedRange((-2207), 1327);
      CharClass charClass3 = charClass2.appendNegatedClass(intArray0);
      CharClass charClass4 = charClass3.appendLiteral(43064, (-87));
      CharClass charClass5 = charClass4.negateClass();
      int[][] intArray1 = new int[0][4];
      charClass5.appendTableWithSign(intArray1, 1327);
      assertArrayEquals(new int[] {(-87), 1327, 9666, (-66), 91, (-2655), (-200), 1327}, intArray0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int[] intArray0 = new int[8];
      int int0 = 1114111;
      intArray0[0] = 1114111;
      intArray0[1] = 724;
      intArray0[2] = 2443;
      intArray0[3] = 64;
      intArray0[4] = (-2182);
      intArray0[5] = 1187;
      intArray0[6] = (-265);
      intArray0[7] = 3141;
      CharClass charClass0 = new CharClass(intArray0);
      int[] intArray1 = new int[4];
      intArray1[0] = 1114111;
      intArray1[1] = 724;
      charClass0.appendFoldedRange((-990), 66640);
      intArray1[2] = (-2182);
      intArray1[3] = 64;
      charClass0.appendNegatedClass(intArray1);
      int int1 = 1;
      int int2 = (-1253);
      // Undeclared exception!
      charClass0.appendFoldedClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      int[] intArray0 = new int[4];
      int int0 = 2676;
      intArray0[0] = 2676;
      intArray0[1] = 1715;
      int int1 = (-888);
      intArray0[2] = (-888);
      intArray0[3] = (-201);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendLiteral(1715, 1715);
      CharClass charClass2 = charClass1.appendRange(1715, 2447);
      charClass2.appendClassWithSign(intArray0, 2676);
      int[][] intArray1 = new int[9][2];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      // Undeclared exception!
      try { 
        charClass1.appendNegatedTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int int0 = 4;
      CharClass charClass1 = charClass0.appendFoldedRange(4, (-1250));
      CharClass charClass2 = charClass1.cleanClass();
      int[] intArray0 = new int[5];
      int int1 = 64;
      intArray0[0] = 64;
      intArray0[1] = 4;
      intArray0[2] = (-1250);
      intArray0[3] = (-1250);
      intArray0[4] = (-1250);
      // Undeclared exception!
      try { 
        charClass2.appendFoldedClass(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 5
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = 1219;
      intArray0[1] = 3331;
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, 2912);
      CharClass charClass2 = charClass1.appendRange(2912, 3331);
      charClass2.negateClass();
      charClass1.appendFoldedRange(1114111, (-2898));
      CharClass charClass3 = charClass0.appendRange(0, 1218);
      CharClass charClass4 = charClass3.appendClass(intArray0);
      int[][] intArrayArray0 = null;
      // Undeclared exception!
      try { 
        charClass4.appendTable((int[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = (-2948);
      intArray0[1] = 2785;
      intArray0[2] = 855;
      intArray0[3] = (-1360);
      intArray0[4] = 7155;
      intArray0[5] = 91;
      CharClass charClass0 = new CharClass(intArray0);
      int[][] intArray1 = new int[3][4];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      CharClass charClass1 = charClass0.appendTable(intArray1);
      CharClass charClass2 = charClass1.appendClassWithSign(intArray0, (-2948));
      charClass2.appendTableWithSign(intArray1, 844);
      String string0 = charClass2.toString();
      assertEquals("[0xfffff47c-0xae1 0x357-0xfffffab0 0x1bf3-0x5b 0xfffff47c 0xfffff7d3 0xfffffb2a 0xfffffe81 0x1d8 0x52f 0x886 0xfffff47c 0xfffff7d3 0xfffffb2a 0xfffffe81 0x1d8 0x52f 0x886 0xfffff47c 0xfffff7d3 0xfffffb2a 0xfffffe81 0x1d8 0x52f 0xfffffab1-0x10ffff 0xfffff47c 0xfffff7d3 0xfffffb2a 0xfffffe81 0x1d8 0x52f 0x886 0xfffff47c 0xfffff7d3 0xfffffb2a 0xfffffe81 0x1d8 0x52f 0x886 0xfffff47c 0xfffff7d3 0xfffffb2a 0xfffffe81 0x1d8 0x52f 0x886]", string0);
      
      CharClass charClass3 = charClass1.appendTable(intArray1);
      charClass3.cleanClass();
      charClass1.toString();
      charClass1.toString();
      charClass1.toArray();
      String string1 = charClass2.toString();
      assertEquals("[0xfffff47c-0x10ffff]", string1);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[9][3];
      int[] intArray1 = new int[1];
      intArray1[0] = 2262;
      intArray0[0] = intArray1;
      int[] intArray2 = new int[9];
      intArray2[0] = 2262;
      intArray2[1] = 2262;
      intArray2[2] = 2262;
      intArray2[3] = 0;
      intArray2[4] = 2262;
      intArray2[5] = 2262;
      intArray2[6] = 2262;
      intArray2[7] = 2262;
      intArray2[8] = 2262;
      intArray0[1] = intArray2;
      int[] intArray3 = new int[3];
      intArray3[0] = 2262;
      intArray3[1] = 81;
      intArray3[2] = 2262;
      intArray0[2] = intArray3;
      int[] intArray4 = new int[4];
      intArray4[0] = 0;
      intArray4[1] = 120353;
      intArray4[2] = 0;
      intArray4[3] = 81;
      intArray0[3] = intArray4;
      int[] intArray5 = new int[2];
      intArray5[0] = 120353;
      intArray5[1] = 0;
      intArray0[4] = intArray5;
      int[] intArray6 = new int[4];
      intArray6[0] = 81;
      intArray6[1] = 81;
      intArray6[2] = 0;
      intArray6[3] = 81;
      intArray0[5] = intArray6;
      int[] intArray7 = new int[8];
      intArray7[0] = 0;
      intArray7[1] = 81;
      intArray7[2] = 0;
      intArray7[3] = 2262;
      intArray7[4] = 0;
      intArray7[5] = (-1965);
      intArray7[6] = 0;
      intArray7[7] = 0;
      intArray0[6] = intArray7;
      int[] intArray8 = new int[9];
      intArray8[0] = 120353;
      intArray8[1] = 0;
      intArray8[2] = 2262;
      intArray8[3] = 0;
      intArray8[4] = (-1965);
      intArray8[5] = (-1965);
      intArray8[6] = 1219;
      intArray8[7] = (-1965);
      intArray8[8] = 0;
      intArray0[7] = intArray8;
      int[] intArray9 = new int[4];
      intArray9[0] = 81;
      intArray9[1] = (-1965);
      intArray9[2] = 1219;
      intArray9[3] = 0;
      intArray0[8] = intArray9;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedTable(intArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = (-2010);
      intArray0[1] = 915;
      intArray0[2] = 2328;
      intArray0[3] = 1218;
      intArray0[4] = 2;
      intArray0[5] = (-2644);
      CharClass charClass0 = new CharClass(intArray0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[0][7];
      CharClass charClass1 = charClass0.appendTableWithSign(intArray0, 91);
      CharClass charClass2 = charClass1.appendTable(intArray0);
      CharClass charClass3 = charClass2.appendTable(intArray0);
      CharClass charClass4 = charClass2.negateClass();
      int[] intArray1 = new int[6];
      intArray1[0] = 91;
      intArray1[1] = 91;
      intArray1[2] = 91;
      intArray1[3] = 91;
      intArray1[4] = 91;
      intArray1[5] = 401;
      charClass2.appendClass(intArray1);
      CharClass charClass5 = charClass4.appendFoldedRange(91, 91);
      CharClass charClass6 = charClass5.appendFoldedRange(91, 91);
      int[] intArray2 = new int[4];
      intArray2[0] = 91;
      intArray2[1] = 91;
      intArray2[2] = 91;
      intArray2[3] = 91;
      charClass5.appendClass(intArray2);
      int[][] intArray3 = new int[7][5];
      intArray3[0] = intArray2;
      intArray3[1] = intArray2;
      intArray3[2] = intArray2;
      intArray3[3] = intArray2;
      intArray3[4] = intArray2;
      intArray3[5] = intArray2;
      intArray3[6] = intArray2;
      CharClass charClass7 = charClass6.appendNegatedTable(intArray3);
      charClass7.toString();
      charClass3.toArray();
      CharClass charClass8 = charClass6.appendTableWithSign(intArray0, 91);
      charClass8.appendClass(intArray2);
      charClass1.toString();
      // Undeclared exception!
      charClass4.appendFoldedRange(355, 1430);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      int[] intArray0 = new int[6];
      intArray0[0] = (-1359);
      intArray0[1] = 0;
      intArray0[2] = (-1676);
      intArray0[3] = (-40054735);
      intArray0[4] = 564;
      intArray0[5] = 2112;
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.appendNegatedClass(intArray0);
      assertArrayEquals(new int[] {(-1359), 0, (-1676), (-40054735), (-40054734), 1114111}, intArray0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[][] intArray0 = new int[2][9];
      int[] intArray1 = new int[7];
      intArray1[0] = (-549);
      intArray1[1] = 4;
      intArray1[2] = 65;
      intArray1[3] = (-795);
      intArray1[4] = 8186;
      intArray1[5] = 65131;
      intArray1[6] = (-548);
      intArray0[0] = intArray1;
      int[] intArray2 = new int[5];
      intArray2[0] = (-557);
      intArray2[1] = (-548);
      intArray2[2] = 1;
      intArray2[3] = (-549);
      intArray2[4] = 8186;
      intArray0[1] = intArray2;
      CharClass charClass1 = charClass0.appendTable(intArray0);
      CharClass charClass2 = charClass1.appendNegatedTable(intArray0);
      CharClass charClass3 = charClass2.cleanClass();
      CharClass charClass4 = charClass3.appendFoldedRange(1, (-549));
      int[][] intArray3 = new int[4][5];
      intArray3[0] = intArray2;
      intArray3[1] = intArray2;
      intArray3[2] = intArray2;
      intArray3[3] = intArray1;
      CharClass charClass5 = charClass4.appendTableWithSign(intArray3, 66641);
      CharClass charClass6 = charClass5.appendLiteral(66641, (-1250));
      assertSame(charClass0, charClass6);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = null;
      // Undeclared exception!
      try { 
        charClass0.appendNegatedClass((int[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CharClass charClass0 = new CharClass();
      int[] intArray0 = new int[4];
      intArray0[0] = (-40090842);
      intArray0[1] = (-40114915);
      intArray0[2] = 65;
      intArray0[3] = 1;
      CharClass charClass1 = charClass0.appendClassWithSign(intArray0, 32);
      CharClass charClass2 = charClass1.appendFoldedRange(4785, 65);
      int[][] intArray1 = new int[5][0];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      int[] intArray2 = new int[8];
      intArray2[0] = 2417;
      intArray2[1] = 1;
      intArray2[2] = 4785;
      intArray2[3] = (-40090842);
      intArray2[4] = 65;
      intArray2[5] = 1;
      intArray2[6] = 4785;
      intArray2[7] = 65;
      intArray1[3] = intArray2;
      int[] intArray3 = new int[9];
      intArray3[0] = 1;
      intArray3[1] = 32;
      intArray3[2] = 32;
      intArray3[3] = 1;
      intArray3[4] = 65;
      intArray3[5] = (-40090842);
      intArray3[6] = 2417;
      intArray3[7] = 65;
      intArray3[8] = (-40114915);
      intArray1[4] = intArray3;
      CharClass charClass3 = charClass2.appendNegatedTable(intArray1);
      CharClass charClass4 = charClass2.cleanClass();
      assertSame(charClass4, charClass3);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      int[] intArray0 = new int[4];
      intArray0[0] = (-40114915);
      intArray0[1] = 613;
      intArray0[2] = 64;
      intArray0[3] = (-1006);
      CharClass charClass0 = new CharClass(intArray0);
      CharClass charClass1 = charClass0.negateClass();
      CharClass charClass2 = charClass1.appendLiteral((-40086829), (-1544));
      CharClass charClass3 = charClass2.appendFoldedClass(intArray0);
      int[][] intArray1 = new int[6][5];
      intArray1[0] = intArray0;
      intArray1[1] = intArray0;
      intArray1[2] = intArray0;
      intArray1[3] = intArray0;
      intArray1[4] = intArray0;
      intArray1[5] = intArray0;
      charClass3.appendTableWithSign(intArray1, (-40090842));
      assertArrayEquals(new int[] {(-1005), 1114111, (-2124604949), 1114111}, intArray0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-40090843);
      int int0 = (-40078807);
      intArray0[1] = (-40078807);
      CharClass charClass0 = new CharClass(intArray0);
      charClass0.toString();
      int[][] intArray1 = new int[1][6];
      intArray1[0] = intArray0;
      // Undeclared exception!
      try { 
        charClass0.appendTable(intArray1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("com.google.re2j.CharClass", e);
      }
  }
}
