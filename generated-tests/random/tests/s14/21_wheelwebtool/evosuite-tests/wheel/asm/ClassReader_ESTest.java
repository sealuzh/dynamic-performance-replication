/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 23:08:06 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.io.InputStream;
import java.io.SequenceInputStream;
import java.util.Enumeration;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassAdapter;
import wheel.asm.ClassReader;
import wheel.asm.ClassVisitor;
import wheel.asm.ClassWriter;
import wheel.asm.Label;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassReader_ESTest extends ClassReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.PrefixFileFilter");
      classReader0.getAccess();
      int int0 = (-523);
      // Undeclared exception!
      try { 
        classReader0.readUnsignedShort((-523));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      ClassWriter classWriter0 = new ClassWriter(1);
      Attribute[] attributeArray0 = new Attribute[1];
      Attribute attribute0 = new Attribute("0G&B6esTG?");
      attributeArray0[0] = attribute0;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 1);
      classReader0.getClassName();
      classReader0.getSuperName();
      classReader0.getClassName();
      int int0 = classReader0.getItem(76);
      assertEquals(370, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      boolean boolean0 = ClassReader.ANNOTATIONS;
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      classReader0.getInterfaces();
      classReader0.getSuperName();
      classReader0.readByte(4);
      ClassWriter classWriter0 = new ClassWriter(classReader0, 39);
      classReader0.copyPool(classWriter0);
      int int0 = classReader0.readUnsignedShort(1);
      assertEquals(65210, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.Opcodes");
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        classReader0.readConst(10, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      boolean boolean0 = ClassReader.ANNOTATIONS;
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      assertEquals(8070, classReader0.header);
      
      String string0 = classReader0.getSuperName();
      assertNotNull(string0);
      assertEquals("java/lang/Object", string0);
      
      int int0 = classReader0.readByte(247);
      assertEquals(166, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFileFilter");
      int int0 = 706;
      char[] charArray0 = new char[8];
      charArray0[0] = '*';
      charArray0[1] = ' ';
      charArray0[2] = 'r';
      charArray0[3] = 'Y';
      charArray0[4] = 'R';
      charArray0[5] = '\"';
      charArray0[6] = 'F';
      charArray0[7] = 't';
      // Undeclared exception!
      try { 
        classReader0.readClass(706, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      char[] charArray0 = new char[2];
      charArray0[0] = 'h';
      charArray0[1] = 'Z';
      classReader0.getSuperName();
      int int0 = (-3644);
      // Undeclared exception!
      try { 
        classReader0.readShort((-3644));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3644
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-50);
      byteArray0[1] = (byte) (-33);
      byteArray0[2] = (byte) (-94);
      byteArray0[3] = (byte)8;
      byteArray0[4] = (byte) (-79);
      byteArray0[5] = (byte)76;
      byteArray0[6] = (byte)91;
      byteArray0[7] = (byte) (-8);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-8), (byte)76);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classWriter0.version = 3506;
      Attribute[] attributeArray0 = new Attribute[1];
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.EmptyFileFilter");
      Attribute attribute1 = attribute0.next;
      attributeArray0[0] = null;
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 36);
      classReader0.readUnsignedShort(29);
      char[] charArray0 = new char[9];
      charArray0[0] = 'o';
      charArray0[1] = '<';
      charArray0[2] = 'u';
      charArray0[3] = 'P';
      charArray0[4] = 'L';
      charArray0[5] = 'I';
      charArray0[6] = '{';
      charArray0[7] = 'o';
      charArray0[8] = '\\';
      // Undeclared exception!
      try { 
        classReader0.readClass(285, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.MethodWriter");
      classReader0.getInterfaces();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 11);
      Attribute[] attributeArray0 = new Attribute[2];
      Attribute attribute0 = new Attribute("~-^v~?W7j");
      char[] charArray0 = new char[9];
      charArray0[0] = '|';
      charArray0[1] = '!';
      charArray0[2] = '*';
      charArray0[3] = '}';
      charArray0[4] = '{';
      charArray0[5] = ')';
      charArray0[6] = 'Q';
      charArray0[7] = '.';
      charArray0[8] = '+';
      // Undeclared exception!
      try { 
        attribute0.read(classReader0, (-21), 36, charArray0, 4, (Label[]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)33;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      char[] charArray0 = new char[2];
      charArray0[0] = 'h';
      charArray0[1] = 'Z';
      // Undeclared exception!
      try { 
        classReader0.readUTF8((byte)33, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte)122;
      byteArray0[2] = (byte)119;
      byteArray0[3] = (byte)30;
      byteArray0[4] = (byte)123;
      byteArray0[5] = (byte)19;
      byteArray0[6] = (byte) (-89);
      byteArray0[8] = (byte)11;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      classReader0.getClassName();
      classReader0.getInterfaces();
      // Undeclared exception!
      try { 
        classReader0.getItem(121);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 121
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      String string0 = classReader0.getSuperName();
      assertNotNull(string0);
      assertEquals(8070, classReader0.header);
      assertEquals("java/lang/Object", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte)122;
      byteArray0[2] = (byte)119;
      byteArray0[3] = (byte)30;
      byteArray0[4] = (byte)123;
      byteArray0[5] = (byte)19;
      byteArray0[6] = (byte) (-89);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)11;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      classReader0.getInterfaces();
      // Undeclared exception!
      try { 
        classReader0.getItem(121);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 121
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-74);
      byteArray0[1] = (byte)122;
      byteArray0[2] = (byte)119;
      byteArray0[3] = (byte)30;
      byteArray0[4] = (byte)123;
      byteArray0[5] = (byte)19;
      byteArray0[6] = (byte) (-89);
      byteArray0[7] = (byte)0;
      byteArray0[8] = (byte)11;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ClassReader classReader0 = new ClassReader("org.apache.commons.io.filefilter.NotFileFilter");
      // Undeclared exception!
      try { 
        classReader0.getItem(121);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 121
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)0;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte)0, (byte)0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("LocalVariableTypeTable");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      long long0 = classReader0.readLong(1000);
      assertEquals(8334, classReader0.header);
      assertEquals(72074414898701646L, long0);
      
      char[] charArray0 = new char[9];
      charArray0[0] = 'N';
      FileSystemHandling.shouldAllThrowIOExceptions();
      charArray0[1] = 'w';
      charArray0[2] = '&';
      charArray0[3] = 'U';
      charArray0[4] = ')';
      charArray0[5] = 'K';
      charArray0[6] = '(';
      charArray0[7] = '*';
      ClassWriter classWriter0 = new ClassWriter(classReader0, 0);
      Attribute[] attributeArray0 = new Attribute[0];
      classReader0.accept((ClassVisitor) classWriter0, attributeArray0, 9);
      charArray0[8] = '8';
      String string0 = classReader0.readUTF8(1000, charArray0);
      assertEquals("(Ljava/nio/charset/Charset;)[B", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("RuntimeInvisibleParameterAnnotations");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(sequenceInputStream0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)33;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassReader");
      char[] charArray0 = new char[2];
      charArray0[0] = 'h';
      // Undeclared exception!
      try { 
        classReader0.readConst((byte)33, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-116);
      byte byte0 = (byte)13;
      byteArray0[1] = (byte)13;
      byteArray0[2] = (byte) (-1);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, (byte) (-116), (byte) (-116));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader((InputStream) null);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("java/lang/String");
      int int0 = 1000;
      classReader0.readLong(1000);
      char[] charArray0 = new char[9];
      charArray0[0] = 'N';
      charArray0[1] = 'w';
      charArray0[2] = '&';
      charArray0[3] = 'U';
      charArray0[4] = '\u001A';
      charArray0[5] = ']';
      charArray0[6] = '(';
      char char0 = '*';
      ClassAdapter classAdapter0 = new ClassAdapter((ClassVisitor) null);
      // Undeclared exception!
      try { 
        classReader0.accept((ClassVisitor) classAdapter0, 1000);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassAdapter", e);
      }
  }
}
