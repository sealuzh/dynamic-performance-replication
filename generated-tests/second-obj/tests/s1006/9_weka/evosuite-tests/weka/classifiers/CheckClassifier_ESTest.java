/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 20:11:02 GMT 2018
 */

package weka.classifiers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import weka.classifiers.CheckClassifier;
import weka.classifiers.Classifier;
import weka.classifiers.Evaluation;
import weka.classifiers.functions.LinearRegression;
import weka.classifiers.functions.SGD;
import weka.classifiers.meta.FilteredClassifier;
import weka.classifiers.meta.RegressionByDiscretization;
import weka.classifiers.misc.InputMappedClassifier;
import weka.core.Attribute;
import weka.core.BinarySparseInstance;
import weka.core.CheckScheme;
import weka.core.GlobalInfoJavadoc;
import weka.core.Instance;
import weka.core.Instances;
import weka.core.TechnicalInformationHandlerJavadoc;
import weka.core.Utils;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CheckClassifier_ESTest extends CheckClassifier_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(true, false, true, false, true, true, 0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getOptions();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleMissing(false, true, true, false, true, false, (-2217), false, true, 1345);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-2217' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getRevision();
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(false, false, true, false, false, false, 20);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '20' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.declaresSerialVersionUID();
      boolean boolean0 = true;
      boolean boolean1 = false;
      int int0 = 4;
      checkClassifier0.canPredict(true, true, true, true, true, false, 4);
      // Undeclared exception!
      try { 
        checkClassifier0.datasetIntegrity(true, true, false, true, true, true, 4, true, true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.multiInstanceHandler();
      boolean boolean0 = false;
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(true, true, false, false, true, true, 1);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = (-1406);
      Locale.getISOCountries();
      checkClassifier0.canTakeOptions();
      checkClassifier0.setNumNominal((-1406));
      boolean boolean0 = true;
      checkClassifier0.getRevision();
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(false, true, true, false, false, true, (-1406));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-1406' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = true;
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(true, true, true, false, true, false, 116);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '116' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(false, false, true, false, true, true, 2635);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '2635' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = (-1422);
      Locale.getISOCountries();
      checkClassifier0.setNumNominal((-1422));
      boolean boolean0 = false;
      boolean boolean1 = false;
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(false, false, false, true, false, true, (-1422));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-1422' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(false, false, true, false, true, false, 20);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '20' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = true;
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(true, true, true, true, true, true, 685);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '685' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Locale.getISOCountries();
      checkClassifier0.setNumNominal((-1406));
      boolean boolean0 = false;
      String string0 = GlobalInfoJavadoc.GLOBALINFO_METHOD;
      int int0 = 0;
      // Undeclared exception!
      try { 
        checkClassifier0.correctBuildInitialisation(false, false, false, false, false, false, (-1406));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-1406' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(false, false, false, true, true, false, (-2691));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-2691' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(true, false, false, true, true, false, (-2691));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-2691' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/users/apanichella/wekafiles");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "");
      Utils.SMALL = 2408.479658930723;
      checkClassifier0.setNumString((-883));
      // Undeclared exception!
      try { 
        checkClassifier0.datasetIntegrity(false, true, false, true, false, false, (-883), true, true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-883' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = false;
      String[] stringArray0 = new String[4];
      stringArray0[0] = "toward";
      stringArray0[1] = "c;+FPB-rN~-03";
      stringArray0[2] = "";
      checkClassifier0.getRevision();
      int int0 = (-711);
      // Undeclared exception!
      try { 
        checkClassifier0.datasetIntegrity(true, false, false, false, false, true, (-1573), true, true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-1573' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.datasetIntegrity(true, true, false, false, true, true, 0, true, true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Locale.getISOCountries();
      checkClassifier0.updateableClassifier();
      checkClassifier0.setNumNominal(445);
      checkClassifier0.getRevision();
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(false, true, false, false, true, true, 445);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '445' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getWords();
      int int0 = 84;
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleMissing(true, true, true, true, false, false, 84, true, true, 84);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '84' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setNumInstances(0);
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(true, true, false, false, false, true, 42);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '42' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = (-1406);
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(false, false, false, false, true, false, (-1406));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-1406' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.datasetIntegrity(true, true, true, false, false, true, 0, false, true);
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleOnlyClass(true, false, true, false, true, 87);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '87' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      checkClassifier0.updateableClassifier();
      checkClassifier0.setNumNominal((-1406));
      checkClassifier0.getRevision();
      checkClassifier0.datasetIntegrity(false, true, false, true, true, false, 0, true, false);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Locale.getISOCountries();
      checkClassifier0.setNumNominal((-1406));
      checkClassifier0.getRevision();
      checkClassifier0.datasetIntegrity(false, false, false, false, true, false, 0, false, false);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      CheckClassifier checkClassifier1 = new CheckClassifier();
      checkClassifier0.getWords();
      // Undeclared exception!
      try { 
        checkClassifier0.doesntUseTestClassVal(true, false, false, false, true, false, 84);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '84' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getOptions();
      CheckClassifier checkClassifier1 = new CheckClassifier();
      checkClassifier1.getWords();
      // Undeclared exception!
      try { 
        checkClassifier1.doesntUseTestClassVal(false, true, false, false, false, false, 108);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '108' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = true;
      boolean boolean1 = true;
      int int0 = 0;
      String[] stringArray0 = new String[11];
      stringArray0[0] = "toward";
      stringArray0[1] = "c;+FPB-rN~-03";
      stringArray0[2] = "";
      stringArray0[3] = "(-\"'";
      CheckClassifier.main(stringArray0);
      int int1 = 20;
      checkClassifier0.doesntUseTestClassVal(false, false, false, false, true, false, 0);
      CheckClassifier checkClassifier1 = new CheckClassifier();
      CheckClassifier checkClassifier2 = new CheckClassifier();
      checkClassifier2.testToString();
      CheckClassifier checkClassifier3 = new CheckClassifier();
      boolean boolean2 = false;
      boolean boolean3 = false;
      boolean boolean4 = false;
      SGD sGD0 = new SGD();
      BinarySparseInstance binarySparseInstance0 = null;
      try {
        binarySparseInstance0 = new BinarySparseInstance((Instance) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("weka.core.BinarySparseInstance", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(false, true, true, true, false, true, (-2691));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-2691' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Locale.getISOCountries();
      checkClassifier0.updateableClassifier();
      checkClassifier0.setNumNominal((-1406));
      checkClassifier0.getRevision();
      checkClassifier0.updatingEquality(false, true, true, false, false, true, 0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setNumInstances(0);
      LinearRegression linearRegression0 = new LinearRegression();
      checkClassifier0.m_Classifier = (Classifier) linearRegression0;
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(true, true, false, false, false, true, 0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: weka.classifiers.functions.LinearRegression: Cannot handle relational attributes!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.setNumInstances(0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "The class that splits a node into two such that the overall sum of squared distances of points to their centres on both sides of the (axis-parallel) splitting plane is minimum.\n\nFor more information see also:\n\n";
      stringArray0[2] = "";
      stringArray0[3] = "";
      stringArray0[4] = "P";
      stringArray0[5] = "";
      checkClassifier0.setOptions(stringArray0);
      checkClassifier0.getRevision();
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(true, false, true, false, false, true, 0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getWords();
      checkClassifier0.testToString();
      checkClassifier0.setWordSeparators("2?dpK4");
      checkClassifier0.multiInstanceHandler();
      checkClassifier0.getClassifier();
      String[] stringArray0 = new String[0];
      checkClassifier0.setOptions(stringArray0);
      checkClassifier0.getRevision();
      checkClassifier0.instanceWeights(true, true, true, false, false, true, 0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getWords();
      checkClassifier0.testToString();
      checkClassifier0.setWordSeparators("2?dHz.K4");
      checkClassifier0.multiInstanceHandler();
      checkClassifier0.getClassifier();
      String[] stringArray0 = new String[0];
      checkClassifier0.setOptions(stringArray0);
      checkClassifier0.getRevision();
      checkClassifier0.instanceWeights(false, true, false, true, false, true, 0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.multiInstanceHandler();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FilteredClassifier filteredClassifier0 = new FilteredClassifier();
      checkClassifier0.setClassifier(filteredClassifier0);
      checkClassifier0.getOptions();
      checkClassifier0.canTakeOptions();
      checkClassifier0.setNumNominal((-1406));
      // Undeclared exception!
      try { 
        checkClassifier0.instanceWeights(true, true, true, true, true, true, (-1406));
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Illegal Capacity: -1399
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Locale.getISOCountries();
      checkClassifier0.updateableClassifier();
      checkClassifier0.setWordSeparators("`W,-{7,$ _?Jjlhpt");
      checkClassifier0.setNumNominal(445);
      checkClassifier0.getRevision();
      // Undeclared exception!
      try { 
        checkClassifier0.updatingEquality(false, false, false, false, true, true, 445);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '445' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      CheckScheme.PostProcessor checkScheme_PostProcessor0 = new CheckScheme.PostProcessor();
      checkClassifier0.setPostProcessor(checkScheme_PostProcessor0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Locale.getISOCountries();
      checkClassifier0.setNumNominal((-1406));
      checkClassifier0.getWords();
      checkClassifier0.getRevision();
      checkClassifier0.updatingEquality(false, false, false, false, false, false, 0);
      // Undeclared exception!
      try { 
        checkClassifier0.doTests();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Illegal Capacity: -1405
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getRevision();
      checkClassifier0.setNumInstances(0);
      String string0 = GlobalInfoJavadoc.GLOBALINFO_STARTTAG;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "cS";
      stringArray0[1] = "8034";
      stringArray0[2] = "cS";
      stringArray0[3] = "cS";
      stringArray0[4] = "<!-- globalinfo-start -->";
      CheckClassifier.main(stringArray0);
      checkClassifier0.doesntUseTestClassVal(true, false, true, false, false, true, 0);
      CheckClassifier checkClassifier1 = new CheckClassifier();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/users/apanichella/wekafiles/props/Capabilities.props");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "cS");
      checkClassifier1.testToString();
      checkClassifier0.doTests();
      // Undeclared exception!
      try { 
        checkClassifier0.canHandleClassAsNthAttribute(true, true, false, true, false, true, (-1591), 20);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-1591' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Locale.getISOCountries();
      checkClassifier0.updateableClassifier();
      String string0 = TechnicalInformationHandlerJavadoc.PLAINTEXT_ENDTAG;
      checkClassifier0.doesntUseTestClassVal(false, false, false, false, false, true, 0);
      CheckClassifier checkClassifier1 = new CheckClassifier();
      CheckClassifier checkClassifier2 = new CheckClassifier();
      CheckClassifier checkClassifier3 = new CheckClassifier();
      checkClassifier0.canHandleClassAsNthAttribute(true, true, false, true, false, false, 0, 0);
      checkClassifier2.getOptions();
      // Undeclared exception!
      try { 
        checkClassifier2.doTests();
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Problem determining ZeroR performance: Loop has been executed more times than the allowed 10000
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = true;
      checkClassifier0.getRevision();
      checkClassifier0.setNumInstances(0);
      String[] stringArray0 = new String[6];
      stringArray0[0] = "cS";
      stringArray0[1] = "8034";
      stringArray0[2] = "cS";
      stringArray0[3] = "cS";
      stringArray0[4] = "8034";
      CheckClassifier.main(stringArray0);
      int int0 = 20;
      checkClassifier0.doesntUseTestClassVal(true, true, true, false, true, true, 0);
      CheckClassifier checkClassifier1 = new CheckClassifier();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/users/apanichella/wekafiles/props/Capabilities.props");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "cS");
      checkClassifier1.testToString();
      boolean boolean1 = true;
      // Undeclared exception!
      try { 
        checkClassifier1.updatingEquality(true, true, false, true, true, false, 100);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '100' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.getRevision();
      checkClassifier0.setNumInstances(0);
      String[] stringArray0 = new String[5];
      stringArray0[0] = "cS";
      stringArray0[1] = "8034";
      stringArray0[2] = "cS";
      stringArray0[3] = "cS";
      stringArray0[4] = "8034";
      CheckClassifier.main(stringArray0);
      checkClassifier0.doesntUseTestClassVal(true, false, true, false, false, true, 0);
      CheckClassifier checkClassifier1 = new CheckClassifier();
      CheckClassifier.main(stringArray0);
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/users/apanichella/wekafiles/props/Capabilities.props");
      FileSystemHandling.appendLineToFile(evoSuiteFile0, "cS");
      checkClassifier1.doesntUseTestClassVal(false, false, true, true, true, false, 0);
      checkClassifier1.testToString();
      checkClassifier0.datasetIntegrity(true, true, true, false, true, false, 0, true, true);
      // Undeclared exception!
      try { 
        checkClassifier1.testsPerClassType(20, false, true, true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '20' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.multiInstanceHandler();
      checkClassifier0.canPredict(true, true, true, true, true, false, 4);
      checkClassifier0.setNumDate(35);
      checkClassifier0.weightedInstancesHandler();
      checkClassifier0.getOptions();
      String string0 = TechnicalInformationHandlerJavadoc.PLAINTEXT_ENDTAG;
      checkClassifier0.multiInstanceHandler();
      CheckClassifier checkClassifier1 = new CheckClassifier();
      checkClassifier1.testToString();
      checkClassifier1.listOptions();
      checkClassifier0.doTests();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      int int0 = 0;
      checkClassifier0.getOptions();
      checkClassifier0.canHandleZeroTraining(false, true, true, false, false, false, 0);
      CheckClassifier checkClassifier1 = new CheckClassifier();
      boolean boolean0 = true;
      boolean boolean1 = true;
      checkClassifier0.testToString();
      checkClassifier0.doTests();
      boolean boolean2 = false;
      boolean boolean3 = true;
      boolean boolean4 = false;
      boolean boolean5 = false;
      checkClassifier0.canHandleClassAsNthAttribute(boolean2, boolean0, boolean3, boolean1, boolean4, boolean5, int0, int0);
      checkClassifier0.listOptions();
      checkClassifier0.doTests();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      boolean boolean0 = FileSystemHandling.createFolder((EvoSuiteFile) null);
      Locale.getISOCountries();
      checkClassifier0.updateableClassifier();
      boolean boolean1 = true;
      checkClassifier0.getRevision();
      checkClassifier0.updatingEquality(false, true, true, false, true, true, 0);
      boolean boolean2 = true;
      boolean boolean3 = false;
      boolean boolean4 = true;
      int int0 = (-4806);
      boolean boolean5 = false;
      boolean boolean6 = false;
      // Undeclared exception!
      try { 
        checkClassifier0.datasetIntegrity(boolean3, boolean4, boolean0, boolean1, boolean2, boolean2, int0, boolean5, boolean6);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Attribute type '-4806' unknown!
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      CheckClassifier checkClassifier0 = new CheckClassifier();
      checkClassifier0.multiInstanceHandler();
      boolean boolean0 = true;
      checkClassifier0.setNumDate((-1112));
      checkClassifier0.weightedInstancesHandler();
      String[] stringArray0 = checkClassifier0.getOptions();
      CheckClassifier checkClassifier1 = new CheckClassifier();
      // Undeclared exception!
      try { 
        CheckClassifier.main(stringArray0);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // Error setting up for tests: Illegal Capacity: -1111
         //
         verifyException("weka.classifiers.CheckClassifier", e);
      }
  }
}
