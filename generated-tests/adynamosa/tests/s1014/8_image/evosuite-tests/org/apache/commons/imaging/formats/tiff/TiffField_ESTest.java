/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 20:16:02 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, 1326, fieldTypeShort0, 2143L, (-1550L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-1550), tiffField0.getOffset());
      assertEquals((-256), int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1326, tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(1231, 666, fieldTypeDouble0.ASCII, 4L, 3871L, byteArray0, byteOrder0, (byte)12);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(666, tiffField0.getDirectoryType());
      assertEquals(1231, tiffField0.getTag());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(3871, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(40094, 50, fieldTypeRational0.UNDEFINED, 4415L, 340L, byteArray0, byteOrder0, 9);
      String string0 = tiffField0.getValueDescription();
      assertEquals(40094, tiffField0.getTag());
      assertEquals(340, tiffField0.getOffset());
      assertEquals("Invalid value: Text field not encoded as bytes.", string0);
      assertEquals(9, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (-1689), fieldTypeByte0, 0L, (-1689), byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals((-1689), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1689), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[53];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(27, (-968), fieldTypeLong0, 132, (-2147483648L), byteArray0, byteOrder0, 46);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tagInfo0.tag);
      assertEquals(27, tiffField0.getTag());
      assertEquals((-968), tiffField0.getDirectoryType());
      assertEquals(46, tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(34665, 33, fieldTypeFloat0, 33, 34665, byteArray0, byteOrder0, 1);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(34665, tagInfo0.tag);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(34665, tiffField0.getTag());
      assertEquals(33, tiffField0.getDirectoryType());
      assertEquals(34665, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeLong0, 0, (-2304L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2304), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1265, "OversizeValueElement, tag: ");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1619, 1619, fieldTypeLong0, 1619, (-1L), byteArray0, byteOrder0, 1265);
      int int0 = tiffField0.getTag();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1619, tiffField0.getDirectoryType());
      assertEquals(1619, int0);
      assertEquals(1265, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(264, "L_ \"JC,2VfO2d/yeH\"");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)69;
      byteArray0[1] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)69, 121, fieldTypeAscii0, 4L, 32L, byteArray0, byteOrder0, 121);
      assertEquals(4, tiffField0.getBytesLength());
      
      byteArray0[2] = (byte) (-54);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(69, tiffField0.getTag());
      assertEquals(121, tiffField0.getSortHint());
      assertEquals(121, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, 1326, fieldTypeShort0, 2143L, (-1550L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, int0);
      assertEquals(7, tiffField0.getTag());
      assertEquals(1326, tiffField0.getDirectoryType());
      assertEquals((-1550), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (-1689), fieldTypeByte0, 0L, (-1689), byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getSortHint();
      assertEquals(65535, int0);
      assertEquals((-1689), tiffField0.getDirectoryType());
      assertEquals((-1689), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 34911, fieldTypeByte0, (byte) (-82), 0L, byteArray0, byteOrder0, (byte)2);
      int int0 = tiffField0.getOffset();
      assertEquals(34911, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(2, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(3, "'");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte) (-13), (-2667), fieldTypeFloat0, (byte) (-78), 1L, byteArray0, (ByteOrder) null, (byte) (-13));
      int int0 = tiffField0.getOffset();
      assertEquals((-13), tiffField0.getTag());
      assertEquals((-13), tiffField0.getSortHint());
      assertEquals((-2667), tiffField0.getDirectoryType());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte) (-110);
      TiffField tiffField0 = new TiffField(1265, 1265, fieldTypeLong0, 1265, (-4080L), byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntValueOrArraySum();
      assertEquals(5060, tiffField0.getBytesLength());
      assertEquals(1265, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1265, tiffField0.getTag());
      assertEquals((-4080), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)113;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-547), (-547), fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte)113);
      tiffField0.getIntValue();
      assertEquals((-547), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(113, tiffField0.getSortHint());
      assertEquals((-547), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[7];
      byteArray0[3] = (byte) (-33);
      TiffField tiffField0 = new TiffField(1, (-1566), fieldTypeLong0, 1, 143L, byteArray0, (ByteOrder) null, (-3953));
      tiffField0.getIntValue();
      assertEquals(143, tiffField0.getOffset());
      assertEquals((-3953), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1566), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, (String) null);
      byte[] byteArray0 = new byte[3];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(34020, (-936), fieldTypeLong0, (-936), 0, byteArray0, byteOrder0, 318);
      tiffField0.getFieldTypeName();
      assertEquals(318, tiffField0.getSortHint());
      assertEquals(34020, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-936), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-21), "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-59), (-2874), fieldTypeRational0, 0L, (byte) (-101), byteArray0, byteOrder0, (-5572));
      tiffField0.getFieldTypeName();
      assertEquals((-5572), tiffField0.getSortHint());
      assertEquals((-2874), tiffField0.getDirectoryType());
      assertEquals((-101), tiffField0.getOffset());
      assertEquals((-59), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(41988, 33723, (FieldType) null, (-907L), 2147483647L, byteArray0, byteOrder0, (-3202));
      tiffField0.getFieldType();
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(33723, tiffField0.getDirectoryType());
      assertEquals((-3202), tiffField0.getSortHint());
      assertEquals(41988, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte)0, "OversizeValueElement, tag: ");
      TiffField tiffField0 = new TiffField(33451, 2145739144, fieldTypeAscii0, (byte)98, (byte) (-115), byteArray0, byteOrder0, 3379);
      tiffField0.getFieldType();
      assertEquals(3379, tiffField0.getSortHint());
      assertEquals((-115), tiffField0.getOffset());
      assertEquals(33451, tiffField0.getTag());
      assertEquals(2145739144, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-919), "@_G");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 2, fieldTypeAscii0, 1115L, (-1L), byteArray0, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-3633), "9$sAk&rcD\rp");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2123354617), (-697), fieldTypeRational0.DOUBLE, 1L, (-3633), byteArray0, byteOrder0, (-2146846978));
      tiffField0.getDoubleValue();
      assertEquals((-2146846978), tiffField0.getSortHint());
      assertEquals((-2123354617), tiffField0.getTag());
      assertEquals((-697), tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-3633), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-37);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 1, fieldTypeDouble0, 1L, (byte)10, byteArray0, byteOrder0, 679);
      tiffField0.getDoubleValue();
      assertEquals(679, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(10, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(332, 332, fieldTypeByte0, 1L, 4L, byteArray0, byteOrder0, (byte)109);
      tiffField0.getDoubleValue();
      assertEquals(332, tiffField0.getDirectoryType());
      assertEquals(332, tiffField0.getTag());
      assertEquals(109, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, 2145724857);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(2145724857, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(3, "'");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, 1487, fieldTypeFloat0, 3, 1487, (byte[]) null, byteOrder0, 1487);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1487, int0);
      assertEquals(1487, tiffField0.getOffset());
      assertEquals(1487, tiffField0.getSortHint());
      assertEquals(3, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (-1689), fieldTypeByte0, 0L, (-1689), byteArray0, byteOrder0, 65535);
      tiffField0.getCount();
      assertEquals((-1689), tiffField0.getDirectoryType());
      assertEquals((-1689), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(65535, (String) null);
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeRational0, 3483L, 65535, byteArray0, byteOrder0, 51009);
      tiffField0.getCount();
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(51009, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-466), (-466), fieldTypeShort0, (-466), 0L, byteArray0, byteOrder0, (-88));
      tiffField0.getCount();
      assertEquals((-466), tiffField0.getDirectoryType());
      assertEquals((-88), tiffField0.getSortHint());
      assertEquals((-466), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(253, "org.apache.commons.imaging.formats.tiff.TiffField");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(253, 253, fieldTypeDouble0, 6476L, (-485L), byteArray0, byteOrder0, (byte)55);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-485), tiffField0.getOffset());
      assertEquals(253, tiffField0.getDirectoryType());
      assertEquals(51808, int0);
      assertEquals(55, tiffField0.getSortHint());
      assertEquals(253, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (-1), fieldTypeRational0, (-1), 0L, byteArray0, byteOrder0, (-2761));
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-8), int0);
      assertEquals((-2761), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2146762289, 65110, fieldTypeByte0, 2146762289, 2146762289, byteArray0, (ByteOrder) null, (-2979));
      tiffField0.getByteOrder();
      assertEquals((-2979), tiffField0.getSortHint());
      assertEquals(65110, tiffField0.getDirectoryType());
      assertEquals(2146762289, tiffField0.getTag());
      assertEquals(2146762289, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1265, "OversizeValueElement, tag: ");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-178), 4265, fieldTypeLong0, 65535, 126L, byteArray0, byteOrder0, 1619);
      tiffField0.getByteOrder();
      assertEquals(4265, tiffField0.getDirectoryType());
      assertEquals((-178), tiffField0.getTag());
      assertEquals(126, tiffField0.getOffset());
      assertEquals(1619, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[212];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(3, (-3068), fieldTypeLong0, 1848L, (-3068), byteArray0, byteOrder0, (-3278));
      tiffField0.getByteArrayValue();
      assertEquals(3, tiffField0.getTag());
      assertEquals((-3278), tiffField0.getSortHint());
      assertEquals(7392, tiffField0.getBytesLength());
      assertEquals((-3068), tiffField0.getDirectoryType());
      assertEquals((-3068), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-82), (byte) (-82), fieldTypeByte0, (byte)0, (byte)38, byteArray0, byteOrder0, (-2146846978));
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals((-82), tiffField0.getTag());
      assertEquals((-2146846978), tiffField0.getSortHint());
      assertEquals((-82), tiffField0.getDirectoryType());
      assertEquals(38, tiffField0.getOffset());
      assertEquals(0, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeShort0, 1009L, (byte) (-75), byteArray0, byteOrder0, (byte) (-75));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(": 65535 (0xffff: Unknown Tag): 0 (1009 SShort)\n", byteArrayOutputStream0.toString());
      assertEquals(47, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2135070446), 2992, fieldTypeShort0, 4L, 85L, byteArray0, byteOrder0, (byte)42);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("W;");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals((-2135070446), tiffField0.getTag());
      assertEquals(2992, tiffField0.getDirectoryType());
      assertEquals(85, tiffField0.getOffset());
      assertEquals(42, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[14];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1918, 1969, fieldTypeRational0, (byte) (-102), (-135L), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2146429411, (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1279), 53, fieldTypeAscii0, (-626), 1323L, (byte[]) null, byteOrder0, 8);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2155), (-2739), fieldTypeByte0, (-2155), (-2739), byteArray0, byteOrder0, (byte)106);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeFloat0, (-1923L), 65535, (byte[]) null, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3091, 0, fieldTypeByte0, 0, 0L, byteArray0, byteOrder0, (byte)112);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(3, "'");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(339, 339, fieldTypeFloat0, 2980L, (-932L), (byte[]) null, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1209), (-200), fieldTypeByte0, (-200), (-978L), byteArray0, byteOrder0, 825);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(41988, 33723, (FieldType) null, (-907L), 2147483647L, byteArray0, byteOrder0, (-3202));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)9, (byte) (-37), fieldTypeDouble0, (-243L), (byte) (-37), byteArray0, byteOrder0, (byte) (-37));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-466), (-466), fieldTypeShort0, (-466), 0L, byteArray0, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[14];
      TiffField tiffField0 = new TiffField((byte) (-72), 383, fieldTypeRational0.FLOAT, 383, (-2157), byteArray0, (ByteOrder) null, 1758);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "org.apache.commons.imaging.ImagingException");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)85, 860, fieldTypeShort0, 2147483647L, (-3134L), byteArray0, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(3, "'");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3, 1487, fieldTypeFloat0, 3, 1487, (byte[]) null, byteOrder0, 1487);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2146429409, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2135070446), 2146429409, fieldTypeAscii0, 255L, (-1622L), byteArray0, byteOrder0, (-1413));
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("ZDV-t#`=cBTRG");
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals((-2135070446), tiffField0.getTag());
      assertEquals(255, tiffField0.getBytesLength());
      assertEquals((-1413), tiffField0.getSortHint());
      assertEquals(2146429409, tiffField0.getDirectoryType());
      assertEquals((-1622), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, "A/");
      TiffField tiffField0 = new TiffField(37500, (-2005), fieldTypeByte0, 1L, (-84L), byteArray0, byteOrder0, 1326);
      tiffField0.getFieldType();
      assertEquals(1326, tiffField0.getSortHint());
      assertEquals((-2005), tiffField0.getDirectoryType());
      assertEquals((-84), tiffField0.getOffset());
      assertEquals(37500, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1091), fieldTypeByte0, 0L, (-1L), byteArray0, byteOrder0, (-2618));
      tiffField0.getValue();
      assertEquals((-2618), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-1091), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(3, "'");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte) (-13), (-2667), fieldTypeFloat0, (byte) (-78), 1L, byteArray0, (ByteOrder) null, (byte) (-13));
      int int0 = tiffField0.getTag();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-13), tiffField0.getSortHint());
      assertEquals((-13), int0);
      assertEquals((-2667), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0.IFD, 0, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[212];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(3, (-3068), fieldTypeLong0, 1848L, (-3068), byteArray0, byteOrder0, (-3278));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-547), (-547), fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, (byte)113);
      tiffField0.getIntValue();
      assertEquals(113, tiffField0.getSortHint());
      assertEquals((-547), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-547), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2094), (byte)30, fieldTypeByte0, 2285L, 3020L, byteArray0, byteOrder0, 929);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@7ad94f2e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, 1326, fieldTypeShort0, 2143L, (-1550L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(7, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(4286, tiffField0.getBytesLength());
      assertEquals(1326, tiffField0.getDirectoryType());
      assertEquals((-1550), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "F|_f");
      Long long0 = new Long(1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = fieldTypeRational0.writeData(long0, byteOrder0);
      TiffField tiffField0 = new TiffField((-706), 42032, fieldTypeRational0, 1553L, 1232L, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, int0);
      assertEquals(12424, tiffField0.getBytesLength());
      assertEquals(1232, tiffField0.getOffset());
      assertEquals((-706), tiffField0.getTag());
      assertEquals(42032, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)89, (byte)89, fieldTypeShort0, 1L, (-1543L), byteArray0, byteOrder0, (byte)89);
      tiffField0.getIntValueOrArraySum();
      assertEquals(89, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-1543), tiffField0.getOffset());
      assertEquals(89, tiffField0.getDirectoryType());
      assertEquals(89, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-919), "@_G");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 2, fieldTypeAscii0, 1115L, (-1L), byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@7c3aece4 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[14];
      TiffField tiffField0 = new TiffField(48, 2284, fieldTypeRational0.FLOAT, (byte)48, (byte) (-102), byteArray0, (ByteOrder) null, (byte)48);
      tiffField0.getDoubleArrayValue();
      assertEquals(48, tiffField0.getSortHint());
      assertEquals(48, tiffField0.getTag());
      assertEquals(192, tiffField0.getBytesLength());
      assertEquals(2284, tiffField0.getDirectoryType());
      assertEquals((-102), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(34665, 33, fieldTypeFloat0, 33, 34665, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(34665, tiffField0.getTag());
      assertEquals(33, tiffField0.getDirectoryType());
      assertEquals(132, tiffField0.getBytesLength());
      assertEquals(34665, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "2TZ|6f8em{EjU{");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, 294);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(294, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[53];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(27, 27, fieldTypeLong0.SSHORT, 27, 27, byteArray0, byteOrder0, 27);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(26, doubleArray0.length);
      assertEquals(27, tiffField0.getOffset());
      assertEquals(27, tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "F|_f");
      Long long0 = new Long(1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = fieldTypeRational0.writeData(long0, byteOrder0);
      TiffField tiffField0 = new TiffField((-706), 42032, fieldTypeRational0, 1553L, 1232L, byteArray0, byteOrder0, 1);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals((-706), tiffField0.getTag());
      assertEquals(1232, tiffField0.getOffset());
      assertEquals(42032, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertArrayEquals(new double[] {1.0}, doubleArray0, 0.01);
      assertEquals(12424, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(37391, (String) null);
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)52, (byte)30, fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, 28);
      tiffField0.getDoubleArrayValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(30, tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(52, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[212];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(3, (-3068), fieldTypeLong0, 1848L, (-3068), byteArray0, byteOrder0, (-3278));
      tiffField0.getDoubleArrayValue();
      assertEquals((-3068), tiffField0.getDirectoryType());
      assertEquals((-3278), tiffField0.getSortHint());
      assertEquals(3, tiffField0.getTag());
      assertEquals((-3068), tiffField0.getOffset());
      assertEquals(7392, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(0, (String) null);
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1042, fieldTypeAscii0, 2163L, 4774L, byteArray0, byteOrder0, (byte) (-63));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@4aed840e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[53];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(27, 27, fieldTypeLong0.SSHORT, 27, 27, byteArray0, byteOrder0, 27);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getOffset());
      assertEquals(27, tiffField0.getSortHint());
      assertEquals(26, intArray0.length);
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "F|_f");
      Long long0 = new Long(1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = fieldTypeRational0.writeData(long0, byteOrder0);
      TiffField tiffField0 = new TiffField((-706), 42032, fieldTypeRational0, 1553L, 1232L, byteArray0, byteOrder0, 1);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(1232, tiffField0.getOffset());
      assertEquals(42032, tiffField0.getDirectoryType());
      assertEquals(12424, tiffField0.getBytesLength());
      assertArrayEquals(new int[] {1}, intArray0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-706), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeFloat0.SRATIONAL, 33, 33, byteArray0, byteOrder0, 33);
      tiffField0.getIntArrayValue();
      assertEquals(33, tiffField0.getOffset());
      assertEquals(264, tiffField0.getBytesLength());
      assertEquals(33, tiffField0.getDirectoryType());
      assertEquals(33, tiffField0.getTag());
      assertEquals(33, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-3633), "9$sAk&rcD\rp");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2123354617), (-697), fieldTypeRational0.DOUBLE, 1L, (-3633), byteArray0, byteOrder0, (-2146846978));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-697), tiffField0.getDirectoryType());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals((-3633), tiffField0.getOffset());
      assertEquals((-2123354617), tiffField0.getTag());
      assertEquals((-2146846978), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[212];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(3, (-3068), fieldTypeLong0, 1848L, (-3068), byteArray0, byteOrder0, (-3278));
      tiffField0.getIntArrayValue();
      assertEquals(1848L, tiffField0.getCount());
      assertEquals((-3068), tiffField0.getDirectoryType());
      assertEquals(7392, tiffField0.getBytesLength());
      assertEquals((-3278), tiffField0.getSortHint());
      assertEquals((-3068), tiffField0.getOffset());
      assertEquals(3, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(1265, 1265, fieldTypeLong0, 1265, (-4080L), byteArray0, byteOrder0, (byte)0);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [I@7d625251
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((byte) (-104), "iS");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(1265, (-4338), fieldTypeAscii0, 0L, (-823L), byteArray0, byteOrder0, (-1580));
      String string0 = tiffField0.getStringValue();
      assertEquals(1265, tiffField0.getTag());
      assertEquals((-823), tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals((-4338), tiffField0.getDirectoryType());
      assertEquals((-1580), tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "2TZ|6f8em{EjU{");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, 294);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x0)", string0);
      assertEquals(294, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[212];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(3, (-3068), fieldTypeLong0, 1848L, (-3068), byteArray0, byteOrder0, (-3278));
      String string0 = tiffField0.getTagName();
      assertEquals((-3278), tiffField0.getSortHint());
      assertEquals(3, tiffField0.getTag());
      assertEquals((-3068), tiffField0.getDirectoryType());
      assertEquals((-3068), tiffField0.getOffset());
      assertEquals("GPSLongitudeRef", string0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[160];
      TiffField tiffField0 = new TiffField((-1250), 0, fieldTypeAscii0.FLOAT, 262152L, 0, byteArray0, byteOrder0, 40961);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1250), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(262152L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(1048608, tiffField0.getBytesLength());
      assertEquals(40961, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[75];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((byte)1, (String) null);
      TiffField tiffField0 = new TiffField(244, (byte)1, fieldTypeByte0, 1988L, 4L, byteArray0, byteOrder0, (-1497));
      String string0 = tiffField0.toString();
      assertEquals("244 (0xf4: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (75) (1988 null)", string0);
      assertEquals((-1497), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(1988, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2146429411, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[40];
      TiffField tiffField0 = new TiffField(2572, 371, fieldTypeAscii0.DOUBLE, 2572, (-156L), byteArray0, byteOrder0, 11);
      String string0 = tiffField0.getValueDescription();
      assertEquals(11, tiffField0.getSortHint());
      assertEquals(2572, tiffField0.getTag());
      assertEquals(20576, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(371, tiffField0.getDirectoryType());
      assertEquals((-156), tiffField0.getOffset());
      assertEquals(2572L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[209];
      TiffField tiffField0 = new TiffField((-1255), 0, fieldTypeAscii0.FLOAT, 262152L, 0, byteArray0, byteOrder0, (-1255));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1255), tiffField0.getSortHint());
      assertEquals((-1255), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1048608, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(262152L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[160];
      TiffField tiffField0 = new TiffField(327, 327, fieldTypeAscii0.LONG, 132, 327, byteArray0, byteOrder0, 40961);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[212];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(3, (-3068), fieldTypeLong0, 1848L, (-3068), byteArray0, byteOrder0, (-3278));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-3068), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-3068), tiffField0.getDirectoryType());
      assertEquals(3, tiffField0.getTag());
      assertEquals((-3278), tiffField0.getSortHint());
      assertEquals(7392, tiffField0.getBytesLength());
      assertEquals(1848L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2146429411, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[61];
      TiffField tiffField0 = new TiffField(1576, 1576, fieldTypeAscii0, 2146429411, 233L, byteArray0, byteOrder0, 1602);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1576, tiffField0.getTag());
      assertEquals(1576, tiffField0.getDirectoryType());
      assertEquals(233, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2146429411, tiffField0.getBytesLength());
      assertEquals(1602, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2146429411, (String) null);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[90];
      TiffField tiffField0 = new TiffField(2146429411, 1166, fieldTypeAscii0, 4L, 2146429411, byteArray0, byteOrder0, 2162);
      tiffField0.dump();
      assertEquals(2146429411, tiffField0.getOffset());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(2146429411, tiffField0.getTag());
      assertEquals(2162, tiffField0.getSortHint());
      assertEquals(1166, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50, (String) null);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-118);
      byteArray0[1] = (byte)37;
      byteArray0[2] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 1717986918, fieldTypeAscii0, 1717986918, 50, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.toString();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getOffset());
      assertEquals(1717986918L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(1717986918, tiffField0.getDirectoryType());
      assertEquals(1717986918, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeFloat0.LONG, 0, 0, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1201, 1201, fieldTypeShort0, 1201, 1201, byteArray0, byteOrder0, (byte)0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1201L, tiffElement0.offset);
      assertNotNull(tiffElement0);
      assertEquals(1201, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1201, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1265, "OversizeValueElement, tag: ");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-178), 4265, fieldTypeLong0, 65535, 126L, byteArray0, byteOrder0, 1619);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-540), 6);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(4265, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1619, tiffField0.getSortHint());
      assertEquals(126, tiffField0.getOffset());
      assertEquals((-178), tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: OversizeValueElement, tag: ", string0);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-599), fieldTypeFloat0.SLONG, 567L, (-4L), byteArray0, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-599), tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals((-4), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2146429411, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[40];
      TiffField tiffField0 = new TiffField(2146429411, 2146429411, fieldTypeAscii0.SLONG, 2572, 1582, byteArray0, byteOrder0, 1582);
      tiffField0.getFieldTypeName();
      assertEquals(1582, tiffField0.getOffset());
      assertEquals(1582, tiffField0.getSortHint());
      assertEquals(2146429411, tiffField0.getDirectoryType());
      assertEquals(2146429411, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-18), "`Y(zn&");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-919), (-919), fieldTypeAscii0, (-729L), (-18), byteArray0, (ByteOrder) null, 41490);
      int int0 = tiffField0.getOffset();
      assertEquals((-919), tiffField0.getTag());
      assertEquals(41490, tiffField0.getSortHint());
      assertEquals((-18), int0);
      assertEquals((-919), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, "A/");
      TiffField tiffField0 = new TiffField(37500, (-2005), fieldTypeByte0, 1L, (-84L), byteArray0, byteOrder0, 1326);
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-84), tiffField0.getOffset());
      assertEquals(1326, tiffField0.getSortHint());
      assertEquals(37500, tiffField0.getTag());
      assertEquals((-2005), int0);
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(41987, "Missing value: ");
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, (-357), fieldTypeAscii0, 30792L, (-1L), byteArray0, byteOrder0, (byte) (-13));
      int int0 = tiffField0.getSortHint();
      assertEquals((-13), int0);
      assertEquals(1, tiffField0.getTag());
      assertEquals((-357), tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "2TZ|6f8em{EjU{");
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, 294);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(294, tiffField0.getSortHint());
      assertEquals("0 (0x0: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(50, "A/");
      TiffField tiffField0 = new TiffField(37500, (-2005), fieldTypeByte0, 1L, (-84L), byteArray0, byteOrder0, 1326);
      tiffField0.dump();
      assertEquals((-84), tiffField0.getOffset());
      assertEquals(1326, tiffField0.getSortHint());
      assertEquals((-2005), tiffField0.getDirectoryType());
      assertEquals(37500, tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[108];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(2592, 1166, fieldTypeShort0, 2592, 1166, byteArray0, byteOrder0, 2180);
      try { 
        fieldTypeShort0.writeData(tiffField0, byteOrder0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Invalid data: 2592 (0xa20: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (54) (2592 Short) (org.apache.commons.imaging.formats.tiff.TiffField)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort", e);
      }
  }

  @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-599), fieldTypeFloat0.IFD, 567L, (-4L), byteArray0, byteOrder0, 0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)85, (-57));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-599), tiffField0.getDirectoryType());
      assertNull(string0);
      assertEquals(567L, tiffField0.getCount());
      assertEquals((-4), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }
}
