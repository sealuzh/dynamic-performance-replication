/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 14:37:11 GMT 2018
 */

package org.mozilla.javascript;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedReader;
import java.io.CharArrayReader;
import java.io.InputStreamReader;
import java.io.PipedInputStream;
import java.io.PipedReader;
import java.io.Reader;
import java.io.StringReader;
import java.nio.charset.Charset;
import java.util.LinkedHashSet;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.mozilla.javascript.CompilerEnvirons;
import org.mozilla.javascript.Context;
import org.mozilla.javascript.ContextFactory;
import org.mozilla.javascript.ContextListener;
import org.mozilla.javascript.DefaultErrorReporter;
import org.mozilla.javascript.ErrorReporter;
import org.mozilla.javascript.EvaluatorException;
import org.mozilla.javascript.FunctionNode;
import org.mozilla.javascript.Node;
import org.mozilla.javascript.Parser;
import org.mozilla.javascript.ScriptOrFnNode;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Parser_ESTest extends Parser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        parser0.parse("2%-`uDPZN", "2%-`uDPZN", (-1445));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1445
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("5Z", "", 2341);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: missing ; before statement (#2341)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      // Undeclared exception!
      try { 
        parser0.parse("{Eggu+", "{Eggu+", 41);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file ({Eggu+#41)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ContextFactory.getGlobal();
      compilerEnvirons0.setAllowMemberExprAsFunctionName(false);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("msg.const.redecl", "msg.const.redecl", 26);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after . operator (msg.const.redecl#26)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse(" && ", "msg.var.redecl", 111);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (msg.var.redecl#111)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      Parser parser0 = new Parser((CompilerEnvirons) null, errorReporter1);
      String string0 = "throw";
      // Undeclared exception!
      try { 
        parser0.parse("throw", "throw", 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: Unexpected end of file
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "msg.continue.nonloop");
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("[?", "tknUK1Uk(HC_=E27^K6", 39);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: syntax error (tknUK1Uk(HC_=E27^K6#39)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      ErrorReporter errorReporter0 = null;
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      String string0 = "";
      parser0.addStrictWarning("", "");
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(11);
      String string1 = "JRVE$,";
      // Undeclared exception!
      try { 
        parser0.parse("-ENk'An#N", "JRVE$,", 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("fxerD{VK", "!aX/O<1AkXX", 125);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (!aX/O<1AkXX#125)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      String string0 = "\\hrow";
      // Undeclared exception!
      try { 
        parser0.parse("~", "hrow", (-393));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -393
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.makeContext();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      DefaultErrorReporter.forEval(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("</", "O$tD0<p", 0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegally formed XML syntax
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      String string0 = "";
      // Undeclared exception!
      try { 
        parser0.addWarning("msg.no.paren.after.parms", "RangeError");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      String string0 = "?jp zLe";
      // Undeclared exception!
      try { 
        parser0.parse("6", "hrow", (-393));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      ContextFactory contextFactory0 = new ContextFactory();
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      contextFactory0.addListener(contextFactory_Listener0);
      // Undeclared exception!
      try { 
        contextFactory0.exit();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // Calling Context.exit without previous Context.enter
         //
         verifyException("org.mozilla.javascript.Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser1 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      parser1.getEncodedSource();
      // Undeclared exception!
      try { 
        parser1.parse("7#<#", "7#<#", 12);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("@Xae4jmN=':#[m", "@Xae4jmN=':#[m", 27);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated string literal (@Xae4jmN=':#[m#27)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      compilerEnvirons0.setGeneratingSource(false);
      parser0.parse("", "", 85);
      parser0.insideFunction();
      // Undeclared exception!
      try { 
        parser0.reportError("+Z{&#}BGx5g!XU_/VL ");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property +Z{&#}BGx5g!XU_/VL 
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      ErrorReporter errorReporter1 = context0.setErrorReporter(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      parser0.getEncodedSource();
      // Undeclared exception!
      try { 
        parser0.parse("!", "TLK^'N", 170);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (TLK^'N#170)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext();
      context0.getImplementationVersion();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      String string0 = "Y>\\0vAEQMLrhm<-3#";
      ScriptOrFnNode scriptOrFnNode0 = new ScriptOrFnNode(13);
      Context.enter(context0, contextFactory0);
      errorReporter0.runtimeError("Rhino 1.7 release 2 2010 09 15", "Rhino 1.7 release 2 2010 09 15", (-1), "Rhino 1.7 release 2 2010 09 15", 12);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Rhino 1.7 release 2 2010 09 15");
      // Undeclared exception!
      try { 
        parser0.parse("Y>0vAEQMLrhm<-3#", "error reporter", 13);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (error reporter#13)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "OEL>Rk5Qbs2w1hv");
      // Undeclared exception!
      try { 
        parser0.parse("B.a\":X5 '>#0r$1^`@", "", 2642);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated string literal (#2642)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      String string0 = "$V*[P";
      defaultErrorReporter0.runtimeError("+)#o>i{db5", "$V*[P", 0, "error reporter", 146);
      FunctionNode functionNode0 = new FunctionNode("=%");
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      compilerEnvirons0.setGenerateObserverCount(false);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      parser0.getEncodedSource();
      parser0.pushScope(functionNode0);
      parser0.insideFunction();
      // Undeclared exception!
      try { 
        parser0.parse("Ufw[9e\"e!", "=%", (-242));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -242
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      FunctionNode functionNode0 = new FunctionNode((String) null);
      parser0.pushScope(functionNode0);
      // Undeclared exception!
      try { 
        parser0.defineSymbol(15, true, (String) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("QdTjnZJf0TKIH<)", "", 45);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (#45)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      ErrorReporter errorReporter1 = context0.setErrorReporter(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      char[] charArray0 = new char[27];
      char char0 = '$';
      charArray0[0] = char0;
      char char1 = '?';
      charArray0[1] = char1;
      char char2 = '.';
      charArray0[2] = char2;
      char char3 = ',';
      charArray0[5] = char3;
      char char4 = 'T';
      charArray0[6] = char4;
      charArray0[7] = char1;
      char char5 = 'D';
      charArray0[8] = char5;
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      String string0 = "KUF2/";
      // Undeclared exception!
      try { 
        parser0.parse((Reader) charArrayReader0, string0, context0.VERSION_1_6);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (KUF2/#160)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enter();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      ErrorReporter errorReporter1 = context0.setErrorReporter(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      Context context1 = contextFactory0.makeContext();
      compilerEnvirons1.initFromContext(context1);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser1 = new Parser(compilerEnvirons1, errorReporter1);
      compilerEnvirons2.initFromContext(context0);
      compilerEnvirons0.setXmlAvailable(context0.generateObserverCount);
      compilerEnvirons0.setAllowMemberExprAsFunctionName(context0.generateObserverCount);
      compilerEnvirons0.setGeneratingSource(context0.generateObserverCount);
      ErrorReporter errorReporter2 = DefaultErrorReporter.forEval(errorReporter0);
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      Parser parser2 = new Parser(compilerEnvirons1, errorReporter2);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.createFolder(evoSuiteFile0);
      ContextFactory contextFactory2 = new ContextFactory();
      contextFactory1.makeContext();
      compilerEnvirons2.initFromContext(context0);
      Parser parser3 = new Parser(compilerEnvirons3, errorReporter1);
      String string0 = "msg.no.paren.for";
      String string1 = "";
      // Undeclared exception!
      try { 
        parser0.parse(string0, string1, context1.FEATURE_RESERVED_KEYWORD_AS_IDENTIFIER);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after . operator (#3)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      context0.setErrorReporter(errorReporter0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      // Undeclared exception!
      try { 
        parser0.parse("Yf(:SP&'r", "Yf(:SP&'r", 140);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (Yf(:SP&'r#140)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setGeneratingSource(true);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.enterContext();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      // Undeclared exception!
      try { 
        parser0.parse("W(1Bg)89shkV", "F.{(+", (-320));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -320
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = null;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser((CompilerEnvirons) null, defaultErrorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = parser0.currentScriptOrFn;
      String string0 = "@03?t-^";
      // Undeclared exception!
      try { 
        parser0.parse("0}F4,", "@03?t-^", 22);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      ErrorReporter errorReporter2 = DefaultErrorReporter.forEval(errorReporter1);
      EvaluatorException evaluatorException0 = new EvaluatorException("");
      DefaultErrorReporter.forEval(errorReporter2);
      // Undeclared exception!
      try { 
        parser0.parse("(", "&@^~k]QZL 9eK\"7C7", 5653);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unexpected end of file (&@^~k]QZL 9eK\"7C7#5653)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      compilerEnvirons0.setReservedKeywordAsIdentifier(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ContextFactory contextFactory0 = new ContextFactory();
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      String string0 = "fd&<lwo++s!7.";
      // Undeclared exception!
      try { 
        parser0.parse("fd&<lwo++s!7.", "fd&<lwo++s!7.", 32);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: illegally formed XML syntax (fd&<lwo++s!7.#32)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("3*;5", "error reporter", 6);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (error reporter#6)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      FileSystemHandling.shouldAllThrowIOExceptions();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      compilerEnvirons0.setErrorReporter(defaultErrorReporter0);
      compilerEnvirons1.getErrorReporter();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      compilerEnvirons1.setGenerateObserverCount(true);
      ContextFactory contextFactory1 = new ContextFactory();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      Set<String> set0 = compilerEnvirons1.activationNames;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      String string0 = "Qcl8^`KV%#IKvh?";
      // Undeclared exception!
      try { 
        parser0.parse("Qcl8^`KV%#IKvh?", "", 27);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      ErrorReporter errorReporter1 = context0.setErrorReporter(errorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter1);
      parser0.getEncodedSource();
      // Undeclared exception!
      try { 
        parser0.parse(" @ pc : ", "TLK^'N", 170);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (TLK^'N#170)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("e,:K", "", 43);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (#43)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      String string0 = "OE+>Rk5Q[siw17v";
      FunctionNode functionNode0 = new FunctionNode("OE+>Rk5Q[siw17v");
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
      String string1 = "Cannot have any pending top calls when executing a script with continuations";
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      compilerEnvirons0.getErrorReporter();
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter0);
      String string2 = "o0OM_3a:\\Yf@XXR^";
      // Undeclared exception!
      try { 
        parser1.parse("o0OM_3a:Yf@XXR^", "|\"", 25);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (|\"#25)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, (ErrorReporter) null);
      Parser parser1 = new Parser(compilerEnvirons1, (ErrorReporter) null);
      boolean boolean0 = true;
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
      String string0 = "void";
      // Undeclared exception!
      try { 
        parser1.parse("void", "Ni/{4`!?.\\#Nli&.", 27);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FunctionNode functionNode0 = new FunctionNode("%Bg%D]TgnB=lH5J]'F[");
      ContextFactory contextFactory0 = new ContextFactory();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      contextFactory0.exit();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Array");
      ContextFactory contextFactory1 = new ContextFactory();
      ContextFactory contextFactory2 = new ContextFactory();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser1 = new Parser(compilerEnvirons2, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser1.parse("fW|^9tC", "@Xae4jmN=':#[m", 18);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (@Xae4jmN=':#[m#18)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse("null", "org/mozilla/javascript/BaseFunction", 4806);
      assertEquals(4806, scriptOrFnNode0.getBaseLineno());
      
      parser0.popScope();
      assertEquals("\u0087*Q\u0001", parser0.getEncodedSource());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      contextFactory0.makeContext();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      defaultErrorReporter0.runtimeError("+)#o>i{db5", "", 0, "error reporter", 5);
      FunctionNode functionNode0 = new FunctionNode("=%");
      // Undeclared exception!
      try { 
        parser0.parse("+)#o>i{db5", "+)#o>i{db5", 11);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // syntax error (+)#o>i{db5#11)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      ContextFactory.getGlobal();
      DefaultErrorReporter defaultErrorReporter3 = DefaultErrorReporter.instance;
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      DefaultErrorReporter defaultErrorReporter4 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser((CompilerEnvirons) null, defaultErrorReporter4);
      // Undeclared exception!
      try { 
        parser0.parse("{0U{uz2&f;=2=TAW", (String) null, 1158);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = contextFactory0.enterContext();
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Context context1 = new Context();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ContextFactory contextFactory1 = new ContextFactory();
      Context context2 = new Context(contextFactory1);
      Set<String> set0 = compilerEnvirons0.activationNames;
      Parser parser0 = new Parser(compilerEnvirons1, (ErrorReporter) null);
      parser0.parse("J;", "", 120);
      contextFactory1.enterContext();
      context2.setErrorReporter(errorReporter0);
      Parser parser1 = new Parser(compilerEnvirons0, errorReporter0);
      Parser parser2 = new Parser(compilerEnvirons0, errorReporter0);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser3 = new Parser(compilerEnvirons2, errorReporter0);
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      Parser parser4 = new Parser(compilerEnvirons3, errorReporter0);
      // Undeclared exception!
      try { 
        parser3.addError("msg.in.after.for.name", "msg.in.after.for.name");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons1.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      String string0 = "";
      // Undeclared exception!
      try { 
        parser0.parse("/Fj%ftu", "", 2819);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated regular expression literal (#2819)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      compilerEnvirons0.setXmlAvailable(true);
      compilerEnvirons0.setGenerateObserverCount(false);
      ContextFactory contextFactory0 = new ContextFactory();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FunctionNode functionNode0 = new FunctionNode((String) null);
      // Undeclared exception!
      try { 
        parser0.parse("Ni/{4`!?.\\#Nli&.", (String) null, 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      DefaultErrorReporter.forEval(errorReporter0);
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte) (-28);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ContextFactory contextFactory0 = new ContextFactory();
      DefaultErrorReporter.forEval(errorReporter0);
      contextFactory0.enter();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Parser parser1 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      ContextFactory.getGlobal();
      Context context0 = contextFactory0.makeContext();
      context0.setErrorReporter(defaultErrorReporter0);
      FileSystemHandling fileSystemHandling2 = new FileSystemHandling();
      Parser parser2 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("implements", "error reporter", (-2588));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -2588
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      compilerEnvirons0.setGeneratingSource(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      String string0 = "d:CNY";
      ContextFactory contextFactory0 = new ContextFactory();
      parser0.parse("d:CNY", "d:CNY", 32);
      // Undeclared exception!
      try { 
        parser0.addWarning("d:CNY", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property d:CNY
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setReservedKeywordAsIdentifier(false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext((Context) null);
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      ErrorReporter errorReporter1 = context0.setErrorReporter(errorReporter0);
      DefaultErrorReporter.forEval(errorReporter1);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      DefaultErrorReporter.forEval(errorReporter0);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.appendLineToFile(evoSuiteFile0, context0.errorReporterProperty);
      String string0 = "";
      EvaluatorException evaluatorException0 = new EvaluatorException(context0.errorReporterProperty, string0, context0.VERSION_1_6);
      DefaultErrorReporter.forEval(errorReporter0);
      ErrorReporter errorReporter2 = DefaultErrorReporter.forEval(errorReporter1);
      String string1 = "S8-~/=HE09.\\n.)DU1";
      Context.reportRuntimeError(string1);
      ContextFactory contextFactory1 = ContextFactory.getGlobal();
      Context context1 = contextFactory1.enterContext();
      ErrorReporter errorReporter3 = DefaultErrorReporter.forEval(errorReporter2);
      ErrorReporter errorReporter4 = context1.getErrorReporter();
      DefaultErrorReporter.forEval(errorReporter4);
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter3);
      String string2 = ";Y<";
      int int0 = (-7);
      // Undeclared exception!
      try { 
        parser0.parse(string1, string2, int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -7
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      ContextFactory contextFactory0 = new ContextFactory();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      String string0 = "<>";
      String string1 = "msg.parm.redecl";
      compilerEnvirons0.setGeneratingSource(false);
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter1);
      String string2 = "";
      ScriptOrFnNode scriptOrFnNode0 = parser0.parse("", "<>", 16);
      Node.Scope node_Scope0 = Node.Scope.splitScope(scriptOrFnNode0);
      Node node0 = new Node(8, node_Scope0, scriptOrFnNode0, node_Scope0, 1);
      // Undeclared exception!
      try { 
        parser0.pushScope(scriptOrFnNode0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      compilerEnvirons0.setGenerateObserverCount(false);
      ContextFactory contextFactory0 = new ContextFactory();
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      FunctionNode functionNode0 = new FunctionNode((String) null);
      parser0.pushScope(functionNode0);
      // Undeclared exception!
      try { 
        parser0.defineSymbol(121, true, "yHAE$1;%pmH");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FunctionNode functionNode0 = new FunctionNode("JJIJ!u5%XMnc_f5Qp");
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.pushScope(functionNode0);
      parser0.calledByCompileFunction = false;
      // Undeclared exception!
      try { 
        parser0.defineSymbol(108, false, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      String string0 = "[XMSs4l}ivF\\o2";
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      String string1 = "";
      // Undeclared exception!
      try { 
        parser0.parse("[XMSs4l}ivFo2", "", 416);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ] after element list (#416)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ContextFactory contextFactory0 = ContextFactory.getGlobal();
      Context context0 = new Context(contextFactory0);
      compilerEnvirons0.setXmlAvailable(false);
      ErrorReporter errorReporter0 = context0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("error reporter", "", 39);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (#39)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ScriptOrFnNode scriptOrFnNode0 = parser0.currentScriptOrFn;
      // Undeclared exception!
      try { 
        parser0.parse("@03?t-^", "zB", 2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing name after .@ (zB#2)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      DefaultErrorReporter defaultErrorReporter2 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter2);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = new Context(contextFactory0);
      context0.setErrorReporter(errorReporter0);
      DefaultErrorReporter defaultErrorReporter3 = DefaultErrorReporter.instance;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter1);
      compilerEnvirons0.setXmlAvailable(false);
      contextFactory0.exit();
      DefaultErrorReporter defaultErrorReporter4 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      // Undeclared exception!
      try { 
        parser0.parse("@S", "error reporter", 2182);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // XML runtime not available (error reporter#2182)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      ContextFactory contextFactory0 = new ContextFactory();
      ContextFactory contextFactory1 = new ContextFactory();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      FunctionNode functionNode0 = new FunctionNode("[native cod, arity=");
      parser0.pushScope(functionNode0);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.defineSymbol(153, false, "[native cod, arity=");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.mozilla.javascript.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      compilerEnvirons0.setXmlAvailable(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      compilerEnvirons0.setGeneratingSource(false);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      FunctionNode functionNode0 = new FunctionNode("");
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      parser0.parse("d:CNY", "", 7);
      byte[] byteArray0 = new byte[0];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      parser0.parse("d:CNY", (String) null, 14);
      parser0.eof();
      parser0.popScope();
      assertNull(parser0.getEncodedSource());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-101);
      byteArray0[1] = (byte)108;
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      String string0 = "d::CNY";
      // Undeclared exception!
      try { 
        parser0.parse("d::CNY", "d::CNY", (int) (byte) (-101));
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // FAILED ASSERTION
         //
         verifyException("org.mozilla.javascript.Kit", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      parser0.createDecompiler(compilerEnvirons1);
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      Set<String> set0 = compilerEnvirons1.activationNames;
      ErrorReporter errorReporter1 = DefaultErrorReporter.forEval(errorReporter0);
      Parser parser1 = new Parser(compilerEnvirons3, errorReporter1);
      // Undeclared exception!
      try { 
        parser1.parse("@[", "msg.undef.label", 1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: Unexpected end of file (msg.undef.label#1)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("H6XXC%[SFmh]:z/+", "H6XXC%[SFmh]:z/+", 132);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing ; before statement (H6XXC%[SFmh]:z/+#132)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      parser0.createDecompiler(compilerEnvirons0);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "&wX");
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      Parser parser1 = new Parser(compilerEnvirons2, defaultErrorReporter0);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      ContextListener contextListener0 = mock(ContextListener.class, new ViolatedAssumptionAnswer());
      Context.addContextListener(contextListener0);
      DefaultErrorReporter.forEval(defaultErrorReporter0);
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      compilerEnvirons1.setReservedKeywordAsIdentifier(false);
      ContextFactory contextFactory0 = new ContextFactory();
      ContextFactory contextFactory1 = new ContextFactory();
      Context context0 = new Context();
      context0.getErrorReporter();
      Parser parser2 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      compilerEnvirons2.setErrorReporter(defaultErrorReporter1);
      // Undeclared exception!
      try { 
        parser0.parse(";{s,jmeNj6", (String) null, 4);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // missing } in compound statement
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      parser0.getEncodedSource();
      String string0 = "yDx||8";
      StringReader stringReader0 = new StringReader("yDx||8");
      parser0.parse((Reader) stringReader0, (String) null, 2588);
      // Undeclared exception!
      try { 
        parser0.addWarning(" @ pc : ", "`j#z<7bq@$7!H[i;");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // no message resource found for message property  @ pc : 
         //
         verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ContextFactory contextFactory0 = new ContextFactory();
      Context context0 = contextFactory0.enterContext((Context) null);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      context0.scratchIndex = 170;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "language version");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "error reporter");
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      ContextFactory contextFactory1 = new ContextFactory();
      contextFactory1.disableContextListening();
      Context context1 = new Context(contextFactory1);
      // Undeclared exception!
      try { 
        parser0.parse("(new String(\"", "tONu_B+sI,x%*y::V", 130);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // unterminated string literal (tONu_B+sI,x%*y::V#130)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)21;
      byteArray0[1] = (byte) (-97);
      byteArray0[2] = (byte)50;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byteArray0[3] = (byte) (-93);
      byteArray0[4] = (byte)15;
      byteArray0[5] = (byte) (-118);
      byteArray0[6] = (byte)117;
      byteArray0[7] = (byte) (-109);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ContextFactory contextFactory0 = new ContextFactory();
      contextFactory0.makeContext();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ErrorReporter errorReporter0 = compilerEnvirons1.getErrorReporter();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("typeof ", "ax2R0 xr%5ZNs|7f{x", (-254));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -254
         //
         verifyException("org.mozilla.javascript.RhinoException", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ErrorReporter errorReporter0 = DefaultErrorReporter.forEval(defaultErrorReporter0);
      ContextFactory contextFactory0 = new ContextFactory();
      ContextFactory.Listener contextFactory_Listener0 = mock(ContextFactory.Listener.class, new ViolatedAssumptionAnswer());
      contextFactory0.exit();
      contextFactory0.addListener(contextFactory_Listener0);
      contextFactory0.exit();
      String string0 = "";
      ContextFactory.getGlobal();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      Parser parser0 = new Parser(compilerEnvirons1, errorReporter0);
      FunctionNode functionNode0 = new FunctionNode("resumeGenerator() not implemented");
      ContextFactory.getGlobal();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      // Undeclared exception!
      try { 
        parser0.parse("resumeGenerator() not implemented", "msg.var.hides.arg", 18);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // SyntaxError: missing ; before statement (msg.var.hides.arg#18)
         //
         verifyException("org.mozilla.javascript.ScriptRuntime", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      FileSystemHandling.shouldAllThrowIOExceptions();
      ContextFactory.getGlobal();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      compilerEnvirons3.setXmlAvailable(false);
      CompilerEnvirons compilerEnvirons4 = new CompilerEnvirons();
      compilerEnvirons4.setGenerateObserverCount(false);
      ContextFactory contextFactory0 = new ContextFactory();
      CompilerEnvirons compilerEnvirons5 = new CompilerEnvirons();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FunctionNode functionNode0 = new FunctionNode("n");
      parser0.parse("msg.bad.throw.eol", "msg.bad.throw.eol", 122);
      String string0 = parser0.getEncodedSource();
      assertEquals("\u0087'\u0003msgk'\u0003badk'\u0005throwk'\u0003eolQ\u0001", string0);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      compilerEnvirons0.setGeneratingSource(false);
      DefaultErrorReporter defaultErrorReporter0 = DefaultErrorReporter.instance;
      ContextFactory contextFactory0 = new ContextFactory();
      DefaultErrorReporter defaultErrorReporter1 = DefaultErrorReporter.instance;
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Parser parser0 = new Parser(compilerEnvirons0, defaultErrorReporter0);
      // Undeclared exception!
      try { 
        parser0.parse("aKL>>m`tLN3", "et]IB6y(<Bgf-Hn", 125);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // illegal character (et]IB6y(<Bgf-Hn#125)
         //
         verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      CompilerEnvirons compilerEnvirons0 = new CompilerEnvirons();
      ErrorReporter errorReporter0 = compilerEnvirons0.getErrorReporter();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      Parser parser0 = new Parser(compilerEnvirons0, errorReporter0);
      parser0.parse("true", "Ll09^YjF`e?G*", 152);
      parser0.getCurrentLineNumber();
      parser0.getEncodedSource();
      compilerEnvirons0.setGeneratingSource(true);
      CompilerEnvirons compilerEnvirons1 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons2 = new CompilerEnvirons();
      CompilerEnvirons compilerEnvirons3 = new CompilerEnvirons();
      // Undeclared exception!
      try { 
        parser0.addError((String) null, "Q9gst.\")R?:");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.PropertyResourceBundle", e);
      }
  }
}
