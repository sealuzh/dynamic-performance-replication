/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 05:14:06 GMT 2018
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ClassReader;
import wheel.asm.ClassWriter;
import wheel.asm.Edge;
import wheel.asm.FieldWriter;
import wheel.asm.Frame;
import wheel.asm.Item;
import wheel.asm.MethodVisitor;
import wheel.asm.MethodWriter;
import wheel.asm.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ClassWriter_ESTest extends ClassWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212674);
      classWriter0.visitEnd();
      assertEquals(1, ClassWriter.COMPUTE_MAXS);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(11);
      classWriter0.visitEnd();
      // Undeclared exception!
      try { 
        classWriter0.newMethod("The list of prefixes must not be null", (String) null, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3607);
      Integer integer0 = new Integer(11);
      int int0 = classWriter0.newConst(integer0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1313);
      classWriter0.toByteArray();
      String[] stringArray0 = new String[0];
      MethodVisitor methodVisitor0 = classWriter0.visitMethod(1313, "KJ)8Y.", "KJ)8Y.", "EnclosingMethod", stringArray0);
      assertNotNull(methodVisitor0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("wheel.asm.ClassWriter");
      classReader0.getInterfaces();
      classReader0.getSuperName();
      classReader0.getClassName();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 26);
      classWriter0.toByteArray();
      int int0 = classWriter0.newClass("");
      assertEquals(641, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(4);
      classWriter0.visitField(4, "Synthetic", "Synthetic", (String) null, "Synthetic");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16);
      classWriter0.visitAnnotation("(-;Egq,ejQ(", false);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2677);
      classWriter0.newMethod("$5vH~uy`", "$5vH~uy`", "$5vH~uy`", true);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1526);
      // Undeclared exception!
      try { 
        classWriter0.newConst((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2070));
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        classWriter0.visit(30, 2236, "G7gPuO(3(cOj(3tdt%?(", "G7gPuO(3(cOj(3tdt%?(", (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      classWriter0.toByteArray();
      String[] stringArray0 = new String[1];
      // Undeclared exception!
      try { 
        classWriter0.visit((-1), (-348), "<fU<JE", "<fU<JE", "=Tz?-In)5713.*_", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "Kx";
      classWriter0.visit((-1), 285212676, "Code", "Kx", "Kx", stringArray0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(29);
      classWriter0.newLong(29);
      // Undeclared exception!
      try { 
        classWriter0.newField((String) null, (String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(5);
      classWriter0.newField("", "", "");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2598);
      Short short0 = new Short((short)6);
      classWriter0.visitField(1, "", "", "", short0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1497);
      classWriter0.newInteger(1497);
      classWriter0.visitAnnotation(":wwi8^k]2", true);
      classWriter0.newInteger(1497);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      classWriter0.addType("");
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        classWriter0.visitMethod((-1), (String) null, (String) null, "", stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-5));
      classWriter0.visitSource("", "HEqsi]");
      Type type0 = Type.FLOAT_TYPE;
      Type type1 = Type.getObjectType(".s.IFJDCS");
      Class<MockMinguoDate> class0 = MockMinguoDate.class;
      type0.toString();
      Type.getType(class0);
      Integer integer0 = new Integer((-5));
      classWriter0.visitEnd();
      classWriter0.newConst(type1);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      classWriter0.visitSource("", "e*G/Q=kV#n[aRlbj9S");
      Type type0 = Type.FLOAT_TYPE;
      Type.getObjectType(".s.IFJDCS");
      Class<MockMinguoDate> class0 = MockMinguoDate.class;
      type0.toString();
      Type.getType(class0);
      classWriter0.newConst(type0);
      int int0 = Frame.BASE;
      classWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      byteArray0[1] = (byte)3;
      byteArray0[3] = (byte) (-51);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "wheel.asm.Type");
      ClassWriter classWriter0 = new ClassWriter(1792);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.lastField = null;
      Boolean boolean0 = Boolean.valueOf(false);
      classWriter0.newConst(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1629);
      Boolean boolean0 = new Boolean(true);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "Ljava/lang/Synthetic;", ";~5KD4*ZPQJP?O&", "Ljava/lang/Synthetic;", boolean0);
      FieldWriter fieldWriter1 = fieldWriter0.next;
      classWriter0.lastField = fieldWriter0;
      int int0 = Float.MIN_EXPONENT;
      int int1 = Character.SIZE;
      classWriter0.newUTF8("");
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-385));
      int int0 = Character.MAX_RADIX;
      classWriter0.visitInnerClass((String) null, "", "", (-385));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-440));
      classWriter0.thisName = "";
      classWriter0.visitInnerClass("", (String) null, "Synthetic", 25);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-179));
      classWriter0.addType("");
      int int0 = Character.SIZE;
      classWriter0.addType("N+=1T22P wt0GUQ");
      int int1 = Type.BYTE;
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass((String) null, "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.NullPointerException
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassReader classReader0 = null;
      ClassWriter classWriter0 = null;
      try {
        classWriter0 = new ClassWriter((ClassReader) null, 1220);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      classWriter0.index = 220;
      classWriter0.newInteger(65535);
      // Undeclared exception!
      try { 
        classWriter0.newField((String) null, "", "InnerClasses");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      int int0 = 929;
      String string0 = null;
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
      ClassWriter classWriter0 = new ClassWriter(929);
      String[] stringArray0 = new String[5];
      stringArray0[0] = ";xW>J$c!u \"^";
      stringArray0[1] = null;
      stringArray0[2] = null;
      stringArray0[3] = ";xW>J$c!u \"^";
      stringArray0[4] = ";xW>J$c!u \"^";
      // Undeclared exception!
      try { 
        classWriter0.visit(27, 12, ";xW>J$c!u \"^", (String) null, (String) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      classWriter0.visit(1542, 5, "i<2J;inr~u", "i<2J;inr~u", "7kcK(K%R#-rTfYZQ", (String[]) null);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("i<2J;inr~u", "i<2J;inr~u");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: i<2J;inr~u
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2269));
      Item item0 = new Item();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.visitSource((String) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(4882);
      Double double0 = new Double(0.75);
      classWriter0.newConstItem(double0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1731));
      classWriter0.newLong((-1731));
      classWriter0.newDouble((-1731));
      FieldWriter fieldWriter0 = classWriter0.firstField;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      classWriter0.newDouble((-1731));
      classWriter0.newDouble((-1731));
      String string0 = "";
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byteArray0[1] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      int int0 = (-698);
      ClassWriter classWriter0 = new ClassWriter((byte)0);
      String string0 = "o>u'<\\UU9/P8@<o#IAM";
      classWriter0.addType("o>u'<UU9/P8@<o#IAM");
      classWriter0.addType("o>u'<UU9/P8@<o#IAM");
      int int1 = Double.SIZE;
      PipedInputStream pipedInputStream0 = null;
      try {
        pipedInputStream0 = new PipedInputStream((byte) (-25));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Pipe Size <= 0
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.newNameType("", "");
      classWriter0.newField("double", "", "");
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("double", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'double.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(553);
      Item item0 = classWriter0.key3;
      String[] stringArray0 = new String[0];
      classWriter0.visit(553, 553, "Uw3fYA2!y!U|`gHHU", "x:ZtH&.kozn|Z", "x:ZtH&.kozn|Z", stringArray0);
      String string0 = "";
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("", "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: 
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(11);
      classWriter0.newLong(1);
      String string0 = "";
      String[] stringArray0 = new String[1];
      String string1 = "B\"O%{r";
      classWriter0.thisName = "B\"O%{r";
      classWriter0.visitInnerClass((String) null, stringArray0[0], (String) null, 15);
      classWriter0.addUninitializedType("", (-565));
      // Undeclared exception!
      try { 
        classWriter0.addType((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      byte[] byteArray0 = ClassWriter.TYPE;
      Character character0 = new Character('}');
      classWriter0.newConstItem(character0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2464);
      Long long0 = new Long(2464);
      classWriter0.newConst(long0);
      classWriter0.visitSource((String) null, "");
      // Undeclared exception!
      try { 
        classWriter0.newMethod((String) null, "", (String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777221);
      classWriter0.version = 2761;
      classWriter0.visitSource((String) null, "RuntimeVisibleAnnotations");
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-133));
      Byte byte0 = new Byte((byte)12);
      classWriter0.newConstItem(byte0);
      Type type0 = Type.CHAR_TYPE;
      int int0 = Frame.BASE;
      Item item0 = new Item();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      int int0 = Edge.EXCEPTION;
      ClassWriter classWriter0 = new ClassWriter(Integer.MAX_VALUE);
      String string0 = "q";
      classWriter0.visitOuterClass("SnX][nGJO`", (String) null, "q");
      // Undeclared exception!
      try { 
        classWriter0.newConstItem((Object) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value null
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1497);
      Float float0 = new Float((float) 2);
      classWriter0.visitField(1497, "", "", "", float0);
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(285212665);
      classWriter0.visitSource("", "");
      classWriter0.toByteArray();
      classWriter0.addType("");
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-26));
      classWriter0.version = (-26);
      classWriter0.newLong(1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.visitAnnotation("", true);
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      classWriter0.visitSource("", "DW[X~IOZf");
      int int0 = Character.SIZE;
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1313);
      classWriter0.visitInnerClass("VFE*%N~xJ=Et1hR", "0BG\"nPu{<vf'Jt~", "", 16777220);
      classWriter0.visitAnnotation("VFE*%N~xJ=Et1hR", false);
      classWriter0.toByteArray();
      Attribute attribute0 = new Attribute("<Znlqs]b0z^49r>*1");
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("0BG\"nPu{<vf'Jt~");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-15));
      ClassWriter classWriter1 = new ClassWriter((-13));
      int int0 = 322;
      classWriter0.visitInnerClass("", "", ",tn,JNX^=V'KY", 1);
      classWriter0.visitInnerClass("r\"X`]'QrKZObC#", "", (String) null, 322);
      classWriter0.newClass("");
      String string0 = File.separator;
      String string1 = "wheel.asm.Label";
      String string2 = "I[K62hN&X{6ov[-/ F";
      String string3 = "";
      // Undeclared exception!
      try { 
        classWriter0.addUninitializedType((String) null, 322);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(51);
      classWriter0.getCommonSuperClass("wheel.asm.Type", "org.apache.commons.io.filefilter.HiddenFileFilter");
      classWriter0.visitSource("org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter");
      Attribute attribute0 = new Attribute((String) null);
      MockFile mockFile0 = new MockFile((File) null, "wheel.asm.ClassWriter");
      MockFileInputStream mockFileInputStream0 = null;
      try {
        mockFileInputStream0 = new MockFileInputStream(mockFile0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-590));
      classWriter0.addUninitializedType("", (-759));
      classWriter0.visitOuterClass("", "", "");
      classWriter0.toByteArray();
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-27));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "<fU<JE";
      classWriter0.version = 923;
      classWriter0.visit(923, 9, "<fU<JE", "<fU<JE", "<fU<JE", stringArray0);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(9, 9);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String[] stringArray0 = new String[4];
      stringArray0[0] = "]MTaeDpHt_hx/2q-";
      stringArray0[2] = "=:yCKFJ*63*";
      stringArray0[3] = "=9Ep2\"Bof#,6_e#kZ^";
      ClassWriter classWriter0 = new ClassWriter(3);
      classWriter0.invalidFrames = false;
      classWriter0.visitOuterClass("ConstantValue", "a7_bd6", (String) null);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-16));
      classWriter0.newFloat((-16));
      Attribute attribute0 = new Attribute("wheel.asm.Type");
      classWriter0.visitAttribute(attribute0);
      int int0 = Type.LONG;
      classWriter0.newDouble(359.18624);
      byte[] byteArray0 = ClassWriter.TYPE;
      classWriter0.visitOuterClass("/", "etP*HnaPNY3lvsoET", "wheel.asm.Type");
      classWriter0.newFloat((-16));
      Item item0 = classWriter0.key;
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-1214), 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1313);
      classWriter0.visitInnerClass("VFE*%N~xJ=Et1hR", "0BG\"nPu{<vf'Jt~", "", 16777220);
      classWriter0.toByteArray();
      Attribute attribute0 = new Attribute("<Znlqs]b0z^49r>*1");
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("0BG\"nPu{<vf'Jt~");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-791));
      String string0 = "RuntimeVisibleParameterAnnotations";
      classWriter0.newClassItem("RuntimeVisibleParameterAnnotations");
      classWriter0.visitInnerClass("5", "RuntimeVisibleParameterAnnotations", "5", (-4985));
      classWriter0.version = 2;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "'!L^y*v>NMuqS>y");
      classWriter0.newMethod("RuntimeVisibleParameterAnnotations", "5", "RuntimeVisibleParameterAnnotations", false);
      classWriter0.newConstItem("RuntimeVisibleParameterAnnotations");
      FileSystemHandling.shouldAllThrowIOExceptions();
      classWriter0.newMethod("RuntimeVisibleParameterAnnotations", "5", "RuntimeVisibleParameterAnnotations", false);
      ClassWriter classWriter1 = new ClassWriter(6);
      ClassWriter classWriter2 = new ClassWriter(1);
      // Undeclared exception!
      try { 
        classWriter1.getMergedType(1, 15);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(56);
      String string0 = "wheel.asm.Type";
      String string1 = "^N";
      classWriter0.getCommonSuperClass("wheel.asm.Type", "wheel.asm.Type");
      classWriter0.newInteger(2);
      Character character0 = new Character('w');
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(mockThaiBuddhistDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate@2573c85c
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(56);
      classWriter0.getCommonSuperClass("wheel.asm.Type", "org.apache.commons.io.filefilter.HiddenFileFilter");
      classWriter0.newInteger(2);
      ClassWriter classWriter1 = new ClassWriter(2);
      classWriter0.version = 2;
      classWriter1.threshold = 1;
      ClassWriter classWriter2 = new ClassWriter((-2040));
      classWriter1.toByteArray();
      Item item0 = classWriter2.key;
      Float float0 = new Float((float) 56);
      Integer integer0 = new Integer(2);
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      MockMinguoDate.now();
      Object object0 = new Object();
      classWriter0.newConst("r4Qf[`[.LD< R}7C");
      classWriter0.newConst("r4Qf[`[.LD< R}7C");
      classWriter2.newNameType("4,G]a6_", "aI:-?a");
      // Undeclared exception!
      try { 
        classWriter1.getCommonSuperClass("Signature", "Signature");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'Signature.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-889275714));
      Float float0 = new Float((double) (-889275714));
      Float.max(2, 1);
      classWriter0.newConstItem(float0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
      ClassWriter classWriter0 = new ClassWriter(624);
      Item item0 = classWriter0.newDouble(624);
      String string0 = "!liy<hsM";
      FileSystemHandling.shouldAllThrowIOExceptions();
      Item[] itemArray0 = new Item[1];
      classWriter0.typeTable = itemArray0;
      classWriter0.addUninitializedType("!liy<hsM", (-2530));
      classWriter0.newDouble(1);
      item0.hashCode = 42;
      classWriter0.visitSource("", "69V6e LS\"om*<4{#");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      String string1 = "Exceptions";
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("Exceptions", "69V6e LS\"om*<4{#");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'Exceptions.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(56);
      String string0 = "wheel.asm.Type";
      String string1 = "^N";
      classWriter0.getCommonSuperClass("wheel.asm.Type", "org.apache.commons.io.filefilter.HiddenFileFilter");
      classWriter0.newInteger(2);
      Character character0 = new Character('w');
      MockThaiBuddhistDate mockThaiBuddhistDate0 = new MockThaiBuddhistDate();
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.HiddenFileFilter", "java/lang/Object");
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(mockThaiBuddhistDate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.evosuite.runtime.mock.java.time.chrono.MockThaiBuddhistDate@1c45d161
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-4221));
      classWriter0.toByteArray();
      classWriter0.newLong((-4221));
      String string0 = "byte";
      ClassWriter classWriter1 = new ClassWriter(171);
      MethodWriter methodWriter0 = classWriter1.firstMethod;
      classWriter0.firstMethod = null;
      classWriter0.visitOuterClass("byte", "byte", "byte");
      classWriter0.newLong((-4221));
      // Undeclared exception!
      try { 
        classWriter0.newFieldItem("byte", (String) null, "byte");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-590));
      classWriter0.invalidFrames = true;
      // Undeclared exception!
      try { 
        classWriter0.toByteArray();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 51966
         //
         verifyException("wheel.asm.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-16));
      classWriter0.thisName = "\"=";
      Attribute attribute0 = new Attribute("\"=");
      byte[] byteArray0 = new byte[1];
      attribute0.value = byteArray0;
      classWriter0.visitAttribute(attribute0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, attribute0.value);
      byte[] byteArray1 = ClassWriter.TYPE;
      classWriter0.toByteArray();
      classWriter0.newDouble(330.5277289232998);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType((-16), 2036);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      String string0 = "i<2J;inr~u";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-7), "FS?Y", "FS?Y", "i<2J;inr~u", (String[]) null, false, false);
      classWriter0.firstMethod = methodWriter0;
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("i<2J;inr~u", "i<2J;inr~u");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: i<2J;inr~u
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      int int0 = 56;
      ClassWriter classWriter0 = new ClassWriter(56);
      String string0 = "wheel.asm.Type";
      Item item0 = classWriter0.newDouble((-1.0));
      String string1 = "org.apache.commons.io.filefilter.HiddenFileFilter";
      item0.hashCode = 3267;
      classWriter0.getCommonSuperClass("org.apache.commons.io.filefilter.HiddenFileFilter", "wheel.asm.Type");
      Character character0 = new Character('/');
      // Undeclared exception!
      try { 
        classWriter0.newConstItem(item0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.Item@6
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      String string0 = "org.apache.commons.io.filefilter.HiddenFileFilter";
      ClassWriter classWriter0 = new ClassWriter(1);
      String[] stringArray0 = new String[0];
      classWriter0.visit((-1023), (-1023), "org.apache.commons.io.filefilter.HiddenFileFilter", "org.apache.commons.io.filefilter.HiddenFileFilter", "(6E<DtEe", stringArray0);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass("SourceDebugExtension", "SourceDebugExtension");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class 'SourceDebugExtension.class' should be in target project, but could not be found!
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(56);
      String string0 = "wheel.asm.Type";
      classWriter0.getCommonSuperClass("wheel.asm.Type", "wheel.asm.Type");
      classWriter0.newInteger(2);
      Boolean boolean0 = new Boolean("^");
      int int0 = Type.ARRAY;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      String string1 = null;
      classWriter0.visit(0, (-337), "wheel.asm.Type", "wheel.asm.Type", (String) null, (String[]) null);
      classWriter0.toByteArray();
      // Undeclared exception!
      try { 
        classWriter0.newFieldItem((String) null, "g", "g");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      int int0 = 39;
      ClassWriter classWriter0 = new ClassWriter(39);
      ClassWriter classWriter1 = new ClassWriter(2);
      classWriter0.version = 2;
      Boolean boolean0 = Boolean.TRUE;
      classWriter1.addUninitializedType("wheel.asm.Type", 2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Attribute attribute0 = new Attribute("Code");
      Float float0 = new Float((float) 1);
      classWriter0.visitAttribute(attribute0);
      int int1 = Frame.DIM;
      classWriter1.addUninitializedType("wheel.asm.Type", 2);
      byte[] byteArray0 = attribute0.value;
      classWriter1.visitAnnotation("", true);
      // Undeclared exception!
      try { 
        classWriter1.getMergedType(1, (-249));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -249
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(39);
      classWriter0.getCommonSuperClass("wheel.asm.Type", "org.apache.commons.io.filefilter.HiddenFileFilter");
      ClassWriter classWriter1 = new ClassWriter(2);
      classWriter0.version = 2;
      Boolean boolean0 = Boolean.TRUE;
      Item item0 = classWriter0.key3;
      Attribute attribute0 = new Attribute("Code");
      classWriter0.visitInnerClass("java/lang/Object", "java/lang/Object", "]GP", 39);
      Float float0 = new Float((float) 1);
      classWriter0.newField("org.apache.commons.io.filefilter.HiddenFileFilter", "wheel.asm.Type", "wheel.asm.Type");
      Item item1 = classWriter1.key3;
      classWriter1.addUninitializedType("wheel.asm.Type", 2);
      classWriter1.toByteArray();
      ClassWriter classWriter2 = new ClassWriter(2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = ClassWriter.TYPE;
      classWriter1.newDouble(330.93820005497145);
      ClassWriter classWriter3 = new ClassWriter(39);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      classWriter2.newField("Code", " O", "");
      byte[] byteArray1 = ClassWriter.TYPE;
      classWriter2.newField("Code", " O", "");
  }
}
