/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 17 11:52:04 GMT 2018
 */

package org.apache.bcel.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.regex.Pattern;
import org.apache.bcel.classfile.JavaClass;
import org.apache.bcel.util.Class2HTML;
import org.apache.bcel.util.ClassLoaderRepository;
import org.apache.bcel.util.ClassPath;
import org.apache.bcel.util.SyntheticRepository;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockJapaneseDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Class2HTML_ESTest extends Class2HTML_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Class2HTML.referenceType("+CzeU&V");
      Class2HTML.referenceType("");
      String[] stringArray0 = new String[8];
      stringArray0[0] = "<A HREF=\"+CzeU&V.html\" TARGET=_top>+CzeU&V</A>";
      stringArray0[1] = "+CzeU&V";
      stringArray0[2] = "+CzeU&V";
      stringArray0[3] = "!z#`XhFY";
      stringArray0[4] = "+CzeU&V";
      stringArray0[5] = "+CzeU&V";
      stringArray0[6] = "+CzeU&V";
      stringArray0[7] = "";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      String string0 = Class2HTML.referenceType("</A>");
      assertEquals("<A HREF=\"</A>.html\" TARGET=_top><.A></A>", string0);
      
      String string1 = Class2HTML.referenceType("_%KFMjIl2[EtQ");
      assertEquals("<A HREF=\"_%KFMjIl2.html\" TARGET=_top>_%KFMjIl2[EtQ</A>", string1);
      
      Pattern.quote("<A HREF=\"</A>.html\" TARGET=_top><.A></A>");
      String string2 = Class2HTML.toHTML("SQ#A4#1]>@+h");
      assertEquals("SQ#A4#1]&gt;@+h", string2);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Pattern.quote("T\nAnno$ation(s):\n");
      String[] stringArray0 = new String[1];
      java.lang.ClassLoader classLoader0 = java.lang.ClassLoader.getSystemClassLoader();
      ClassLoaderRepository classLoaderRepository0 = new ClassLoaderRepository(classLoader0);
      JavaClass javaClass0 = classLoaderRepository0.loadClass("java.time.temporal.TemporalAdjuster");
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "T\nAnno$ation(s):\n");
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("</A>");
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance(classPath0);
      Class<MockJapaneseDate> class0 = MockJapaneseDate.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "</A>");
      // Undeclared exception!
      try { 
        Class2HTML.referenceClass(240);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid constant pool reference: 240. Constant pool size is: 68
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String[] stringArray0 = new String[7];
      stringArray0[0] = "om^a;iN9jYN8Po";
      stringArray0[1] = "om^a;iN9jYN8Po";
      stringArray0[2] = "G4'";
      Class2HTML.referenceType("{.E.C0`xc!");
      Class2HTML.referenceType("G4'");
      Class2HTML.toHTML("\nAnnotation(s):\n");
      Class2HTML.referenceType(",z )lTss=");
      Class2HTML.referenceType("java.time.chrono.JapaneseDate");
      // Undeclared exception!
      try { 
        Class2HTML.referenceClass(56);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassPath classPath0 = new ClassPath("sun.reflec.g4nerics.fctory.GnericsFactory");
      SyntheticRepository syntheticRepository0 = SyntheticRepository.getInstance(classPath0);
      Class<MockHijrahDate> class0 = MockHijrahDate.class;
      JavaClass javaClass0 = syntheticRepository0.loadClass(class0);
      javaClass0.setClassName("(\"");
      Class2HTML class2HTML0 = new Class2HTML(javaClass0, "JCW8J(q^h@q6!c7&");
      Class2HTML.toHTML("JCW8J(q^h@q6!c7&");
      // Undeclared exception!
      try { 
        Class2HTML.referenceClass(5);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Expected class `CONSTANT_Class' at index 5 and got CONSTANT_Utf8[1](\"org/evosuite/runtime/mock/StaticReplacementMock\")
         //
         verifyException("org.apache.bcel.classfile.ConstantPool", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String[] stringArray0 = new String[9];
      stringArray0[0] = "-d";
      stringArray0[1] = "-d";
      stringArray0[2] = "-d";
      stringArray0[3] = "e";
      stringArray0[4] = "e";
      stringArray0[5] = "-d";
      stringArray0[6] = "-d";
      stringArray0[7] = "-d";
      stringArray0[8] = "-d";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = "-Ld";
      String[] stringArray0 = new String[8];
      stringArray0[0] = "-Ld";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      String[] stringArray0 = new String[6];
      stringArray0[0] = "-d";
      FileSystemHandling.shouldAllThrowIOExceptions();
      stringArray0[1] = "-d";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      SyntheticRepository.getInstance();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "aeZ3*";
      stringArray0[1] = "Invalid IOCase name: ";
      stringArray0[2] = "java.time.ZoneId";
      stringArray0[3] = "-zip";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "float");
      stringArray0[4] = "float";
      stringArray0[5] = ":n";
      stringArray0[6] = "M7Sj35";
      stringArray0[7] = "java.lang.Thread";
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: FileNotFoundException");
      
      } catch(FileNotFoundException e) {
         //
         // float (No such file or directory)
         //
         verifyException("java.util.zip.ZipFile", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      String string0 = File.separator;
      String[] stringArray0 = new String[5];
      stringArray0[0] = "/";
      stringArray0[1] = "-d";
      stringArray0[2] = "/";
      stringArray0[3] = "*>&F,A;4|%";
      // Undeclared exception!
      try { 
        Class2HTML.main(stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.util.Class2HTML", e);
      }
  }
}
