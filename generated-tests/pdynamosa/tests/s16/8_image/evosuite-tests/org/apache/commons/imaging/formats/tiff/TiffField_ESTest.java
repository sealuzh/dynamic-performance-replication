/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 01:47:14 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "B#Mj^gLnkpsrvm4H");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-64);
      byteArray0[4] = (byte)63;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-14), 50725, fieldTypeRational0, 1090, 557L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(557, tiffField0.getOffset());
      assertEquals((-14), tiffField0.getTag());
      assertEquals(3, int0);
      assertEquals(50725, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "B#Mj^gLnkpsrvm4H");
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte)63;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-14), 50725, fieldTypeRational0, 1090, 557L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, int0);
      assertEquals(557, tiffField0.getOffset());
      assertEquals((-14), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(50725, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-168), (-168), fieldTypeLong0, 1L, 0L, byteArray0, byteOrder0, (byte) (-97));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-168), tiffField0.getTag());
      assertEquals((-168), tiffField0.getDirectoryType());
      assertTrue(boolean0);
      assertEquals((-97), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(32, "!RUsa&IO2[");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2927), (-1236), fieldTypeRational0, 1980L, 293L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2927), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1236), tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals("", string0);
      assertEquals(293, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(44, "ltO{GLEI#.f9vj!Yg");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(27, (-3), fieldTypeRational0, 2147483647L, 44, byteArray0, byteOrder0, 50);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-3), tiffField0.getDirectoryType());
      assertEquals(44, tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals(27, tagInfo0.tag);
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(25, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(40965, 7, fieldTypeRational0, 1658L, 4L, byteArray0, byteOrder0, (-1672));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals((-1672), tiffField0.getSortHint());
      assertEquals(40965, tiffField0.getTag());
      assertEquals(40965, tagInfo0.tag);
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(32, "!RUsa&IO2[");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 32, 4L, byteArray0, byteOrder0, (-2563));
      int int0 = tiffField0.getTag();
      assertEquals((-2563), tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)33, 65535, fieldTypeByte0, (byte)0, (byte)33, byteArray0, (ByteOrder) null, (-4264));
      int int0 = tiffField0.getTag();
      assertEquals(33, int0);
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(33, tiffField0.getOffset());
      assertEquals((-4264), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)84;
      byteArray0[1] = (byte)84;
      byteArray0[2] = (byte)84;
      byteArray0[3] = (byte)84;
      byteArray0[4] = (byte)84;
      byteArray0[5] = (byte)84;
      byteArray0[6] = (byte)84;
      TiffField tiffField0 = new TiffField(183, 247, fieldTypeShort0.ASCII, 16976L, 183, byteArray0, byteOrder0, (byte)84);
      String string0 = tiffField0.getStringValue();
      assertEquals(247, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(84, tiffField0.getSortHint());
      assertEquals(183, tiffField0.getTag());
      assertEquals(183, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)32, 1376, fieldTypeShort0.SLONG, 2236L, 255L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(1376, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(255, tiffField0.getOffset());
      assertEquals(32, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-105), 33450, fieldTypeFloat0, (-700L), (byte)114, byteArray0, byteOrder0, (-711));
      int int0 = tiffField0.getSortHint();
      assertEquals(33450, tiffField0.getDirectoryType());
      assertEquals(114, tiffField0.getOffset());
      assertEquals((-711), int0);
      assertEquals((-105), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "S2n6#K08s%XjhDm0!");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getOffset();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 65535, fieldTypeRational0.LONG, (byte)0, 65535, byteArray0, byteOrder0, 2594);
      int int0 = tiffField0.getOffset();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(65535, int0);
      assertEquals(2594, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte)33;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1428, 1692, fieldTypeShort0, (byte)33, 2147483664L, byteArray0, byteOrder0, 1428);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(1692, tiffField0.getDirectoryType());
      assertEquals(1428, tiffField0.getSortHint());
      assertEquals(1428, tiffField0.getTag());
      assertEquals((-2147483632), tiffField0.getOffset());
      assertEquals(33, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-883), "[&");
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-35);
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)43);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-883), (-883), fieldTypeFloat0, 1L, (-2739L), byteArray0, byteOrder0, (byte)70);
      tiffField0.getIntValueOrArraySum();
      assertEquals(70, tiffField0.getSortHint());
      assertEquals((-2739), tiffField0.getOffset());
      assertEquals((-883), tiffField0.getTag());
      assertEquals((-883), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)36;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1770), 65564, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).DOUBLE).SHORT, 1L, (-1770), byteArray0, byteOrder0, 18);
      tiffField0.getIntValue();
      assertEquals(18, tiffField0.getSortHint());
      assertEquals(65564, tiffField0.getDirectoryType());
      assertEquals((-1770), tiffField0.getOffset());
      assertEquals((-1770), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-883), "[&");
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-35);
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)43);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-883), (-883), fieldTypeFloat0, 1L, (-2739L), byteArray0, byteOrder0, (byte)70);
      tiffField0.getIntValue();
      assertEquals((-883), tiffField0.getTag());
      assertEquals(70, tiffField0.getSortHint());
      assertEquals((-2739), tiffField0.getOffset());
      assertEquals((-883), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[11];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((byte) (-16), (String) null);
      TiffField tiffField0 = new TiffField((byte) (-16), (byte) (-16), fieldTypeFloat0, (byte) (-16), (byte) (-16), byteArray0, byteOrder0, 133);
      tiffField0.getFieldTypeName();
      assertEquals((-16), tiffField0.getTag());
      assertEquals((-16), tiffField0.getDirectoryType());
      assertEquals((-16), tiffField0.getOffset());
      assertEquals(133, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-503), "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2008, 2008, fieldTypeLong0, 136L, 1L, byteArray0, byteOrder0, (-2979));
      tiffField0.getFieldTypeName();
      assertEquals(2008, tiffField0.getDirectoryType());
      assertEquals((-2979), tiffField0.getSortHint());
      assertEquals(2008, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 2146247330, (FieldType) null, 2146247330, 1L, byteArray0, byteOrder0, (byte)73);
      tiffField0.getFieldType();
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(2146247330, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[92];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "y[5w~-~`Z+>Q>+m");
      TiffField tiffField0 = new TiffField((-117), 50, fieldTypeFloat0, 2722L, (-1L), byteArray0, byteOrder0, 2058);
      tiffField0.getFieldType();
      assertEquals((-117), tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2058, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-262), ", ");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(50, 2207, fieldTypeLong0, 4L, 586L, byteArray0, byteOrder0, (-1));
      tiffField0.getFieldType();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(50, tiffField0.getTag());
      assertEquals(2207, tiffField0.getDirectoryType());
      assertEquals(586, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[12];
      TiffField tiffField0 = new TiffField(2139500437, 1, fieldTypeRational0.SBYTE, 1, 111L, byteArray0, byteOrder0, 2147068835);
      tiffField0.getDoubleValue();
      assertEquals(2147068835, tiffField0.getSortHint());
      assertEquals(2139500437, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(111, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)73;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1L, (-2147483648L), byteArray0, byteOrder0, (byte)73);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-93);
      TiffField tiffField0 = new TiffField(71, 3670, fieldTypeRational0.LONG, 1, 1451L, byteArray0, byteOrder0, (-750));
      tiffField0.getDoubleValue();
      assertEquals(71, tiffField0.getTag());
      assertEquals(3670, tiffField0.getDirectoryType());
      assertEquals(1451, tiffField0.getOffset());
      assertEquals((-750), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, (byte)0, 481L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(481, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)33, 65535, fieldTypeByte0, (byte)0, (byte)33, byteArray0, (ByteOrder) null, (-4264));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(33, tiffField0.getTag());
      assertEquals(33, tiffField0.getOffset());
      assertEquals(65535, int0);
      assertEquals((-4264), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(50936, (-2173), fieldTypeRational0, 0L, (-344L), byteArray0, (ByteOrder) null, (byte)0);
      tiffField0.getCount();
      assertEquals(50936, tiffField0.getTag());
      assertEquals((-344), tiffField0.getOffset());
      assertEquals((-2173), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2540, 2540, fieldTypeDouble0, 2540, 1L, byteArray0, byteOrder0, 50942);
      tiffField0.getCount();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(50942, tiffField0.getSortHint());
      assertEquals(2540, tiffField0.getTag());
      assertEquals(2540, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(676, (-1), fieldTypeByte0, (-1), 934L, byteArray0, (ByteOrder) null, (-2230));
      tiffField0.getCount();
      assertEquals(676, tiffField0.getTag());
      assertEquals((-2230), tiffField0.getSortHint());
      assertEquals(934, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((byte)33, 65535, fieldTypeByte0, (byte)0, (byte)33, byteArray0, (ByteOrder) null, (-4264));
      tiffField0.getBytesLength();
      assertEquals(33, tiffField0.getTag());
      assertEquals(33, tiffField0.getOffset());
      assertEquals((-4264), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-262), ", ");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(50, 2207, fieldTypeLong0, 4L, 586L, byteArray0, byteOrder0, (-1));
      tiffField0.getBytesLength();
      assertEquals(2207, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(586, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 131, (-353L), byteArray0, (ByteOrder) null, (byte)31);
      tiffField0.getByteOrder();
      assertEquals(31, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-353), tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1306), (-1306), fieldTypeShort0, 0, (-1306), byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteOrder();
      assertEquals((-1306), tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1306), tiffField0.getTag());
      assertEquals((-1306), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[18];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(32894, 32894, fieldTypeByte0, 2258L, 32894, byteArray0, byteOrder0, 32894);
      tiffField0.getByteArrayValue();
      assertEquals(32894, tiffField0.getSortHint());
      assertEquals(32894, tiffField0.getTag());
      assertEquals(32894, tiffField0.getOffset());
      assertEquals(32894, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "S2n6#K08s%XjhDm0!");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, (int) (byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 65535, fieldTypeRational0, 0, 0L, byteArray0, byteOrder0, 1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("CurrentPreProfileMatrix");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "CurrentPreProfileMatrix");
      assertEquals(0, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1L, (-2147483648L), byteArray0, byteOrder0, (byte)73);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("org.apache.commons.imaging.formats.tiff.TiffField");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 2146247330, (FieldType) null, 2146247330, 1L, byteArray0, byteOrder0, (byte)73);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-168), (-168), fieldTypeLong0, (-168), 0L, byteArray0, byteOrder0, (byte) (-97));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[11];
      TiffField tiffField0 = new TiffField((byte) (-16), (byte) (-16), fieldTypeFloat0, (byte) (-16), (byte) (-16), byteArray0, byteOrder0, 133);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-584), "e[-z=/sW[tt%/,s91H");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-584), (-3835), fieldTypeRational0, (-3835), (-584), (byte[]) null, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-754), (-754), fieldTypeByte0, (-754), (-1813L), byteArray0, byteOrder0, (byte) (-41));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(5, "t|D,C7Ay.Eo@|/");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(546, 4988, fieldTypeFloat0, (-2679L), (-2679L), byteArray0, byteOrder0, (byte) (-20));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-222), (-1086), fieldTypeShort0, 170L, (byte)33, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0L, 0L, byteArray0, byteOrder0, 1118);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(676, (-1), fieldTypeByte0, (-1), 934L, byteArray0, (ByteOrder) null, (-2230));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(51041, 257, (FieldType) null, 1L, 1L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(530, 530, fieldTypeRational0, (-2344L), (-1615L), byteArray0, byteOrder0, (byte) (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(32, "!RUsa&IO2[");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2927), (-1236), fieldTypeRational0, 1980L, 293L, byteArray0, byteOrder0, 1);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(293, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-2927), tiffField0.getTag());
      assertFalse(boolean0);
      assertEquals((-1236), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[92];
      TiffField tiffField0 = new TiffField((-117), 50, fieldTypeDouble0.FLOAT, 2722L, (-1L), byteArray0, byteOrder0, 2058);
      tiffField0.getFieldType();
      assertEquals(2058, tiffField0.getSortHint());
      assertEquals((-117), tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(401, (-2146622241), fieldTypeShort0.SRATIONAL, (-611L), (byte)44, byteArray0, byteOrder0, (-1));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(401, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(44, tiffField0.getOffset());
      assertEquals((-2146622241), int0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1020, (byte)20, fieldTypeRational0, 4200L, 479L, byteArray0, byteOrder0, 6);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)64, (-3176), fieldTypeRational0, 525L, 1L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getValue();
      assertEquals(64, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-3176), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-584), "e[-z=/sW[tt%/,s91H");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-584), (-3835), fieldTypeRational0, (-3835), (-584), (byte[]) null, byteOrder0, 65535);
      int int0 = tiffField0.getOffset();
      assertEquals((-3835), tiffField0.getDirectoryType());
      assertEquals((-584), tiffField0.getTag());
      assertEquals((-584), int0);
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-584), "e[-z=/sW[tt%/,s91H");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-584), (-3835), fieldTypeRational0, (-3835), (-584), (byte[]) null, byteOrder0, 65535);
      int int0 = tiffField0.getTag();
      assertEquals((-584), int0);
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-3835), tiffField0.getDirectoryType());
      assertEquals((-584), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1127), "");
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-256), 2147348048, fieldTypeLong0, (-1522L), (-2273L), byteArray0, (ByteOrder) null, (-256));
      tiffField0.getBytesLength();
      assertEquals((-256), tiffField0.getSortHint());
      assertEquals((-256), tiffField0.getTag());
      assertEquals((-2273), tiffField0.getOffset());
      assertEquals(2147348048, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[224];
      TiffField tiffField0 = new TiffField(1702, 1702, fieldTypeDouble0, 1702, 1702, byteArray0, byteOrder0, 1702);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1770), 65564, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeShort0).DOUBLE).SHORT, 1L, (-1770), byteArray0, byteOrder0, 18);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals(18, tiffField0.getSortHint());
      assertEquals(65564, tiffField0.getDirectoryType());
      assertEquals((-1770), tiffField0.getTag());
      assertEquals((-1770), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[4];
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, 0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1636), 0, fieldTypeByte0, (byte)0, (-1615L), byteArray0, byteOrder0, (-1636));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@4319cc5f for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-262), ", ");
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(50, 2207, fieldTypeLong0, 4L, 586L, byteArray0, byteOrder0, (-1));
      tiffField0.getIntValueOrArraySum();
      assertEquals(2207, tiffField0.getDirectoryType());
      assertEquals(586, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(4L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2540, 2540, fieldTypeDouble0, 2540, 1L, byteArray0, byteOrder0, 50942);
      tiffField0.getDoubleArrayValue();
      assertEquals(2540, tiffField0.getDirectoryType());
      assertEquals(2540, tiffField0.getTag());
      assertEquals(50942, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(2540L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField((byte) (-16), (byte) (-16), fieldTypeFloat0, (-2147123632), (byte) (-16), byteArray0, byteOrder0, (byte) (-16));
      tiffField0.getDoubleArrayValue();
      assertEquals((-16), tiffField0.getDirectoryType());
      assertEquals((-16), tiffField0.getSortHint());
      assertEquals((-16), tiffField0.getTag());
      assertEquals((-2147123632L), tiffField0.getCount());
      assertEquals((-16), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-4752), (-4752), fieldTypeShort0.LONG, 3420, (-4752), byteArray0, byteOrder0, 1172);
      tiffField0.getDoubleArrayValue();
      assertEquals(1172, tiffField0.getSortHint());
      assertEquals((-4752), tiffField0.getTag());
      assertEquals((-4752), tiffField0.getOffset());
      assertEquals(3420L, tiffField0.getCount());
      assertEquals((-4752), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(559, 3420, fieldTypeFloat0.LONG, (-2147483648L), 1L, byteArray0, byteOrder0, 4);
      tiffField0.getDoubleArrayValue();
      assertEquals(4, tiffField0.getSortHint());
      assertEquals((-2147483648L), tiffField0.getCount());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(559, tiffField0.getTag());
      assertEquals(3420, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(50, (-1364), fieldTypeShort0, 1803L, (-1222L), byteArray0, (ByteOrder) null, (byte)33);
      tiffField0.getDoubleArrayValue();
      assertEquals((-1364), tiffField0.getDirectoryType());
      assertEquals((-1222), tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(1803L, tiffField0.getCount());
      assertEquals(33, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2498), 285, fieldTypeByte0, (byte)0, (-1615L), byteArray0, byteOrder0, 481);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@3a569723 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)0, (-2147123632), fieldTypeShort0, 1L, 15840L, byteArray0, byteOrder0, (-2147123632));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2147123632), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(15840, tiffField0.getOffset());
      assertEquals((-2147123632), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)33, 131, fieldTypeRational0, 50, 2118L, byteArray0, (ByteOrder) null, (byte)10);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(33, tiffField0.getTag());
      assertEquals(10, tiffField0.getSortHint());
      assertEquals(2118, tiffField0.getOffset());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(131, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)32, 1376, fieldTypeShort0.SLONG, 2236L, 255L, byteArray0, byteOrder0, 0);
      tiffField0.getIntArrayValue();
      assertEquals(255, tiffField0.getOffset());
      assertEquals(32, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1376, tiffField0.getDirectoryType());
      assertEquals(2236L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (byte)0, fieldTypeShort0, 293L, (-1420L), byteArray0, byteOrder0, 4202);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(4202, tiffField0.getSortHint());
      assertEquals(293L, tiffField0.getCount());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals((-1420), tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(1, "B#Mj^gLnkpsrvm4H");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-14), 50725, fieldTypeRational0, 1090, 557L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(1020, (byte)20, fieldTypeRational0, 4200L, 479L, byteArray0, byteOrder0, 6);
      tiffField0.getIntArrayValue();
      assertEquals(4200L, tiffField0.getCount());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(1020, tiffField0.getTag());
      assertEquals(479, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 0, fieldTypeShort0, (byte)1, 0, byteArray0, byteOrder0, (-3998));
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-3998), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[211];
      TiffField tiffField0 = new TiffField((-1912), 250, fieldTypeDouble0.FLOAT, 250, 1967L, byteArray0, byteOrder0, 547);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@36d70c64 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(14, 35, fieldTypeRational0.ASCII, 1L, 35, byteArray0, byteOrder0, 1131);
      String string0 = tiffField0.getStringValue();
      assertEquals(35, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(35, tiffField0.getOffset());
      assertEquals(1131, tiffField0.getSortHint());
      assertEquals(14, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[423];
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeDouble0, 65535, 65535, byteArray0, byteOrder0, 65535);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [D@35c5c132
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(4, 65535, fieldTypeShort0.IFD, (-1L), 0L, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.getTagName();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x4)", string0);
      assertEquals(65535, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34023, 34023, fieldTypeByte0.FLOAT, (byte)0, 0L, byteArray0, byteOrder0, (-2147123632));
      String string0 = tiffField0.getTagName();
      assertEquals("ImageColorIndicator", string0);
      assertEquals(34023, tiffField0.getDirectoryType());
      assertEquals(34023, tiffField0.getTag());
      assertEquals((-2147123632), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-69), 0, (FieldType) null, (byte) (-68), (-5228L), byteArray0, byteOrder0, 2917);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[92];
      TiffField tiffField0 = new TiffField((-117), 50, fieldTypeDouble0.FLOAT, 2722L, (-1L), byteArray0, byteOrder0, 2058);
      tiffField0.dump();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals((-117), tiffField0.getTag());
      assertEquals(2058, tiffField0.getSortHint());
      assertEquals(2722L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[56];
      TiffField tiffField0 = new TiffField(50, 35, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeDouble0).SSHORT).BYTE, 4525, 50, byteArray0, byteOrder0, (-566));
      tiffField0.dump();
      assertEquals(50, tiffField0.getOffset());
      assertEquals(4525L, tiffField0.getCount());
      assertEquals(50, tiffField0.getTag());
      assertEquals(35, tiffField0.getDirectoryType());
      assertEquals((-566), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[211];
      TiffField tiffField0 = new TiffField((-1912), 250, fieldTypeDouble0.FLOAT, 250, 1967L, byteArray0, byteOrder0, 547);
      tiffField0.dump();
      assertEquals(250, tiffField0.getDirectoryType());
      assertEquals(547, tiffField0.getSortHint());
      assertEquals(250L, tiffField0.getCount());
      assertEquals(1967, tiffField0.getOffset());
      assertEquals((-1912), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[423];
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeDouble0, 65535, 65535, byteArray0, byteOrder0, 65535);
      String string0 = tiffField0.toString();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals("65535 (0xffff: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (52) (65535 Double)", string0);
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[18];
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      TiffField tiffField0 = new TiffField(32894, 32894, fieldTypeByte0, 2258L, 32894, byteArray0, byteOrder0, 32894);
      tiffField0.dump();
      assertEquals(2258L, tiffField0.getCount());
      assertEquals(32894, tiffField0.getSortHint());
      assertEquals(32894, tiffField0.getDirectoryType());
      assertEquals(32894, tiffField0.getTag());
      assertEquals(32894, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[211];
      TiffField tiffField0 = new TiffField((-9), (-1986), fieldTypeDouble0.SLONG, 1989L, 1L, byteArray0, byteOrder0, (-1986));
      tiffField0.dump();
      assertEquals((-1986), tiffField0.getSortHint());
      assertEquals((-1986), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-9), tiffField0.getTag());
      assertEquals(1989L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1, (byte)0, fieldTypeShort0, 293L, (-1420L), byteArray0, byteOrder0, 4202);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1420), tiffField0.getOffset());
      assertEquals(4202, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(293L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[106];
      TiffField tiffField0 = new TiffField((-1717986922), (-1477), fieldTypeDouble0.SSHORT, 3222L, (-1171L), byteArray0, byteOrder0, (-1717986922));
      tiffField0.dump();
      assertEquals((-1171), tiffField0.getOffset());
      assertEquals((-1477), tiffField0.getDirectoryType());
      assertEquals((-1717986922), tiffField0.getTag());
      assertEquals((-1717986922), tiffField0.getSortHint());
      assertEquals(3222L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[67];
      TiffField tiffField0 = new TiffField((byte) (-49), (byte) (-49), ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeDouble0).SSHORT).ASCII, 2209L, (-1858L), byteArray0, byteOrder0, 73);
      tiffField0.toString();
      assertEquals((-1858), tiffField0.getOffset());
      assertEquals((-49), tiffField0.getTag());
      assertEquals(73, tiffField0.getSortHint());
      assertEquals((-49), tiffField0.getDirectoryType());
      assertEquals(2209L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(6, " for: ");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeAscii0, 0L, 0L, byteArray0, byteOrder0, (-79));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-79), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0, 0, (int) (byte)0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 65535, fieldTypeRational0, 0, 0, byteArray0, byteOrder0, 1);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1431655764), 0, fieldTypeShort0.UNDEFINED, (byte)64, 303L, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(352, (-1431655764));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(64L, tiffField0.getCount());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-1431655764), tiffField0.getTag());
      assertEquals(303, tiffField0.getOffset());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "lk\"Jk!");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1717986917), (-1266), fieldTypeFloat0, 1615, 0L, byteArray0, byteOrder0, 383);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1266), 383);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals((-1266), tiffField0.getDirectoryType());
      assertEquals(383, tiffField0.getSortHint());
      assertFalse(tiffField0.isLocalValue());
      assertNotNull(string0);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: lk\"Jk!", string0);
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2063, 65535, fieldTypeLong0, 65535, 2063, byteArray0, byteOrder0, 2063);
      tiffField0.getFieldTypeName();
      assertEquals(2063, tiffField0.getOffset());
      assertEquals(2063, tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(2063, tiffField0.getTag());
      assertEquals(65535L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(28, (-1603), fieldTypeRational0, 50, 8L, byteArray0, byteOrder0, (-1537));
      tiffField0.dump();
      assertEquals(8, tiffField0.getOffset());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-1537), tiffField0.getSortHint());
      assertEquals((-1603), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1826, 1826, fieldTypeRational0, 0L, 1398L, byteArray0, byteOrder0, 2385);
      int int0 = tiffField0.getSortHint();
      assertEquals(1398, tiffField0.getOffset());
      assertEquals(2385, int0);
      assertTrue(tiffField0.isLocalValue());
      assertEquals(1826, tiffField0.getTag());
      assertEquals(1826, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "lk\"Jk!");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1615, fieldTypeFloat0, 0, 0, byteArray0, byteOrder0, (byte) (-33));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-33), tiffField0.getSortHint());
      assertEquals("0 (0x0: Unknown Tag): ", string0);
      assertEquals(1615, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[87];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-1717986917), (-1717986917), fieldTypeLong0, (-1717986917), (-1717986917), byteArray0, byteOrder0, (-1717986917));
      assertEquals(1717986924, tiffField0.getBytesLength());
      
      tiffField0.dump();
      assertEquals((-1717986917), tiffField0.getOffset());
      assertEquals((-1717986917L), tiffField0.getCount());
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getTag());
      assertEquals((-1717986917), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[26];
      TiffField tiffField0 = new TiffField(65568, 10, fieldTypeDouble0, 255L, 4272L, byteArray0, byteOrder0, (byte) (-49));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-49), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(255L, tiffField0.getCount());
      assertEquals(2040, tiffField0.getBytesLength());
      assertEquals(4272, tiffField0.getOffset());
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(65568, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(481, 481, fieldTypeByte0, 481, 881L, byteArray0, byteOrder0, (byte) (-27));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(481, tiffField0.getDirectoryType());
      assertEquals(481, tiffField0.getTag());
      assertEquals((-27), tiffField0.getSortHint());
      assertEquals(481L, tiffField0.getCount());
      assertNotNull(tiffElement0);
      assertEquals(881L, tiffElement0.offset);
  }
}
