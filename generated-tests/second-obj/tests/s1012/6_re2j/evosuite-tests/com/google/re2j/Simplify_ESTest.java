/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 00:36:07 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Regexp;
import com.google.re2j.Simplify;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Simplify_ESTest extends Simplify_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        Simplify.simplify(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Simplify", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        Simplify.simplify(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Simplify", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        Simplify.simplify(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Simplify", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[20];
      regexp0.subs = regexpArray0;
      regexp0.flags = 2;
      regexp0.min = 2;
      Regexp regexp1 = Simplify.simplify(regexp0);
      assertNotNull(regexp1);
      
      Regexp regexp2 = new Regexp(regexp1);
      regexp0.reinit();
      Regexp regexp3 = new Regexp(regexp1);
      Regexp regexp4 = Simplify.simplify(regexp2);
      assertSame(regexp4, regexp2);
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 2466;
      // Undeclared exception!
      try { 
        Simplify.simplify(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Simplify", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[20];
      regexp0.subs = regexpArray0;
      regexp0.flags = (-7);
      regexp0.min = (-7);
      // Undeclared exception!
      try { 
        Simplify.simplify(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Simplify", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      regexp0.cap = (-3);
      Regexp[] regexpArray0 = new Regexp[3];
      regexpArray0[0] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.flags = (-3);
      regexp0.min = (-3);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.reinit();
      Regexp regexp2 = Simplify.simplify(regexp1);
      Simplify.simplify(regexp2);
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      regexp2.op = regexp_Op1;
      regexp1.flags = 0;
      Simplify.simplify(regexp2);
      Simplify.simplify(regexp0);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      regexp0.max = (-1505);
      regexp0.cap = (-19);
      Regexp[] regexpArray0 = new Regexp[1];
      regexpArray0[0] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.flags = (-19);
      regexp0.min = (-19);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.reinit();
      regexp1.flags = 824;
      regexp0.cap = (-19);
      Simplify.simplify(regexp1);
      Regexp regexp2 = new Regexp(regexp_Op0);
      Regexp regexp3 = new Regexp((Regexp.Op) null);
      Regexp regexp4 = new Regexp(regexp3);
      // Undeclared exception!
      try { 
        Simplify.simplify(regexp3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Simplify", e);
      }
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[3];
      regexpArray0[0] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.flags = 1;
      regexp0.min = 1;
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.reinit();
      Regexp regexp2 = Simplify.simplify(regexp0);
      regexp2.toString();
      regexp0.equals(regexp1);
      regexp2.reinit();
      Regexp regexp3 = Simplify.simplify(regexp1);
      Regexp regexp4 = Simplify.simplify(regexp3);
      Regexp regexp5 = Simplify.simplify(regexp1);
      Regexp regexp6 = new Regexp(regexp3);
      Simplify.simplify(regexp4);
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp7 = new Regexp(regexp_Op1);
      Regexp.Op regexp_Op2 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp8 = new Regexp(regexp_Op2);
      regexp4.subs = regexpArray0;
      Simplify.simplify(regexp5);
      Regexp regexp9 = new Regexp(regexp_Op1);
      regexp0.reinit();
      Simplify.simplify(regexp3);
      Regexp regexp10 = Simplify.simplify(regexp8);
      assertFalse(regexp10.equals((Object)regexp1));
  }

  @Test(timeout = 4000)
  public void test9()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      regexp0.cap = 1;
      regexp0.max = 1;
      Regexp[] regexpArray0 = new Regexp[3];
      regexpArray0[0] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.flags = 1;
      regexp0.min = 1;
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.reinit();
      Regexp regexp2 = Simplify.simplify(regexp0);
      regexp0.equals(regexp1);
      regexp2.reinit();
      Regexp regexp3 = Simplify.simplify(regexp1);
      Regexp regexp4 = Simplify.simplify(regexp3);
      Regexp regexp5 = Simplify.simplify(regexp1);
      Regexp regexp6 = new Regexp(regexp3);
      Simplify.simplify(regexp4);
      regexp5.equals(regexp0.subs);
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp7 = new Regexp(regexp_Op1);
      Regexp.Op regexp_Op2 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp8 = new Regexp(regexp_Op2);
      Simplify.simplify(regexp5);
      Regexp regexp9 = new Regexp(regexp_Op1);
      regexp0.reinit();
      Regexp.Op regexp_Op3 = Regexp.Op.CAPTURE;
      Regexp regexp10 = new Regexp(regexp_Op3);
      // Undeclared exception!
      try { 
        Simplify.simplify(regexp10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Simplify", e);
      }
  }
}
