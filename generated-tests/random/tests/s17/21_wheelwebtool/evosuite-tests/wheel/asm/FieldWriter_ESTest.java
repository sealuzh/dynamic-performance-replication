/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 01:40:29 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(255);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1366, "", "The filter must not be null", "_|E8#", "_|E8#");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, (-1700), "", "Deprecated", (String) null, "> lAxA`NN3\"vxl'j");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-1061), "Y4'+H!", "", "", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@5cb65752
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777221);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", (String) null, "wheel.asm.FieldWriter");
      Attribute attribute0 = new Attribute("wheel.asm.FieldWriter");
      fieldWriter0.next = fieldWriter0;
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.next.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(65535, "RuntimeVisibleAnnotations", "4", "bh", "AnnotationDefault");
      fieldWriter0.visitAnnotation("", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1805);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "rOOn3SV<i!D]2{rjU#", "rOOn3SV<i!D]2{rjU#", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      fieldWriter0.visitAnnotation("4\"-TG5IWlME", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2867);
      classWriter0.version = (-1186);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-563), "", "wheel.asm.ClassAdapter", "wheel.asm.ClassAdapter", "");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(188);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "Qq", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(16777221);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "wheel.asm.FieldWriter", "wheel.asm.FieldWriter", (String) null, "wheel.asm.FieldWriter");
      Attribute attribute0 = new Attribute("wheel.asm.FieldWriter");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "AnnotationDefault", "RuZp&$y6zfp", (String) null, "AnnotationDefault");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2867);
      classWriter0.version = (-1186);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-563), "", "wheel.asm.ClassAdapter", "wheel.asm.ClassAdapter", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(65535, "RuntimeVisibleAnnotations", "4", "bh", "AnnotationDefault");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1805);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "rOOn3SV<i!D]2{rjU#", "rOOn3SV<i!D]2{rjU#", "RuntimeVisibleAnnotations", "RuntimeVisibleAnnotations");
      fieldWriter0.visitAnnotation("4\"-TG5IWlME", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(65535, "RuntimeVisibleAnnotations", "4", "bh", "AnnotationDefault");
      fieldWriter0.visitAnnotation("", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(42, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(188);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", "Qq", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(65535, "RuntimeVisibleAnnotations", "4", "bh", "AnnotationDefault");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "AnnotationDefault", "RuZp&$y6zfp", (String) null, "AnnotationDefault");
      assertFalse(fieldWriter0.equals((Object)fieldVisitor0));
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(65535);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(65535, "RuntimeVisibleAnnotations", "4", "bh", "AnnotationDefault");
      fieldVisitor0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(103);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 103, "TEJDME5'Qx)a", "TEJDME5'Qx)a", (String) null, "TEJDME5'Qx)a");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
