/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 05:57:31 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldVisitor;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1329));
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-1329), (String) null, "RuntimeInvisibleAnnotations", "", "RuntimeInvisibleAnnotations");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1028);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 2, "", "", (String) null, object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@10270bbc
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(480);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2390), "A#wuJxHY|7WDdK,S!./", "A#wuJxHY|7WDdK,S!./", "iSouFn}Tn]0`_#cT", "iSouFn}Tn]0`_#cT");
      Attribute attribute0 = new Attribute("iSouFn}Tn]0`_#cT");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(480);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2390), "A#wuJxHY|7WDdK,S!./", "A#wuJxHY|7WDdK,S!./", "iSouFn}Tn]0`_#cT", "iSouFn}Tn]0`_#cT");
      fieldWriter0.visitAnnotation("", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, "", "", "", "");
      fieldWriter0.visitAnnotation("", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1718));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "}g>5j\"k`;sQ``", "}g>5j\"k`;sQ``", "}g>5j\"k`;sQ``", (Object) null);
      ByteVector byteVector0 = new ByteVector(3534);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(3281, "Signature", "RY$kZsSSW2vjNK#2I", "char", "Signature");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(18);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1818), "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1718));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "}g>5j\"k`;sQ``", "}g>5j\"k`;sQ``", "}g>5j\"k`;sQ``", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1718));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "}g>5j\"k`;sQ``", "}g>5j\"k`;sQ``", "}g>5j\"k`;sQ``", (Object) null);
      fieldWriter0.visitAnnotation("org.apache.commons.io.filefilter.FileFileFilter", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      FieldWriter fieldWriter0 = (FieldWriter)classWriter0.visitField(3281, "Signature", "RY$kZsSSW2vjNK#2I", "char", "Signature");
      fieldWriter0.visitAnnotation("RY$kZsSSW2vjNK#2I", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 8, "ywMQRkBF1", "ywMQRkBF1", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(8, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-425));
      FieldVisitor fieldVisitor0 = classWriter0.visitField(2242, "%#[s", "Signature", "Signature", "*@:>d7SC*=&87");
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "Dk|6SI+BomRAQ", "44S& sr[3O}hT", "Dk|6SI+BomRAQ", "44S& sr[3O}hT");
      assertFalse(fieldWriter0.equals((Object)fieldVisitor0));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(14);
      FieldVisitor fieldVisitor0 = classWriter0.visitField(3281, "Signature", "RY$kZsSSW2vjNK#2I", "char", "Signature");
      fieldVisitor0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1718));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "}g>5j\"k`;sQ``", "}g>5j\"k`;sQ``", "}g>5j\"k`;sQ``", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
