/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 17:18:06 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3027));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "86&3LGm\"5`";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      classWriter0.visit(49, 49, "", "", "", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2454), "", "#RN;Pqpz", "", "86&3LGm\"5`");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(147, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3027));
      classWriter0.index = (-3027);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "zw&af.T", "zw&af.T", "zw&af.T", "");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(92, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3027));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3027), "", "", "", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(392);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 392, "Zv+b`", "Zv+b`", "Zv+b`", "Zv+b`");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(392);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3547), "", "", "", "");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(427);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "org.apache.com:ons.io.fgleflter.NameFiletilter", "org.apache.com:ons.io.fgleflter.NameFiletilter", (String) null, "org.apache.com:ons.io.fgleflter.NameFiletilter");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(395);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "org.apache.commons.io.filefilter.NameFileFilter", "org.apache.commons.io.filefilter.NameFileFilter", "org.apache.commons.io.filefilter.NameFileFilter", "org.apache.commons.io.filefilter.NameFileFilter");
      ByteVector byteVector0 = new ByteVector(395);
      byteVector0.length = (-1025);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(395);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "org.apache.commons.io.filefilter.NameFileFilter", "org.apache.commons.io.filefilter.NameFileFilter", "org.apache.commons.io.filefilter.NameFileFilter", "org.apache.commons.io.filefilter.NameFileFilter");
      Attribute attribute0 = new Attribute("org.apache.commons.io.filefilter.NameFileFilter");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 0, "U0'kKz~o>~", "50iuR?]JfGUUQ!@7%", "50iuR?]JfGUUQ!@7%", "U0'kKz~o>~");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(395);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 395, "Zv+b`", "Zv+b`", "Zv+b`", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(392);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-985), "", "5:A`L|{.&_2J", "", "5:A`L|{.&_2J");
      Attribute attribute0 = new Attribute("K7gB{1EjM)3Bv~Z]Z");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(392);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "U0'kKz~o>~", "U0'kKz~o>~", (String) null, "U0'kKz~o>~");
      fieldWriter0.visitAnnotation("U0'kKz~o>~", true);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(112, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3027));
      String[] stringArray0 = new String[4];
      stringArray0[0] = "86&3LGm\"5`";
      stringArray0[1] = "";
      stringArray0[2] = "";
      stringArray0[3] = "";
      classWriter0.visit(256, 256, "n=\"-}E|.", "", "", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2454), "", "#RN;Pqpz", "", "86&3LGm\"5`");
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(161, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3027));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3027), "", "", "", (Object) null);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(92, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(392);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-985), "", "5:A`L|{.&_2J", "", "5:A`L|{.&_2J");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3027));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3027), "", "", "", (Object) null);
      fieldWriter0.visitAnnotation("", false);
      byte[] byteArray0 = classWriter0.toByteArray();
      assertEquals(134, byteArray0.length);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-3027));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-3027), "", "", "", (Object) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 2, "zw&af.T", "zw&af.T", "zw&af.T", "");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(392);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-985), "", "5:A`L|{.&_2J", "", "5:A`L|{.&_2J");
      fieldWriter0.visitEnd();
  }
}
