/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 09:26:12 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileWriter;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)70;
      TiffField tiffField0 = new TiffField(65101, 65101, fieldTypeShort0, 65101, 65101, byteArray0, (ByteOrder) null, 2147156935);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(65101, tiffField0.getTag());
      assertEquals(65101, tiffField0.getOffset());
      assertEquals(2147156935, tiffField0.getSortHint());
      assertEquals(65101, tiffField0.getDirectoryType());
      assertEquals(70, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-129), (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1644, (-562), fieldTypeLong0, 1644, 5126L, byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getOffset();
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-562), tiffField0.getDirectoryType());
      assertEquals(1644, tiffField0.getTag());
      assertEquals(5126, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1), ")");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)6;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 20, fieldTypeLong0, 20, 20, byteArray0, byteOrder0, 108);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-1), tiffField0.getTag());
      assertEquals(108, tiffField0.getSortHint());
      assertEquals(20, tiffField0.getDirectoryType());
      assertEquals(20, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(2146972464, "");
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte) (-16);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2120971504, 2120971504, fieldTypeByte0, 1L, (-1033L), byteArray0, byteOrder0, 1298);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValueOrArraySum();
      assertEquals(2120971504, tiffField0.getTag());
      assertEquals((-1033), tiffField0.getOffset());
      assertEquals(1298, tiffField0.getSortHint());
      assertEquals(2120971504, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50, "IjVjFOSqidofDb");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 2, fieldTypeAscii0, 50, 2, byteArray0, byteOrder0, (byte)117);
      tiffField0.getFieldTypeName();
      assertEquals(117, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50, "IjVjFOSqidofDb");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 2, fieldTypeAscii0, 50, 2, byteArray0, byteOrder0, (byte)117);
      tiffField0.getByteArrayValue();
      assertEquals(2, tiffField0.getOffset());
      assertEquals(117, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "Flash");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-5010), 0, fieldTypeRational0, (-1L), (-987L), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1), fieldTypeShort0, (-1), (-1898L), byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "'E&-HS~fb$m U");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0L, 255L, byteArray0, byteOrder0, 61);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(61, tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertTrue(boolean0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(638, " /ZOCb:0<:g1|E$n}");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)5, (byte)1, fieldTypeFloat0, 255L, 3363L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getFieldType();
      assertEquals(5, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(3363, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2136582715, 2136582715, fieldTypeByte0, 2136582715, 28L, byteArray0, byteOrder0, (byte)121);
      tiffField0.getValue();
      assertEquals(121, tiffField0.getSortHint());
      assertEquals(2136582715, tiffField0.getDirectoryType());
      assertEquals(2136582715, tiffField0.getTag());
      assertEquals(28, tiffField0.getOffset());
      assertEquals(2136582715L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-129), (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1644, (-562), fieldTypeLong0, 1644, 5126L, byteArray0, byteOrder0, (byte) (-1));
      tiffField0.getTagInfo();
      assertEquals(1644, tiffField0.getTag());
      assertEquals((-562), tiffField0.getDirectoryType());
      assertEquals(5126, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(2787, (String) null);
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4633), 2787, fieldTypeLong0, (-4633), (-959L), byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getTag();
      assertEquals((-4633), int0);
      assertEquals(2787, tiffField0.getDirectoryType());
      assertEquals((-959), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(638, " /ZOCb:0<:g1|E$n}");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)5, (byte)1, fieldTypeFloat0, 255L, 3363L, byteArray0, byteOrder0, (byte)1);
      fieldTypeFloat0.getValue(tiffField0);
      assertEquals(5, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(3363, tiffField0.getOffset());
      assertEquals(255L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50, "IjVjFOSqidofDb");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 2, fieldTypeAscii0, 50, 2, byteArray0, byteOrder0, (byte)117);
      tiffField0.getBytesLength();
      assertEquals(2, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(117, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(65101, 65101, fieldTypeShort0, 65101, 65101, byteArray0, (ByteOrder) null, 2147156935);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [S cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1, "ExtraCameraProfiles");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(4717, 400, fieldTypeLong0, 255L, 400, byteArray0, byteOrder0, (-980));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1), ")");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), 20, fieldTypeLong0, 20, 20, byteArray0, byteOrder0, 108);
      tiffField0.getIntValueOrArraySum();
      assertEquals(20, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getTag());
      assertEquals(108, tiffField0.getSortHint());
      assertEquals(20L, tiffField0.getCount());
      assertEquals(20, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1966, "M|w");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = fieldTypeAscii0.writeData("M|w", byteOrder0);
      TiffField tiffField0 = new TiffField(0, (-2403), fieldTypeAscii0, 96L, (-4256L), byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: M|w for: 0 (0x0: GPSVersionID): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)60;
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-3633), (-3633), fieldTypeRational0, 384L, 4L, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-3633), tiffField0.getDirectoryType());
      assertEquals(384L, tiffField0.getCount());
      assertEquals((-3633), tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(93, "-?|M}wv");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(37386, 93, fieldTypeByte0, 37386, 93, byteArray0, byteOrder0, 37383);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@36c923c0 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2215, 2215, fieldTypeDouble0, 1592L, (-2059L), byteArray0, byteOrder0, (byte)119);
      tiffField0.getDoubleArrayValue();
      assertEquals(119, tiffField0.getSortHint());
      assertEquals(2215, tiffField0.getDirectoryType());
      assertEquals(2215, tiffField0.getTag());
      assertEquals((-2059), tiffField0.getOffset());
      assertEquals(1592L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(638, " /ZOCb:0<:g1|E$n}");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)5, (byte)1, fieldTypeFloat0, 255L, 3363L, byteArray0, byteOrder0, (byte)1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(3363, tiffField0.getOffset());
      assertEquals(5, tiffField0.getTag());
      assertEquals(255L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-1717986917), "Expected String value(");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(161, 68, fieldTypeLong0, 161, 161, byteArray0, byteOrder0, (-80));
      tiffField0.getDoubleArrayValue();
      assertEquals(68, tiffField0.getDirectoryType());
      assertEquals(161L, tiffField0.getCount());
      assertEquals(161, tiffField0.getTag());
      assertEquals((-80), tiffField0.getSortHint());
      assertEquals(161, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2219, 2219, fieldTypeRational0, 2219, 2219, byteArray0, byteOrder0, (-4704));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(2219L, tiffField0.getCount());
      assertEquals(2219, tiffField0.getTag());
      assertEquals(2219, tiffField0.getDirectoryType());
      assertEquals((-4704), tiffField0.getSortHint());
      assertEquals(2219, tiffField0.getOffset());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1250), (-1250), fieldTypeShort0, 1L, 1926L, byteArray0, byteOrder0, (-1610612735));
      tiffField0.getDoubleArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-1250), tiffField0.getTag());
      assertEquals((-1610612735), tiffField0.getSortHint());
      assertEquals((-1250), tiffField0.getDirectoryType());
      assertEquals(1926, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(65101, 65101, fieldTypeShort0, 65101, 65101, byteArray0, (ByteOrder) null, 2147156935);
      tiffField0.getDoubleArrayValue();
      assertEquals(65101, tiffField0.getTag());
      assertEquals(65101, tiffField0.getOffset());
      assertEquals(2147156935, tiffField0.getSortHint());
      assertEquals(65101, tiffField0.getDirectoryType());
      assertEquals(65101L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2143528797, 1940, fieldTypeLong0, 6L, (-1834L), byteArray0, byteOrder0, 2145051616);
      tiffField0.getIntArrayValue();
      assertEquals(2143528797, tiffField0.getTag());
      assertEquals(2145051616, tiffField0.getSortHint());
      assertEquals(6L, tiffField0.getCount());
      assertEquals(1940, tiffField0.getDirectoryType());
      assertEquals((-1834), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2146399607, "");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2417), (-2417), fieldTypeShort0, 445L, 2146399607, byteArray0, (ByteOrder) null, (byte)96);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals((-2417), tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(96, tiffField0.getSortHint());
      assertEquals((-2417), tiffField0.getTag());
      assertEquals(445L, tiffField0.getCount());
      assertEquals(2146399607, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)60;
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-3633), (-3633), fieldTypeRational0, 384L, 4L, byteArray0, byteOrder0, 0);
      tiffField0.getIntArrayValue();
      assertEquals((-3633), tiffField0.getTag());
      assertEquals(384L, tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-3633), tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 646);
      tiffField0.getIntArrayValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(646, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1159, 1159, fieldTypeFloat0, 4204L, (-722L), byteArray0, byteOrder0, (byte) (-47));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@7796513c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1088, ";WRn6gp4q.0p  {@Q5\"");
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-104);
      byteArray0[1] = (byte) (-14);
      byteArray0[2] = (byte) (-30);
      byteArray0[3] = (byte) (-121);
      TiffField tiffField0 = new TiffField(3126, 2832, fieldTypeAscii0, 2832, 1088, byteArray0, (ByteOrder) null, (byte)115);
      String string0 = tiffField0.getStringValue();
      assertNotNull(string0);
      assertEquals(1088, tiffField0.getOffset());
      assertEquals(2832, tiffField0.getDirectoryType());
      assertEquals(115, tiffField0.getSortHint());
      assertEquals(3126, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2136582715, 2136582715, fieldTypeByte0, 2136582715, 28L, byteArray0, byteOrder0, (byte)121);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [B@7dfd4fc0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2136582715, 2136582715, fieldTypeByte0, 2136582715, 28L, byteArray0, byteOrder0, (byte)121);
      String string0 = tiffField0.getTagName();
      assertEquals(121, tiffField0.getSortHint());
      assertEquals(2136582715, tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getOffset());
      assertEquals("Unknown Tag (0x7f59aa3b)", string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(333, "4-");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(333, 266, fieldTypeLong0, 333, 782L, byteArray0, byteOrder0, 685);
      String string0 = tiffField0.getTagName();
      assertEquals("InkNames", string0);
      assertEquals(685, tiffField0.getSortHint());
      assertEquals(782, tiffField0.getOffset());
      assertEquals(333, tiffField0.getTag());
      assertEquals(266, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeRational0, (-669L), (-1), byteArray0, byteOrder0, (byte)50);
      MockFileWriter mockFileWriter0 = new MockFileWriter(" (");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileWriter0, false);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, " (");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1159, 1159, fieldTypeFloat0, 4204L, (-722L), byteArray0, byteOrder0, (byte) (-47));
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(1159, tiffField0.getDirectoryType());
      assertEquals((-722), tiffField0.getOffset());
      assertEquals(1159, tiffField0.getTag());
      assertEquals((-47), tiffField0.getSortHint());
      assertEquals(4204L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(48321, (-2105), fieldTypeDouble0, 48321, (-2105), byteArray0, byteOrder0, 23);
      MockPrintStream mockPrintStream0 = new MockPrintStream("T)d}");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockPrintStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(48321L, tiffField0.getCount());
      assertEquals((-2105), tiffField0.getDirectoryType());
      assertEquals(48321, tiffField0.getTag());
      assertEquals(23, tiffField0.getSortHint());
      assertEquals((-2105), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2136582715, 2136582715, fieldTypeByte0, 2136582715, 28L, byteArray0, byteOrder0, (byte)121);
      String string0 = tiffField0.toString();
      assertEquals(2136582715, tiffField0.getDirectoryType());
      assertEquals(121, tiffField0.getSortHint());
      assertEquals("2136582715 (0x7f59aa3b: Unknown Tag): 0, 0, 0, 0, 0, 0 (2136582715 Byte)", string0);
      assertEquals(28, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(2145051616, 2145051616, fieldTypeDouble0, (-2147483648L), 2145051616, byteArray0, byteOrder0, (-925));
      assertEquals(0, tiffField0.getBytesLength());
      
      tiffField0.dump();
      assertEquals(2145051616, tiffField0.getTag());
      assertEquals((-2147483648L), tiffField0.getCount());
      assertEquals(2145051616, tiffField0.getOffset());
      assertEquals((-925), tiffField0.getSortHint());
      assertEquals(2145051616, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2146399607, "");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2417), (-2417), fieldTypeShort0, 445L, 2146399607, byteArray0, (ByteOrder) null, (byte)96);
      String string0 = tiffField0.toString();
      assertEquals((-2417), tiffField0.getDirectoryType());
      assertEquals(2146399607, tiffField0.getOffset());
      assertEquals("-2417 (0xfffff68f: Unknown Tag): 0, 0 (445 )", string0);
      assertEquals(890, tiffField0.getBytesLength());
      assertEquals(96, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1966, "M|w");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = fieldTypeAscii0.writeData("M|w", byteOrder0);
      TiffField tiffField0 = new TiffField(0, (-2403), fieldTypeAscii0, 96L, (-4256L), byteArray0, byteOrder0, 0);
      tiffField0.dump();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(96, tiffField0.getBytesLength());
      assertEquals((-2403), tiffField0.getDirectoryType());
      assertEquals(96L, tiffField0.getCount());
      assertEquals((-4256), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(99, 99, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, 60);
      tiffField0.dump();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(60, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(99, tiffField0.getDirectoryType());
      assertEquals(99, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2146399607, "");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2417), (-2417), fieldTypeShort0, 445L, 2146399607, byteArray0, (ByteOrder) null, (byte)96);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2146963298, (byte)119);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: ", string0);
      assertEquals(96, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(445L, tiffField0.getCount());
      assertEquals((-2417), tiffField0.getTag());
      assertEquals((-2417), tiffField0.getDirectoryType());
      assertEquals(2146399607, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[9];
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(99, 99, fieldTypeByte0, 1L, 1L, byteArray0, byteOrder0, 60);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(99, tiffField0.getTag());
      assertEquals(99, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(60, tiffField0.getSortHint());
      assertNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-129), (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1644, (-562), fieldTypeLong0, 1644, 5126L, byteArray0, byteOrder0, (byte) (-1));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(5126L, tiffElement0.offset);
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals((-562), tiffField0.getDirectoryType());
      assertEquals(1644L, tiffField0.getCount());
      assertNotNull(tiffElement0);
      assertEquals(1644, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2146399607, "");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField((-2417), (-2417), fieldTypeShort0, 445L, 2146399607, byteArray0, (ByteOrder) null, (byte)96);
      tiffField0.getFieldTypeName();
      assertEquals(445L, tiffField0.getCount());
      assertEquals(2146399607, tiffField0.getOffset());
      assertEquals(96, tiffField0.getSortHint());
      assertEquals((-2417), tiffField0.getDirectoryType());
      assertEquals((-2417), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2143528797, 1940, fieldTypeLong0, 6L, (-1834L), byteArray0, byteOrder0, 2145051616);
      int int0 = tiffField0.getOffset();
      assertEquals(2145051616, tiffField0.getSortHint());
      assertEquals((-1834), int0);
      assertEquals(1940, tiffField0.getDirectoryType());
      assertEquals(2143528797, tiffField0.getTag());
      assertEquals(24, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(26, (-1717986917), fieldTypeByte0, 0L, 1773L, byteArray0, byteOrder0, (byte) (-101));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(26, tiffField0.getTag());
      assertEquals(1773, tiffField0.getOffset());
      assertEquals((-101), tiffField0.getSortHint());
      assertEquals((-1717986917), int0);
      assertTrue(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1122, 120, fieldTypeLong0, 631L, 1886L, byteArray0, byteOrder0, 2537);
      tiffField0.dump();
      assertEquals(1122, tiffField0.getTag());
      assertEquals(631L, tiffField0.getCount());
      assertEquals(2524, tiffField0.getBytesLength());
      assertEquals(120, tiffField0.getDirectoryType());
      assertEquals(1886, tiffField0.getOffset());
      assertEquals(2537, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(2787, (String) null);
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4633), 2787, fieldTypeLong0, (-4633), (-959L), byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getSortHint();
      assertEquals(2787, tiffField0.getDirectoryType());
      assertEquals((-18532), tiffField0.getBytesLength());
      assertEquals((-4633), tiffField0.getTag());
      assertEquals((-959), tiffField0.getOffset());
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(503, (String) null);
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)48, (-1717986917), fieldTypeShort0.SRATIONAL, (byte)48, (-1717986917), byteArray0, byteOrder0, 3645);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-1717986917), tiffField0.getDirectoryType());
      assertEquals((-1717986917), tiffField0.getOffset());
      assertEquals("48 (0x30: Unknown Tag): ", string0);
      assertEquals(3645, tiffField0.getSortHint());
      assertEquals(48L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50, "IjVjFOSqidofDb");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 2, fieldTypeAscii0, 50, 2, byteArray0, byteOrder0, (byte)117);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("JPEGACTables");
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(2, tiffField0.getOffset());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(117, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getBytesLength());
      assertEquals(50L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-129), (String) null);
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1644, (-562), fieldTypeLong0, 1644, 5126L, byteArray0, byteOrder0, (byte) (-1));
      String string0 = tiffField0.getValueDescription();
      assertEquals(6576, tiffField0.getBytesLength());
      assertEquals((-562), tiffField0.getDirectoryType());
      assertEquals(5126, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(1644, tiffField0.getTag());
      assertEquals(1644L, tiffField0.getCount());
      assertEquals((-1), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(50, "IjVjFOSqidofDb");
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 2, fieldTypeAscii0, 50, 2, byteArray0, byteOrder0, (byte)117);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2, (byte) (-1));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(2, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(50L, tiffField0.getCount());
      assertNull(string0);
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals(117, tiffField0.getSortHint());
  }
}
