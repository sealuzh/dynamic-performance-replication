/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 08:52:37 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.CharArrayWriter;
import java.io.File;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)85;
      byteArray0[4] = (byte) (-29);
      TiffField tiffField0 = new TiffField((-1069), (byte)85, fieldTypeByte0.SRATIONAL, (byte)85, 90L, byteArray0, byteOrder0, 2615);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-2), int0);
      assertEquals(2615, tiffField0.getSortHint());
      assertEquals(85, tiffField0.getDirectoryType());
      assertEquals(90, tiffField0.getOffset());
      assertEquals((-1069), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      Float float0 = new Float((double) 21L);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = fieldTypeFloat0.writeData(float0, byteOrder0);
      TiffField tiffField0 = new TiffField(695, (-3542), fieldTypeFloat0, 1L, 21L, byteArray0, (ByteOrder) null, (-3542));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(21, tiffField0.getOffset());
      assertNull(tiffElement0);
      assertEquals((-3542), tiffField0.getDirectoryType());
      assertEquals(695, tiffField0.getTag());
      assertEquals((-3542), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)107, (-115), fieldTypeShort0.SLONG, (byte)107, (-115), byteArray0, byteOrder0, (byte)107);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(107, tiffField0.getTag());
      assertEquals((-115), tiffField0.getOffset());
      assertEquals((-115), tiffField0.getDirectoryType());
      assertEquals(107, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(28, (-1452), fieldTypeDouble0, 28, 0L, byteArray0, byteOrder0, (-407));
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1452), tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-407), tiffField0.getSortHint());
      assertEquals(28, tagInfo0.tag);
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(26, 26, fieldTypeByte0, (-911L), 3582L, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getTag();
      assertEquals(3582, tiffField0.getOffset());
      assertEquals(26, int0);
      assertEquals(26, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-106), (byte) (-106), fieldTypeLong0.DOUBLE, (byte)55, 33, byteArray0, byteOrder0, (-5417));
      int int0 = tiffField0.getTag();
      assertEquals((-5417), tiffField0.getSortHint());
      assertEquals((-106), tiffField0.getDirectoryType());
      assertEquals((-106), int0);
      assertEquals(33, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)90;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(65535, 2090, fieldTypeAscii0, 1211L, 1211L, byteArray0, byteOrder0, 2090);
      String string0 = tiffField0.getStringValue();
      assertEquals(2090, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(1211, tiffField0.getOffset());
      assertEquals(2090, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50730, (-2558), (FieldType) null, 50730, (-2558), byteArray0, byteOrder0, (byte)11);
      int int0 = tiffField0.getSortHint();
      assertEquals(11, int0);
      assertEquals((-2558), tiffField0.getOffset());
      assertEquals((-2558), tiffField0.getDirectoryType());
      assertEquals(50730, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (-1856), fieldTypeShort0.DOUBLE, (-1856), 2868L, (byte[]) null, byteOrder0, (-1856));
      int int0 = tiffField0.getSortHint();
      assertEquals(2868, tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1856), int0);
      assertEquals((-1856), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(197, 197, fieldTypeRational0, 197, 0L, byteArray0, byteOrder0, 234);
      int int0 = tiffField0.getOffset();
      assertEquals(197, tiffField0.getDirectoryType());
      assertEquals(234, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(197, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(2321, (byte)85, fieldTypeRational0, 90L, 3419L, byteArray0, byteOrder0, 1886);
      int int0 = tiffField0.getOffset();
      assertEquals(2321, tiffField0.getTag());
      assertEquals(1886, tiffField0.getSortHint());
      assertEquals(3419, int0);
      assertEquals(85, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)50;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(242, 1, fieldTypeShort0, 242, 1, byteArray0, byteOrder0, 3859);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(3859, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(12800, int0);
      assertEquals(242, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-5), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)13;
      TiffField tiffField0 = new TiffField((-1388), (byte)13, fieldTypeByte0, 1L, (-3311L), byteArray0, byteOrder0, (byte)13);
      tiffField0.getIntValue();
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals((-1388), tiffField0.getTag());
      assertEquals((-3311), tiffField0.getOffset());
      assertEquals(13, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      byteArray0[1] = (byte) (-28);
      TiffField tiffField0 = new TiffField(7, 50, fieldTypeShort0, 1L, 1211L, byteArray0, byteOrder0, (byte)12);
      tiffField0.getIntValue();
      assertEquals(7, tiffField0.getTag());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(1211, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(179, (String) null);
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 3978, fieldTypeByte0, 0L, (-8374L), byteArray0, byteOrder0, (-1431655764));
      tiffField0.getFieldTypeName();
      assertEquals((-1431655764), tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
      assertEquals(3978, tiffField0.getDirectoryType());
      assertEquals((-8374), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[22];
      TiffField tiffField0 = new TiffField(536, 0, fieldTypeByte0, 279L, 279L, byteArray0, byteOrder0, 1697);
      tiffField0.getFieldTypeName();
      assertEquals(279, tiffField0.getOffset());
      assertEquals(1697, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(536, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-492), 1800, (FieldType) null, 1385L, 1800, byteArray0, byteOrder0, (byte) (-19));
      tiffField0.getFieldType();
      assertEquals((-492), tiffField0.getTag());
      assertEquals(1800, tiffField0.getOffset());
      assertEquals((-19), tiffField0.getSortHint());
      assertEquals(1800, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)0, "");
      TiffField tiffField0 = new TiffField(19, (byte)55, fieldTypeDouble0, 510L, (byte)55, byteArray0, byteOrder0, (byte)55);
      tiffField0.getFieldType();
      assertEquals(19, tiffField0.getTag());
      assertEquals(55, tiffField0.getSortHint());
      assertEquals(55, tiffField0.getOffset());
      assertEquals(55, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-16), "j<Q#[0$.2*GnneB");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1732), 50734, fieldTypeAscii0, (-1732), 0L, byteArray0, byteOrder0, (-1732));
      tiffField0.getFieldType();
      assertEquals(50734, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1732), tiffField0.getTag());
      assertEquals((-1732), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte)87;
      char[] charArray0 = new char[1];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 1L, (-1L), byteArray0, byteOrder0, 1115);
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1115, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-1);
      TiffField tiffField0 = new TiffField(3714, 2130303778, fieldTypeShort0, 1L, 2130303778, byteArray0, byteOrder0, (-1086));
      tiffField0.getDoubleValue();
      assertEquals((-1086), tiffField0.getSortHint());
      assertEquals(3714, tiffField0.getTag());
      assertEquals(2130303778, tiffField0.getDirectoryType());
      assertEquals(2130303778, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeByte0, 0, 4399L, byteArray0, byteOrder0, 50);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(50, int0);
      assertEquals(4399, tiffField0.getOffset());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2924, (-1), fieldTypeByte0.FLOAT, (-1), (-2837L), (byte[]) null, byteOrder0, 657);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(657, tiffField0.getSortHint());
      assertEquals((-1), int0);
      assertEquals(2924, tiffField0.getTag());
      assertEquals((-2837), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[7];
      CharBuffer charBuffer0 = CharBuffer.allocate((byte)12);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 73, fieldTypeByte0, 0L, 0, byteArray0, byteOrder0, 50737);
      tiffField0.getCount();
      assertEquals(50737, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(73, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-16), "j<Q#[0$.2*GnneB");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-16), 2090, fieldTypeAscii0, 1262L, (-1152L), byteArray0, byteOrder0, 2090);
      tiffField0.getCount();
      assertEquals((-16), tiffField0.getTag());
      assertEquals((-1152), tiffField0.getOffset());
      assertEquals(2090, tiffField0.getSortHint());
      assertEquals(2090, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(55, 2763, fieldTypeByte0, 676L, 2763, byteArray0, byteOrder0, (byte)41);
      tiffField0.getBytesLength();
      assertEquals(2763, tiffField0.getOffset());
      assertEquals(55, tiffField0.getTag());
      assertEquals(41, tiffField0.getSortHint());
      assertEquals(2763, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(119, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)12, (-368), fieldTypeAscii0, (-368), 2090L, byteArray0, byteOrder0, (-2216));
      tiffField0.getBytesLength();
      assertEquals((-368), tiffField0.getDirectoryType());
      assertEquals(2090, tiffField0.getOffset());
      assertEquals((-2216), tiffField0.getSortHint());
      assertEquals(12, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1531, (byte)86, fieldTypeLong0, (byte) (-50), (byte) (-76), byteArray0, byteOrder0, 3809);
      tiffField0.getByteOrder();
      assertEquals(1531, tiffField0.getTag());
      assertEquals((-76), tiffField0.getOffset());
      assertEquals(3809, tiffField0.getSortHint());
      assertEquals(86, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-5), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField((-1388), (byte)13, fieldTypeByte0, 1L, (-3311L), byteArray0, byteOrder0, (byte)13);
      tiffField0.getByteArrayValue();
      assertEquals(13, tiffField0.getDirectoryType());
      assertEquals((-1388), tiffField0.getTag());
      assertEquals((-3311), tiffField0.getOffset());
      assertEquals(13, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-56), ": =\"a\"y}.U2$UWd");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)15, 2, fieldTypeShort0, 695L, (byte)6, byteArray0, (ByteOrder) null, (byte)4);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(": =\"a\"y}.U2$UWd");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(15, tiffField0.getTag());
      assertEquals(4, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getOffset());
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-65), (byte)107, fieldTypeShort0.IFD, 255L, 1940L, byteArray0, byteOrder0, (-3917));
      CharArrayWriter charArrayWriter0 = new CharArrayWriter(1468);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(charArrayWriter0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(42, charArrayWriter0.size());
      assertEquals("-65 (0xffffffbf: Unknown Tag):  (255 IFD)\n", charArrayWriter0.toString());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37379, 1, fieldTypeShort0, (-1825L), 1723L, byteArray0, byteOrder0, (-864));
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, 0, 1L, byteArray0, byteOrder0, (byte) (-6));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(0, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, 497, fieldTypeFloat0, (-1L), 1L, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1476), (-1476), (FieldType) null, (-174L), 0L, byteArray0, byteOrder0, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-492), 1800, (FieldType) null, 1385L, 1800, byteArray0, byteOrder0, (byte) (-19));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50, fieldTypeByte0, 0, 4399L, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-16), "j<Q#[0$.2*GnneB");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1732), 50734, fieldTypeAscii0, (-1732), 0L, byteArray0, byteOrder0, (-1732));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[219];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50738, 50738, fieldTypeDouble0.SLONG, 50738, 50738, byteArray0, byteOrder0, 50738);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(150, (-1), fieldTypeByte0, (-2078L), (byte) (-86), byteArray0, byteOrder0, 1588);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-82), (-1), fieldTypeRational0, (-82), 702L, byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-659), (-659), fieldTypeDouble0, (-659), 255L, byteArray0, byteOrder0, (byte) (-1));
      File file0 = MockFile.createTempFile("$ kn)E", "$ kn)E");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(file0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      CharBuffer charBuffer0 = CharBuffer.allocate(33);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeLong0, (byte)12, (byte)0, byteArray0, byteOrder0, (-1));
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(6, tiffField0.getTag());
      assertEquals(6, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(2486, 2486, fieldTypeShort0, 1274L, (-950L), byteArray0, (ByteOrder) null, (-2040109464));
      tiffField0.getByteOrder();
      assertEquals((-2040109464), tiffField0.getSortHint());
      assertEquals(2486, tiffField0.getDirectoryType());
      assertEquals((-950), tiffField0.getOffset());
      assertEquals(2486, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50937, 50937, fieldTypeAscii0, 0L, (-3366L), byteArray0, byteOrder0, 993);
      tiffField0.getByteArrayValue();
      assertEquals(993, tiffField0.getSortHint());
      assertEquals(50937, tiffField0.getTag());
      assertEquals((-3366), tiffField0.getOffset());
      assertEquals(50937, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(738, (byte)0, fieldTypeAscii0, (-5535L), (byte) (-127), byteArray0, byteOrder0, 65535);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-127), tiffField0.getOffset());
      assertEquals(738, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0L, 0, (byte[]) null, byteOrder0, 711);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(711, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, (byte[]) null, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-549), (-549), fieldTypeShort0, 0L, 0L, byteArray0, byteOrder0, (byte) (-63));
      tiffField0.getValue();
      assertEquals((-63), tiffField0.getSortHint());
      assertEquals((-549), tiffField0.getDirectoryType());
      assertEquals((-549), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1531, (byte)86, fieldTypeLong0, (byte) (-50), (byte) (-76), byteArray0, byteOrder0, 3809);
      int int0 = tiffField0.getOffset();
      assertEquals(1531, tiffField0.getTag());
      assertEquals(3809, tiffField0.getSortHint());
      assertEquals(86, tiffField0.getDirectoryType());
      assertEquals((-76), int0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, (byte[]) null, byteOrder0, 0);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-1), tagInfo0.tag);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, (byte[]) null, byteOrder0, 0);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      TiffField tiffField0 = new TiffField(738, (byte)0, fieldTypeAscii0, (-5535L), (byte) (-127), byteArray0, byteOrder0, 65535);
      tiffField0.getCount();
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(738, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-127), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, (byte[]) null, byteOrder0, 0);
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)50, 1, fieldTypeShort0, 1600L, 625L, byteArray0, byteOrder0, 752);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(752, tiffField0.getSortHint());
      assertEquals(625, tiffField0.getOffset());
      assertEquals("50 (0x32: Unknown Tag): ", string0);
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1, 805, fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(805, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(2128970857, 372, fieldTypeLong0, (byte)1, 372, byteArray0, byteOrder0, 2128970857);
      tiffField0.getIntValue();
      assertEquals(372, tiffField0.getDirectoryType());
      assertEquals(2128970857, tiffField0.getSortHint());
      assertEquals(2128970857, tiffField0.getTag());
      assertEquals(372, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(281, 2524, fieldTypeLong0, 255L, 255L, byteArray0, byteOrder0, (byte) (-110));
      tiffField0.getIntValueOrArraySum();
      assertEquals(2524, tiffField0.getDirectoryType());
      assertEquals((-110), tiffField0.getSortHint());
      assertEquals(255, tiffField0.getOffset());
      assertEquals(281, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(2090, (-2050), fieldTypeByte0, 38L, 2090, byteArray0, byteOrder0, 2145777942);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@2077a60e for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-798), (-798), fieldTypeRational0.SBYTE, 1L, 0L, byteArray0, byteOrder0, 14);
      tiffField0.getIntValueOrArraySum();
      assertEquals(14, tiffField0.getSortHint());
      assertEquals((-798), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-798), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3043, 3043, fieldTypeDouble0, 3043, 3043, byteArray0, byteOrder0, (byte) (-113));
      tiffField0.getDoubleArrayValue();
      assertEquals(3043, tiffField0.getOffset());
      assertEquals((-113), tiffField0.getSortHint());
      assertEquals(3043, tiffField0.getDirectoryType());
      assertEquals(3043, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(50, 0, fieldTypeFloat0, 2317L, (-2147483648L), byteArray0, byteOrder0, (-1055));
      tiffField0.getDoubleArrayValue();
      assertEquals(Integer.MIN_VALUE, tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-1055), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(0, 65535, fieldTypeLong0, 1482L, 0, byteArray0, byteOrder0, 2146243045);
      tiffField0.getDoubleArrayValue();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(2146243045, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-134), " (0x");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1002), 390, fieldTypeShort0, 1311L, (-1002), byteArray0, byteOrder0, 270);
      tiffField0.getDoubleArrayValue();
      assertEquals(270, tiffField0.getSortHint());
      assertEquals((-1002), tiffField0.getOffset());
      assertEquals((-1002), tiffField0.getTag());
      assertEquals(390, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 50722, fieldTypeByte0, 0L, 50722, byteArray0, byteOrder0, (byte)1);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@547514c4 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(1426);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1426, 0, fieldTypeByte0, 1L, (byte)1, byteArray0, byteOrder0, 3);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(1426, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3706, 50727, fieldTypeAscii0.SRATIONAL, 311L, 2108L, byteArray0, byteOrder0, 50727);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(50727, tiffField0.getSortHint());
      assertEquals(50727, tiffField0.getDirectoryType());
      assertEquals(3706, tiffField0.getTag());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(2108, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((byte)0, 6, fieldTypeLong0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-134), " (0x");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1002), 390, fieldTypeShort0, 1311L, (-1002), byteArray0, byteOrder0, 270);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(270, tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0, 0}, intArray0);
      assertEquals(390, tiffField0.getDirectoryType());
      assertEquals((-1002), tiffField0.getOffset());
      assertEquals((-1002), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((byte)1, "");
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)1;
      TiffField tiffField0 = new TiffField(1179, 606, fieldTypeRational0, 7552L, 6, byteArray0, byteOrder0, (byte)1);
      tiffField0.getIntArrayValue();
      assertEquals(1179, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(606, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField((byte) (-1), (-1236), fieldTypeByte0, 1L, 0, byteArray0, byteOrder0, (-437));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-1), tiffField0.getTag());
      assertEquals((-1236), tiffField0.getDirectoryType());
      assertEquals((-437), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      byte[] byteArray0 = new byte[69];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 294L, 65535, byteArray0, byteOrder0, (-1574));
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@1014abee for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(119, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-19), 3, fieldTypeAscii0, 4L, (byte) (-65), byteArray0, byteOrder0, 420);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [Ljava.lang.String;@3bef1b44
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      byte[] byteArray0 = new byte[46];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(812, 812, fieldTypeAscii0, (byte)0, (byte)60, byteArray0, byteOrder0, 3);
      assertEquals(0, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertEquals(3, tiffField0.getSortHint());
      assertEquals(60, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(812, tiffField0.getDirectoryType());
      assertEquals(812, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 1235, fieldTypeShort0, 1235, 1235, (byte[]) null, byteOrder0, 0);
      String string0 = tiffField0.getTagName();
      assertEquals(1235, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x0)", string0);
      assertEquals(1235, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48325, 33, fieldTypeLong0, (byte) (-108), 0L, byteArray0, byteOrder0, (byte)32);
      String string0 = tiffField0.getTagName();
      assertEquals("AlphaDataDiscard", string0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(48325, tiffField0.getTag());
      assertEquals(32, tiffField0.getSortHint());
      assertEquals((-432), tiffField0.getBytesLength());
      assertEquals(33, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(21, (-3142), (FieldType) null, 2779L, 1031L, byteArray0, byteOrder0, 33452);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, ",XDqY8?^j$");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[95];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(67, 67, fieldTypeDouble0.FLOAT, 67, 67, byteArray0, byteOrder0, 67);
      String string0 = tiffField0.toString();
      assertEquals(67, tiffField0.getDirectoryType());
      assertEquals(67, tiffField0.getSortHint());
      assertEquals("67 (0x43: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 (67 Float)", string0);
      assertEquals(67, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[69];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeByte0, 294L, 65535, byteArray0, byteOrder0, (-1574));
      String string0 = tiffField0.toString();
      assertEquals("65535 (0xffff: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (69) (294 Byte)", string0);
      assertEquals((-1574), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-360), "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(50, 1227, fieldTypeByte0, 1227, 0L, byteArray0, byteOrder0, 11);
      String string0 = tiffField0.toString();
      assertEquals(0, tiffField0.getOffset());
      assertEquals("50 (0x32: Unknown Tag): 0, 0 (1227 )", string0);
      assertEquals(1227, tiffField0.getDirectoryType());
      assertEquals(11, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      byte[] byteArray0 = new byte[237];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(7, 7, fieldTypeDouble0.FLOAT, 1185L, 7, byteArray0, byteOrder0, 264);
      tiffField0.dump();
      assertEquals(1185L, tiffField0.getCount());
      assertEquals(7, tiffField0.getOffset());
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getTag());
      assertEquals(264, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      byte[] byteArray0 = new byte[233];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(28, 28, fieldTypeDouble0, 28, 28, byteArray0, byteOrder0, 28);
      tiffField0.dump();
      assertEquals(28, tiffField0.getTag());
      assertEquals(28, tiffField0.getSortHint());
      assertEquals(28L, tiffField0.getCount());
      assertEquals(28, tiffField0.getDirectoryType());
      assertEquals(28, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      byte[] byteArray0 = new byte[219];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50738, 50738, fieldTypeDouble0.SLONG, 50738, 50738, byteArray0, byteOrder0, 50738);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50738L, tiffField0.getCount());
      assertNotNull(string0);
      assertEquals(50738, tiffField0.getTag());
      assertEquals(50738, tiffField0.getDirectoryType());
      assertEquals(50738, tiffField0.getSortHint());
      assertEquals(50738, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      byte[] byteArray0 = new byte[86];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(3, (byte)60, fieldTypeAscii0, 2147483647L, 4L, byteArray0, byteOrder0, (byte)60);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(60, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(Integer.MAX_VALUE, tiffField0.getBytesLength());
      assertEquals(60, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[30];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((byte)13, 897, fieldTypeAscii0, 2060L, (byte)13, byteArray0, byteOrder0, (-801));
      tiffField0.toString();
      assertEquals(897, tiffField0.getDirectoryType());
      assertEquals((-801), tiffField0.getSortHint());
      assertEquals(2060L, tiffField0.getCount());
      assertEquals(13, tiffField0.getTag());
      assertEquals(2060, tiffField0.getBytesLength());
      assertEquals(13, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(119, "");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)14;
      byteArray0[1] = (byte)50;
      byteArray0[2] = (byte) (-87);
      TiffField tiffField0 = new TiffField(0, 133, fieldTypeAscii0, 4L, 0, byteArray0, byteOrder0, 0);
      tiffField0.toString();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(133, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(4L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(1, (byte)19, fieldTypeLong0, 1, 455L, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(19, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(455, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(48325, 33, fieldTypeLong0, (byte) (-108), 0L, byteArray0, byteOrder0, (byte)32);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getOffset());
      assertEquals(33, tiffField0.getDirectoryType());
      assertEquals((-432), tiffField0.getBytesLength());
      assertEquals(48325, tiffField0.getTag());
      assertEquals(32, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[5];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-1), (-1), fieldTypeLong0, (-1), 4L, byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-1934), (-1934));
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(0, tiffField0.getSortHint());
      assertNull(string0);
      assertEquals((-1), tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertTrue(tiffField0.isLocalValue());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(0, "");
      byte[] byteArray0 = new byte[4];
      char[] charArray0 = new char[9];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, (-2103), fieldTypeByte0, 1050L, 50722, byteArray0, byteOrder0, (-1));
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(50722, 50722);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals("OversizeValueElement, tag: GPSVersionID, fieldType: ", string0);
      assertEquals(50722, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(1050, tiffField0.getBytesLength());
      assertEquals((-2103), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, (byte[]) null, byteOrder0, 0);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(2145215977, 2122799927, fieldTypeShort0, 0, 2122799927, (byte[]) null, (ByteOrder) null, (-355));
      tiffField0.getFieldTypeName();
      assertEquals((-355), tiffField0.getSortHint());
      assertEquals(2122799927, tiffField0.getDirectoryType());
      assertEquals(2122799927, tiffField0.getOffset());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(2145215977, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0, 0, (byte[]) null, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(28, (-1452), fieldTypeDouble0, 28, 0L, byteArray0, byteOrder0, (-407));
      tiffField0.dump();
      assertEquals(28L, tiffField0.getCount());
      assertEquals((-407), tiffField0.getSortHint());
      assertEquals(28, tiffField0.getTag());
      assertEquals((-1452), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      byte[] byteArray0 = new byte[112];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2077, 2077, fieldTypeDouble0.SSHORT, 2187L, 2187L, byteArray0, byteOrder0, 2077);
      tiffField0.dump();
      assertEquals(2077, tiffField0.getDirectoryType());
      assertEquals(2187, tiffField0.getOffset());
      assertEquals(2187L, tiffField0.getCount());
      assertEquals(4374, tiffField0.getBytesLength());
      assertEquals(2077, tiffField0.getTag());
      assertEquals(2077, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-16), "j<Q#[0$.2*GnneB");
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-16), 2090, fieldTypeAscii0, 1211L, (-1152L), byteArray0, byteOrder0, 2090);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-1152L), tiffElement0.offset);
      assertEquals(2090, tiffField0.getDirectoryType());
      assertEquals(2090, tiffField0.getSortHint());
      assertEquals((-16), tiffField0.getTag());
      assertNotNull(tiffElement0);
  }
}
