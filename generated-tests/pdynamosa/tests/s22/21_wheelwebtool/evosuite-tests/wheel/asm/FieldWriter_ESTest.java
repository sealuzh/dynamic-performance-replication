/*
 * This file was automatically generated by EvoSuite
 * Sat Mar 23 08:15:58 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      classWriter0.index = (-1723);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1723), "", "", "", "");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      classWriter0.index = (-1723);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1723), "", "", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1561));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "lP)7n'+(8GG=hLQ", "lP)7n'+(8GG=hLQ", "", "lP)7n'+(8GG=hLQ");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "+l@@jF::uF", "", "ConstantValue", "a}r4");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "a}r4", "v>5e'Za`p7-73:G42De", "+l@@jF::uF", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, ",yiBO.-l3))", "java/lang/String", "#ALu`u1}l= ", ",yiBO.-l3))");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter((ClassWriter) null, 0, "Ov", "", "Synthetic", "Synthetic");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 6, "wheel.asm.AnnotationWriter", "TNdZFlyQb4", "", "wheel.asm.AnnotationWriter");
      ByteVector byteVector0 = classWriter0.pool;
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "a}r4", "v>5e'Za`p7-73:G4De", "a}r4", "v>5e'Za`p7-73:G4De");
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.visitAnnotation("Deprecated", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1723), "=", "=", "=", "=");
      fieldWriter0.visitAnnotation("=", true);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "gG~4|4", "a}r4", (String) null, "v>5e'Za`p7-73:G42De");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1723), "=", "=", "=", "=");
      classWriter0.version = (-1723);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "a}r4", "v>5e'Za`p7-73:G4De", "a}r4", (Object) null);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1826));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2529), "lP)7n'+(8GG=hLQ", "lP)7n'+(8GG=hLQ", "ConstantValue", "ConstantValue");
      Attribute attribute0 = new Attribute("ConstantValue");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-34), "lP)7n'+(8GG=hLQ", "lP)7n'+(8GG=hLQ", "lP)7n'+(8GG=hLQ", "lP)7n'+(8GG=hLQ");
      fieldWriter0.visitAnnotation("lP)7n'+(8GG=hLQ", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1723), "=", "=", "=", "=");
      classWriter0.version = (-1723);
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, ",yiBO.-l3))", "java/lang/String", "#ALu`u1}l= ", ",yiBO.-l3))");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "a}r4", "v>5e'Za`p7-73:G4De", "a}r4", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1723), "=", "=", "=", "=");
      fieldWriter0.visitAnnotation("=", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "gG~4|4", "a}r4", (String) null, "v>5e'Za`p7-73:G42De");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1723));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "a}r4", "v>5e'Za`p7-73:G42De", "+l@@jF::uF", (Object) null);
      Object object0 = new Object();
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 1461, "a}r4", "java/lang/Class", "a}r4", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@1d5127a5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1826));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2529), "lP)7n'+(8GG=hLQ", "lP)7n'+(8GG=hLQ", "ConstantValue", "ConstantValue");
      fieldWriter0.visitEnd();
  }
}
