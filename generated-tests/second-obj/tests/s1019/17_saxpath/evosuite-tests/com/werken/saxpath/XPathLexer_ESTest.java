/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 06:33:00 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.div();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(",");
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".a7");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.star();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.notEquals();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.mod();
      Token token1 = xPathLexer3.rightBracket();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".>1H-");
      Token token0 = xPathLexer0.nextToken();
      String string0 = token0.toString();
      assertEquals("[ (13) (.)", string0);
      assertEquals(13, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("l'*0hxW-)U!Y:A*C");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("l", token0.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('3');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.consume((-1));
      // Undeclared exception!
      try { 
        xPathLexer0.identifier();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("%-r\"h");
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ykw{L1aqh?}#P9@l");
      Token token0 = xPathLexer0.at();
      assertEquals(16, token0.getTokenType());
      assertEquals("Y", token0.getTokenText());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("w", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals("{L1aqh?}#P9@l", token3.getTokenText());
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.equals();
      assertEquals("{", token4.getTokenText());
      assertEquals(21, token4.getTokenType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("EV \"z&52r5.Jx");
      Token token0 = xPathLexer0.dollar();
      Token token1 = xPathLexer0.doubleColon();
      Token token2 = xPathLexer0.doubleColon();
      token2.toString();
      xPathLexer0.mod();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (26) (E)", string0);
      
      token1.toString();
      String string1 = token2.toString();
      assertEquals("[ (19) (\"z)", string1);
      
      Token token3 = xPathLexer0.leftParen();
      token3.toString();
      Token token4 = xPathLexer0.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("5", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      Token token6 = xPathLexer0.nextToken();
      assertEquals((-1), token6.getTokenType());
      
      xPathLexer0.or();
      Token token7 = xPathLexer0.equals();
      String string2 = token7.toString();
      assertEquals("[ (21) (r)", string2);
      
      Token token8 = xPathLexer0.getPreviousToken();
      assertEquals("r5.Jx", token8.getTokenText());
      
      String string3 = token5.toString();
      assertEquals("[ (30) (2)", string3);
      
      token3.toString();
      xPathLexer0.mod();
      String string4 = token3.toString();
      assertEquals("[ (1) (&)", string4);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("on/<cHnFzgcGw5%nl");
      xPathLexer0.operatorName();
      xPathLexer0.setXPath("on/<cHnFzgcGw5%nl");
      assertEquals("on/<cHnFzgcGw5%nl", xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ja-");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("Ja-", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("Ja-");
      Token token1 = xPathLexer1.comma();
      String string0 = token1.toString();
      assertEquals("[ (32) (J)", string0);
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fM`Fm%[");
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.star();
      assertEquals("M", token0.getTokenText());
      assertEquals(20, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("`", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      xPathLexer0.whitespace();
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals((-1), token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("%", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      Token token5 = xPathLexer0.number();
      assertEquals(30, token5.getTokenType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fM`Fm%[");
      xPathLexer0.leftBracket();
      xPathLexer0.whitespace();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setXPath("fM`Fm%[");
      String string0 = xPathLexer1.getXPath();
      assertEquals("fM`Fm%[", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kd4/v");
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("OUHO");
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("OUHO", token1.getTokenText());
      
      Token token2 = xPathLexer0.plus();
      assertEquals(5, token2.getTokenType());
      assertEquals("d", token2.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("kd4/v");
      xPathLexer2.div();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      String string0 = "\"X+H)jD#$\"_n0~o)";
      XPathLexer xPathLexer1 = new XPathLexer("\"X+H)jD#$\"_n0~o)");
      xPathLexer0.not();
      xPathLexer1.setPreviousToken(token0);
      Token token1 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftBracket();
      xPathLexer1.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".|H?e");
      xPathLexer0.nextToken();
      xPathLexer0.consume(2);
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer(".|H?e");
      xPathLexer1.minus();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      XPathLexer xPathLexer2 = new XPathLexer();
      // Undeclared exception!
      try { 
        xPathLexer2.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("vI4mlv*{");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("v", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("I4mlv", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.getXPath();
      Token token2 = xPathLexer0.number();
      assertEquals(30, token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals("*", token3.getTokenText());
      assertEquals(3, token3.getTokenType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fM`Fm%[");
      xPathLexer0.comma();
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      xPathLexer0.setXPath("fM`Fm%[");
      String string0 = xPathLexer0.getXPath();
      assertEquals("fM`Fm%[", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1qL,8dj/Y}>U)2");
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      xPathLexer0.rightBracket();
      String string0 = null;
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      String string0 = ".a7";
      XPathLexer xPathLexer0 = new XPathLexer(".a7");
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.identifier();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ykw{L1aqh?}#P9;l");
      xPathLexer0.at();
      xPathLexer0.leftBracket();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.or();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("AH$9u&MJuAVtvG 7-i[");
      xPathLexer0.dots();
      Token token0 = xPathLexer0.dots();
      assertEquals("H", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals("", token1.getTokenText());
      assertEquals((-2), token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("OUHO");
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer0.doubleColon();
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("&MJuAVtvG 7-i[", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("&M", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{j&V,6#LVz*=AT");
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume((-2056));
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        xPathLexer0.LA(1160);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("[ ", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("(", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Ykw{L1aqh?}#P9;l");
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      assertEquals("Y", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("kw", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      String string0 = "}&hB:C##m?mb]b/8e";
      XPathLexer xPathLexer0 = new XPathLexer("}&hB:C##m?mb]b/8e");
      xPathLexer0.number();
      xPathLexer0.not();
      xPathLexer0.slashes();
      xPathLexer0.consume();
      xPathLexer0.star();
      xPathLexer0.consume();
      xPathLexer0.doubleColon();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kd4/v");
      Token token0 = xPathLexer0.dots();
      assertEquals(13, token0.getTokenType());
      assertEquals("k", token0.getTokenText());
      
      Token token1 = xPathLexer0.whitespace();
      assertEquals((-2), token1.getTokenType());
      assertEquals("", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("OUHO");
      xPathLexer1.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer0.nextToken();
      assertEquals(30, token2.getTokenType());
      assertEquals("4", token2.getTokenText());
      
      Token token3 = xPathLexer0.doubleColon();
      assertEquals("/v", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f-m|peQB:M*~7");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("f-m", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer0.leftBracket();
      assertEquals(3, token2.getTokenType());
      assertEquals("|", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fM`Fm%[");
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.getPreviousToken();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L~rr[d-B&Jx6QcMlg");
      xPathLexer0.equals();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("L~rr[d-B&Jx6QcMlg");
      xPathLexer1.nextToken();
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-3815));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<Dc|!955~UJpu+)hR4");
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.dots();
      XPathLexer xPathLexer2 = new XPathLexer();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.at();
      String string0 = "/*L3JIT=u^L~ Uu4";
      xPathLexer0.setXPath("/*L3JIT=u^L~ Uu4");
      xPathLexer0.nextToken();
      xPathLexer0.consume((-1574));
      xPathLexer0.not();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("hrSf[,");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("hrSf", token0.getTokenText());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.getPreviousToken();
      xPathLexer0.mod();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("gJ}iOyS ~");
      xPathLexer0.colon();
      xPathLexer0.whitespace();
      xPathLexer0.comma();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.plus();
      String string0 = token0.toString();
      assertEquals("[ (-1) (iOyS ~)", string0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zT:;Xf,Xn .d_Wu)");
      xPathLexer0.dollar();
      Token token0 = xPathLexer0.star();
      token0.toString();
      Token token1 = xPathLexer0.not();
      token1.toString();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("v!Z)YMB0se(ps>%k]Y");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("v!Z)YMB0se(ps>%k]Y");
      xPathLexer1.consume();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1qit8dj/lY}NU)2");
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals("t", token1.getTokenText());
      
      Token token2 = xPathLexer0.dots();
      assertEquals(13, token2.getTokenType());
      assertEquals("8", token2.getTokenText());
      
      Token token3 = xPathLexer0.notEquals();
      assertEquals("dj", token3.getTokenText());
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(11, token4.getTokenType());
      assertEquals("/", token4.getTokenText());
      
      Token token5 = xPathLexer0.nextToken();
      assertEquals("lY", token5.getTokenText());
      assertEquals(15, token5.getTokenType());
      
      Token token6 = xPathLexer0.leftParen();
      assertEquals("}", token6.getTokenText());
      assertEquals(1, token6.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('(');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1qLV8dj/Y}>U)2");
      Token token0 = xPathLexer0.equals();
      assertEquals("1", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      assertEquals("qL", token1.getTokenText());
      
      Token token2 = xPathLexer0.leftParen();
      assertEquals("V", token2.getTokenText());
      assertEquals(1, token2.getTokenType());
      
      Token token3 = xPathLexer0.nextToken();
      assertEquals(30, token3.getTokenType());
      assertEquals("8", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("kd4/v");
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("kd4/v");
      xPathLexer0.hasMoreChars();
      Token token0 = xPathLexer1.getPreviousToken();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1qitdj/lY}NU)2");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("i", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("tdj", token2.getTokenText());
      
      Token token3 = xPathLexer0.leftParen();
      assertEquals(1, token3.getTokenType());
      assertEquals("/", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("\"X+H)jD#$\"_n0~o)");
      xPathLexer0.nextToken();
      xPathLexer1.pipe();
      xPathLexer1.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer1.plus();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("dz%W.\u0006V*<'RC`LeRJ&");
      String string0 = "/*L3JIT=u^L~ Uu4";
      xPathLexer0.setXPath("/*L3JIT=u^L~ Uu4");
      xPathLexer0.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.consume((-1574));
      xPathLexer0.not();
      // Undeclared exception!
      try { 
        xPathLexer0.and();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftBracket();
      assertEquals(3, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("b</$'z-#BxNcCpH%di");
      Token token1 = xPathLexer2.number();
      assertEquals(30, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("b</$'z-#BxNcCpH%di");
      Token token2 = xPathLexer2.notEquals();
      assertEquals(22, token2.getTokenType());
      assertEquals("b<", token2.getTokenText());
      
      Token token3 = xPathLexer3.nextToken();
      assertEquals(15, token3.getTokenType());
      assertEquals("b", token3.getTokenText());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token4 = xPathLexer4.nextToken();
      assertEquals((-1), token4.getTokenType());
      
      Token token5 = xPathLexer3.leftParen();
      assertEquals("<", token5.getTokenText());
      
      Token token6 = xPathLexer1.dots();
      assertEquals(13, token6.getTokenType());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("j'n");
      Token token0 = xPathLexer0.dollar();
      token0.toString();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.slashes();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.notEquals();
      xPathLexer2.whitespace();
      Token token1 = xPathLexer0.nextToken();
      xPathLexer1.pipe();
      token1.toString();
      xPathLexer0.number();
      String string0 = "<O'*]1Lt3OzGaY>h#fG";
      XPathLexer xPathLexer3 = new XPathLexer("<O'*]1Lt3OzGaY>h#fG");
      Token token2 = xPathLexer0.at();
      // Undeclared exception!
      try { 
        token2.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L~rr[d-B&Jx6QcMlg");
      xPathLexer0.equals();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("[ (");
      xPathLexer1.nextToken();
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-3815));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.consume((-2757));
      xPathLexer0.setXPath("");
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("L~rr[d-B&Jx6QcMlg");
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer("]:.i[pwdfCL,W+7A1");
      xPathLexer3.mod();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token1 = xPathLexer0.nextToken();
      assertEquals((-1), token1.getTokenType());
      
      Token token2 = xPathLexer3.nextToken();
      assertEquals("]", token2.getTokenText());
      assertEquals(4, token2.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.relationalOperator();
      Token token3 = xPathLexer2.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      Token token4 = xPathLexer3.leftParen();
      assertEquals(":", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("}Kr#jl-(CL?");
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer0.mod();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      assertEquals("}", token0.getTokenText());
      
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer("0?\"}Nx4kiQ:Rb$\u0005vy");
      xPathLexer3.and();
      XPathLexer xPathLexer4 = new XPathLexer("0?\"}Nx4kiQ:Rb$\u0005vy");
      Token token1 = xPathLexer4.nextToken();
      assertEquals(30, token1.getTokenType());
      assertEquals("0", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("Kr", token2.getTokenText());
      
      xPathLexer1.or();
      Token token3 = xPathLexer0.at();
      assertEquals("#", token3.getTokenText());
      assertEquals(16, token3.getTokenType());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer("g?&");
      Token token2 = xPathLexer3.nextToken();
      assertEquals("g", token2.getTokenText());
      
      Token token3 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      
      Token token4 = xPathLexer0.star();
      assertEquals(20, token4.getTokenType());
      
      Token token5 = xPathLexer3.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("?", token5.getTokenText());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(".1H-e");
      xPathLexer0.nextToken();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer1.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L#56d?Xp6S+=$X");
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      assertEquals("L", token0.getTokenText());
      
      xPathLexer0.pipe();
      xPathLexer0.rightBracket();
      xPathLexer0.pipe();
      xPathLexer0.setXPath("L#56d?Xp6S+=$X");
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("L", token1.getTokenText());
      
      Token token2 = xPathLexer0.pipe();
      assertEquals("#", token2.getTokenText());
      assertEquals(17, token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("L#56d?Xp6S+=$X");
      XPathLexer xPathLexer2 = new XPathLexer("L#56d?Xp6S+=$X");
      Token token3 = xPathLexer2.dollar();
      assertEquals(26, token3.getTokenType());
      assertEquals("L", token3.getTokenText());
      
      Token token4 = xPathLexer1.not();
      assertEquals(23, token4.getTokenType());
      assertEquals("L", token4.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer2.div();
      Token token5 = xPathLexer3.nextToken();
      assertEquals((-1), token5.getTokenType());
      
      Token token6 = xPathLexer2.doubleColon();
      assertEquals("#5", token6.getTokenText());
      
      Token token7 = xPathLexer2.nextToken();
      assertEquals(30, token7.getTokenType());
      assertEquals("6", token7.getTokenText());
      
      Token token8 = xPathLexer3.rightBracket();
      assertEquals(4, token8.getTokenType());
      
      xPathLexer0.doubleColon();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.and();
      xPathLexer2.mod();
      Token token9 = xPathLexer1.comma();
      assertEquals("#", token9.getTokenText());
      assertEquals(32, token9.getTokenType());
      
      char char0 = xPathLexer1.LA(1);
      assertEquals('5', char0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("o+Wd!o& @a*tE!o#G");
      Token token0 = xPathLexer0.literal();
      assertNotNull(token0);
      assertEquals("+Wd!", token0.getTokenText());
      assertEquals(27, token0.getTokenType());
      
      Token token1 = xPathLexer0.star();
      assertEquals(20, token1.getTokenType());
      assertEquals("&", token1.getTokenText());
      
      Token token2 = xPathLexer0.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]A`sGd");
      xPathLexer0.colon();
      xPathLexer0.nextToken();
      String string0 = "Fp:q_!{V2Iv6";
      xPathLexer0.setXPath("Fp:q_!{V2Iv6");
      xPathLexer0.operatorName();
      xPathLexer0.dollar();
      xPathLexer0.or();
      xPathLexer0.comma();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.at();
      xPathLexer1.nextToken();
      xPathLexer1.not();
      String string1 = null;
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1qLV8dj/Y}>U)2");
      xPathLexer0.or();
      xPathLexer0.and();
      Token token0 = xPathLexer0.minus();
      assertEquals("1", token0.getTokenText());
      
      xPathLexer0.or();
      Token token1 = xPathLexer0.equals();
      assertEquals("q", token1.getTokenText());
      assertEquals(21, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.identifierOrOperatorName();
      assertEquals(15, token2.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer("&;FZ2$7");
      xPathLexer1.mod();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer4.or();
      XPathLexer xPathLexer5 = new XPathLexer(",<2AF50}N*}!dn2-oq");
      xPathLexer5.relationalOperator();
      xPathLexer3.or();
      Token token3 = xPathLexer5.nextToken();
      assertEquals(32, token3.getTokenType());
      assertEquals(",", token3.getTokenText());
      
      Token token4 = xPathLexer0.minus();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer("cy&/`39s:7B`vRUg,");
      Token token5 = xPathLexer7.plus();
      assertEquals(5, token5.getTokenType());
      assertEquals("c", token5.getTokenText());
      
      XPathLexer xPathLexer8 = new XPathLexer();
      String string0 = token4.toString();
      assertEquals("[ (6) (L)", string0);
      
      Token token6 = xPathLexer2.pipe();
      assertEquals(17, token6.getTokenType());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      xPathLexer0.setPreviousToken((Token) null);
      xPathLexer0.whitespace();
      xPathLexer0.isIdentifierChar('K');
      Token token0 = xPathLexer0.and();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      String string0 = "p";
      XPathLexer xPathLexer0 = new XPathLexer("p");
      xPathLexer0.nextToken();
      xPathLexer0.relationalOperator();
      Token token0 = xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("|&[");
      Token token0 = xPathLexer0.nextToken();
      assertEquals("|", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      xPathLexer0.pipe();
      Token token1 = xPathLexer0.equals();
      assertEquals(21, token1.getTokenType());
      assertEquals("[", token1.getTokenText());
      
      Token token2 = xPathLexer0.colon();
      assertEquals(18, token2.getTokenType());
      
      Token token3 = xPathLexer0.slashes();
      assertEquals(11, token3.getTokenType());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("zR:;Xf,Xn .d_Wu)");
      Token token0 = xPathLexer0.star();
      token0.toString();
      Token token1 = xPathLexer0.not();
      token1.toString();
      xPathLexer0.nextToken();
      xPathLexer0.getPreviousToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.setXPath("N<o>:=w!?W27CO6i");
      Token token0 = xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("N<o>:=w!?W27CO6i");
      Token token1 = xPathLexer0.leftParen();
      assertEquals(1, token1.getTokenType());
      assertEquals("<", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      xPathLexer1.setPreviousToken(token0);
      assertEquals("N", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
      
      Token token3 = xPathLexer1.doubleColon();
      assertEquals(19, token3.getTokenType());
      assertEquals("N<", token3.getTokenText());
      
      Token token4 = xPathLexer1.leftBracket();
      assertEquals("o", token4.getTokenText());
      assertEquals(3, token4.getTokenType());
      
      xPathLexer1.identifierOrOperatorName();
      String string0 = token2.toString();
      assertEquals("[ (23) (o)", string0);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")");
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      xPathLexer0.identifierOrOperatorName();
      token0.toString();
      Token token1 = xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("L~rr[d-B&Jx6QcMlg");
      xPathLexer0.setXPath("v!Z)YMB0se(ps>%k]Y");
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.number();
      XPathLexer xPathLexer2 = new XPathLexer("p2G$");
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token0 = xPathLexer4.rightBracket();
      assertEquals(4, token0.getTokenType());
      
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      XPathLexer xPathLexer7 = new XPathLexer("");
      Token token1 = xPathLexer7.minus();
      assertEquals(6, token1.getTokenType());
      
      xPathLexer7.operatorName();
      xPathLexer5.operatorName();
      Token token2 = xPathLexer2.leftParen();
      assertEquals("p", token2.getTokenText());
      
      boolean boolean0 = xPathLexer5.isIdentifierChar('c');
      assertTrue(boolean0);
      
      Token token3 = xPathLexer4.leftParen();
      assertEquals(1, token3.getTokenType());
      
      Token token4 = xPathLexer2.number();
      assertEquals("2", token4.getTokenText());
      assertEquals(30, token4.getTokenType());
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("pn}D?ud]GQLHgHP}");
      XPathLexer xPathLexer1 = new XPathLexer(".S+");
      xPathLexer0.slashes();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.rightBracket();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer(".S+");
      xPathLexer1.whitespace();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.getPreviousToken();
      xPathLexer1.dots();
      String string0 = null;
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":$*");
      Token token0 = xPathLexer0.dollar();
      xPathLexer0.nextToken();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.identifierOrOperatorName();
      Token token1 = xPathLexer1.dollar();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      int int0 = (-2736);
      xPathLexer0.consume((-2736));
      String string0 = "Q=KbENjQx4CI\\:w}";
      xPathLexer0.setXPath("Q=KbENjQx4CI:w}");
      xPathLexer0.comma();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.and();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("p%+s959:>bY");
      xPathLexer2.number();
      xPathLexer0.equals();
      xPathLexer1.comma();
      xPathLexer0.consume((-2736));
      xPathLexer1.and();
      xPathLexer2.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("\"W+v-~a;TMAcPY");
      xPathLexer0.pipe();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.not();
      xPathLexer0.dots();
      xPathLexer0.star();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.div();
      xPathLexer0.relationalOperator();
      xPathLexer0.pipe();
      xPathLexer0.relationalOperator();
      xPathLexer0.and();
      xPathLexer0.rightBracket();
      xPathLexer0.setXPath("\"W+v-~a;TMAcPY");
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.relationalOperator();
      xPathLexer0.consume((-687));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      
      xPathLexer0.consume(92);
      xPathLexer0.consume();
      Token token1 = xPathLexer0.notEquals();
      assertEquals(22, token1.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('_');
      assertTrue(boolean0);
      
      xPathLexer0.mod();
      xPathLexer0.getPreviousToken();
      Token token2 = xPathLexer0.dollar();
      assertEquals(26, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u");
      Token token0 = xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      token0.toString();
      xPathLexer1.equals();
      xPathLexer2.pipe();
      xPathLexer1.setXPath("u");
      xPathLexer1.number();
      xPathLexer2.whitespace();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("[ (15) (u)");
      xPathLexer1.mod();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.or();
      xPathLexer5.relationalOperator();
      xPathLexer0.rightParen();
      Token token1 = xPathLexer3.mod();
      assertNull(token1);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1qLt8dj/Y}>U)2");
      xPathLexer0.minus();
      xPathLexer0.notEquals();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.whitespace();
      xPathLexer0.div();
      xPathLexer0.dots();
      xPathLexer0.slashes();
      xPathLexer1.dots();
      xPathLexer0.slashes();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer2.dots();
      xPathLexer1.whitespace();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.div();
      String string0 = "N/o>3uk";
      xPathLexer0.setXPath("N/o>3uk");
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.dollar();
      xPathLexer0.colon();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.notEquals();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.whitespace();
      String string1 = "f-m|p::M*~7=";
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("fM`Fm%[");
      xPathLexer0.comma();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("kd4/v");
      xPathLexer0.slashes();
      xPathLexer1.whitespace();
      xPathLexer0.or();
      xPathLexer0.dollar();
      xPathLexer0.plus();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer2 = new XPathLexer("RYXf|q3d");
      xPathLexer2.div();
      XPathLexer xPathLexer3 = new XPathLexer("x|%_wmb-?eJ]");
      xPathLexer3.nextToken();
      xPathLexer2.or();
      // Undeclared exception!
      try { 
        xPathLexer2.LA((-2757));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      String string0 = "*TD\"5)XRClFxC**6@M";
      XPathLexer xPathLexer0 = new XPathLexer("*TD\"5)XRClFxC**6@M");
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer("*TD\"5)XRClFxC**6@M");
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.comma();
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      
      xPathLexer0.or();
      xPathLexer0.setXPath("F2p%? +GMKKe{PD|L");
      Token token2 = xPathLexer0.minus();
      assertEquals(6, token2.getTokenType());
      assertEquals("F", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightBracket();
      assertEquals(4, token3.getTokenType());
      assertEquals("2", token3.getTokenText());
      
      xPathLexer0.mod();
      Token token4 = xPathLexer0.not();
      assertEquals("p", token4.getTokenText());
      assertEquals(23, token4.getTokenType());
      
      Token token5 = xPathLexer0.dollar();
      assertEquals("%", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      xPathLexer0.relationalOperator();
      Token token6 = xPathLexer0.plus();
      assertEquals(5, token6.getTokenType());
      assertEquals("?", token6.getTokenText());
      
      xPathLexer0.relationalOperator();
      Token token7 = xPathLexer0.slashes();
      assertEquals(11, token7.getTokenType());
      assertEquals(" ", token7.getTokenText());
      
      Token token8 = xPathLexer0.leftBracket();
      assertEquals(3, token8.getTokenType());
      assertEquals("+", token8.getTokenText());
      
      Token token9 = xPathLexer0.nextToken();
      assertEquals(15, token9.getTokenType());
      assertEquals("GMKKe", token9.getTokenText());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('2');
      assertFalse(boolean0);
      
      xPathLexer0.number();
      Token token10 = xPathLexer0.number();
      assertEquals(30, token10.getTokenType());
      assertEquals("", token10.getTokenText());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.setXPath("YS(");
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("Y", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("S", token2.getTokenText());
      
      Token token3 = xPathLexer0.at();
      assertEquals(16, token3.getTokenType());
      assertEquals("(", token3.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("q)]YX,Lf");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.number();
      xPathLexer1.pipe();
      xPathLexer0.rightBracket();
      xPathLexer1.setXPath("IxukkH=bUw;s^\"TJcd\"");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.and();
      xPathLexer2.identifier();
      xPathLexer1.leftParen();
      xPathLexer1.comma();
      xPathLexer0.and();
      xPathLexer0.nextToken();
      xPathLexer2.or();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.whitespace();
      xPathLexer1.leftBracket();
      XPathLexer xPathLexer4 = new XPathLexer("vR*S Y2STc38T)/bj:p");
      xPathLexer0.dots();
      xPathLexer2.nextToken();
      xPathLexer4.dots();
      xPathLexer4.nextToken();
      XPathLexer xPathLexer5 = null;
      try {
        xPathLexer5 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@mca");
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.doubleColon();
      token0.toString();
      Token token2 = xPathLexer0.plus();
      token2.toString();
      token2.toString();
      token2.toString();
      Token token3 = xPathLexer0.nextToken();
      xPathLexer0.mod();
      token1.toString();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer();
      token3.toString();
      xPathLexer1.relationalOperator();
      token3.toString();
      xPathLexer1.number();
      Token token4 = xPathLexer1.number();
      // Undeclared exception!
      try { 
        token4.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("X27Xd&#'SpEf");
      Token token0 = xPathLexer0.slashes();
      assertEquals("X", token0.getTokenText());
      assertEquals(11, token0.getTokenType());
      
      Token token1 = xPathLexer0.leftParen();
      assertEquals("2", token1.getTokenText());
      assertEquals(1, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("7", token2.getTokenText());
      assertEquals(30, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(")y (");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.doubleColon();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.rightParen();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OUHO");
      Token token0 = xPathLexer0.comma();
      assertEquals("O", token0.getTokenText());
      assertEquals(32, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("UHO", token1.getTokenText());
      
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<Dc|!955~UJpu+)hR4");
      Token token0 = xPathLexer0.minus();
      token0.toString();
      xPathLexer0.star();
      xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.currentPosition();
      xPathLexer0.doubleColon();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      String string0 = "<CBF%FISLC";
      XPathLexer xPathLexer0 = new XPathLexer("<CBF%FISLC");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.doubleColon();
      xPathLexer0.consume(3538);
      token0.toString();
      Token token1 = xPathLexer0.number();
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("<Dc|!955~UJpu+)hR4");
      xPathLexer1.plus();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer1.plus();
      xPathLexer1.rightParen();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer1.setPreviousToken(token0);
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer2.notEquals();
      xPathLexer4.operatorName();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer6.not();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer1.identifierOrOperatorName();
      xPathLexer6.colon();
      xPathLexer7.rightBracket();
      xPathLexer6.consume();
      xPathLexer6.isIdentifierStartChar('{');
      Token token1 = xPathLexer4.getPreviousToken();
      assertNull(token1);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("co:8>D}H`Af ");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.minus();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer("co:8>D}H`Af ");
      xPathLexer4.div();
      XPathLexer xPathLexer5 = new XPathLexer("|nE$n^X");
      assertFalse(xPathLexer5.equals((Object)xPathLexer1));
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("on/<cHnFzgGw5%nl");
      Token token0 = xPathLexer0.or();
      assertNull(token0);
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('7');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.slashes();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.slashes();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("KO^]\"ZKq");
      Token token0 = xPathLexer0.dots();
      assertEquals("K", token0.getTokenText());
      assertEquals(13, token0.getTokenType());
      
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = new XPathLexer("KO^]\"ZKq");
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token1 = xPathLexer4.minus();
      assertEquals(6, token1.getTokenType());
      
      Token token2 = xPathLexer1.nextToken();
      XPathLexer xPathLexer5 = new XPathLexer();
      xPathLexer4.identifierOrOperatorName();
      xPathLexer5.currentPosition();
      xPathLexer2.setPreviousToken(token2);
      assertEquals("KO", token2.getTokenText());
      assertEquals(15, token2.getTokenType());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1qLV8dj/Y}oU");
      xPathLexer0.leftParen();
      Token token0 = xPathLexer0.not();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.doubleColon();
      xPathLexer0.leftBracket();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      token0.toString();
      xPathLexer1.consume();
      XPathLexer xPathLexer3 = new XPathLexer(",ez|`Im=");
      xPathLexer3.slashes();
      XPathLexer xPathLexer4 = new XPathLexer(">E8");
      xPathLexer4.getXPath();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      xPathLexer3.endPosition();
      xPathLexer2.or();
      XPathLexer xPathLexer7 = new XPathLexer();
      xPathLexer7.leftParen();
      XPathLexer xPathLexer8 = new XPathLexer("^");
      xPathLexer8.nextToken();
      xPathLexer2.hasMoreChars();
      Token token1 = xPathLexer8.relationalOperator();
      assertNull(token1);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{j&V,6#LVz*=AT");
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.comma();
      xPathLexer0.consume();
      xPathLexer0.equals();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.consume((-2056));
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("E|qE>eT&](");
      Token token0 = xPathLexer0.not();
      assertEquals("E", token0.getTokenText());
      assertEquals(23, token0.getTokenType());
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('&');
      assertFalse(boolean0);
      
      xPathLexer0.consume();
      xPathLexer0.relationalOperator();
      xPathLexer0.isIdentifierChar('&');
      xPathLexer0.or();
      Token token1 = xPathLexer0.dots();
      Token token2 = xPathLexer0.at();
      assertEquals(16, token2.getTokenType());
      assertEquals("E", token2.getTokenText());
      
      String string0 = token1.toString();
      assertEquals("[ (13) (q)", string0);
      
      xPathLexer0.isIdentifierStartChar('m');
      xPathLexer0.setPreviousToken(token1);
      char char0 = xPathLexer0.LA(111);
      assertEquals('\uFFFF', char0);
      
      Token token3 = xPathLexer0.star();
      assertEquals(">", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals("eT&](", token4.getTokenText());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1qit8dj/lY}NU)2");
      xPathLexer0.consume();
      xPathLexer0.or();
      xPathLexer0.setXPath("j+qf7");
      xPathLexer0.not();
      xPathLexer0.operatorName();
      xPathLexer0.nextToken();
      xPathLexer0.at();
      xPathLexer0.leftBracket();
      xPathLexer0.equals();
      xPathLexer0.literal();
      xPathLexer0.plus();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("f-m|p::M*~7=");
      Token token0 = xPathLexer0.leftParen();
      assertEquals("f", token0.getTokenText());
      assertEquals(1, token0.getTokenType());
      
      xPathLexer0.mod();
      xPathLexer0.doubleColon();
      Token token1 = xPathLexer0.slashes();
      assertEquals(11, token1.getTokenType());
      assertEquals("|", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals("", token2.getTokenText());
      assertEquals((-2), token2.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token3 = xPathLexer0.nextToken();
      assertEquals("::", token3.getTokenText());
      assertEquals(19, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.consume((-3271));
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer1.plus();
      assertEquals(5, token4.getTokenType());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("EV \"z&52r5.Jx");
      Token token0 = xPathLexer0.dollar();
      Token token1 = xPathLexer0.doubleColon();
      Token token2 = xPathLexer0.doubleColon();
      String string0 = token1.toString();
      assertEquals("[ (19) (V )", string0);
      
      token2.toString();
      Token token3 = xPathLexer0.comma();
      String string1 = token0.toString();
      assertEquals("[ (26) (E)", string1);
      
      xPathLexer0.consume();
      xPathLexer0.consume();
      Token token4 = xPathLexer0.rightParen();
      assertEquals(2, token4.getTokenType());
      
      xPathLexer0.setPreviousToken(token3);
      Token token5 = xPathLexer0.comma();
      assertEquals("5", token5.getTokenText());
      assertEquals(32, token5.getTokenType());
      
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals(".", token6.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token7 = xPathLexer1.nextToken();
      assertEquals((-1), token7.getTokenType());
      
      Token token8 = xPathLexer0.nextToken();
      assertEquals("Jx", token8.getTokenText());
      assertEquals(15, token8.getTokenType());
      
      Token token9 = xPathLexer1.leftParen();
      assertEquals(1, token9.getTokenType());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[,H='hA(%Y.?v\u0007m");
      Token token0 = xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer1.doubleColon();
      Token token1 = xPathLexer1.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("V");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("V", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("1qit8dj/lY}NU)2");
      xPathLexer0.consume();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.notEquals();
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.dollar();
      xPathLexer1.or();
      Token token1 = xPathLexer0.and();
      assertNull(token1);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("ooj-s.5ql");
      xPathLexer0.leftBracket();
      xPathLexer0.star();
      Token token0 = xPathLexer0.doubleColon();
      token0.toString();
      xPathLexer0.plus();
      xPathLexer0.nextToken();
      xPathLexer0.mod();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
