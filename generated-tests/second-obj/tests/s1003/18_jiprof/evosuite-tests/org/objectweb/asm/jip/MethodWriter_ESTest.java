/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 18:01:06 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.PushbackInputStream;
import java.lang.reflect.Member;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassVisitor;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.FieldWriter;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Item;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;
import org.objectweb.asm.jip.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      String[] stringArray0 = new String[0];
      ClassWriter classWriter1 = new ClassWriter(188);
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter1, 3, "[adP&FGyM.V`\"ht[l<M", " XmXw", "[adP&FGyM.V`\"ht[l<M", stringArray0, true, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(166);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "D\"#Yg";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 166, "D\"#Yg", "]SY1g:2]Td#QM25JYG", "D\"#Yg", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2147483645);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "!#!(wj0/HV$&d$pH";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, (-1), "!#!(wj0/HV$&d$pH", "Code", "!#!(wj0/HV$&d$pH", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "JSR/RET are not supported with computeFrames option";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "?a{1)", "2", stringArray0, false, false);
      ClassWriter classWriter1 = new ClassWriter(2);
      ByteVector byteVector0 = new ByteVector(2);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 8, stringArray0, 1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(499);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putShort(8);
      ByteVector byteVector1 = new ByteVector(499);
      methodWriter0.visitFrame(1, (-259), (Object[]) null, 10, (Object[]) null);
      ByteVector byteVector2 = new ByteVector(4);
      methodWriter0.visitMaxs(1, 27);
      methodWriter0.visitAnnotationDefault();
      int int0 = methodWriter0.getSize();
      assertEquals(22, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(182);
      String[] stringArray0 = new String[7];
      stringArray0[0] = "1K5V1u vK)&[H{";
      stringArray0[1] = "";
      stringArray0[2] = "1K5V1u vK)&[H{";
      stringArray0[3] = "1K5V1u vK)&[H{";
      stringArray0[4] = "";
      stringArray0[5] = "1K5V1u vK)&[H{";
      stringArray0[6] = "1K5V1u vK)&[H{";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 182, "1K5V1u vK)&[H{", "1K5V1u vK)&[H{", "", stringArray0, true, true);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(499);
      classWriter0.newUTF8("org.objectweb.asm.jip.Label");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(8);
      byteVector0.putByteArray(classReader0.b, 4, 2123);
      byteVector0.putByteArray(classReader0.b, 2123, 0);
      ByteVector byteVector2 = byteVector1.putByteArray(classReader0.b, 263, 22);
      methodWriter0.put(byteVector2);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(499, "HaRjGJ9|m'/$`;2H", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 27
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2123);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ":";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", stringArray0, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.visitFieldInsn(2, "org.objectweb.asm.jip.Label", ":", "&?yyH2K");
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      classWriter0.cr = classReader0;
      classWriter0.toByteArray();
      ByteVector byteVector1 = new ByteVector(8);
      Integer.compare(1, 1131);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitVarInsn((-1415), 2123);
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(828, ":", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 27
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-43);
      ClassWriter classWriter0 = new ClassWriter(3509);
      classWriter0.newUTF8("7!4!WtOE(vs~@)");
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (byte) (-43), "7!4!WtOE(vs~@)", "7!4!WtOE(vs~@)", "hO/cz", stringArray0, false, false);
      classWriter0.visit(1241579760, (-1822), "C+ #Ena!ucQ|U]`", "7!4!WtOE(vs~@)", "7!4!WtOE(vs~@)", stringArray0);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putUTF8("hO/cz");
      byteVector0.putByte(156);
      methodWriter0.put(byteVector1);
      methodWriter0.visitFrame(2, 1241579760, stringArray0, 1, stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ClassWriter classWriter0 = new ClassWriter(8);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector();
      classReader0.getInterfaces();
      methodWriter0.visitTypeInsn(1, "org.objectweb.asm.jip.Label");
      methodWriter0.visitMaxs(2, 4);
      ByteVector byteVector1 = new ByteVector(8);
      Attribute attribute0 = new Attribute("RuntimeInvisibleAnnotations");
      methodWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classReader0.getSuperName();
      classWriter0.newUTF8("org.objectweb.asm.jip.Label");
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "java/lang/Object", "eABQ-'r-L\"", "eABQ-'r-L\"", stringArray0, false, false);
      methodWriter0.visitVarInsn((-1136556743), 1);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2, "inSameSubroutine", "*@6={'p2(9b", "", stringArray0, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(8, (String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(499);
      int int0 = Frame.FLOAT;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(8);
      byteVector1.putUTF8("org.objectweb.asm.jip.Label");
      // Undeclared exception!
      try { 
        MethodWriter.readShort(classReader0.b, (byte) (-1));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      int int0 = 25165824;
      ClassWriter classWriter0 = new ClassWriter(25165824);
      int int1 = (-3163);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "<init>";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, (-3163), "<init>", "<init>", "<init>", stringArray0, false, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1904));
      int int0 = Member.PUBLIC;
      Item item0 = classWriter0.key2;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1978), "org.objectweb.asm.jip.Label", "^~0C^dlC0c~", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      methodWriter0.visitMultiANewArrayInsn("RuntimeInvisibleParameterAnnotations", 2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer.compare((-1904), 128);
      methodWriter0.visitVarInsn(128, (-1904));
      Integer.getInteger("org.objectweb.asm.jip.Label", (-96));
      methodWriter0.visitAnnotation("org.objectweb.asm.jip.Label", true);
      Frame frame0 = new Frame();
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1237, "f@3@l:LG", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ";a{1)";
      stringArray0[1] = ";a{1)";
      stringArray0[2] = "";
      ClassWriter classWriter1 = new ClassWriter(1);
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, (-3073), "2", "JSR/RET are not supported with computeFrames option", "", stringArray0, false, false);
      methodWriter0.visitTypeInsn(1, "JSR/RET are not supported with computeFrames option");
      Label label0 = new Label();
      Label label1 = new Label();
      Frame frame0 = new Frame();
      methodWriter0.visitLabel(label1);
      methodWriter0.getSize();
      methodWriter0.visitTypeInsn(2, "put");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "JSR/RET are not supported with computeFrames option";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", ";a{1)", "2", stringArray0, false, false);
      methodWriter0.visitTypeInsn(5, "AnnotationDefault");
      Label label0 = new Label();
      Label label1 = new Label();
      Frame frame0 = new Frame();
      methodWriter0.visitLabel(label1);
      methodWriter0.getSize();
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable((String) null, "", "AnnotationDefault", label0, label0, 2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      String[] stringArray0 = new String[3];
      stringArray0[0] = ";a{1)";
      stringArray0[1] = ";a{1)";
      stringArray0[2] = "";
      Label label0 = new Label();
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-268435456), "(]{.WP*", ";a{1)", "r\"ra/mPAQD@%4 Q(0(", stringArray0, false, false);
      int[] intArray0 = new int[7];
      intArray0[0] = 2123;
      intArray0[1] = 2;
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      methodWriter0.visitLocalVariable(";a{1)", "npk&jGqo^7z", "(]{.WP*", label0, label0, 285212684);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(8);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector();
      classReader0.getInterfaces();
      methodWriter0.visitTypeInsn(1, "org.objectweb.asm.jip.Label");
      methodWriter0.visitMaxs(2, 4);
      ByteVector byteVector1 = new ByteVector(8);
      classWriter0.addType("vyO6dVjo4Vj=8zgMDK");
      byteVector1.put11((-622), 31);
      ByteVector byteVector2 = classWriter0.pool;
      classWriter0.toByteArray();
      ByteVector byteVector3 = new ByteVector(31);
      Integer.compare(31, 31);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitVarInsn(1, 4);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(125, "!%W@Ccio9g1uv6wiq+M", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 27
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(499);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(8);
      ByteVector byteVector2 = byteVector1.putUTF8("org.objectweb.asm.jip.Label");
      byteVector2.putByteArray(classReader0.b, 4, 2123);
      ByteVector byteVector3 = byteVector2.putByteArray(classReader0.b, 2123, 0);
      methodWriter0.visitInsn(16777243);
      ByteVector byteVector4 = new ByteVector(2123);
      methodWriter0.put(byteVector3);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(499, "Signature", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 27
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2428));
      ClassWriter classWriter1 = new ClassWriter((-4633));
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 46, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "RuntimeInvisibleParameterAnnotations", (String[]) null, false, false);
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      methodWriter0.visitJumpInsn((-559), label1);
      MethodWriter methodWriter1 = classWriter1.firstMethod;
      Object object0 = label0.info;
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) label1;
      objectArray0[1] = (Object) methodWriter0;
      methodWriter1.visitFrame((-2), (-2), (Object[]) null, (-4633), objectArray0);
      methodWriter1.visitLineNumber((-1996547740), label0);
      Label label2 = label1.successor;
      // Undeclared exception!
      try { 
        methodWriter1.visitLineNumber(2, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classReader0.getSuperName();
      String[] stringArray0 = new String[3];
      stringArray0[0] = ";a{1)";
      stringArray0[1] = ";a{1)";
      stringArray0[2] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, ";a{1)", "", "", stringArray0, false, false);
      methodWriter0.visitVarInsn(1, (-623));
      methodWriter0.visitMethodInsn(2054, "", "java/lang/Object", "76[2SKtmXF");
      methodWriter0.visitCode();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      ClassWriter classWriter1 = new ClassWriter(classReader0, 2);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "e5qD~8TSU.j7G1w";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 8, ";a{1)", "", "e5qD~8TSU.j7G1w", stringArray0, false, false);
      methodWriter0.visitTypeInsn(1, "e5qD~8TSU.j7G1w");
      Label label0 = new Label();
      Label label1 = new Label();
      methodWriter0.visitLabel(label1);
      methodWriter0.getSize();
      methodWriter0.visitTypeInsn(16777217, "z-d%,^t)T");
      methodWriter0.visitIincInsn((-378), (-2473));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(499);
      int int0 = Frame.FLOAT;
      classWriter0.firstMethod = null;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(8);
      byteVector1.putByte(2);
      byteVector1.putUTF8("org.objectweb.asm.jip.Label");
      ByteVector byteVector2 = new ByteVector(499);
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      Attribute attribute1 = new Attribute("org.objectweb.asm.jip.Label");
      int int1 = classWriter0.firstMethod.getSize();
      assertEquals(16, int1);
      
      methodWriter0.visitIntInsn((-1816), 52);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitIincInsn(3353, (-2752));
      int int2 = MethodWriter.readUnsignedShort(classReader0.b, 3353);
      assertEquals(162, int2);
      
      int int3 = classWriter0.firstMethod.getSize();
      assertEquals(42, int3);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classReader0.accept((ClassVisitor) classWriter0, 8);
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      methodWriter0.visitAnnotationDefault();
      Label label0 = new Label();
      attribute0.value = classReader0.b;
      Label label1 = new Label();
      label1.toString();
      Label label2 = new Label();
      Frame frame0 = new Frame();
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(8, (-266), label2, labelArray0);
      methodWriter0.visitLocalVariable("L263", "org.objectweb.asm.jip.Label", "L263", label1, label1, 2);
      MethodWriter.writeShort(classReader0.b, 20, 29);
      methodWriter0.visitTypeInsn(29, "org.objectweb.asm.jip.Label");
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2123);
      classReader0.accept((ClassVisitor) classWriter0, 8);
      classWriter0.newNameType("org.objectweb.asm.jip.Label", "");
      Attribute attribute0 = new Attribute("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":;;M_");
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classReader0.copyPool(classWriter0);
      Integer integer0 = new Integer(256);
      Integer.getInteger(":;;M_", 2);
      methodWriter0.visitLdcInsn("org.objectweb.asm.jip.Label");
      FieldWriter fieldWriter0 = classWriter0.lastField;
      Integer.compare(1, 256);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitVarInsn(89, 4);
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(8, "sPbKaHCWBKb", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(1);
      classReader0.getInterfaces();
      int int0 = Type.SHORT;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector(1);
      byteVector0.putUTF8("org.objectweb.asm.jip.Label");
      methodWriter0.classReaderLength = 1142;
      ByteVector byteVector1 = byteVector0.putInt(4);
      ByteVector byteVector2 = new ByteVector();
      byteVector2.put12(2123, 1);
      methodWriter0.visitMethodInsn(1, "+N82x", "+N82x", "org.objectweb.asm.jip.Label");
      classReader0.getInterfaces();
      ByteVector byteVector3 = byteVector1.putShort(2123);
      ByteVector byteVector4 = new ByteVector();
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitMethodInsn(1, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
      classReader0.accept((ClassVisitor) classWriter0, 1142);
      methodWriter1.next = methodWriter0;
      methodWriter1.visitFrame(171, (-25), (Object[]) null, 2, (Object[]) null);
      methodWriter1.put(byteVector3);
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation((-1072), "h*8sv}1nXD[KR-n(f.}", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 27
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      Label label0 = new Label();
      classReader0.getInterfaces();
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      String[] stringArray0 = new String[7];
      stringArray0[0] = ";a{1)";
      stringArray0[1] = "r\"ra/mPAQD@%4 Q(0(";
      stringArray0[2] = "";
      stringArray0[3] = "LocalVariableTypeTable";
      stringArray0[4] = "org.objectweb.asm.jip.Label";
      stringArray0[5] = ";a{1)";
      stringArray0[6] = ";a{1)";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LocalVariableTypeTable", "OiEb", "", stringArray0, false, false);
      methodWriter0.visitLocalVariable("addReference", ";a{1)", ";a{1)", label0, label0, (-268435456));
      boolean boolean0 = classWriter0.invalidFrames;
      methodWriter0.visitLdcInsn(";a{1)");
      methodWriter0.visitFieldInsn(2, "r\"ra/mPAQD@%4 Q(0(", "<8N]P|\"PCiXF", "r\"ra/mPAQD@%4 Q(0(");
      Label[] labelArray0 = new Label[7];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      Frame frame1 = label0.frame;
      methodWriter0.visitFrame(1, 1, labelArray0, (-1301), labelArray0);
      methodWriter0.visitLocalVariable("org.objectweb.asm.jip.Label", "q!X)^_!(u(4tOo", "LocalVariableTypeTable", label0, label0, 2123);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ";a{1)";
      stringArray0[1] = ";a{1)";
      stringArray0[2] = "";
      ClassWriter classWriter1 = new ClassWriter(1);
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, (-3073), "", "JSR/RET are not supported with computeFrames option", "", stringArray0, false, false);
      Label label0 = new Label();
      Attribute[] attributeArray0 = new Attribute[2];
      classReader0.accept((ClassVisitor) classWriter1, attributeArray0, (-1580));
      Integer integer0 = new Integer((-221));
      label0.info = (Object) integer0;
      methodWriter0.visitInsn((-1886));
      methodWriter0.visitLineNumber(1, label0);
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classReader0.accept((ClassVisitor) classWriter0, 8);
      classWriter0.newNameType("org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      Frame frame0 = new Frame();
      Label label0 = new Label();
      attribute0.value = classReader0.b;
      Label label1 = new Label();
      label1.toString();
      Label label2 = new Label();
      Frame frame1 = new Frame();
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitIincInsn(894, (-1777));
      methodWriter0.visitTableSwitchInsn(8, (-266), label2, labelArray0);
      methodWriter0.visitJumpInsn(28, label1);
      methodWriter0.visitLocalVariable("-!.r:NXuN", "org.objectweb.asm.jip.Label", "-!.r:NXuN", label1, label1, 2);
      MethodWriter.writeShort(classReader0.b, 20, 29);
      methodWriter0.visitTypeInsn(29, "org.objectweb.asm.jip.Label");
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(251);
      int int0 = Frame.VALUE;
      classWriter0.firstMethod = null;
      classReader0.accept((ClassVisitor) classWriter0, 8388607);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      classWriter0.newNameType("org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
      classWriter0.getCommonSuperClass("org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
      boolean boolean0 = ClassReader.ANNOTATIONS;
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      int int1 = Frame.ELEMENT_OF;
      ByteVector byteVector0 = new ByteVector(169);
      int int2 = 1104;
      byteVector0.put12((-268435456), 1104);
      classWriter0.firstMethod.put(byteVector0);
      // Undeclared exception!
      try { 
        classWriter0.firstMethod.visitFieldInsn(169, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "MIO+O95O:m]W");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // JSR/RET are not supported with computeFrames option
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      classReader0.accept((ClassVisitor) classWriter0, 8);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = Frame.ELEMENT_OF;
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      byte[] byteArray0 = new byte[19];
      byteArray0[0] = (byte) (-114);
      byteArray0[1] = (byte)5;
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classWriter0.firstMethod = methodWriter0;
      attribute0.value = byteArray0;
      attribute0.value = classReader0.b;
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      classReader0.copyPool(classWriter0);
      methodWriter1.visitAnnotation("+%EfT$f8", false);
      Frame frame0 = new Frame();
      classWriter0.newInteger((-2496));
      methodWriter1.visitMultiANewArrayInsn("rq_lZ#so*w8b`} AC", 1);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.put12(4, 155);
      attribute0.write(classWriter0, classReader0.b, (byte) (-114), 2, (byte)5);
      ByteVector byteVector1 = classWriter0.pool;
      classWriter0.toByteArray();
      methodWriter1.visitVarInsn(155, 1);
      methodWriter1.visitMultiANewArrayInsn("^~0C^dlC0c~", (byte) (-114));
      ClassWriter classWriter1 = new ClassWriter(155);
      Attribute attribute1 = attribute0.next;
      methodWriter1.visitAttribute(attribute0);
      methodWriter1.visitFieldInsn(1, "+%EfT$f8", "org.objectweb.asm.jip.Label", "Gd;#A-3");
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2123);
      classReader0.accept((ClassVisitor) classWriter0, 74);
      Attribute attribute0 = new Attribute("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":;;M_");
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classReader0.copyPool(classWriter0);
      Integer integer0 = new Integer(256);
      Integer.getInteger(":;;M_", 2);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      Integer.compare(1, 256);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitVarInsn(89, 74);
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(8, "sPbKaHCWBKb", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      int int0 = Frame.ELEMENT_OF;
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-114);
      byteArray0[1] = (byte)5;
      attribute0.value = byteArray0;
      attribute0.value = classReader0.b;
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classReader0.copyPool(classWriter0);
      Frame frame0 = new Frame();
      methodWriter0.visitMultiANewArrayInsn("rq_lZ#so*w8b`} AC", 1);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.put12(4, 155);
      ByteVector byteVector1 = classWriter0.pool;
      classWriter0.toByteArray();
      methodWriter0.visitVarInsn(155, 1);
      Attribute attribute1 = attribute0.next;
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitTypeInsn(1, "Y");
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(29);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      classWriter0.newNameType("org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classReader0.copyPool(classWriter0);
      Integer integer0 = new Integer(758);
      classReader0.getInterfaces();
      Integer.min(4, 8);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      Integer.getInteger("org.objectweb.asm.jip.Label", 8);
      methodWriter0.visitLdcInsn(2);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      String string0 = "";
      methodWriter0.visitMultiANewArrayInsn("", 1);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.put12(4, 2123);
      ByteVector byteVector1 = classWriter0.pool;
      classWriter0.toByteArray();
      methodWriter0.visitVarInsn(4, (-65));
      Attribute attribute1 = attribute0.next;
      // Undeclared exception!
      try { 
        methodWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2123);
      classReader0.accept((ClassVisitor) classWriter0, 74);
      classWriter0.newNameType("org.objectweb.asm.jip.Label", "");
      Attribute attribute0 = new Attribute("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":;;M_");
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classReader0.copyPool(classWriter0);
      Integer integer0 = new Integer(256);
      Integer.getInteger(":;;M_", 2);
      methodWriter0.visitLdcInsn("org.objectweb.asm.jip.Label");
      FieldWriter fieldWriter0 = classWriter0.lastField;
      Integer.compare(1, 256);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitVarInsn(89, (-335));
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation(8, "sPbKaHCWBKb", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 8
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, false);
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2123);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ":";
      classReader0.getSuperName();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.Label", "?a{1)", "org.objectweb.asm.jip.Label", stringArray0, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.visitVarInsn(2123, 1);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      classReader0.accept((ClassVisitor) classWriter0, 8);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      Attribute attribute0 = new Attribute("j|#y;FS6|MlY/c? g");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      Frame frame0 = new Frame();
      Label label0 = new Label();
      Label label1 = new Label();
      label1.toString();
      Label label2 = new Label();
      Frame frame1 = new Frame();
      Label[] labelArray0 = new Label[6];
      labelArray0[0] = label1;
      labelArray0[1] = label1;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      labelArray0[4] = label0;
      labelArray0[5] = label1;
      methodWriter0.visitTableSwitchInsn(1, (-381), label1, labelArray0);
      methodWriter0.visitLocalVariable("org.objectweb.asm.jip.Label", "inSameSubroutine", "org.objectweb.asm.jip.MethodWriter", label1, label2, 1);
      MethodWriter.writeShort(classReader0.b, 4, 3552);
      methodWriter0.visitTypeInsn((-266), "");
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      classReader0.accept((ClassVisitor) classWriter0, 8);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      int int0 = Frame.ELEMENT_OF;
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-114);
      byteArray0[1] = (byte)5;
      attribute0.value = byteArray0;
      attribute0.value = classReader0.b;
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classReader0.copyPool(classWriter0);
      Frame frame0 = new Frame();
      methodWriter0.visitMultiANewArrayInsn("rq_lZ#so*w8b`} AC", 1);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.put12(4, 155);
      attribute0.write(classWriter0, classReader0.b, (byte) (-114), 2, (byte)5);
      ByteVector byteVector1 = classWriter0.pool;
      classWriter0.toByteArray();
      methodWriter0.visitVarInsn(155, 1);
      methodWriter0.visitMultiANewArrayInsn("^~0C^dlC0c~", (byte) (-114));
      ClassWriter classWriter1 = new ClassWriter(155);
      Attribute attribute1 = attribute0.next;
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitIincInsn((byte)5, 155);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(8);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector();
      classReader0.getInterfaces();
      methodWriter0.visitMaxs(2, 4);
      ByteVector byteVector1 = new ByteVector(8);
      classWriter0.addType("vyO6dVjo4Vj=8zgMDK");
      byteVector1.put11((-630), 31);
      ByteVector byteVector2 = classWriter0.pool;
      classWriter0.toByteArray();
      methodWriter0.visitIincInsn(1, 8);
      ByteVector byteVector3 = new ByteVector(31);
      Integer.compare(31, 31);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitVarInsn(1, 4);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(125, "!%W@Ccio9g1uv6wiq+M", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 27
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "<Jc&xllGr");
      classReader0.accept((ClassVisitor) classWriter0, 29);
      String[] stringArray0 = new String[1];
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "?a{1)");
      MethodWriter methodWriter0 = classWriter0.firstMethod;
      Attribute attribute0 = new Attribute("SourceFile");
      Attribute attribute1 = attribute0.next;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "It26K|=FdO5yp");
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
      methodWriter0.visitFrame((-679), 184, stringArray0, 8, stringArray0);
      methodWriter0.visitIntInsn(1, 2484);
      methodWriter0.visitFrame(2, 10, stringArray0, 2, stringArray0);
      methodWriter0.visitInsn(55);
      methodWriter0.visitMethodInsn(8, "<Jc&xllGr", "LocalVariableTypeTable", "?a{1)");
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      classReader0.accept((ClassVisitor) classWriter0, 8);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = Frame.ELEMENT_OF;
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      byte[] byteArray0 = new byte[2];
      byte byte0 = (byte) (-114);
      byteArray0[0] = (byte) (-114);
      byteArray0[1] = (byte)5;
      attribute0.value = byteArray0;
      attribute0.value = classReader0.b;
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classReader0.copyPool(classWriter0);
      methodWriter0.visitAnnotation("+%EfT$f8", false);
      Frame frame0 = new Frame();
      methodWriter0.visitMultiANewArrayInsn("rq_lZ#so*w8b`} 8AC", 1);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.put12(4, 155);
      attribute0.write(classWriter0, classReader0.b, (byte) (-114), 2, (byte)5);
      ByteVector byteVector1 = classWriter0.pool;
      classWriter0.toByteArray();
      methodWriter0.visitVarInsn(155, 1);
      methodWriter0.visitMultiANewArrayInsn("^~0C^dlC0c~", (byte) (-114));
      ClassWriter classWriter1 = new ClassWriter(155);
      MethodWriter.readInt(classReader0.b, 1);
      methodWriter0.visitVarInsn(2, 151);
      methodWriter0.visitIntInsn(2, 1024);
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn((-268435456), (byte)5);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -268435456
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "JSR/RET are not supported with computeFrames option";
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "JSR/RET are not supported with computeFrames option");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "?a{1)", "2", stringArray0, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putShort(1);
      Attribute[] attributeArray0 = new Attribute[1];
      methodWriter0.classReaderOffset = 1;
      Attribute attribute0 = new Attribute("w1g_6/|vj5 '/}cjLyJ");
      methodWriter0.visitIntInsn(2, 2123);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(4, (-78), attributeArray0, (-78), attributeArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      int int0 = 67;
      ClassWriter classWriter0 = new ClassWriter(67);
      String string0 = "?a\\fDC 2@xI(o8^w";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2127, "?a\fDC 2@xI(o8^w", " )U>?P&x", "*~JeK4TqlN\"2[n", (String[]) null, true, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn(27);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      classReader0.accept((ClassVisitor) classWriter0, 8);
      classReader0.accept((ClassVisitor) classWriter0, 1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = Frame.ELEMENT_OF;
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte) (-114);
      byteArray0[1] = (byte)5;
      attribute0.value = byteArray0;
      attribute0.value = classReader0.b;
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classReader0.copyPool(classWriter0);
      methodWriter0.visitAnnotation("+%EfT$f8", false);
      Frame frame0 = new Frame();
      methodWriter0.visitMultiANewArrayInsn("rq_lZ#so*w8b`} AC", 1);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.put12(4, 155);
      ByteVector byteVector1 = classWriter0.pool;
      classWriter0.toByteArray();
      classWriter0.newClass("org.objectweb.asm.jip.Label");
      Attribute attribute1 = attribute0.next;
      methodWriter0.visitTypeInsn(1, "Y");
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn((-1457));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1457
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classReader0.accept((ClassVisitor) classWriter0, 8);
      classWriter0.newNameType("org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      Frame frame0 = new Frame();
      methodWriter0.visitAnnotationDefault();
      Label label0 = new Label();
      attribute0.value = classReader0.b;
      Label label1 = new Label();
      label1.toString();
      Label label2 = new Label();
      Frame frame1 = new Frame();
      methodWriter0.visitLocalVariable("-!.r:NXuN", "org.objectweb.asm.jip.Label", "-!.r:NXuN", label1, label1, 2);
      Label label3 = new Label();
      Label label4 = label3.next;
      methodWriter0.visitLabel(label3);
      methodWriter0.visitMaxs((-4814), 186);
      methodWriter0.visitInsn(1);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2123);
      classReader0.accept((ClassVisitor) classWriter0, 74);
      String string0 = "sPbKaHCWBKb";
      classWriter0.newNameType("org.objectweb.asm.jip.Label", "");
      Attribute attribute0 = new Attribute("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, ":;;M_");
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classReader0.copyPool(classWriter0);
      Integer integer0 = new Integer(256);
      Integer.getInteger(":;;M_", 2);
      methodWriter0.visitIincInsn(17, 285212683);
      methodWriter0.visitLdcInsn("org.objectweb.asm.jip.Label");
      FieldWriter fieldWriter0 = classWriter0.lastField;
      Integer.compare(1, 256);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.classReaderOffset = 2123;
      methodWriter1.visitMethodInsn(1048575, "$s(IX{OWQ3*5hz@[M", ":;;M_", ":;;M_");
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn(75, 74);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      int[] intArray0 = new int[8];
      intArray0[0] = 169;
      intArray0[1] = 1018;
      intArray0[2] = (-2032);
      intArray0[3] = (-1642);
      intArray0[4] = 2;
      intArray0[5] = 20;
      intArray0[6] = (-1198);
      intArray0[7] = (-1422);
      MethodWriter.getNewOffset(intArray0, intArray0, (-1642), 2);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      int[] intArray0 = new int[2];
      intArray0[0] = (-897);
      int[] intArray1 = new int[8];
      intArray1[0] = (-137);
      intArray1[1] = 186;
      intArray1[2] = (-137);
      intArray1[3] = (-137);
      intArray1[4] = (-137);
      intArray1[1] = (-3276);
      intArray1[6] = (-137);
      intArray1[7] = (-137);
      MethodWriter.getNewOffset(intArray0, intArray1, 68, (-2592));
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      String[] stringArray0 = new String[3];
      stringArray0[0] = ";a{1)";
      stringArray0[1] = ";a{1)";
      stringArray0[2] = "";
      Label label0 = new Label();
      Frame frame0 = new Frame();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 8);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-268435456), "(]{.WP*", ";a{1)", "r\"ra/mPAQD@%4 Q(0(", stringArray0, false, false);
      int[] intArray0 = new int[7];
      intArray0[0] = 2123;
      methodWriter0.visitFieldInsn((-268435456), ";a{1)", ";a{1)", "java/lang/Object");
      intArray0[1] = 2;
      Label[] labelArray0 = new Label[1];
      // Undeclared exception!
      try { 
        methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = "org.objectweb.asm.jip.Label";
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(8);
      classReader0.accept((ClassVisitor) classWriter0, 8);
      // Undeclared exception!
      try { 
        classWriter0.getMergedType(4, 2123);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2123
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(499);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putShort(8);
      ByteVector byteVector1 = new ByteVector(499);
      classWriter0.firstMethod.visitTypeInsn(8, "<init>");
      Label label0 = new Label();
      classReader0.accept((ClassVisitor) classWriter0, (Attribute[]) null, 838);
      methodWriter0.visitInsn(2);
      classWriter0.firstMethod.visitFrame(704, 128, (Object[]) null, (-1886), (Object[]) null);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitLineNumber(171, label0);
      classWriter0.firstMethod.visitAnnotationDefault();
      classWriter0.firstMethod.getSize();
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classReader0.accept((ClassVisitor) classWriter0, 8);
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      Frame frame0 = new Frame();
      methodWriter0.visitAnnotationDefault();
      Label label0 = new Label();
      attribute0.value = classReader0.b;
      Label label1 = new Label();
      label1.toString();
      Label label2 = new Label();
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putByte(25);
      byteVector1.putLong(585L);
      byteVector0.putByte(2);
      ClassWriter classWriter1 = new ClassWriter(248);
      methodWriter0.visitVarInsn(5, 1);
      Label label3 = label1.successor;
      methodWriter0.visitLabel(label2);
      methodWriter0.visitMaxs((-6453), 167);
      methodWriter0.visitInsn(163);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classReader0.accept((ClassVisitor) classWriter0, 8);
      classWriter0.newNameType("org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      Frame frame0 = new Frame();
      methodWriter0.visitAnnotationDefault();
      Label label0 = new Label();
      attribute0.value = classReader0.b;
      Label label1 = new Label();
      label1.toString();
      Label label2 = new Label();
      Frame frame1 = new Frame();
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitTableSwitchInsn(8, (-266), label2, labelArray0);
      methodWriter0.visitLocalVariable("-!.r:NXuN", "org.objectweb.asm.jip.Label", "-!.r:NXuN", label1, label1, 2);
      Label label3 = new Label();
      Label label4 = label0.successor;
      methodWriter0.visitLabel(label3);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs((-4814), 186);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(28);
      int int0 = Frame.FLOAT;
      classWriter0.firstMethod = null;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(8);
      byteVector1.putByte(2);
      byteVector1.putUTF8("org.objectweb.asm.jip.Label");
      ByteVector byteVector2 = new ByteVector(28);
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      Attribute attribute1 = new Attribute("org.objectweb.asm.jip.Label");
      classWriter0.firstMethod.getSize();
      methodWriter0.visitIntInsn((-1816), 52);
      Object[] objectArray0 = new Object[1];
      FileSystemHandling.shouldAllThrowIOExceptions();
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 2, objectArray0, 1, objectArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2123);
      classReader0.accept((ClassVisitor) classWriter0, 74);
      classWriter0.newNameType(":;;M_", "org.objectweb.asm.jip.Label");
      Attribute attribute0 = new Attribute("");
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      classReader0.copyPool(classWriter0);
      Integer integer0 = new Integer(23);
      Integer.getInteger("RuntimeInvisibleAnnotations", (-230));
      methodWriter0.visitLdcInsn(integer0);
      FieldWriter fieldWriter0 = classWriter0.lastField;
      Integer.compare(176, 2);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitVarInsn(106, 4096);
      methodWriter1.visitFrame(2317, 4096, (Object[]) null, (-749), (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(499);
      classWriter0.firstMethod = null;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(8);
      byteVector1.putUTF8("org.objectweb.asm.jip.Label");
      ByteVector byteVector2 = new ByteVector(499);
      methodWriter0.visitFrame(1, (-259), (Object[]) null, 10, (Object[]) null);
      ByteVector byteVector3 = new ByteVector(4);
      byteVector0.putUTF8("lL=-3c}G?DU={;w;'<");
      // Undeclared exception!
      try { 
        classWriter0.firstMethod.visitFrame(2, 1942, (Object[]) null, 8, (Object[]) null);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2);
      classWriter0.newUTF8("");
      classWriter0.firstMethod = null;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "", "", "zpU&C~lyN4aq", (String[]) null, false, false);
      ClassWriter classWriter1 = new ClassWriter(0);
      ByteVector byteVector0 = new ByteVector(2);
      byteVector0.putUTF8("org.objectweb.asm.jip.Label");
      byteVector0.putByteArray(classReader0.b, 176, 444);
      classWriter0.firstMethod.visitFrame(2, 4, (Object[]) null, 1, (Object[]) null);
      // Undeclared exception!
      try { 
        classWriter0.firstMethod.visitParameterAnnotation(2, "ztZ8", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1904));
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = Member.PUBLIC;
      classWriter0.newNameTypeItem("RuntimeInvisibleParameterAnnotatios", "org.objectweb.asm.jip.Label");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1978), "org.objectweb.asm.jip.Label", "^~0C^dlC0c~", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      methodWriter0.visitMultiANewArrayInsn("RuntimeInvisibleParameterAnnotatios", 2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer.compare((-1904), 128);
      methodWriter0.visitVarInsn(128, (-1904));
      Integer.getInteger("org.objectweb.asm.jip.Label", (-96));
      methodWriter0.visitAnnotation("org.objectweb.asm.jip.Label", true);
      Frame frame0 = new Frame();
      methodWriter0.visitFieldInsn(1604, "org.objectweb.asm.jip.Label", "f@3@l:LG", "java/lang/Object");
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
      classWriter0.visitAnnotation("RuntimeInvisibleParameterAnnotatios", true);
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2123);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ":";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "?a{1)", "2", stringArray0, false, false);
      ByteVector byteVector0 = new ByteVector(2);
      Attribute[] attributeArray0 = new Attribute[2];
      Attribute attribute0 = new Attribute("?a{1)");
      Attribute attribute1 = attribute0.next;
      Attribute attribute2 = new Attribute("-,.|gB");
      classReader0.getClassName();
      FieldWriter fieldWriter0 = classWriter0.firstField;
      byteVector0.putByte((-1223582259));
      byteVector0.putUTF8("b7+u,");
      methodWriter0.visitFrame(1, (-1223582259), attributeArray0, 2, attributeArray0);
      methodWriter0.visitIincInsn(0, 411);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(499);
      classWriter0.newUTF8("");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putShort(8);
      ByteVector byteVector2 = byteVector1.putUTF8("org.objectweb.asm.jip.Label");
      byteVector2.putByteArray(classReader0.b, 4, 2123);
      ByteVector byteVector3 = byteVector2.putByteArray(classReader0.b, 2123, 0);
      methodWriter0.visitFrame(1, (-259), (Object[]) null, 10, (Object[]) null);
      Attribute attribute0 = new Attribute("");
      Attribute attribute1 = attribute0.next;
      methodWriter0.visitIntInsn(2, 8);
      methodWriter0.visitMultiANewArrayInsn("", 1);
      methodWriter0.put(byteVector3);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1892));
      classWriter0.newUTF8("org.objectweb.asm.jip.Label");
      Item item0 = new Item();
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1976), "fH-%C*\"j", "^~0C^dlC0c~", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable(" uxA", "7{H>7?we]R-@?", "Qz\"6:,x", label0, label0, 10);
      boolean boolean0 = classWriter0.invalidFrames;
      Integer integer0 = new Integer((-1976));
      Integer.toUnsignedLong(247);
      methodWriter0.visitLdcInsn(integer0);
      methodWriter0.visitFieldInsn(25165824, "LocalVariableTypeTable", "^~0C^dlC0c~", "g");
      methodWriter0.getSize();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitFrame(25165824, 178, (Object[]) null, 142, (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter((-1884));
      classWriter0.newUTF8("org.objectweb.asm.jip.Label");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putShort(8);
      byteVector1.put11(2789, (-2972));
      ByteVector byteVector2 = byteVector0.putInt(1);
      ByteVector byteVector3 = new ByteVector();
      methodWriter0.visitMethodInsn(17, "+N82x", "+N82x", "org.objectweb.asm.jip.Label");
      byteVector2.putLong(2123);
      byteVector2.putByteArray(classReader0.b, 2123, 0);
      methodWriter0.visitFrame(381, (-2139), (Object[]) null, 1036, (Object[]) null);
      Label label0 = new Label();
      methodWriter0.visitLineNumber(1, label0);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2123);
      String[] stringArray0 = new String[1];
      stringArray0[0] = ":";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "org.objectweb.asm.jip.Label", "?a{1)", "org.objectweb.asm.jip.Label", stringArray0, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      Attribute attribute0 = new Attribute("visitSubroutine");
      classWriter0.cr = classReader0;
      classReader0.getClassName();
      Integer integer0 = Integer.getInteger(":", (-2229));
      methodWriter0.visitLdcInsn(integer0);
      FieldWriter fieldWriter0 = classWriter0.firstField;
      classWriter0.firstField = null;
      methodWriter0.visitFrame((-65), 2015, stringArray0, (-2770), stringArray0);
      methodWriter0.getSize();
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(4);
      classReader0.accept((ClassVisitor) classWriter0, 2);
      int int0 = 7299;
      classReader0.accept((ClassVisitor) classWriter0, 7299);
      classWriter0.newNameType("org.objectweb.asm.jip.Label", "^~0C^dlC0c~");
      String string0 = "byte";
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "byte");
      classWriter0.toByteArray();
      int int1 = (-2698);
      ByteVector byteVector0 = null;
      try {
        byteVector0 = new ByteVector((-2698));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(8);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      methodWriter0.visitAnnotation("org.objectweb.asm.jip.Label", false);
      ByteVector byteVector0 = new ByteVector();
      classReader0.getInterfaces();
      methodWriter0.visitTypeInsn(1, "org.objectweb.asm.jip.Label");
      methodWriter0.visitMaxs(2, 4);
      ByteVector byteVector1 = new ByteVector(8);
      classWriter0.addType("vyO6dVjo4Vj=8zgMDK");
      byteVector1.put11(1, 2);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, classReader0.b);
      ByteVector byteVector2 = classWriter0.pool;
      classWriter0.toByteArray();
      ByteVector byteVector3 = new ByteVector(1329);
      Integer.compare((-1276), 2);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      // Undeclared exception!
      try { 
        methodWriter0.visitLocalVariable("org.objectweb.asm.jip.Label", "vyO6dVjo4Vj=8zgMDK", "put", (Label) null, (Label) null, 670);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(260);
      int int0 = Frame.VALUE;
      classWriter0.firstMethod = null;
      classReader0.accept((ClassVisitor) classWriter0, 8388607);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      classWriter0.newNameType("org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
      classWriter0.getCommonSuperClass("org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.objectweb.asm.jip.Label");
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      int int1 = Frame.ELEMENT_OF;
      ByteVector byteVector0 = new ByteVector(4);
      byteVector0.put12(1104, (-268435456));
      byteVector0.put12((-268435456), 1104);
      classWriter0.firstMethod.put(byteVector0);
      // Undeclared exception!
      try { 
        classWriter0.firstMethod.visitParameterAnnotation(4, "org.objectweb.asm.jip.Label", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(259);
      int int0 = Frame.VALUE;
      classWriter0.firstMethod = null;
      classReader0.accept((ClassVisitor) classWriter0, 8388607);
      classReader0.copyPool(classWriter0);
      classWriter0.newNameType("org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
      classWriter0.getCommonSuperClass("org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "org.objectweb.asm.jip.Label");
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      int int1 = Frame.ELEMENT_OF;
      FieldWriter fieldWriter0 = classWriter0.lastField;
      classWriter0.firstMethod.getSize();
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(8);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = Frame.ELEMENT_OF;
      Attribute attribute0 = new Attribute("LocalVariableTypeTable");
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      classReader0.copyPool(classWriter0);
      methodWriter0.visitAnnotation("LocalVariableTypeTable", true);
      Frame frame0 = new Frame();
      methodWriter0.visitMultiANewArrayInsn("a\"$CBJj6}7\"]#", 2);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.put12(1606, 1446);
      ByteVector byteVector1 = byteVector0.putShort(1446);
      byteVector1.putUTF8("LocalVariableTypeTable");
      ByteVector byteVector2 = classWriter0.pool;
      classWriter0.toByteArray();
      ByteVector byteVector3 = null;
      try {
        byteVector3 = new ByteVector((-339));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.ByteVector", e);
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      Label label0 = new Label();
      ClassWriter classWriter0 = new ClassWriter(classReader0, 1);
      classWriter0.newFieldItem("inSameSubroutine", "inSameSubroutine", ";a{1)");
      String[] stringArray0 = new String[7];
      stringArray0[0] = ";a{1)";
      stringArray0[1] = "r\"ra/mPAQD@%4 Q(0(";
      stringArray0[2] = "";
      stringArray0[3] = "LocalVariableTypeTable";
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      stringArray0[4] = "org.objectweb.asm.jip.Label";
      stringArray0[5] = ";a{1)";
      stringArray0[6] = ";a{1)";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "LocalVariableTypeTable", "OiEb", "", stringArray0, false, false);
      methodWriter0.visitLocalVariable(";a{1)", ";a{1)", "7{H>7?we]R-@?", label0, label0, 2);
      boolean boolean0 = ClassReader.ANNOTATIONS;
      Attribute attribute0 = new Attribute("inSameSubroutine");
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.visitFieldInsn(2, "r\"ra/mPAQD@%4 Q(0(", "inSameSubroutine", "r\"ra/mPAQD@%4 Q(0(");
      ByteVector byteVector0 = classWriter0.pool;
      ByteVector byteVector1 = byteVector0.putUTF8("`?md}_FuwxvDmn");
      byteVector1.put12(200, 2);
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(233);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "Deprecated";
      stringArray0[1] = "Deprecated";
      stringArray0[2] = "Deprecated";
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 233, "Deprecated", "Deprecated", "Deprecated", stringArray0, false, false);
      Attribute attribute0 = new Attribute("Deprecated");
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      Integer integer0 = new Integer(2);
      methodWriter0.visitTryCatchBlock(label1, label0, label0, "Deprecated");
      methodWriter0.visitTypeInsn(2, "Deprecated");
      Frame frame0 = new Frame();
      label1.frame = frame0;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      methodWriter0.visitJumpInsn(2, label1);
      Integer integer1 = new Integer(2);
      label1.toString();
      Label[] labelArray0 = new Label[1];
      Label label2 = new Label();
      Frame frame1 = new Frame();
      label1.frame = frame1;
      label2.info = (Object) "Deprecated";
      labelArray0[0] = label2;
      methodWriter0.visitTableSwitchInsn(233, 233, label1, labelArray0);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.put(byteVector0);
      methodWriter0.visitLocalVariable("5", "Deprecated", "Deprecated", label1, label1, (-629));
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2123);
      classReader0.getInterfaces();
      int int0 = Type.SHORT;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector(1);
      ByteVector byteVector1 = byteVector0.putUTF8("org.objectweb.asm.jip.Label");
      methodWriter0.classReaderLength = 1142;
      ByteVector byteVector2 = byteVector0.putInt(4);
      ByteVector byteVector3 = new ByteVector();
      byteVector1.putByte(4);
      byteVector3.put12(2123, 1);
      methodWriter0.visitMethodInsn(1, "+N82x", "+N82x", "org.objectweb.asm.jip.Label");
      classReader0.getInterfaces();
      ByteVector byteVector4 = byteVector2.putShort(2123);
      ByteVector byteVector5 = new ByteVector();
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitMethodInsn(1, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
      classReader0.accept((ClassVisitor) classWriter0, 1142);
      methodWriter1.next = methodWriter0;
      methodWriter1.visitFrame(171, (-25), (Object[]) null, 2, (Object[]) null);
      methodWriter1.put(byteVector4);
      // Undeclared exception!
      try { 
        methodWriter1.visitParameterAnnotation((-1072), "h*8sv}1nXD[KR-n(f.}", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 27
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(499);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      ByteVector byteVector0 = new ByteVector();
      classReader0.getInterfaces();
      byteVector0.putShort(8);
      ByteVector byteVector1 = new ByteVector(499);
      methodWriter0.visitFrame(1, (-259), (Object[]) null, 1, (Object[]) null);
      ByteVector byteVector2 = new ByteVector(4);
      byteVector0.putUTF8("lL=-3c}G?DU={;w;'<");
      int int0 = 1942;
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, (String) null);
      Label[] labelArray0 = new Label[0];
      // Undeclared exception!
      try { 
        classReader0.readLabel(499, labelArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 499
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(248);
      int int0 = Type.VOID;
      classWriter0.firstMethod = null;
      classReader0.accept((ClassVisitor) classWriter0, 0);
      ByteVector byteVector0 = classWriter0.pool;
      classReader0.getSuperName();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, false);
      AnnotationVisitor annotationVisitor0 = classWriter0.firstMethod.visitAnnotationDefault();
      classReader0.copyPool(classWriter0);
      Integer.getInteger("org.objectweb.asm.jip.Label", 758);
      classWriter0.firstMethod.put(byteVector0);
      // Undeclared exception!
      try { 
        classWriter0.firstMethod.visitLdcInsn(annotationVisitor0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value org.objectweb.asm.jip.AnnotationWriter@17e
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classReader0.accept((ClassVisitor) classWriter0, 8);
      classWriter0.newNameType("org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      Frame frame0 = new Frame();
      Label label0 = new Label();
      Label label1 = frame0.owner;
      Attribute attribute1 = new Attribute("org.objectweb.asm.jip.Label");
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter2.visitAttribute(attribute0);
      methodWriter0.getSize();
      methodWriter2.visitAnnotationDefault();
      // Undeclared exception!
      try { 
        methodWriter2.visitParameterAnnotation(371, "VI}!@j=xd\"", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 371
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(233);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ">.ohIhfT/";
      stringArray0[1] = ">.ohIhfT/";
      stringArray0[2] = ">.ohIhfT/";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 233, ">.ohIhfT/", ">.ohIhfT/", ">.ohIhfT/", stringArray0, false, false);
      Attribute attribute0 = new Attribute(">.ohIhfT/");
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      Integer integer0 = new Integer(1);
      label0.status = 2270;
      methodWriter0.visitTryCatchBlock(label1, label0, label0, ">.ohIhfT/");
      int int0 = 1831;
      methodWriter0.visitTypeInsn(1831, ">.ohIhfT/");
      int[] intArray0 = new int[1];
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      methodWriter0.visitJumpInsn(1831, label1);
      Integer.getInteger(">.ohIhfT/");
      Label label2 = label1.getFirst();
      Object object0 = new Object();
      label2.info = object0;
      label2.toString();
      Label[] labelArray0 = new Label[5];
      labelArray0[0] = label0;
      labelArray0[1] = label1;
      // Undeclared exception!
      try { 
        classWriter0.getCommonSuperClass(">.ohIhfT/", "L11");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // java.lang.ClassNotFoundException: Class '>/ohIhfT/.class' should be in target project, but could not be found!
         //
         verifyException("org.objectweb.asm.jip.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(233);
      String[] stringArray0 = new String[3];
      stringArray0[0] = ">.ohIhfT/";
      stringArray0[1] = ">.ohIhfT/";
      stringArray0[2] = ">.ohIhfT/";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 233, ">.ohIhfT/", ">.ohIhfT/", ">.ohIhfT/", stringArray0, false, false);
      Attribute attribute0 = new Attribute(">.ohIhfT/");
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      Integer integer0 = new Integer(1);
      methodWriter0.visitTryCatchBlock(label1, label0, label0, ">.ohIhfT/");
      methodWriter0.visitTypeInsn(1831, ">.ohIhfT/");
      int[] intArray0 = new int[1];
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      methodWriter0.visitJumpInsn(1831, label1);
      Integer.getInteger(">.ohIhfT/");
      Label label2 = label1.getFirst();
      label2.toString();
      Label[] labelArray0 = new Label[5];
      labelArray0[0] = label0;
      labelArray0[1] = label2;
      label0.toString();
      methodWriter0.visitVarInsn(2, (-1366));
      methodWriter0.visitAttribute(attribute0);
      methodWriter0.exceptions = intArray0;
      methodWriter0.visitMethodInsn(1, ">.ohIhfT/", ">.ohIhfT/", ">.ohIhfT/");
      methodWriter0.visitFieldInsn(20, "L11", "L11", ">.ohIhfT/");
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.putUTF8(">.ohIhfT/");
      byteVector0.put11((-1366), 20);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitTryCatchBlock(label0, label0, label0, "OI{n0u;znm");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-1996609039), ">.ohIhfT/", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 9
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(251);
      int int0 = Frame.FLOAT;
      classWriter0.firstMethod = null;
      classReader0.accept((ClassVisitor) classWriter0, 16777218);
      ByteVector byteVector0 = new ByteVector(251);
      ByteVector byteVector1 = byteVector0.putShort(8);
      classWriter0.newNameType("org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
      classReader0.getClassName();
      ByteVector byteVector2 = byteVector1.putByte(2);
      byteVector0.data = classReader0.b;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      byteVector2.put12(251, 8);
      ByteVector byteVector3 = byteVector1.putByteArray(classReader0.b, 4, 2123);
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      classWriter0.firstMethod.getSize();
      String string0 = "nSwd9xM~\\u";
      ByteVector byteVector4 = byteVector1.putUTF8(string0);
      byteVector3.putInt(2);
      ByteVector byteVector5 = byteVector4.putInt(251);
      byteVector4.putByte(251);
      classWriter0.firstMethod.visitMethodInsn(153, "byte", "org.objectweb.asm.jip.Label", string0);
      classWriter0.firstMethod.put(byteVector5);
      classWriter0.firstMethod.visitMaxs(8, (-1048576));
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1904));
      int int0 = Member.PUBLIC;
      classWriter0.newNameTypeItem("RuntimeInvisibleParameterAnnotations", "org.objectweb.asm.jip.Label");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1978), "org.objectweb.asm.jip.Label", "^~0C^dlC0c~", "org.objectweb.asm.jip.Label", (String[]) null, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Integer.compare((-1904), 128);
      methodWriter0.visitVarInsn(128, (-1904));
      Integer integer0 = new Integer((-1904));
      Frame frame0 = new Frame();
      classWriter0.visitSource("org.objectweb.asm.jip.Label", "S$5p%|Lw)aIkKi");
      methodWriter0.visitParameterAnnotation(1237, "Ljava/lang/Synthetic;", true);
      classWriter0.version = 24;
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      Label label2 = label1.getFirst();
      methodWriter0.visitTryCatchBlock(label1, label2, label1, "RuntimeInvisibleParameterAnnotations");
      methodWriter0.visitLabel(label1);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(classReader0, 2);
      classReader0.accept((ClassVisitor) classWriter0, 8);
      classWriter0.newNameType("org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
      Attribute attribute0 = new Attribute("org.objectweb.asm.jip.Label");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = Frame.ELEMENT_OF;
      Attribute attribute1 = new Attribute("RuntimeVisibleParameternnotations");
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      classReader0.copyPool(classWriter0);
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter2.visitAnnotation("RuntimeVisibleParameternnotations", false);
      methodWriter1.visitMultiANewArrayInsn("!#!(wj0/HV$&d$pH", 2123);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.put12(4, (-2644));
      byteVector0.putUTF8("o|7dh*3im}&a}(");
      ByteVector byteVector1 = classWriter0.pool;
      classWriter0.toByteArray();
      ByteVector byteVector2 = new ByteVector(4694);
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn(1328, 1017);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      ClassReader classReader0 = new ClassReader("org.objectweb.asm.jip.Label");
      ClassWriter classWriter0 = new ClassWriter(2);
      classReader0.accept((ClassVisitor) classWriter0, 8);
      classWriter0.newNameType("org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter0 = classWriter0.lastMethod;
      Frame frame0 = new Frame();
      Label label0 = new Label();
      Label label1 = new Label();
      label1.toString();
      Label label2 = new Label();
      Frame frame1 = new Frame();
      Label[] labelArray0 = new Label[0];
      methodWriter0.visitIincInsn(2123, (-1777));
      methodWriter0.visitTableSwitchInsn(8, (-266), label2, labelArray0);
      methodWriter0.visitJumpInsn(28, label1);
      MethodWriter.writeShort(classReader0.b, 20, 29);
      methodWriter0.visitLabel(label1);
      methodWriter0.visitFieldInsn((-1777), "Vk", "org.objectweb.asm.jip.Label", "org.objectweb.asm.jip.Label");
      label2.info = (Object) frame0;
      MethodWriter.readUnsignedShort(classReader0.b, 1);
      methodWriter0.visitLabel(label2);
      int[] intArray0 = new int[6];
      intArray0[0] = 6;
      intArray0[1] = 178;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      methodWriter0.visitLabel(label1);
  }
}
