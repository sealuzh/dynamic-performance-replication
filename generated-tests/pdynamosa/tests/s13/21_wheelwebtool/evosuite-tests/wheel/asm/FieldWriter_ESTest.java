/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 22:32:01 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2309);
      classWriter0.index = (-900);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "C!^tantVa8ue", "C!^tantVa8ue", "C!^tantVa8ue", "C!^tantVa8ue");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-702));
      classWriter0.version = 49;
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-702), "cd10?s_Qrj*Ta", "cd10?s_Qrj*Ta", "cd10?s_Qrj*Ta", "cd10?s_Qrj*Ta");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2309);
      classWriter0.index = (-900);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "C!^tantVa8ue", "C!^tantVa8ue", "C!^tantVa8ue", "C!^tantVa8ue");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-805), "d|WcXD'5qaWE", "d|WcXD'5qaWE", "d|WcXD'5qaWE", "d|WcXD'5qaWE");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-805), "d|WcXD'5qaWE", "d|WcXD'5qaWE", "d|WcXD'5qaWE", "d|WcXD'5qaWE");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2319);
      Object object0 = new Object();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-3141), "P", "ConstantValue", "ConstantValue", object0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value java.lang.Object@351d770f
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "IY!lFzN5L7", "hJWIo3'Z_Ttq 0#{7XU", "hJWIo3'Z_Ttq 0#{7XU", "IY!lFzN5L7");
      Attribute attribute0 = new Attribute("pQ%Wu?:B9Hkn");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector();
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2309);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "C!^tantVa8ue", "C!^tantVa8ue", "C!^tantVa8ue", "C!^tantVa8ue");
      fieldWriter0.visitAnnotation("o)Up5zXwEAoL~g", false);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2319);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 10, "ConstantValue", "", (String) null, "ConstantValue");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2321);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "cf4$gcmd";
      stringArray0[1] = "cf4$gcmd";
      classWriter0.visit((-2588), (-2588), "cf4$gcmd", "double", "cf4$gcmd", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2588), "", "double", "", "double");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2321);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2588), "", "double", "", "double");
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2341);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "]P%L4", "]P%L4", "java/lang/Class", ".aTLEk");
      Attribute attribute0 = new Attribute("");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-805), "d|WcXD'5qaWE", "d|WcXD'5qaWE", "d|WcXD'5qaWE", "d|WcXD'5qaWE");
      fieldWriter0.visitAnnotation("", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2319);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 10, "ConstantValue", "", (String) null, "ConstantValue");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2321);
      String[] stringArray0 = new String[2];
      stringArray0[0] = "cf4$gcmd";
      stringArray0[1] = "cf4$gcmd";
      classWriter0.visit((-2588), (-2588), "cf4$gcmd", "double", "cf4$gcmd", stringArray0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2588), "", "double", "", "double");
      int int0 = fieldWriter0.getSize();
      assertEquals(30, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2268), "P", "e@UV0(/e:s;", "adzvSM{g,<", (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2309);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "C!^tantVa8ue", "C!^tantVa8ue", "C!^tantVa8ue", "C!^tantVa8ue");
      fieldWriter0.visitAnnotation("o)Up5zXwEAoL~g", true);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2309);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "C!^tantVa8ue", "C!^tantVa8ue", "C!^tantVa8ue", "C!^tantVa8ue");
      fieldWriter0.visitAnnotation("o)Up5zXwEAoL~g", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-246), "d|WcXD'5qaWE", "Signature", "d|WcXD'5qaWE", (Object) null);
      ByteVector byteVector0 = new ByteVector(168);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2319);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2319, "ConstantValue", "ConstantValue", "ConstantValue", "ConstantValue");
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 10, "ConstantValue", "", (String) null, "ConstantValue");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2319);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 256, "d|WcXD'5qaWE", "d|WcXD'5qaWE", "", "d|WcXD'5qaWE");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2321);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2588), "", "double", "", "double");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }
}
