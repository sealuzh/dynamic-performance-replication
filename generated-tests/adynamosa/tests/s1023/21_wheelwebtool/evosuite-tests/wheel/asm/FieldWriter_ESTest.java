/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 23 11:48:58 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1041);
      ByteVector byteVector0 = new ByteVector(1041);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "!Wk\":Mn", ")9l", "!Wk\":Mn", (Object) null);
      classWriter0.version = (-721);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1041);
      classWriter0.index = (-4158);
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3759, "!Wk\":Mn", "", "", "!Wk\":Mn");
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1041);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "!Wk\":Mn", ")9l", "!Wk\":Mn", (Object) null);
      classWriter0.version = (-721);
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1041);
      classWriter0.index = (-4158);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 3759, "!Wk\":Mn", "", "", "!Wk\":Mn");
      int int0 = fieldWriter0.getSize();
      assertEquals(24, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1556);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "6N_,H", "6N_,H", "6N_,H", (Object) null);
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1556);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1556, "", "!Wk\":Mn", "kifo", "!Wk\":Mn");
      // Undeclared exception!
      try { 
        fieldWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1556);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "", "wheel.asm.ByteVector", "Synthetic", "wheel.asm.ByteVector");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1556);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "!Wk\":Mn", "!Wk\":Mn", "!Wk\":Mn", (Object) null);
      // Undeclared exception!
      try { 
        fieldWriter0.visitAnnotation((String) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1556);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "!Wk\":n", "!Wk\":n", "!Wk\":n", "!Wk\":n");
      Attribute attribute0 = new Attribute("!Wk\":n");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = new ByteVector(4100);
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1556);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "!Wk\":n", "!Wk\":n", "!Wk\":n", "!Wk\":n");
      Attribute attribute0 = new Attribute("!Wk\":n");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(183);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-2601), "", (String) null, (String) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1041);
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, 424, "MTHCY", ")9l", "MTHCY", byteVector0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ByteVector@6
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1041);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "MTHCY", ")9l", "MTHCY", (Object) null);
      Attribute attribute0 = new Attribute(")9l");
      byte[] byteArray0 = new byte[9];
      attribute0.value = byteArray0;
      fieldWriter0.visitAttribute(attribute0);
      byte[] byteArray1 = classWriter0.toByteArray();
      assertEquals(99, byteArray1.length);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1041);
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "MTHCY", ")9l", "MTHCY", (Object) null);
      fieldWriter0.visitAnnotation(")9l", false);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1041);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, ")9l", "[86", "wHI|~ ZwP(,i(IBOSSV", "!Wk\":Mn");
      fieldWriter0.visitAnnotation("#vV#;|Y`}<=oYn", true);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1556);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "G%fJ%L40Q4:&", "InnerClasses", (String) null, "InnerClasses");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1041);
      ByteVector byteVector0 = new ByteVector(1041);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-493), "", "!Wk\":Mn", "", "");
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1041);
      ByteVector byteVector0 = new ByteVector();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "MTHCY", ")9l", "MTHCY", (Object) null);
      classWriter0.version = 2;
      classWriter0.version = 49;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2962);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "|72q2<&vyM/Gk", "|72q2<&vyM/Gk", "|72q2<&vyM/Gk", "|72q2<&vyM/Gk");
      fieldWriter0.visitAnnotation("|72q2<&vyM/Gk", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1041);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-493), "", "!Wk\":Mn", "", "");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1041);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "MTHCY", ")9l", "MTHCY", (Object) null);
      classWriter0.version = 2;
      classWriter0.version = 49;
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1041);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4096, "MTHCY", ")9l", "MTHCY", (Object) null);
      fieldWriter0.visitAnnotation(")9l", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(34, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1556);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "G%fJ%L40Q4:&", "InnerClasses", (String) null, "InnerClasses");
      int int0 = fieldWriter0.getSize();
      assertEquals(16, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1041);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 4108, "!Wk\":Mn", "!Wk\":Mn", "!Wk\":Mn", (Object) null);
      FieldWriter fieldWriter1 = new FieldWriter(classWriter0, 3759, "!Wk\":Mn", "", "", "!Wk\":Mn");
      assertFalse(fieldWriter1.equals((Object)fieldWriter0));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "EB}.", "q", "EB}.", "q");
      fieldWriter0.visitEnd();
  }
}
