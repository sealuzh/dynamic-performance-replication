/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 08:45:31 GMT 2018
 */

package com.soops.CEN4010.JMCA.JParser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.MockitoExtension.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.soops.CEN4010.JMCA.JParser.JavaCharStream;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileDescriptor;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.LineNumberReader;
import java.io.ObjectInputStream;
import java.io.ObjectStreamConstants;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.PushbackInputStream;
import java.io.PushbackReader;
import java.io.Reader;
import java.io.SequenceInputStream;
import java.io.StringReader;
import java.nio.charset.Charset;
import java.util.Enumeration;
import java.util.Locale;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.mock.java.io.MockFileReader;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class JavaCharStream_ESTest extends JavaCharStream_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      try { 
        JavaCharStream.hexval('T');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 1, 1);
      char char0 = 'G';
      try { 
        JavaCharStream.hexval('G');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      int int0 = JavaCharStream.hexval('B');
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, (-2912), (-3431), (-3431));
      javaCharStream0.ReInit((InputStream) pipedInputStream0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (-1), 106);
      javaCharStream0.getBeginColumn();
      // Undeclared exception!
      try { 
        javaCharStream0.getColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.BeginToken();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      PushbackReader pushbackReader0 = new PushbackReader(stringReader0, 95);
      int int0 = 76;
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackReader0, 65, 65, 76);
      try { 
        javaCharStream0.ReadByte();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader(609);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedReader0);
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((Reader) null, 92, 92, (-1798));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 2048, 85);
      javaCharStream0.Done();
      javaCharStream0.ReInit((Reader) null, 85, 10);
      javaCharStream0.adjustBeginLineColumn(7, 10);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0, 84, (-148), (-1));
      javaCharStream0.Done();
      // Undeclared exception!
      try { 
        javaCharStream0.GetImage();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      JavaCharStream javaCharStream0 = new JavaCharStream(sequenceInputStream0, (-1961), (-1961));
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0);
      javaCharStream0.ReInit((InputStream) pushbackInputStream0, (-1), (-1961));
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(92);
      PushbackInputStream pushbackInputStream0 = new PushbackInputStream(pipedInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(pushbackInputStream0, 92, 0);
      javaCharStream0.AdjustBuffSize();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream(pipedInputStream0, 1629);
      JavaCharStream javaCharStream0 = new JavaCharStream(bufferedInputStream0, 45, 1629);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndColumn();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)26;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (-1104), 3705);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, byteArrayInputStream0.available());
      assertEquals('\u001A', char0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)63;
      byteArray0[1] = (byte) (-90);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, (byte) (-90), (byte) (-90));
      javaCharStream0.ReInit((Reader) null);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, (-1060), (-1060), (-1060));
      // Undeclared exception!
      try { 
        javaCharStream0.ExpandBuff(true);
        fail("Expecting exception: Error");
      
      } catch(Error e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      try { 
        JavaCharStream.hexval('U');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'b';
      int int0 = JavaCharStream.hexval('b');
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      int int0 = JavaCharStream.hexval('3');
      assertEquals(3, int0);
      
      int int1 = JavaCharStream.hexval('0');
      assertEquals(0, int1);
      
      int int2 = JavaCharStream.hexval('3');
      assertEquals(3, int2);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      JavaCharStream.hexval('a');
      try { 
        JavaCharStream.hexval('I');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      char[] charArray0 = new char[3];
      charArray0[0] = 'b';
      charArray0[1] = '9';
      int int0 = JavaCharStream.hexval('9');
      assertEquals(9, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte) (-18);
      PipedInputStream pipedInputStream0 = new PipedInputStream((byte)4);
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedInputStream0);
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginLine();
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      JavaCharStream javaCharStream0 = new JavaCharStream(mockFileInputStream0, 2242, 1, 2242);
      // Undeclared exception!
      try { 
        javaCharStream0.getEndLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      try { 
        JavaCharStream.hexval('V');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      int int0 = ObjectStreamConstants.baseWireHandle;
      JavaCharStream.hexval('4');
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, '4', 0);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      javaCharStream0.getBeginLine();
      MockFileReader mockFileReader0 = null;
      try {
        mockFileReader0 = new MockFileReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
        fail("Expecting exception: FileNotFoundException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.mock.java.io.MockFileInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('Z');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      StringReader stringReader0 = new StringReader("");
      StringReader stringReader1 = new StringReader("=:Gtv8Sq_LL,{Mqbf<?");
      try { 
        JavaCharStream.hexval('X');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("V5/$hGSNS)z_S");
      StringReader stringReader1 = new StringReader("");
      int int0 = (-3706);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-3706));
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.adjustBeginLineColumn((-1144), 0);
      stringReader0.markSupported();
      try { 
        JavaCharStream.hexval('O');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)0;
      try { 
        JavaCharStream.hexval('K');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)3;
      byte byte1 = (byte) (-30);
      int int0 = ObjectStreamConstants.baseWireHandle;
      try { 
        JavaCharStream.hexval('_');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)2;
      char char0 = 'B';
      JavaCharStream.hexval('2');
      try { 
        JavaCharStream.hexval('p');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)0;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("_S~)~6}/D5.\u0007");
      byteArrayInputStream0.markSupported();
      StringReader stringReader1 = new StringReader("_S~)~6}/D5.\u0007");
      int int0 = ObjectStreamConstants.baseWireHandle;
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 83, 77);
      javaCharStream0.BeginToken();
      JavaCharStream.hexval('D');
      javaCharStream0.AdjustBuffSize();
      javaCharStream0.getBeginColumn();
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      javaCharStream0.GetSuffix((byte)0);
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      try { 
        JavaCharStream.hexval('@');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)4;
      byteArray0[2] = (byte) (-18);
      byteArray0[0] = (byte)0;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[4] = (byte) (-108);
      int int0 = JavaCharStream.hexval('F');
      assertEquals(15, int0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      byteArray0[1] = (byte)0;
      JavaCharStream.hexval('C');
      try { 
        JavaCharStream.hexval('>');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)2;
      byteArray0[2] = (byte) (-14);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte)0;
      byteArray0[6] = (byte)104;
      byteArray0[7] = (byte) (-15);
      int int0 = JavaCharStream.hexval('5');
      assertEquals(5, int0);
      
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(dataInputStream0, 7, 7, (-1753));
      char[] charArray0 = javaCharStream0.GetSuffix(1);
      assertArrayEquals(new char[] {'\u0000'}, charArray0);
      assertEquals((-1), javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      char char0 = ';';
      try { 
        JavaCharStream.hexval(';');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      JavaCharStream.hexval('E');
      JavaCharStream.hexval('E');
      JavaCharStream.hexval('A');
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup(10);
      javaCharStream0.GetImage();
      assertEquals(4085, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      try { 
        JavaCharStream.hexval('`');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte) (-34);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      try { 
        JavaCharStream.hexval('=');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('M');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      try { 
        JavaCharStream.hexval('Q');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      int int0 = ObjectStreamConstants.baseWireHandle;
      try { 
        JavaCharStream.hexval('L');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)3;
      byteArray0[0] = (byte)3;
      char char0 = 'J';
      try { 
        JavaCharStream.hexval('J');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      int int0 = JavaCharStream.hexval('c');
      assertEquals(12, int0);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      JavaCharStream javaCharStream0 = new JavaCharStream(pipedReader0, 88, 88);
      // Undeclared exception!
      try { 
        javaCharStream0.getLine();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      String string0 = " column ";
      try { 
        JavaCharStream.hexval('S');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      char char0 = 'R';
      try { 
        JavaCharStream.hexval('R');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      JavaCharStream.hexval('0');
      char char0 = 'H';
      try { 
        JavaCharStream.hexval('H');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      JavaCharStream.hexval('7');
      int int0 = JavaCharStream.hexval('8');
      assertEquals(8, int0);
      
      int int1 = JavaCharStream.hexval('7');
      assertEquals(7, int1);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      try { 
        JavaCharStream.hexval('^');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)62;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      int int0 = 1086;
      try { 
        JavaCharStream.hexval('\\');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byte byte0 = (byte)4;
      byteArray0[1] = (byte)4;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      EvoSuiteFile evoSuiteFile0 = null;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      try { 
        JavaCharStream.hexval('Y');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      StringReader stringReader0 = new StringReader("");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      StringReader stringReader1 = new StringReader("J'Cm7f/LO#$j\"eL8!A");
      stringReader0.read();
      stringReader1.skip(0L);
      stringReader0.read();
      try { 
        JavaCharStream.hexval('W');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)2;
      byte byte0 = (byte)0;
      byteArray0[3] = (byte)0;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream.hexval('A');
      try { 
        JavaCharStream.hexval('<');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      StringReader stringReader0 = new StringReader("");
      char char0 = File.pathSeparatorChar;
      char char1 = File.pathSeparatorChar;
      try { 
        JavaCharStream.hexval('[');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      byteArray0[0] = (byte)67;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("V5/$hGSNS)z_S");
      StringReader stringReader1 = new StringReader("");
      stringReader1.read();
      stringReader1.skip(0L);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 0, (-3706));
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      javaCharStream0.prevCharIsLF = true;
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('5', char0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      JavaCharStream.hexval('e');
      PipedInputStream pipedInputStream0 = new PipedInputStream(14);
      ObjectInputStream objectInputStream0 = null;
      try {
        objectInputStream0 = new ObjectInputStream(pipedInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      byte[] byteArray0 = new byte[10];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      StringReader stringReader0 = new StringReader("V5/$hGSNS)z_S");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 8, 0);
      javaCharStream0.getBeginColumn();
      javaCharStream0.BeginToken();
      stringReader0.markSupported();
      try { 
        JavaCharStream.hexval('P');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      StringReader stringReader0 = new StringReader("p^@");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      char char0 = File.pathSeparatorChar;
      try { 
        JavaCharStream.hexval(':');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      StringReader stringReader0 = new StringReader("svGUS5iPS>3:^");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 1, (byte)0);
      javaCharStream0.BeginToken();
      javaCharStream0.backup(1);
      JavaCharStream.hexval('6');
      javaCharStream0.adjustBeginLineColumn(1, 6);
      assertEquals(2047, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      JavaCharStream.hexval('d');
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      StringReader stringReader0 = new StringReader("svGUS5iPS>3:^");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, false, false);
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, 3, 13, (byte)0);
      javaCharStream0.BeginToken();
      javaCharStream0.backup(13);
      assertEquals(2035, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)67;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(inputStreamReader0, (byte)67, 1086, (byte)3);
      javaCharStream0.backup((byte)67);
      javaCharStream0.AdjustBuffSize();
      byteArrayInputStream0.close();
      // Undeclared exception!
      try { 
        javaCharStream0.readChar();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -64
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(inputStreamReader0, (byte)3, (-3299), (byte)3);
      javaCharStream0.backup((byte)3);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      byteArrayInputStream0.close();
      javaCharStream0.readChar();
      StringReader stringReader0 = new StringReader("x!t9+nb\t");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.readChar();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.close();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.available = (-1);
      char[] charArray0 = javaCharStream1.buffer;
      char char0 = File.pathSeparatorChar;
      javaCharStream0.BeginToken();
      JavaCharStream.hexval('f');
      javaCharStream0.Done();
      assertEquals(2, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      try { 
        JavaCharStream.hexval(']');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(inputStreamReader0);
      javaCharStream0.backup(117);
      javaCharStream0.BeginToken();
      char[] charArray0 = javaCharStream0.buffer;
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.UpdateLineColumn('\u0000');
      javaCharStream0.AdjustBuffSize();
      assertEquals(0, javaCharStream0.bufpos);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(inputStreamReader0, (byte)3, (-3299), (byte)3);
      javaCharStream0.backup((byte)3);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      byteArrayInputStream0.close();
      javaCharStream0.readChar();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.readChar();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream1.close();
      javaCharStream0.available = (int) '\u0000';
      char[] charArray0 = javaCharStream0.buffer;
      char char0 = File.pathSeparatorChar;
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      try { 
        JavaCharStream.hexval('\u0000');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      StringReader stringReader0 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      StringReader stringReader1 = new StringReader("com.soops.CEN4010.JMCA.JParser.JavaCharStream");
      stringReader0.reset();
      char[] charArray0 = new char[1];
      char char0 = File.pathSeparatorChar;
      char char1 = File.separatorChar;
      try { 
        JavaCharStream.hexval('N');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte)3;
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null);
      javaCharStream0.backup((byte)3);
      javaCharStream0.BeginToken();
      javaCharStream0.available = (-4617);
      javaCharStream0.GetSuffix((byte)3);
      javaCharStream0.BeginToken();
      javaCharStream0.BeginToken();
      javaCharStream0.UpdateLineColumn('\u0000');
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)3, 1);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0, 4095, 1);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArrayInputStream0.reset();
      byteArrayInputStream0.read(byteArray0);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (-4103), 2048);
      byteArrayInputStream1.skip((byte)3);
      Enumeration<InputStream> enumeration0 = (Enumeration<InputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(enumeration0).hasMoreElements();
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      javaCharStream0.AdjustBuffSize();
      assertEquals(1, javaCharStream0.getEndColumn());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      Reader reader0 = null;
      JavaCharStream javaCharStream0 = new JavaCharStream((Reader) null, 2491, 2491, 2491);
      javaCharStream0.Done();
      int int0 = 98;
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      DataInputStream dataInputStream0 = new DataInputStream(bufferedInputStream0);
      javaCharStream0.ReInit((InputStream) dataInputStream0);
      javaCharStream0.available = 3;
      int int1 = 1533;
      javaCharStream0.AdjustBuffSize();
      int int2 = 868;
      // Undeclared exception!
      try { 
        javaCharStream0.ReInit((InputStream) null, 1533, (-1302), 1533);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.Reader", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0, 2175, 87, 724);
      char char0 = javaCharStream0.BeginToken();
      assertEquals(0, javaCharStream0.bufpos);
      assertEquals('\r', char0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(inputStreamReader0, 10, 0, (byte)13);
      javaCharStream0.BeginToken();
      javaCharStream0.UpdateLineColumn('\r');
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)13;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      int int0 = (-1);
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      char char0 = Locale.UNICODE_LOCALE_EXTENSION;
      byteArrayInputStream0.reset();
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte)13;
      byteArray1[1] = (byte)13;
      byteArray1[2] = (byte)13;
      byteArray1[3] = (byte)13;
      byteArray1[4] = (byte)13;
      byteArray1[5] = (byte)13;
      byteArray1[6] = (byte)13;
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray1);
      try { 
        JavaCharStream.hexval('?');
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(inputStreamReader0, (byte)3, (byte)3, (byte)3);
      javaCharStream0.backup((byte)3);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      javaCharStream0.backup(0);
      int int1 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      byteArrayInputStream0.close();
      javaCharStream0.readChar();
      StringReader stringReader0 = new StringReader("x!t9+nb\t");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      javaCharStream0.readChar();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream1 = new JavaCharStream(byteArrayInputStream0);
      char[] charArray0 = javaCharStream0.buffer;
      char char0 = File.pathSeparatorChar;
      javaCharStream1.BeginToken();
      try { 
        javaCharStream1.BeginToken();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)10;
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      mockFileInputStream0.release();
      JavaCharStream javaCharStream0 = new JavaCharStream(byteArrayInputStream0);
      javaCharStream0.readChar();
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)11;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(inputStreamReader0, 10, 0, (byte)11);
      javaCharStream0.BeginToken();
      javaCharStream0.UpdateLineColumn('\u000B');
      javaCharStream0.backup((-341));
      try { 
        javaCharStream0.FillBuff();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.soops.CEN4010.JMCA.JParser.JavaCharStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)12;
      StringReader stringReader0 = new StringReader("_S~)~6}/D5.\u0007");
      JavaCharStream javaCharStream0 = new JavaCharStream(stringReader0, (byte)12, (byte)12);
      javaCharStream0.BeginToken();
      JavaCharStream javaCharStream1 = new JavaCharStream(stringReader0, (-771), (byte)12);
      javaCharStream1.backup('_');
      javaCharStream0.readChar();
      FileDescriptor fileDescriptor0 = new FileDescriptor();
      MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
      DataInputStream dataInputStream0 = new DataInputStream(mockFileInputStream0);
      StringReader stringReader1 = new StringReader("_S~)~6}/D5.\u0007");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      byteArrayInputStream0.close();
      JavaCharStream javaCharStream2 = new JavaCharStream(byteArrayInputStream0);
      JavaCharStream javaCharStream3 = new JavaCharStream(byteArrayInputStream0);
      char[] charArray0 = javaCharStream3.buffer;
      char char0 = File.pathSeparatorChar;
      javaCharStream1.BeginToken();
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      javaCharStream2.BeginToken();
      JavaCharStream.hexval('1');
      javaCharStream2.AdjustBuffSize();
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, 4001, 0);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0, 0, 2083);
      ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(byteArray0);
      byte[] byteArray1 = null;
      ByteArrayInputStream byteArrayInputStream4 = null;
      try {
        byteArrayInputStream4 = new ByteArrayInputStream((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      byteArray0[0] = (byte)3;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      InputStreamReader inputStreamReader0 = new InputStreamReader(byteArrayInputStream0);
      JavaCharStream javaCharStream0 = new JavaCharStream(inputStreamReader0, (byte)3, (-3268), (byte)3);
      javaCharStream0.backup((byte)3);
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      byteArrayInputStream0.close();
      javaCharStream0.readChar();
      javaCharStream0.bufpos = 1;
      StringReader stringReader0 = new StringReader("x!t9+nb\t");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      inputStreamReader0.getEncoding();
      javaCharStream0.readChar();
      byteArrayInputStream0.read(byteArray0);
      byteArrayInputStream0.close();
      byteArrayInputStream0.mark((byte)3);
      javaCharStream0.BeginToken();
      javaCharStream0.inputStream = (Reader) inputStreamReader0;
      ByteArrayInputStream byteArrayInputStream1 = new ByteArrayInputStream(byteArray0, (-3268), 41);
      ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(byteArray0);
      javaCharStream0.ReInit((InputStream) byteArrayInputStream1, 41, 27);
      ByteArrayInputStream byteArrayInputStream3 = null;
      try {
        byteArrayInputStream3 = new ByteArrayInputStream((byte[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
