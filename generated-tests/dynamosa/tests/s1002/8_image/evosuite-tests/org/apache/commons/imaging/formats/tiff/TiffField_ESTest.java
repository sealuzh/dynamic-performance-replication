/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 02 23:43:03 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte) (-93);
      byteArray0[5] = (byte) (-93);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-4276), (byte) (-93), fieldTypeRational0, 3068L, (byte)0, byteArray0, byteOrder0, (-2147483646));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals((-4276), tiffField0.getTag());
      assertEquals(24544, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2147483646), tiffField0.getSortHint());
      assertEquals(1, int0);
      assertEquals((-93), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[5] = (byte) (-93);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-4276), (byte) (-93), fieldTypeRational0, 3068L, (byte)0, byteArray0, byteOrder0, (-2147483646));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(24544, tiffField0.getBytesLength());
      assertEquals((-4276), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-93), tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals((-2147483646), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[7];
      TiffField tiffField0 = new TiffField(50938, 1, fieldTypeAscii0, 4L, 50938, byteArray0, (ByteOrder) null, 598);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals(50938, tiffField0.getOffset());
      assertEquals(598, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(50938, tiffField0.getTag());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(27, (-3823), fieldTypeDouble0, 4043, (-39904L), byteArray0, byteOrder0, 50941);
      String string0 = tiffField0.toString();
      assertEquals((-3823), tiffField0.getDirectoryType());
      assertEquals((-39904), tiffField0.getOffset());
      assertEquals("27 (0x1b: GPSProcessingMethod): Invalid value: GPS text field not encoded as bytes. (4043 Double)", string0);
      assertEquals(50941, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(72, 72, fieldTypeRational0, 72, 72, byteArray0, byteOrder0, 72);
      tiffField0.dump();
      assertEquals(72, tiffField0.getTag());
      assertEquals(72, tiffField0.getSortHint());
      assertEquals(72, tiffField0.getOffset());
      assertEquals(576, tiffField0.getBytesLength());
      assertEquals(72, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2175), (byte)0, fieldTypeLong0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-2175), tiffField0.getTag());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4869), 2, fieldType0, 1345L, (-33L), byteArray0, byteOrder0, (-700));
      tiffField0.getValue();
      assertEquals(1345, tiffField0.getBytesLength());
      assertEquals((-4869), tiffField0.getTag());
      assertEquals((-33), tiffField0.getOffset());
      assertEquals((-700), tiffField0.getSortHint());
      assertEquals(2, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(27, (-3823), fieldTypeDouble0, 4043, (-39904L), byteArray0, byteOrder0, 50941);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-3823), tiffField0.getDirectoryType());
      assertEquals(50941, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
      assertEquals((-39904), tiffField0.getOffset());
      assertEquals(27, tagInfo0.tag);
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1398, (-2847), (FieldType) null, 1398, 1398, byteArray0, byteOrder0, (-2847));
      int int0 = tiffField0.getTag();
      assertEquals((-2847), tiffField0.getSortHint());
      assertEquals(1398, tiffField0.getOffset());
      assertEquals(1398, int0);
      assertEquals((-2847), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50725, "");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((-2238), 1, fieldTypeShort0, 50725, 50725, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(50725, tiffField0.getOffset());
      assertEquals((-2238), int0);
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-20);
      TiffField tiffField0 = new TiffField(4160, 1, fieldTypeAscii0, 1, 1, byteArray0, byteOrder0, (byte) (-20));
      String string0 = tiffField0.getStringValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-20), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(4160, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(86, 1370, fieldTypeLong0, 1370, (-1L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(86, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(1370, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((-993), (byte) (-1), fieldTypeAscii0, 50, (byte)41, byteArray0, byteOrder0, (byte) (-1));
      int int0 = tiffField0.getSortHint();
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals((-1), int0);
      assertEquals((-993), tiffField0.getTag());
      assertEquals(41, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50725, "");
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(282, 2052, fieldTypeShort0, 1L, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getOffset();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(2052, tiffField0.getDirectoryType());
      assertEquals(282, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(37, 28, fieldTypeLong0, 477L, 477L, byteArray0, byteOrder0, (byte) (-30));
      int int0 = tiffField0.getOffset();
      assertEquals(37, tiffField0.getTag());
      assertEquals((-30), tiffField0.getSortHint());
      assertEquals(28, tiffField0.getDirectoryType());
      assertEquals(477, int0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)26;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-782), 0, fieldTypeLong0, (byte)26, (-782), byteArray0, byteOrder0, 0);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-782), tiffField0.getOffset());
      assertEquals((-782), tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(104, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(50725, "");
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-58);
      TiffField tiffField0 = new TiffField((byte)0, 276, fieldTypeShort0, 1018L, (-1L), byteArray0, byteOrder0, 103);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(103, tiffField0.getSortHint());
      assertEquals(2036, tiffField0.getBytesLength());
      assertEquals(276, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals((-14848), int0);
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2144650556, "SH$H$");
      TiffField tiffField0 = new TiffField(3218, 3218, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 3218);
      tiffField0.getIntValue();
      assertEquals(3218, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(3218, tiffField0.getTag());
      assertEquals(3218, tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-50);
      TiffField tiffField0 = new TiffField(1, (-1), fieldTypeShort0, 1, 0L, byteArray0, byteOrder0, 264);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals((-1), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(264, tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(1385, "k");
      byte[] byteArray0 = new byte[4];
      byteArray0[3] = (byte) (-60);
      TiffField tiffField0 = new TiffField(1385, 1996, fieldTypeLong0, 1L, 4294967294L, byteArray0, (ByteOrder) null, 18);
      tiffField0.getIntValue();
      assertEquals((-2), tiffField0.getOffset());
      assertEquals(1385, tiffField0.getTag());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1996, tiffField0.getDirectoryType());
      assertEquals(18, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(689, (String) null);
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(689, 689, fieldTypeDouble0, (-2064L), (-2064L), byteArray0, byteOrder0, 41729);
      tiffField0.getFieldTypeName();
      assertEquals((-2064), tiffField0.getOffset());
      assertEquals(689, tiffField0.getDirectoryType());
      assertEquals(689, tiffField0.getTag());
      assertEquals(41729, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(761, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(761, 761, fieldTypeRational0, (-1L), 761, byteArray0, byteOrder0, 761);
      tiffField0.getFieldTypeName();
      assertEquals(761, tiffField0.getDirectoryType());
      assertEquals(761, tiffField0.getSortHint());
      assertEquals(761, tiffField0.getTag());
      assertEquals(761, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2147130733, 2147130733, (FieldType) null, 1L, 1345L, byteArray0, byteOrder0, (-400));
      tiffField0.getFieldType();
      assertEquals((-400), tiffField0.getSortHint());
      assertEquals(1345, tiffField0.getOffset());
      assertEquals(2147130733, tiffField0.getDirectoryType());
      assertEquals(2147130733, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((byte)0, "xotP.'mg");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-399), fieldTypeDouble0, (byte)1, 66L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-399), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(66, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-1110), "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1110), (-1110), fieldTypeDouble0, (-1110), (-1110), byteArray0, byteOrder0, 50);
      tiffField0.getFieldType();
      assertEquals((-1110), tiffField0.getOffset());
      assertEquals((-1110), tiffField0.getTag());
      assertEquals((-1110), tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[2];
      byteArray0[0] = (byte)30;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-865), (-865), fieldTypeFloat0.SSHORT, 1L, 1L, byteArray0, byteOrder0, (-1189));
      tiffField0.getDoubleValue();
      assertEquals((-865), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-865), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-1189), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-61);
      TiffField tiffField0 = new TiffField(1, 1, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeFloat0).RATIONAL).IFD, 1, (-1469), byteArray0, byteOrder0, (byte)93);
      tiffField0.getDoubleValue();
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(93, tiffField0.getSortHint());
      assertEquals((-1469), tiffField0.getOffset());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2448, 1, fieldTypeRational0, 2448, 2448, byteArray0, byteOrder0, 2448);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(2448, tiffField0.getSortHint());
      assertEquals(2448, tiffField0.getTag());
      assertEquals(1, int0);
      assertEquals(2448, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-2852), (-2852), fieldTypeAscii0.DOUBLE, 66L, 66L, byteArray0, byteOrder0, (byte) (-36));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2852), tiffField0.getTag());
      assertEquals(66, tiffField0.getOffset());
      assertEquals((-2852), int0);
      assertEquals((-36), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(761, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(761, 537, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, 761);
      tiffField0.getCount();
      assertEquals(761, tiffField0.getTag());
      assertEquals(761, tiffField0.getSortHint());
      assertEquals(537, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1689), (-1689), fieldTypeRational0, (-1689), 3778L, byteArray0, byteOrder0, (byte) (-117));
      tiffField0.getCount();
      assertEquals(3778, tiffField0.getOffset());
      assertEquals((-1689), tiffField0.getDirectoryType());
      assertEquals((-1689), tiffField0.getTag());
      assertEquals((-117), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, (byte)88, fieldTypeLong0, 1284L, (byte) (-1), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(88, tiffField0.getDirectoryType());
      assertEquals(5136, int0);
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)41, 2147130733, fieldTypeLong0, (-1742L), (-1), byteArray0, byteOrder0, 1755);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(2147130733, tiffField0.getDirectoryType());
      assertEquals(1755, tiffField0.getSortHint());
      assertEquals(41, tiffField0.getTag());
      assertEquals((-6968), int0);
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)74, 291, fieldTypeDouble0, 0L, 1L, byteArray0, byteOrder0, (byte)74);
      tiffField0.getByteOrder();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(291, tiffField0.getDirectoryType());
      assertEquals(74, tiffField0.getSortHint());
      assertEquals(74, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(27, (-3823), fieldTypeDouble0, 4043, (-39904L), byteArray0, byteOrder0, 50941);
      tiffField0.getByteArrayValue();
      assertEquals(27, tiffField0.getTag());
      assertEquals(50941, tiffField0.getSortHint());
      assertEquals((-3823), tiffField0.getDirectoryType());
      assertEquals((-39904), tiffField0.getOffset());
      assertEquals(32344, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(761, "");
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(761, 761, fieldTypeRational0, 761, (-1L), byteArray0, (ByteOrder) null, 761);
      tiffField0.getByteArrayValue();
      assertEquals(761, tiffField0.getDirectoryType());
      assertEquals(761, tiffField0.getSortHint());
      assertEquals(761, tiffField0.getTag());
      assertEquals(6088, tiffField0.getBytesLength());
      assertEquals((-1), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1621, 168, fieldTypeByte0, 4L, (-3678L), byteArray0, byteOrder0, 1);
      MockPrintStream mockPrintStream0 = new MockPrintStream("1621 (0x655: Unknown Tag): 0, 0 (4 Byte)");
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(mockPrintStream0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(bufferedOutputStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(168, tiffField0.getDirectoryType());
      assertEquals(1621, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-3678), tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(86, 86, fieldTypeRational0, 86, 86, (byte[]) null, byteOrder0, 86);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146435551, 2146435551, fieldTypeLong0, 2146435551, 2146435551, byteArray0, byteOrder0, 2146435551);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(55, 55, fieldTypeRational0, 1L, 1L, byteArray0, byteOrder0, 55);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(66, 66, fieldTypeRational0, 3696L, 3696L, (byte[]) null, byteOrder0, 66);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      byte[] byteArray0 = new byte[65];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1406), (-1406), fieldTypeLong0, (-1406), (-1406), byteArray0, byteOrder0, (-1406));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(27, (-1427), fieldTypeShort0, 4L, 4818L, byteArray0, (ByteOrder) null, 27);
      try { 
        tiffField0.getValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-3), (-3), fieldTypeRational0, (-3), (-3), byteArray0, byteOrder0, (-3));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField((-1773), (-1773), fieldTypeRational0, 1L, (-1773), byteArray0, byteOrder0, (-1773));
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2191), (-2191), fieldTypeLong0, (-2191), (-2191), (byte[]) null, byteOrder0, (-2826));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField((-8), (-8), fieldTypeShort0, (-8), (-8), byteArray0, byteOrder0, (-8));
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(66, 66, fieldTypeRational0, 66, 66, (byte[]) null, byteOrder0, 2826);
      // Undeclared exception!
      try { 
        tiffField0.getOversizeValueElement();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(103, 103, fieldTypeShort0, 103, 103, (byte[]) null, byteOrder0, 103);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[35];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-101), (byte) (-101), fieldTypeByte0, (byte) (-101), (byte) (-101), byteArray0, byteOrder0, (byte) (-101));
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(109, 109, fieldTypeRational0, 1L, 109, byteArray0, byteOrder0, 109);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(40094, 1, fieldTypeShort0, 1, 4L, byteArray0, byteOrder0, 73);
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoXpString", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(86, 86, fieldTypeShort0, 86, 117L, (byte[]) null, byteOrder0, 86);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-145), (-145), fieldTypeShort0, (-145), (-145), byteArray0, byteOrder0, (-145));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeFloat0, 8, 8, byteArray0, byteOrder0, 8);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(29, 29, fieldTypeRational0, 1L, 29, byteArray0, byteOrder0, 29);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50982, 50982, (FieldType) null, 50982, 50982, byteArray0, byteOrder0, 50982);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField((-3), (-3), fieldTypeRational0, (-3), (-3), byteArray0, byteOrder0, (-3));
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(275, (-3391), (FieldType) null, 275, 255L, byteArray0, byteOrder0, (byte) (-23));
      // Undeclared exception!
      try { 
        tiffField0.getFieldTypeName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-4841), ",$jFd`N!");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(27, (-4841), fieldTypeAscii0, 27, (-1758L), byteArray0, byteOrder0, (-1026));
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // GPS text field not encoded as bytes.
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfoGpsText", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2852), 0, fieldTypeAscii0, (-2629L), (-2629L), (byte[]) null, byteOrder0, (-2852));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField((-3), (-3), fieldTypeShort0, (-3), (-3), byteArray0, byteOrder0, (-3));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeFloat0, 8, 8, byteArray0, byteOrder0, 8);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(3623, 3623, fieldTypeRational0, 3623, 3623, (byte[]) null, byteOrder0, 3623);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-15), (-15), fieldTypeFloat0, (-15), (-15), byteArray0, byteOrder0, (-15));
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(45, 45, fieldTypeRational0, 1L, 45, byteArray0, byteOrder0, 45);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(32, 32, fieldTypeShort0, (-1397L), (-1397L), byteArray0, byteOrder0, 32);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-77), (-2054114792), fieldTypeLong0, (-77), (byte)41, byteArray0, byteOrder0, (-2407));
      MockFile mockFile0 = new MockFile("!JRU");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "GhJRroYw96tk>S*loA!");
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(761, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 761, fieldTypeRational0, 1L, (-2002L), byteArray0, byteOrder0, (byte)41);
      MockFile mockFile0 = new MockFile("!JRU");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) mockPrintWriter0, "!JRU");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField((-1667), (-1667), fieldTypeLong0, (-1667), (-1667), byteArray0, byteOrder0, 50);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(86, 2850, fieldTypeRational0, 1L, 86, byteArray0, byteOrder0, 468);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField((-1525), 43, fieldTypeDouble0, (-1525), (-1525), byteArray0, byteOrder0, (-1525));
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(6497, 2146823290, fieldTypeRational0, 1L, 1502L, byteArray0, byteOrder0, 6497);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 7
         //
         verifyException("org.apache.commons.imaging.common.ByteConversions", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(2146435583, 15, fieldTypeAscii0, 2289L, 537L, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(761, "");
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(761, 537, fieldTypeRational0, (byte)0, (byte)0, byteArray0, byteOrder0, (-1900));
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(761, tiffField0.getTag());
      assertEquals(537, tiffField0.getDirectoryType());
      assertEquals((-1900), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-551), (-4869), fieldType0, 1345L, 274L, byteArray0, byteOrder0, (-551));
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      assertEquals((-551), tiffField0.getTag());
      assertEquals((-551), tiffField0.getSortHint());
      assertEquals((-4869), tiffField0.getDirectoryType());
      assertEquals(274, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[35];
      TiffField tiffField0 = new TiffField((-777), 1118, fieldTypeByte0.FLOAT, 393L, 393L, byteArray0, (ByteOrder) null, 1118);
      tiffField0.getByteOrder();
      assertEquals((-777), tiffField0.getTag());
      assertEquals(1118, tiffField0.getSortHint());
      assertEquals(1118, tiffField0.getDirectoryType());
      assertEquals(393, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(77, 77, fieldTypeShort0, 77, (-163L), (byte[]) null, byteOrder0, 77);
      // Undeclared exception!
      try { 
        tiffField0.getByteArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-399), fieldTypeByte0.DOUBLE, (byte)1, 66L, byteArray0, byteOrder0, (byte)0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-399), tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(66, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-782), 0, fieldTypeLong0, (byte)26, (-782), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-782), tiffField0.getOffset());
      assertEquals((-782), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(86, 86, fieldTypeRational0, 86, 86, byteArray0, byteOrder0, 86);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(680, 680, fieldTypeRational0, 680, 680, (byte[]) null, byteOrder0, 680);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      FieldType fieldType0 = FieldType.getFieldType(1);
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-4869), 2, fieldType0, 1345L, (-33L), byteArray0, byteOrder0, (-700));
      int int0 = tiffField0.getOffset();
      assertEquals((-4869), tiffField0.getTag());
      assertEquals(2, tiffField0.getDirectoryType());
      assertEquals((-700), tiffField0.getSortHint());
      assertEquals((-33), int0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[35];
      TiffField tiffField0 = new TiffField((-777), 1118, fieldTypeByte0.FLOAT, 393L, 393L, byteArray0, (ByteOrder) null, 1118);
      tiffField0.getTagInfo();
      assertEquals(1118, tiffField0.getSortHint());
      assertEquals(393, tiffField0.getOffset());
      assertEquals(1118, tiffField0.getDirectoryType());
      assertEquals((-777), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((byte)0, (byte)29, fieldTypeAscii0.DOUBLE, (byte)29, 2147483647L, byteArray0, byteOrder0, (byte) (-122));
      int int0 = tiffField0.getTag();
      assertEquals((-122), tiffField0.getSortHint());
      assertEquals(0, int0);
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(29, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2861, (-184), (FieldType) null, 2861, 2861, byteArray0, byteOrder0, 977);
      tiffField0.getCount();
      assertEquals(2861, tiffField0.getTag());
      assertEquals(2861, tiffField0.getOffset());
      assertEquals(977, tiffField0.getSortHint());
      assertEquals((-184), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(761, "");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(50714, 65535, fieldTypeRational0, (-2147483648L), (-3802L), byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getBytesLength();
      assertEquals(50714, tiffField0.getTag());
      assertEquals((-3802), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(10, 10, fieldTypeFloat0, 10, 10, byteArray0, byteOrder0, 10);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(10, tiffField0.getOffset());
      assertEquals("10 (0xa: Unknown Tag): ", string0);
      assertEquals(10, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[35];
      TiffField tiffField0 = new TiffField(50217, 1, fieldTypeByte0, 1, 264L, byteArray0, (ByteOrder) null, 50217);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getDoubleValue();
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(50217, tiffField0.getSortHint());
      assertEquals(264, tiffField0.getOffset());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(50217, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeFloat0, 8, 8, byteArray0, byteOrder0, 8);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@56e9f14d for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(72, 72, fieldTypeRational0, 72, 72, byteArray0, byteOrder0, 72);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      byte[] byteArray0 = new byte[13];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(322, 322, fieldTypeRational0, 1L, 322, byteArray0, byteOrder0, 322);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      byte[] byteArray0 = new byte[51];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(43, 43, fieldTypeDouble0, 43, 43, byteArray0, byteOrder0, 43);
      tiffField0.getDoubleArrayValue();
      assertEquals(43, tiffField0.getSortHint());
      assertEquals(43, tiffField0.getOffset());
      assertEquals(344, tiffField0.getBytesLength());
      assertEquals(43L, tiffField0.getCount());
      assertEquals(43, tiffField0.getTag());
      assertEquals(43, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      byte[] byteArray0 = new byte[164];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(63, 63, fieldTypeFloat0, 63, 63, byteArray0, byteOrder0, 63);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(63, tiffField0.getOffset());
      assertEquals(63, tiffField0.getTag());
      assertEquals(63, tiffField0.getSortHint());
      assertEquals(63, tiffField0.getDirectoryType());
      assertEquals(41, doubleArray0.length);
      assertEquals(63L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      byte[] byteArray0 = new byte[31];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3592, 3592, fieldTypeLong0, 3592, 3592, byteArray0, byteOrder0, 3592);
      tiffField0.getDoubleArrayValue();
      assertEquals(3592, tiffField0.getOffset());
      assertEquals(3592L, tiffField0.getCount());
      assertEquals(3592, tiffField0.getTag());
      assertEquals(14368, tiffField0.getBytesLength());
      assertEquals(3592, tiffField0.getSortHint());
      assertEquals(3592, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeShort0, 14, 14, byteArray0, byteOrder0, 14);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(14, tiffField0.getOffset());
      assertEquals(10, doubleArray0.length);
      assertEquals(14L, tiffField0.getCount());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeShort0, 14, 14, byteArray0, byteOrder0, 14);
      tiffField0.getDoubleArrayValue();
      assertEquals(14, tiffField0.getOffset());
      assertEquals(14L, tiffField0.getCount());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(14, tiffField0.getTag());
      assertEquals(28, tiffField0.getBytesLength());
      assertEquals(14, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(45, 45, fieldTypeRational0, 45, 45, byteArray0, byteOrder0, 45);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(45, tiffField0.getOffset());
      assertEquals(360, tiffField0.getBytesLength());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(45L, tiffField0.getCount());
      assertEquals(45, tiffField0.getDirectoryType());
      assertEquals(45, tiffField0.getSortHint());
      assertEquals(45, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      byte[] byteArray0 = new byte[15];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, (-118L), byteArray0, (ByteOrder) null, 0);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@2b0cd4f7 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeFloat0, 8, 8, byteArray0, byteOrder0, 8);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@a0de40 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeShort0, 14, 14, byteArray0, byteOrder0, 14);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(14, tiffField0.getOffset());
      assertEquals(14, tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(28, tiffField0.getBytesLength());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(14, tiffField0.getTag());
      assertEquals(14L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(14, 14, fieldTypeShort0, 14, 14, byteArray0, byteOrder0, 14);
      tiffField0.getIntArrayValue();
      assertEquals(28, tiffField0.getBytesLength());
      assertEquals(14, tiffField0.getTag());
      assertEquals(14, tiffField0.getOffset());
      assertEquals(14, tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getSortHint());
      assertEquals(14L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      byte[] byteArray0 = new byte[20];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(56, 56, fieldTypeRational0, 56, 56, byteArray0, byteOrder0, 56);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(94, 94, fieldTypeRational0, 94, 94, byteArray0, byteOrder0, 94);
      tiffField0.getIntArrayValue();
      assertEquals(94, tiffField0.getTag());
      assertEquals(94L, tiffField0.getCount());
      assertEquals(94, tiffField0.getOffset());
      assertEquals(94, tiffField0.getSortHint());
      assertEquals(94, tiffField0.getDirectoryType());
      assertEquals(752, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, 1);
      tiffField0.getIntArrayValue();
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146435551, 2146435551, fieldTypeLong0, 255L, 2146435551, byteArray0, byteOrder0, 2146435551);
      tiffField0.getIntArrayValue();
      assertEquals(2146435551, tiffField0.getOffset());
      assertEquals(1020, tiffField0.getBytesLength());
      assertEquals(255L, tiffField0.getCount());
      assertEquals(2146435551, tiffField0.getDirectoryType());
      assertEquals(2146435551, tiffField0.getSortHint());
      assertEquals(2146435551, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(2506, 2506, fieldTypeAscii0, 2506, 2506, byteArray0, byteOrder0, 2506);
      String string0 = tiffField0.getStringValue();
      assertEquals(2506, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(2506, tiffField0.getSortHint());
      assertEquals(2506, tiffField0.getTag());
      assertEquals(2506, tiffField0.getDirectoryType());
      assertEquals(2506, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeFloat0, 8, 8, byteArray0, byteOrder0, 8);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [F@1fbf9962
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      byte[] byteArray0 = new byte[31];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3592, 3592, fieldTypeLong0, 3592, 3592, byteArray0, byteOrder0, 3592);
      String string0 = tiffField0.getTagName();
      assertEquals(3592, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0xe08)", string0);
      assertEquals(3592, tiffField0.getOffset());
      assertEquals(3592, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      byte[] byteArray0 = new byte[38];
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(282, 282, fieldTypeRational0, 282, 282, byteArray0, byteOrder0, 282);
      String string0 = tiffField0.getTagName();
      assertEquals("XResolution", string0);
      assertEquals(282, tiffField0.getDirectoryType());
      assertEquals(282, tiffField0.getOffset());
      assertEquals(282, tiffField0.getTag());
      assertEquals(282, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 27768L, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(8, 8, fieldTypeFloat0, 8, 8, byteArray0, byteOrder0, 8);
      String string0 = tiffField0.toString();
      assertEquals(8, tiffField0.getOffset());
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(8, tiffField0.getDirectoryType());
      assertEquals("8 (0x8: Unknown Tag):  (8 Float)", string0);
      assertEquals(32, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      byte[] byteArray0 = new byte[212];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(64, 64, fieldTypeFloat0, 64, 64, byteArray0, byteOrder0, 64);
      String string0 = tiffField0.getValueDescription();
      assertEquals(64, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (53)", string0);
      assertEquals(64, tiffField0.getDirectoryType());
      assertEquals(64, tiffField0.getTag());
      assertEquals(64L, tiffField0.getCount());
      assertEquals(64, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(45, 2144437571, fieldTypeDouble0, 43728L, (-794L), byteArray0, byteOrder0, 4766);
      String string0 = tiffField0.toString();
      assertEquals("45 (0x2d: Unknown Tag): 0.0, 0.0 (43728 Double)", string0);
      assertEquals(349824, tiffField0.getBytesLength());
      assertEquals(2144437571, tiffField0.getDirectoryType());
      assertEquals(4766, tiffField0.getSortHint());
      assertEquals((-794), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      byte[] byteArray0 = new byte[31];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(3592, 3592, fieldTypeLong0, 3592, 3592, byteArray0, byteOrder0, 3592);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3592, tiffField0.getOffset());
      assertEquals(3592L, tiffField0.getCount());
      assertEquals(14368, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(3592, tiffField0.getSortHint());
      assertEquals(3592, tiffField0.getDirectoryType());
      assertEquals(3592, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      byte[] byteArray0 = new byte[248];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField((-188), 33452, fieldTypeLong0, 33452, 33452, byteArray0, byteOrder0, 33452);
      String string0 = tiffField0.getValueDescription();
      assertEquals(33452, tiffField0.getDirectoryType());
      assertEquals(33452, tiffField0.getOffset());
      assertEquals(33452, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(133808, tiffField0.getBytesLength());
      assertEquals((-188), tiffField0.getTag());
      assertEquals(33452L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      byte[] byteArray0 = new byte[21];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(43, 43, fieldTypeShort0, 43, 43, byteArray0, byteOrder0, 43);
      String string0 = tiffField0.toString();
      assertEquals("43 (0x2b: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 (43 SShort)", string0);
      assertEquals(43, tiffField0.getSortHint());
      assertEquals(43, tiffField0.getOffset());
      assertEquals(86, tiffField0.getBytesLength());
      assertEquals(43, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      byte[] byteArray0 = new byte[166];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(2227, 2227, fieldTypeShort0, 2227, 2227, byteArray0, byteOrder0, 2227);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2227, tiffField0.getOffset());
      assertEquals(2227, tiffField0.getDirectoryType());
      assertEquals(2227, tiffField0.getSortHint());
      assertEquals(4454, tiffField0.getBytesLength());
      assertEquals(2227L, tiffField0.getCount());
      assertEquals(2227, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[64];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34737, 34737, fieldTypeByte0.ASCII, 34737, 34737, byteArray0, byteOrder0, 34737);
      tiffField0.toString();
      assertEquals(34737, tiffField0.getTag());
      assertEquals(34737, tiffField0.getSortHint());
      assertEquals(34737L, tiffField0.getCount());
      assertEquals(34737, tiffField0.getDirectoryType());
      assertEquals(34737, tiffField0.getBytesLength());
      assertEquals(34737, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 3535L, byteArray0, byteOrder0, 1);
      tiffField0.toString();
      assertEquals(3535, tiffField0.getOffset());
      assertEquals(8, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[52];
      TiffField tiffField0 = new TiffField(21, 1137, fieldTypeByte0, 1137, 1137, byteArray0, (ByteOrder) null, 21);
      String string0 = tiffField0.toString();
      assertEquals(1137, tiffField0.getOffset());
      assertEquals("21 (0x15: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (1137 Undefined)", string0);
      assertEquals(1137, tiffField0.getBytesLength());
      assertEquals(1137, tiffField0.getDirectoryType());
      assertEquals(21, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(190, 190, fieldTypeShort0, 190, 190, byteArray0, byteOrder0, 190);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1214, 1214);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(190, tiffField0.getOffset());
      assertNull(string0);
      assertEquals(190, tiffField0.getTag());
      assertEquals(190, tiffField0.getSortHint());
      assertEquals(190, tiffField0.getDirectoryType());
      assertEquals(190L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(190, 190, fieldTypeShort0, 190, 190, byteArray0, byteOrder0, 190);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(1214, 1214);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(190, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(190, tiffField0.getOffset());
      assertEquals(190, tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Short", string0);
      assertEquals(380, tiffField0.getBytesLength());
      assertEquals(190, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField((-842), (-842), fieldTypeRational0, (-842), (-842), byteArray0, byteOrder0, (-842));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-842), tiffField0.getOffset());
      assertEquals((-842), tiffField0.getSortHint());
      assertEquals((-842), tiffField0.getTag());
      assertNull(tiffElement0);
      assertEquals((-842), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(706, 706, fieldTypeRational0, 706, 706, byteArray0, byteOrder0, 706);
      tiffField0.getFieldTypeName();
      assertEquals(706, tiffField0.getTag());
      assertEquals(706, tiffField0.getOffset());
      assertEquals(706, tiffField0.getSortHint());
      assertFalse(tiffField0.isLocalValue());
      assertEquals(706, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2448, 1, fieldTypeRational0, 2448, 2448, byteArray0, byteOrder0, 2448);
      int int0 = tiffField0.getSortHint();
      assertEquals(2448, tiffField0.getTag());
      assertEquals(2448, tiffField0.getOffset());
      assertEquals(2448, int0);
      assertEquals(2448L, tiffField0.getCount());
      assertEquals(1, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(77, 77, fieldTypeShort0, 77, (-163L), (byte[]) null, byteOrder0, 77);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeRational0, 1, 1, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(39, 39, fieldTypeRational0, 39, 39, byteArray0, byteOrder0, 39);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(39, tiffField0.getDirectoryType());
      assertNotNull(tiffElement0);
      assertEquals(39, tiffField0.getSortHint());
      assertEquals(39, tiffField0.getTag());
      assertEquals(39L, tiffElement0.offset);
  }
}
