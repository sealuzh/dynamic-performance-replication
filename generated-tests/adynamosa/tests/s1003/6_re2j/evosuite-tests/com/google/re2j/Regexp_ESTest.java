/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 00:48:42 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Regexp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Regexp_ESTest extends Regexp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.name = "";
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      int[] intArray0 = new int[3];
      intArray0[0] = 139;
      intArray0[1] = 13;
      intArray0[2] = 7;
      regexp0.runes = intArray0;
      regexp0.equals(object2);
      regexp0.toString();
      Object object3 = new Object();
      Regexp.Op regexp_Op1 = Regexp.Op.LITERAL;
      Regexp regexp1 = new Regexp(regexp_Op1);
      boolean boolean0 = regexp1.equals(regexp0);
      Object object4 = new Object();
      boolean boolean1 = regexp1.equals(object4);
      assertTrue(boolean1 == boolean0);
      
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      regexp0.equals(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.reinit();
      regexp1.min = 7;
      regexp1.cap = (-926);
      Object object0 = new Object();
      regexp1.equals(object0);
      String string0 = regexp1.name;
      regexp1.equals(regexp0);
      regexp1.toString();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.name = "";
      Object object0 = new Object();
      Object object1 = new Object();
      Object object2 = new Object();
      int[] intArray0 = new int[3];
      intArray0[0] = 139;
      intArray0[1] = 13;
      intArray0[2] = 7;
      regexp0.runes = intArray0;
      regexp0.equals(object2);
      regexp0.toString();
      regexp0.maxCap();
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("x8b\rx07");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.x8b\rx07
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[6];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      Regexp regexp1 = new Regexp(regexp0);
      regexpArray0[5] = regexp1;
      regexp0.subs = regexpArray0;
      Regexp regexp2 = new Regexp(regexp0);
      int[] intArray0 = new int[4];
      intArray0[0] = 1995;
      regexp0.reinit();
      Object object0 = new Object();
      regexp0.equals(regexp_Op0);
      regexp2.equals(regexp_Op0);
      Regexp regexp3 = new Regexp(regexp0);
      regexp2.cap = 1995;
      Object object1 = new Object();
      Regexp regexp4 = new Regexp(regexp1);
      Object object2 = new Object();
      regexp0.equals(object2);
      regexp2.maxCap();
      Regexp regexp5 = new Regexp(regexp3);
      regexp5.equals("Join_Control");
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[6];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      Regexp regexp1 = new Regexp(regexp0);
      regexpArray0[5] = regexp1;
      regexp0.subs = regexpArray0;
      Regexp regexp2 = new Regexp(regexp0);
      int[] intArray0 = new int[4];
      intArray0[0] = 1995;
      regexp0.reinit();
      Object object0 = new Object();
      regexp0.equals(regexp_Op0);
      regexp2.equals(regexp_Op0);
      Regexp regexp3 = new Regexp(regexp0);
      Object object1 = new Object();
      Regexp regexp4 = new Regexp(regexp0);
      Object object2 = new Object();
      regexp0.equals(regexp_Op0);
      regexp2.maxCap();
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[6];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      Regexp regexp1 = new Regexp(regexp0);
      regexpArray0[5] = regexp1;
      regexp0.subs = regexpArray0;
      Regexp regexp2 = new Regexp(regexp0);
      int[] intArray0 = new int[4];
      intArray0[0] = 1995;
      regexp0.reinit();
      regexp1.cap = 65345;
      Object object0 = new Object();
      regexp0.equals(regexp_Op0);
      regexp2.equals(regexp_Op0);
      Regexp regexp3 = new Regexp(regexp0);
      Object object1 = new Object();
      Regexp regexp4 = new Regexp(regexp_Op0);
      regexp1.equals(regexp4);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 559;
      regexp0.max = 559;
      regexp0.max = 559;
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[4];
      intArray0[0] = 2013;
      intArray0[1] = 2013;
      intArray0[0] = 2013;
      regexp1.min = 2013;
      intArray0[3] = 372;
      regexp0.runes = intArray0;
      regexp0.name = "E26dBpU/?yv'";
      regexp1.equals("E26dBpU/?yv'");
      regexp1.max = 2013;
      regexp0.op = regexp_Op0;
      intArray0[3] = 2013;
      regexp1.equals("E26dBpU/?yv'");
      Regexp regexp2 = new Regexp(regexp1);
      regexp1.maxCap();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        regexp1.equals(regexp2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[8];
      regexpArray0[2] = regexp1;
      regexpArray0[1] = regexp1;
      regexpArray0[2] = regexp1;
      regexpArray0[3] = regexp1;
      regexpArray0[4] = regexp1;
      regexpArray0[3] = regexp0;
      regexpArray0[6] = regexp1;
      regexpArray0[7] = regexp1;
      regexp1.subs = regexpArray0;
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      regexp0.reinit();
      regexp0.name = ";&P/T4v9JH)";
      regexp0.equals(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Object object0 = new Object();
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 2;
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp0.equals(regexp1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[2];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.subs = regexpArray0;
      regexpArray0[0].min = (-3242);
      int[] intArray0 = new int[7];
      intArray0[0] = 2115;
      intArray0[1] = (-3242);
      intArray0[2] = (-3242);
      intArray0[3] = (-3242);
      intArray0[4] = 2115;
      intArray0[5] = 2115;
      intArray0[6] = (-3242);
      regexp0.runes = intArray0;
      regexp0.cap = 2115;
      regexp0.toString();
      regexpArray0[0].name = "Syloti_Nagri";
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("A");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.A
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.cap = (-926);
      boolean boolean0 = regexp2.equals(regexp1);
      assertTrue(boolean0);
      
      regexp2.toString();
      assertTrue(regexp0.equals((Object)regexp2));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.WORD_BOUNDARY;
      regexp0.op = regexp_Op1;
      regexp0.reinit();
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
      
      regexp0.toString();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.flags = 335;
      regexp1.reinit();
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Object object0 = new Object();
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      regexp0.flags = 6069;
      regexp1.equals(regexp0);
      regexp2.equals((Object) null);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp_Op0);
      String string0 = regexp1.toString();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.max = (-5119);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[4];
      intArray0[0] = 2013;
      intArray0[1] = 2013;
      intArray0[2] = 2013;
      intArray0[3] = 372;
      regexp0.runes = intArray0;
      String string0 = "E26dBpU/?yv'";
      regexp0.name = "E26dBpU/?yv'";
      regexp1.equals("E26dBpU/?yv'");
      regexp1.max = 2013;
      regexp0.op = regexp_Op0;
      intArray0[3] = 2013;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 1;
      regexp0.reinit();
      boolean boolean0 = regexp0.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = (-1675);
      regexp0.flags = 9;
      regexp0.maxCap();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = (-1675);
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      regexp0.equals(regexp0);
      regexp0.toString();
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("1BOSp}zbQpg?:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.1BOSp}zbQpg?:
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      Object object0 = new Object();
      boolean boolean0 = regexp1.equals(object0);
      regexp1.reinit();
      Object object1 = new Object();
      regexp1.equals(object0);
      Regexp regexp2 = new Regexp(regexp1);
      boolean boolean1 = regexp0.equals(regexp2);
      assertFalse(boolean1 == boolean0);
      
      regexp0.toString();
      assertTrue(regexp0.equals((Object)regexp1));
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp.Op regexp_Op1 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op1);
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = (-1710);
      regexp0.reinit();
      // Undeclared exception!
      try { 
        regexp0.equals(regexp0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int int0 = regexp0.flags;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = 5;
      regexp0.maxCap();
      regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.QUEST;
      regexp_Op1.isPseudo();
      Regexp regexp1 = new Regexp(regexp_Op1);
      regexp1.equals(regexp_Op1);
      Regexp.Op regexp_Op2 = Regexp.Op.QUEST;
      regexp1.flags = 5;
      Regexp regexp2 = new Regexp(regexp_Op2);
      regexp2.min = 5;
      // Undeclared exception!
      try { 
        regexp1.equals(regexp2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.cap = (-2014);
      regexp1.op = regexp_Op0;
      regexp1.reinit();
      regexp1.cap = 722;
      regexp1.reinit();
      regexp0.reinit();
      regexp1.toString();
      regexp1.max = 20;
      regexp0.toString();
      regexp1.maxCap();
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("jc&6qN#xpozM");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.jc&6qN#xpozM
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      boolean boolean0 = regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op1);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp0);
      regexp0.equals(regexp2);
      regexp0.toString();
      regexp1.name = "B";
      Regexp regexp3 = new Regexp(regexp_Op1);
      regexp2.reinit();
      Object object0 = new Object();
      Object object1 = new Object();
      Regexp regexp4 = new Regexp(regexp1);
      boolean boolean1 = regexp1.equals(regexp4);
      assertTrue(boolean1);
      
      regexp3.maxCap();
      regexp4.reinit();
      int int0 = regexp3.maxCap();
      assertEquals(0, int0);
      
      Regexp.Op regexp_Op2 = Regexp.Op.VERTICAL_BAR;
      boolean boolean2 = regexp_Op2.isPseudo();
      assertFalse(boolean2 == boolean0);
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp_Op0);
      boolean boolean0 = regexp1.equals(regexp2);
      assertTrue(boolean0);
      
      Regexp.Op.values();
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.flags = (-1710);
      regexp0.reinit();
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      Object object0 = new Object();
      boolean boolean0 = regexp_Op0.isPseudo();
      Regexp.Op regexp_Op1 = Regexp.Op.VERTICAL_BAR;
      boolean boolean1 = regexp_Op1.isPseudo();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      Regexp regexp2 = new Regexp(regexp0);
      regexp2.equals("^");
      regexp1.reinit();
      Regexp regexp3 = new Regexp(regexp_Op0);
      regexp0.equals(regexp3);
      regexp2.reinit();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp.Op regexp_Op1 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op1);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp0);
      regexp2.maxCap();
      Object object0 = new Object();
      regexp2.toString();
      regexp2.equals(regexp_Op0);
      regexp1.reinit();
      assertTrue(regexp1.equals((Object)regexp0));
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 43018;
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      Regexp regexp2 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp2.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp0.equals(regexp1);
      regexp1.toString();
      Regexp.Op regexp_Op1 = Regexp.Op.LEFT_PAREN;
      Regexp regexp2 = new Regexp(regexp_Op1);
      regexp0.flags = (-2010);
      regexp2.reinit();
      Object object0 = new Object();
      Object object1 = new Object();
      boolean boolean1 = regexp2.equals(object1);
      assertFalse(boolean1);
      
      regexp2.maxCap();
      regexp0.reinit();
      int int0 = regexp1.maxCap();
      assertFalse(regexp1.equals((Object)regexp2));
      assertEquals(0, int0);
      
      boolean boolean2 = regexp_Op1.isPseudo();
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean2);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.reinit();
      regexp0.name = "";
      regexp0.reinit();
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.toString();
      regexp0.reinit();
      regexp_Op0.isPseudo();
      Regexp regexp1 = new Regexp(regexp_Op0);
      Object object1 = new Object();
      regexp1.equals(object1);
      regexp0.equals(regexp1);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 0;
      int[] intArray0 = new int[0];
      regexp0.runes = intArray0;
      Regexp[] regexpArray0 = new Regexp[1];
      regexp0.subs = regexpArray0;
      regexp0.flags = 6;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 0;
      regexp1.toString();
      boolean boolean0 = regexp1.equals(regexp0);
      assertTrue(boolean0);
      
      regexp0.toString();
      regexp0.equals("[^x00-x{10FFFF}]");
      regexp1.reinit();
      assertFalse(regexp1.equals((Object)regexp0));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      Regexp regexp2 = new Regexp(regexp1);
      regexp2.toString();
      regexp0.toString();
      Regexp regexp3 = new Regexp(regexp_Op0);
      Regexp regexp4 = new Regexp(regexp3);
      boolean boolean0 = regexp2.equals(regexp4);
      assertTrue(boolean0);
      
      regexp1.reinit();
      assertTrue(regexp1.equals((Object)regexp2));
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = (-204);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      regexp2.op = regexp_Op1;
      int[] intArray0 = new int[4];
      intArray0[0] = (-4232);
      intArray0[1] = (-204);
      intArray0[2] = (-204);
      intArray0[3] = (-4232);
      regexp1.runes = intArray0;
      regexp1.cap = 0;
      regexp2.max = (-4232);
      regexp2.flags = (-204);
      regexp2.max = (-204);
      regexp_Op0.isPseudo();
      regexp0.equals(regexp2);
      assertFalse(regexp2.equals((Object)regexp0));
      
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp_Op0.isPseudo();
      regexp1.toString();
      String string0 = regexp0.toString();
      assertEquals("(?:)", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 0;
      int[] intArray0 = new int[0];
      regexp0.runes = intArray0;
      Regexp[] regexpArray0 = new Regexp[1];
      regexpArray0[0] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.flags = 6;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 0;
      regexp1.toString();
      regexp1.equals(regexp0);
      assertTrue(regexp1.equals((Object)regexp0));
      
      regexp0.toString();
      regexp0.equals("[^x00-x{10FFFF}]");
      regexp1.reinit();
      assertFalse(regexp1.equals((Object)regexp0));
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp_Op0);
      regexp1.equals(regexp0);
      regexp_Op0.isPseudo();
      regexp1.min = 0;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("DERgT\"$@ZZnv~P|t");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.DERgT\"$@ZZnv~P|t
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.END_LINE;
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.toString();
      regexp0.reinit();
      regexp0.cap = 119648;
      Regexp[] regexpArray0 = new Regexp[6];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      Regexp.Op regexp_Op2 = Regexp.Op.END_LINE;
      regexpArray0[2].op = regexp_Op2;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.op = regexp_Op1;
      regexp0.equals(regexp_Op0);
      regexp0.toString();
      Regexp.Op.values();
      Regexp.Op.values();
      regexp0.reinit();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("I|0  akVjY");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.I|0  akVjY
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.toString();
      regexp1.max = 321;
      regexp0.reinit();
      regexp1.cap = 0;
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
      
      Regexp.Op.values();
      regexp1.reinit();
      assertTrue(regexp1.equals((Object)regexp0));
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[4];
      intArray0[0] = 2013;
      intArray0[1] = 2013;
      intArray0[2] = 2013;
      intArray0[3] = 372;
      regexp0.runes = intArray0;
      String string0 = "E26dBpU/?yv'";
      regexp0.name = "E26dBpU/?yv'";
      regexp1.equals("E26dBpU/?yv'");
      regexp1.max = 2013;
      regexp0.op = regexp_Op0;
      regexp1.max = 2013;
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.flags = 32;
      regexp1.reinit();
      regexp1.equals(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp[] regexpArray0 = new Regexp[3];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexpArray0[2] = regexp1;
      regexp0.subs = regexpArray0;
      regexp0.min = 2311;
      regexp0.reinit();
      regexp0.op = regexp_Op0;
      regexp0.reinit();
      String string0 = regexp0.toString();
      assertEquals("(?:)", string0);
      
      regexp0.reinit();
      boolean boolean0 = regexp0.equals(regexp0);
      regexp1.reinit();
      Object object0 = new Object();
      boolean boolean1 = regexp0.equals(object0);
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      String string0 = "Dpxip?I=VRb\"";
      regexp0.reinit();
      regexp0.name = "Dpxip?I=VRb\"";
      regexp0.toString();
      regexp0.maxCap();
      regexp0.cap = 0;
      int int0 = (-1126);
      regexp0.flags = (-1126);
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Dpxip?I=VRb\"");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Dpxip?I=VRb\"
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.reinit();
      regexp0.name = "";
      regexp0.name = "";
      regexp0.toString();
      regexp0.toString();
      regexp0.reinit();
      regexp_Op0.isPseudo();
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.equals("");
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = 6071;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 4165;
      regexp1.reinit();
      regexp1.toString();
      Regexp.Op.values();
      regexp0.reinit();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.op = regexp_Op0;
      regexp0.max = 0;
      regexp0.name = "";
      regexp0.name = "";
      regexp0.toString();
      regexp0.name = "Other_Math";
      regexp0.equals(regexp_Op0);
      regexp0.maxCap();
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      assertEquals(21, regexp_OpArray0.length);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.flags = 17;
      String string0 = "NO_WORD_BOUNDARY";
      regexp0.name = "NO_WORD_BOUNDARY";
      regexp1.maxCap();
      regexp1.min = 3301;
      regexp1.reinit();
      regexp1.equals("");
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = (-1990);
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LEFT_PAREN;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = 1890;
      regexp0.name = "";
      regexp0.equals("");
      regexp0.toString();
      int[] intArray0 = new int[9];
      intArray0[0] = 1890;
      intArray0[1] = 1890;
      intArray0[2] = 1890;
      intArray0[3] = 1890;
      intArray0[4] = 1890;
      intArray0[5] = 1890;
      intArray0[6] = 1890;
      intArray0[7] = 1890;
      regexp0.reinit();
      intArray0[8] = 1890;
      regexp0.runes = intArray0;
      Object object0 = new Object();
      boolean boolean0 = regexp0.equals(object0);
      regexp0.cap = 1890;
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
      
      regexp0.reinit();
      regexp0.maxCap();
      boolean boolean1 = regexp_Op0.isPseudo();
      assertFalse(boolean1 == boolean0);
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      Regexp regexp0 = null;
      Regexp regexp1 = null;
      try {
        regexp1 = new Regexp((Regexp) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 2161;
      regexp0.reinit();
      regexp0.max = 1131;
      regexp0.name = "";
      regexp0.reinit();
      regexp0.reinit();
      regexp0.maxCap();
      regexp0.reinit();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("6Qx~9C&ki4pH7|\"YG");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.6Qx~9C&ki4pH7|\"YG
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.name = "";
      regexp0.cap = 783;
      int[] intArray0 = new int[0];
      regexp0.runes = intArray0;
      regexp0.runes = intArray0;
      boolean boolean0 = regexp_Op0.isPseudo();
      regexp0.toString();
      boolean boolean1 = regexp0.equals("w4E8/3ye1lHP}EEfvK");
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }
}
