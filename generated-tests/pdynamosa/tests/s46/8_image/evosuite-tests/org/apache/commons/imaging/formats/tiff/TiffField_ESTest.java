/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 11:12:45 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PipedOutputStream;
import java.io.PrintWriter;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import java.nio.charset.Charset;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-2437), "XResolution");
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)109;
      TiffField tiffField0 = new TiffField(2147114981, (-2521), fieldTypeAscii0.SHORT, 65112, 0L, byteArray0, byteOrder0, 2);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(109, int0);
      assertEquals((-2521), tiffField0.getDirectoryType());
      assertEquals(2147114981, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)26;
      byteArray0[4] = (byte) (-113);
      TiffField tiffField0 = new TiffField(65535, 4936, fieldTypeRational0, 65535, 4936, byteArray0, byteOrder0, (-509));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(4936, tiffField0.getDirectoryType());
      assertEquals((-509), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(4936, tiffField0.getOffset());
      assertEquals(46, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[4] = (byte)121;
      TiffField tiffField0 = new TiffField(32, 10, fieldTypeRational0, 10, 32, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(10, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte(1766, "UJN HQv%>5AMB");
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(34028, 34028, fieldTypeByte0, 4L, (-1229L), byteArray0, byteOrder0, (-2146900883));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-2146900883), tiffField0.getSortHint());
      assertEquals(34028, tiffField0.getDirectoryType());
      assertEquals(34028, tiffField0.getTag());
      assertEquals((-1229), tiffField0.getOffset());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)51, 3755, fieldTypeByte0.SHORT, 0L, 114L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(51, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(3755, tiffField0.getDirectoryType());
      assertEquals(114, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(34853, 34853, fieldTypeRational0, 632, 18L, byteArray0, byteOrder0, 34853);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(34853, tiffField0.getSortHint());
      assertEquals(34853, tiffField0.getDirectoryType());
      assertEquals(34853, tiffField0.getTag());
      assertEquals(34853, tagInfo0.tag);
      assertEquals(18, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(0, (-2138105989), fieldTypeFloat0, 380L, 1L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getTag();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-2138105989), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble((-761), "='FCqMz(MqpL");
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.wrap((CharSequence) "='FCqMz(MqpL");
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(338, 338, fieldTypeDouble0, (-761), (-143L), byteArray0, byteOrder0, 338);
      int int0 = tiffField0.getTag();
      assertEquals(338, tiffField0.getDirectoryType());
      assertEquals(338, tiffField0.getSortHint());
      assertEquals((-143), tiffField0.getOffset());
      assertEquals(338, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2872, "UJN HQv%>5AMB");
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-5);
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0, (int) (byte)0, 0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 1L, 0L, byteArray0, byteOrder0, (byte)0);
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-51), " ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-51), (-51), fieldTypeShort0, (-51), (-384L), byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getSortHint();
      assertEquals((-51), tiffField0.getDirectoryType());
      assertEquals((-384), tiffField0.getOffset());
      assertEquals((-51), tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(1574, "org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1840700268), (-1840700268), fieldTypeDouble0, 1574, 1574, byteArray0, byteOrder0, (byte) (-99));
      int int0 = tiffField0.getSortHint();
      assertEquals((-99), int0);
      assertEquals((-1840700268), tiffField0.getDirectoryType());
      assertEquals((-1840700268), tiffField0.getTag());
      assertEquals(1574, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2872, "UJN HQv%>5AMB");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(4, 340, fieldTypeAscii0.SRATIONAL, 2872, 340, byteArray0, byteOrder0, 580);
      int int0 = tiffField0.getOffset();
      assertEquals(580, tiffField0.getSortHint());
      assertEquals(340, int0);
      assertEquals(4, tiffField0.getTag());
      assertEquals(340, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146770197), (-2146770197), fieldTypeLong0, 4L, (-2146770197), byteArray0, byteOrder0, (-2722));
      int int0 = tiffField0.getOffset();
      assertEquals((-2146770197), tiffField0.getTag());
      assertEquals((-2146770197), tiffField0.getDirectoryType());
      assertEquals((-2146770197), int0);
      assertEquals((-2722), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong(0, "+!,>odsXn~g!\"");
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-61);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-57), (byte)0, fieldTypeLong0, 1, 2173L, byteArray0, byteOrder0, (byte) (-61));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-57), tiffField0.getTag());
      assertEquals(2173, tiffField0.getOffset());
      assertEquals((-61), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[19];
      byteArray0[0] = (byte) (-1);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146770197), (-2146770197), fieldTypeLong0, 4L, (-2146770197), byteArray0, byteOrder0, (-2766));
      tiffField0.getIntValueOrArraySum();
      assertEquals((-2146770197), tiffField0.getOffset());
      assertEquals((-2146770197), tiffField0.getTag());
      assertEquals((-2146770197), tiffField0.getDirectoryType());
      assertEquals((-2766), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[6];
      byteArray0[1] = (byte) (-1);
      TiffField tiffField0 = new TiffField(171, 171, fieldTypeShort0, 1L, 4L, byteArray0, byteOrder0, 41730);
      tiffField0.getIntValue();
      assertEquals(41730, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(171, tiffField0.getDirectoryType());
      assertEquals(171, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-1);
      TiffField tiffField0 = new TiffField(1, 269, fieldTypeShort0, 1, 1, byteArray0, byteOrder0, (byte)66);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(66, tiffField0.getSortHint());
      assertEquals(269, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(10, (String) null);
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(10, (byte) (-80), fieldTypeAscii0, 5828L, 772L, byteArray0, byteOrder0, 12);
      tiffField0.getFieldTypeName();
      assertEquals((-80), tiffField0.getDirectoryType());
      assertEquals(772, tiffField0.getOffset());
      assertEquals(12, tiffField0.getSortHint());
      assertEquals(10, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(2854, "");
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2854, (-2225), fieldTypeShort0, 1290L, 1L, byteArray0, byteOrder0, (byte) (-48));
      tiffField0.getFieldTypeName();
      assertEquals((-48), tiffField0.getSortHint());
      assertEquals((-2225), tiffField0.getDirectoryType());
      assertEquals(2854, tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      char[] charArray0 = new char[7];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(27, 29, (FieldType) null, 27, 27, byteArray0, byteOrder0, 29);
      tiffField0.getFieldType();
      assertEquals(27, tiffField0.getTag());
      assertEquals(29, tiffField0.getSortHint());
      assertEquals(29, tiffField0.getDirectoryType());
      assertEquals(27, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(35, 4, fieldTypeRational0, 219L, 4L, byteArray0, byteOrder0, 65);
      tiffField0.getFieldType();
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(35, tiffField0.getTag());
      assertEquals(4, tiffField0.getOffset());
      assertEquals(65, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-15), "H?");
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-15), 65535, fieldTypeShort0, 65535, (-15), byteArray0, byteOrder0, 65535);
      tiffField0.getFieldType();
      assertEquals((-15), tiffField0.getOffset());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals((-15), tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-64);
      TiffField tiffField0 = new TiffField(2147469289, 2147469289, fieldTypeShort0, 1, 2147469289, byteArray0, byteOrder0, (byte) (-56));
      tiffField0.getDoubleValue();
      assertEquals((-56), tiffField0.getSortHint());
      assertEquals(2147469289, tiffField0.getOffset());
      assertEquals(2147469289, tiffField0.getDirectoryType());
      assertEquals(2147469289, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[1] = (byte) (-44);
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeShort0, 1L, 276L, byteArray0, byteOrder0, (byte) (-44));
      tiffField0.getDoubleValue();
      assertEquals((-44), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getTag());
      assertEquals(276, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2872, "UJN HQv%>5AMB");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(4, 340, fieldTypeAscii0.SRATIONAL, 2872, 340, byteArray0, byteOrder0, 580);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(340, tiffField0.getOffset());
      assertEquals(4, tiffField0.getTag());
      assertEquals(340, int0);
      assertEquals(580, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146770197), (-2146770197), fieldTypeLong0, 4L, (-2146770197), byteArray0, byteOrder0, (-2722));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2146770197), int0);
      assertEquals((-2146770197), tiffField0.getOffset());
      assertEquals((-2146770197), tiffField0.getTag());
      assertEquals((-2722), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField((byte)69, 0, fieldTypeFloat0, 0, 0, byteArray0, byteOrder0, (byte)69);
      tiffField0.getCount();
      assertEquals(69, tiffField0.getSortHint());
      assertEquals(69, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-15), "H ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2436), 5042, fieldTypeShort0, 1L, 5042, byteArray0, byteOrder0, (-2436));
      tiffField0.getCount();
      assertEquals(5042, tiffField0.getDirectoryType());
      assertEquals((-2436), tiffField0.getSortHint());
      assertEquals((-2436), tiffField0.getTag());
      assertEquals(5042, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, " ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 907, fieldTypeShort0, 0, (byte) (-57), byteArray0, byteOrder0, (byte) (-57));
      tiffField0.getBytesLength();
      assertEquals(0, tiffField0.getTag());
      assertEquals(907, tiffField0.getDirectoryType());
      assertEquals((-57), tiffField0.getSortHint());
      assertEquals((-57), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(5, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeFloat0, 2147483647L, 2147483647L, byteArray0, byteOrder0, (-1));
      tiffField0.getBytesLength();
      assertEquals(5, tiffField0.getDirectoryType());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals((-1), tiffField0.getSortHint());
      assertEquals(5, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[5];
      TiffField tiffField0 = new TiffField(50939, 65535, fieldTypeRational0, 65535, (-3086L), byteArray0, (ByteOrder) null, (byte) (-66));
      tiffField0.getByteOrder();
      assertEquals((-66), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals((-3086), tiffField0.getOffset());
      assertEquals(50939, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField((-2138105980), (-2138105980), fieldTypeFloat0, (-4276211978L), (-2138105980), byteArray0, byteOrder0, (-2138105980));
      tiffField0.getByteArrayValue();
      assertEquals((-2138105980), tiffField0.getSortHint());
      assertEquals((-2138105980), tiffField0.getOffset());
      assertEquals((-2138105980), tiffField0.getTag());
      assertEquals((-2138105980), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, " ");
      byte[] byteArray0 = new byte[3];
      CharBuffer charBuffer0 = CharBuffer.allocate(0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1889, (byte) (-57), fieldTypeShort0, 343L, (-1L), byteArray0, byteOrder0, 0);
      MockFile mockFile0 = new MockFile("1889 (0x761: Unknown Tag): ");
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "");
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(1889, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(39L, mockFile0.length());
      assertEquals((-57), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = new FieldTypeLong((-20), "+!,>odsXn~g!\"");
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(26, (-20), fieldTypeLong0, 0L, 572L, byteArray0, (ByteOrder) null, 0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(pipedOutputStream0, true);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(572, tiffField0.getOffset());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-20), tiffField0.getDirectoryType());
      assertEquals(26, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-469), 2462, fieldTypeShort0, (-910L), 1L, byteArray0, byteOrder0, (byte)29);
      // Undeclared exception!
      try { 
        tiffField0.toString();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[103];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(65105, 2786, fieldTypeLong0, (-3158), 708, byteArray0, byteOrder0, (-3158));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-896), (-896), (FieldType) null, 1485L, 1721L, byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, " ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-456), (-1840), fieldTypeShort0, (-42L), (-600L), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-1), (byte) (-73), fieldTypeAscii0, (-1353L), (byte)1, byteArray0, byteOrder0, (-1010));
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1591, 2255, fieldTypeRational0, 2255, 2255, byteArray0, byteOrder0, 1591);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Lorg.apache.commons.imaging.common.RationalNumber; cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(0, 0, (FieldType) null, (-934L), 641L, byteArray0, (ByteOrder) null, (byte)21);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-746), (-746), fieldTypeByte0, (-746), (-746), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-505), "<W+KcZ");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(545, (-1369), fieldTypeFloat0, 933L, (-1838), byteArray0, (ByteOrder) null, 65535);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [F cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-51), " ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-51), (-51), fieldTypeShort0, (-51), (-384L), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(5, "");
      byte[] byteArray0 = new byte[9];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5, 5, fieldTypeFloat0, 2147483647L, 2147483647L, byteArray0, byteOrder0, (-1));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, ":Vc=FGP^.-IJv[Ss}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(5042, 5042, fieldTypeShort0.RATIONAL, (-2436), (-2436), byteArray0, byteOrder0, (-2436));
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, (String) null);
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(12, "_YRMHG0U?mJ.<");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeShort0, 7L, 0L, byteArray0, byteOrder0, 121);
      tiffField0.getByteOrder();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(12, tiffField0.getTag());
      assertEquals(121, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, " ");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0L, (-535L), byteArray0, (ByteOrder) null, 5042);
      tiffField0.getByteArrayValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(5042, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-535), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1955), 0, fieldTypeByte0, 1918L, 0L, byteArray0, byteOrder0, (byte) (-114));
      tiffField0.getFieldType();
      assertEquals((-114), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-1955), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, " ");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 255L, 0, byteArray0, byteOrder0, 1748);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(1748, tiffField0.getSortHint());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 4L, 0, byteArray0, byteOrder0, (byte)69);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 6, ((FieldType) ((org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType) fieldTypeLong0).RATIONAL).UNDEFINED, 1666L, 6, byteArray0, byteOrder0, 6);
      tiffField0.getValue();
      assertEquals(6, tiffField0.getOffset());
      assertEquals(6, tiffField0.getTag());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(27, (-274), fieldTypeLong0.DOUBLE, 2349, 27L, (byte[]) null, byteOrder0, 43);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals(27, tagInfo0.tag);
      assertEquals((-274), tiffField0.getDirectoryType());
      assertEquals(43, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2872, "UJN HQv%>5AMB");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-5), 2872, fieldTypeAscii0, 822L, 172L, byteArray0, byteOrder0, 1);
      int int0 = tiffField0.getTag();
      assertEquals(2872, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(172, tiffField0.getOffset());
      assertEquals((-5), int0);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      CharBuffer charBuffer0 = CharBuffer.allocate(1197);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(34027, 0, (FieldType) null, (-1L), 34027, byteArray0, byteOrder0, 34027);
      tiffField0.getCount();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(34027, tiffField0.getOffset());
      assertEquals(34027, tiffField0.getSortHint());
      assertEquals(34027, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1210, 1210, fieldTypeFloat0, 1210, 1210, (byte[]) null, byteOrder0, 1210);
      tiffField0.getBytesLength();
      assertEquals(1210, tiffField0.getSortHint());
      assertEquals(1210, tiffField0.getDirectoryType());
      assertEquals(1210, tiffField0.getTag());
      assertEquals(1210, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, " ");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 255L, 0, byteArray0, byteOrder0, 1748);
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(1748, tiffField0.getSortHint());
      assertEquals("0 (0x0: Unknown Tag): ", string0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-15), "<<#k^J{8}`8p4");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2436), 5042, fieldTypeShort0, 1L, 5042, byteArray0, byteOrder0, (-2436));
      tiffField0.getDoubleValue();
      assertEquals((-2436), tiffField0.getSortHint());
      assertEquals(5042, tiffField0.getOffset());
      assertEquals((-2436), tiffField0.getTag());
      assertEquals(5042, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-15), "H ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146793360, (-2138105989), fieldTypeShort0, 1L, (-2436), byteArray0, byteOrder0, 2);
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntValue();
      assertEquals((-2138105989), tiffField0.getDirectoryType());
      assertEquals(2146793360, tiffField0.getTag());
      assertEquals((-2436), tiffField0.getOffset());
      assertEquals(2, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3988, 1, fieldTypeByte0, (byte)0, (byte) (-67), byteArray0, byteOrder0, 0);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@59a0314 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(32, 10, fieldTypeRational0, 10, 32, byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2872, "UJN HQv%>5AMB");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-1840700268), (-1840700268), fieldTypeAscii0, 2872, (-1840700268), byteArray0, byteOrder0, (-1840700268));
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [Ljava.lang.String;@446fd9b8 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2146907760, ":n_?v-Jb*e,A}H#");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1916, 1842, fieldTypeDouble0, 0L, 4840L, byteArray0, byteOrder0, (byte) (-20));
      tiffField0.getDoubleArrayValue();
      assertEquals(1916, tiffField0.getTag());
      assertEquals((-20), tiffField0.getSortHint());
      assertEquals(1842, tiffField0.getDirectoryType());
      assertEquals(4840, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146770197), (-2146770197), fieldTypeLong0, 4L, (-2146770197), byteArray0, byteOrder0, (-2766));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2146770197), tiffField0.getOffset());
      assertEquals((-2146770197), tiffField0.getDirectoryType());
      assertEquals(4L, tiffField0.getCount());
      assertEquals((-2146770197), tiffField0.getTag());
      assertEquals((-2766), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField((-1841), 34118, fieldTypeFloat0, 1850L, 3470L, byteArray0, byteOrder0, (byte)69);
      tiffField0.getDoubleArrayValue();
      assertEquals(69, tiffField0.getSortHint());
      assertEquals(3470, tiffField0.getOffset());
      assertEquals(34118, tiffField0.getDirectoryType());
      assertEquals(1850L, tiffField0.getCount());
      assertEquals((-1841), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(65535, 4936, fieldTypeRational0, 65535, 4936, byteArray0, byteOrder0, (-509));
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(4936, tiffField0.getDirectoryType());
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(65535, tiffField0.getTag());
      assertEquals((-509), tiffField0.getSortHint());
      assertEquals(4936, tiffField0.getOffset());
      assertEquals(65535L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[7];
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((byte)0, "S~s");
      TiffField tiffField0 = new TiffField((byte) (-118), 2147114981, fieldTypeShort0, 33447, 615L, byteArray0, byteOrder0, 2);
      tiffField0.getDoubleArrayValue();
      assertEquals(33447L, tiffField0.getCount());
      assertEquals(2, tiffField0.getSortHint());
      assertEquals(2147114981, tiffField0.getDirectoryType());
      assertEquals(615, tiffField0.getOffset());
      assertEquals((-118), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-15), "H ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2436), 5042, fieldTypeShort0, 1L, 5042, byteArray0, byteOrder0, (-2436));
      tiffField0.getDoubleArrayValue();
      assertEquals((-2436), tiffField0.getSortHint());
      assertEquals((-2436), tiffField0.getTag());
      assertEquals(5042, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(5042, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(488, "yyyy-MM-dd'T'HH:mm:ss.SSSZ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(488, (byte) (-36), fieldTypeAscii0, 0L, (-1386L), byteArray0, byteOrder0, 599);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value:  for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[19];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-2146770197), (-2146770197), fieldTypeLong0, 4L, (-2146770197), byteArray0, byteOrder0, (-2766));
      tiffField0.getIntArrayValue();
      assertEquals((-2146770197), tiffField0.getOffset());
      assertEquals((-2766), tiffField0.getSortHint());
      assertEquals((-2146770197), tiffField0.getDirectoryType());
      assertEquals(4L, tiffField0.getCount());
      assertEquals((-2146770197), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2872, "UJN HQv%>5AMB");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(4, 340, fieldTypeAscii0.RATIONAL, 2872, 340, byteArray0, byteOrder0, 580);
      tiffField0.getIntArrayValue();
      assertEquals(340, tiffField0.getDirectoryType());
      assertEquals(580, tiffField0.getSortHint());
      assertEquals(2872L, tiffField0.getCount());
      assertEquals(340, tiffField0.getOffset());
      assertEquals(4, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      TiffField tiffField0 = new TiffField(10, 343, fieldTypeRational0, 343, 524280L, byteArray0, byteOrder0, 10);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-15), "H ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2436), 5042, fieldTypeShort0, 1L, 5042, byteArray0, byteOrder0, (-2436));
      tiffField0.getIntArrayValue();
      assertEquals((-2436), tiffField0.getTag());
      assertEquals(5042, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-2436), tiffField0.getSortHint());
      assertEquals(5042, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "H ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 65535, fieldTypeShort0, 2524L, 0, byteArray0, byteOrder0, 65535);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2524L, tiffField0.getCount());
      assertArrayEquals(new int[] {0}, intArray0);
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2872, "UJN HQv%>5AMB");
      byte[] byteArray0 = new byte[4];
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = ByteBuffer.wrap(byteArray0, (int) (byte)0, 0);
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeAscii0, 1L, 0L, byteArray0, byteOrder0, (byte)0);
      assertEquals(1, tiffField0.getBytesLength());
      
      String string0 = tiffField0.getStringValue();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      byte[] byteArray0 = new byte[116];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(9, 0, fieldTypeShort0, 66L, 321L, byteArray0, byteOrder0, 8);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@671b93c9
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeLong0.UNDEFINED, 1666L, 6, byteArray0, byteOrder0, 6);
      String string0 = tiffField0.getTagName();
      assertEquals("Unknown Tag (0x6)", string0);
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(6, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(1, "UJN HQv%>5AMB");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(2, (-2420), fieldTypeAscii0, 2407L, 6, byteArray0, byteOrder0, (-2146770197));
      String string0 = tiffField0.getTagName();
      assertEquals(6, tiffField0.getOffset());
      assertEquals((-2420), tiffField0.getDirectoryType());
      assertEquals(2, tiffField0.getTag());
      assertEquals((-2146770197), tiffField0.getSortHint());
      assertEquals("InteroperabilityVersion", string0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(0, (-2138105989), fieldTypeFloat0, 380L, 1L, byteArray0, byteOrder0, (byte)0);
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream("... (", false);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFileOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, "U.'K(W?TQK^f");
      assertEquals(0, tiffField0.getTag());
      assertEquals(1520, tiffField0.getBytesLength());
      assertEquals((-2138105989), tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(380L, tiffField0.getCount());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField((-2138105980), (-2138105980), fieldTypeFloat0, (-4276211978L), (-2138105980), byteArray0, byteOrder0, (-2138105980));
      tiffField0.dump();
      assertEquals((-2138105980), tiffField0.getTag());
      assertEquals((-2138105980), tiffField0.getSortHint());
      assertEquals((-2138105980), tiffField0.getDirectoryType());
      assertEquals(75021272, tiffField0.getBytesLength());
      assertEquals((-4276211978L), tiffField0.getCount());
      assertEquals((-2138105980), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[52];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeLong0.SBYTE, 1666L, 6, byteArray0, byteOrder0, 6);
      String string0 = tiffField0.toString();
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getSortHint());
      assertEquals("6 (0x6: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52) (1666 SByte)", string0);
      assertEquals(6, tiffField0.getOffset());
      assertEquals(1666, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)69, 4, fieldTypeByte0, 4L, (byte)69, byteArray0, byteOrder0, 0);
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(4L, tiffField0.getCount());
      assertEquals(4, tiffField0.getDirectoryType());
      assertEquals(4, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(69, tiffField0.getTag());
      assertEquals(69, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      byte[] byteArray0 = new byte[289];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeDouble0, 36, 36, byteArray0, byteOrder0, 36);
      tiffField0.dump();
      assertEquals(288, tiffField0.getBytesLength());
      assertEquals(36, tiffField0.getOffset());
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getTag());
      assertEquals(36L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      byte[] byteArray0 = new byte[215];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(48356, 48356, fieldTypeLong0, 1416, 48356, byteArray0, byteOrder0, 42);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1416L, tiffField0.getCount());
      assertEquals(5664, tiffField0.getBytesLength());
      assertEquals(48356, tiffField0.getDirectoryType());
      assertEquals(42, tiffField0.getSortHint());
      assertEquals(48356, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(48356, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      byte[] byteArray0 = new byte[236];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(275, 275, fieldTypeFloat0, 100L, 2147483647L, byteArray0, byteOrder0, 275);
      String string0 = tiffField0.getValueDescription();
      assertEquals(275, tiffField0.getTag());
      assertEquals(100L, tiffField0.getCount());
      assertEquals(275, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(275, tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals("0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (59)", string0);
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      byte[] byteArray0 = new byte[116];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(9, 0, fieldTypeShort0, 66L, 321L, byteArray0, byteOrder0, 8);
      String string0 = tiffField0.getValueDescription();
      assertEquals(8, tiffField0.getSortHint());
      assertEquals(9, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (58)", string0);
      assertEquals(66L, tiffField0.getCount());
      assertEquals(321, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      byte[] byteArray0 = new byte[151];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(73, "Missing value: ");
      TiffField tiffField0 = new TiffField(29, 29, fieldTypeAscii0, 2663L, (-4876L), byteArray0, byteOrder0, 73);
      String string0 = tiffField0.getValueDescription();
      assertEquals(73, tiffField0.getSortHint());
      assertEquals(29, tiffField0.getTag());
      assertEquals((-4876), tiffField0.getOffset());
      assertEquals(29, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(2663, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(2872, "UJN HQv%>5AMB");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((byte) (-5), 2872, fieldTypeAscii0, 822L, 172L, byteArray0, byteOrder0, 1);
      tiffField0.dump();
      assertEquals(822, tiffField0.getBytesLength());
      assertEquals(172, tiffField0.getOffset());
      assertEquals((-5), tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2872, tiffField0.getDirectoryType());
      assertEquals(822L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(136, (String) null);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte) (-120);
      byteArray0[1] = (byte)126;
      byteArray0[2] = (byte) (-110);
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte) (-21);
      byteArray0[5] = (byte) (-1);
      byteArray0[6] = (byte)98;
      TiffField tiffField0 = new TiffField(107, 33447, fieldTypeAscii0, 50736, 33447, byteArray0, byteOrder0, (-5602));
      tiffField0.dump();
      assertEquals((-5602), tiffField0.getSortHint());
      assertEquals(50736L, tiffField0.getCount());
      assertEquals(107, tiffField0.getTag());
      assertEquals(33447, tiffField0.getDirectoryType());
      assertEquals(50736, tiffField0.getBytesLength());
      assertEquals(33447, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-15), "H ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146793360, (-2138105989), fieldTypeShort0, 1L, (-2436), byteArray0, byteOrder0, 2);
      tiffField0.dump();
      assertEquals(1L, tiffField0.getCount());
      assertEquals((-2436), tiffField0.getOffset());
      assertEquals((-2138105989), tiffField0.getDirectoryType());
      assertEquals(2146793360, tiffField0.getTag());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(2, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, " ");
      byte[] byteArray0 = new byte[3];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeShort0, 0L, (-535L), byteArray0, (ByteOrder) null, 5042);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(0, tiffField0.getDirectoryType());
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(5042, tiffField0.getSortHint());
      assertEquals((-535), tiffField0.getOffset());
      assertEquals(0L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((-505), "<W+KcZ");
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField(545, (-1369), fieldTypeFloat0, 933L, (-1838), byteArray0, (ByteOrder) null, 65535);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNotNull(tiffElement0);
      assertEquals((-1369), tiffField0.getDirectoryType());
      assertEquals((-1838L), tiffElement0.offset);
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(545, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(136, (String) null);
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2374), 107, fieldTypeAscii0, (-2374), 0L, byteArray0, byteOrder0, 2903);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(337, 0);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(107, tiffField0.getDirectoryType());
      assertEquals((-2374), tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-2374L), tiffField0.getCount());
      assertNull(string0);
      assertEquals(2903, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)69, (-1431655764), fieldTypeShort0, 4840L, (-1431655764), byteArray0, byteOrder0, (-940));
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-940), tiffField0.getSortHint());
      assertEquals(69, tiffField0.getTag());
      assertEquals((-1431655764), tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals((-1431655764), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(12, "_YRMHG0U?mJ.<");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(12, 12, fieldTypeShort0, 7L, 0L, byteArray0, byteOrder0, 121);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(12, tiffField0.getTag());
      assertEquals(121, tiffField0.getSortHint());
      assertEquals(12, tiffField0.getDirectoryType());
      assertEquals(14, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "$v;#ybAHckTSyol");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 28, fieldTypeRational0, 28, 0, byteArray0, byteOrder0, 0);
      int int0 = tiffField0.getOffset();
      assertEquals(0, int0);
      assertEquals(224, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(28, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort(0, "H ");
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 65535, fieldTypeShort0, 2524L, 0, byteArray0, byteOrder0, 65535);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(65535, int0);
      assertEquals(0, tiffField0.getTag());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(2524L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(27, (-274), fieldTypeLong0.DOUBLE, 2349, 27L, (byte[]) null, byteOrder0, 43);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-274), tiffField0.getDirectoryType());
      assertEquals(43, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getOffset());
      assertEquals(27, tiffField0.getTag());
      assertEquals("Invalid value: GPS text field not encoded as bytes.", string0);
      assertEquals(2349L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1210, 1210, fieldTypeFloat0, 1210, 1210, (byte[]) null, byteOrder0, 1210);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test99()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(3, (byte)0, (FieldType) null, (-2713L), 3, (byte[]) null, byteOrder0, (byte)27);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(2, 729);
      // Undeclared exception!
      try { 
        tiffField_OversizeValueElement0.getElementDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField$OversizeValueElement", e);
      }
  }
}
