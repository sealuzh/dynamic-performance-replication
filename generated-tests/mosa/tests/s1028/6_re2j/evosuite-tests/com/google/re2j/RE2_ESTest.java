/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 19:34:28 GMT 2018
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.RE2;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class RE2_ESTest extends RE2_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      boolean boolean0 = RE2.match("", "");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      String string0 = rE2_0.replaceFirst("", "");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("uOW68yg('g.eM)");
      List<int[]> list0 = rE2_0.findAllSubmatchIndex("uOW68yg('g.eM)", 849);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("GK$}Bu");
      List<String[]> list0 = rE2_0.findAllSubmatch("GK$}Bu", (-2913));
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      RE2 rE2_0 = new RE2("@");
      String string0 = rE2_0.replaceAll("@", "@");
      assertEquals("@", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("B");
      String string0 = rE2_0.replaceFirst("B", "B");
      assertEquals("B", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("Tibetan");
      byte[] byteArray0 = new byte[0];
      List<int[]> list0 = rE2_0.findAllUTF8SubmatchIndex(byteArray0, 2);
      assertNull(list0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      boolean boolean0 = RE2.match("I9/CJ{ci2?f`\"qV", "I9/CJ{ci2?f`\"qV");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      boolean boolean0 = RE2.match("B", "B");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RE2 rE2_0 = RE2.compilePOSIX("Qc/;HYM\"");
      boolean boolean0 = rE2_0.matchUTF8(byteArray0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      List<int[]> list0 = rE2_0.findAllSubmatchIndex("", 849);
      assertEquals(1, list0.size());
      assertNotNull(list0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.findAllSubmatchIndex("", (-1185));
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      RE2 rE2_0 = new RE2("can't happen");
      rE2_0.findAllSubmatchIndex("can't happen", 849);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.findAllSubmatch("", (-1));
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.numberOfCapturingGroups();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("8SV~YTg4!MT@+:U");
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8Index(byteArray0, 256);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("Lepcha");
      rE2_0.find("Lepcha");
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.toString();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      RE2 rE2_0 = new RE2("Y>");
      rE2_0.findIndex("Y>");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("Q;j\"bu.?ss");
      rE2_0.findIndex("Q;j\"bu.?ss");
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      rE2_0.reset();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.findSubmatchIndex("");
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      RE2 rE2_0 = new RE2("com.google.re2j.CharGroup");
      byte[] byteArray0 = new byte[0];
      rE2_0.findUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      RE2 rE2_0 = new RE2("Wg3.'PJ");
      rE2_0.findAll("Wg3.'PJ", 2388);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("${t+\"cAT/C*yH,");
      rE2_0.replaceAll("${t+\"cAT/C*yH,", "${t+\"cAT/C*yH,");
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      RE2 rE2_0 = new RE2("HNDc<wG1PMxIgy>5j");
      byte[] byteArray0 = new byte[0];
      rE2_0.findUTF8Index(byteArray0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("^ii");
      rE2_0.findSubmatch("^ii");
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      RE2 rE2_0 = RE2.compile("");
      rE2_0.findAllUTF8SubmatchIndex(byteArray0, 188);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RE2 rE2_0 = new RE2("");
      rE2_0.matchUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      RE2 rE2_0 = new RE2("z");
      rE2_0.findAllSubmatch("z", (-2450));
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("7Iyi\"\f4}9_");
      rE2_0.findSubmatchIndex("7Iyi\"\f4}9_");
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      RE2 rE2_0 = RE2.compile("mBc0&-");
      rE2_0.findUTF8SubmatchIndex(byteArray0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      // Undeclared exception!
      try { 
        rE2_0.match("", (-2742), (-2742), (-2742), (int[]) null, (-2742));
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Machine", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      RE2 rE2_0 = RE2.compileImpl("", 0, true);
      rE2_0.replaceFirst("", "");
      rE2_0.reset();
      int[] intArray0 = rE2_0.findSubmatchIndex("|6]|0es");
      rE2_0.match("", 0, 0, 0, intArray0, 0);
      // Undeclared exception!
      try { 
        rE2_0.findAllUTF8((byte[]) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.MachineInput$UTF8Input", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("8K0E}&:H>_W;>L##");
      rE2_0.findAllIndex("8K0E}&:H>_W;>L##", 2027);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.findAllIndex("", (-1185));
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("REPEAT");
      byte[] byteArray0 = new byte[1];
      rE2_0.findUTF8Submatch(byteArray0);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      RE2.quoteMeta("Z%M&|^`7%cFnAn[X=j");
      try { 
        RE2.compile("Z%M&|^`7%cFnAn[X=j");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // error parsing regexp: missing closing ]: `[X=j`
         //
         verifyException("com.google.re2j.Parser", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8(byteArray0, 12);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[0];
      rE2_0.findUTF8Submatch(byteArray0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("r\"wAbyICBA");
      rE2_0.findAllSubmatch("r\"wAbyICBA", 7);
      rE2_0.match("r\"wAbyICBA", 7, 3542, 7, (int[]) null, 3542);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.findUTF8(byteArray0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("f4jf");
      rE2_0.findAll("", (-816));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      RE2 rE2_0 = new RE2("");
      byte[] byteArray0 = new byte[3];
      rE2_0.findAllUTF8Submatch(byteArray0, (byte)0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[0];
      rE2_0.findAllUTF8Index(byteArray0, 561);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      RE2 rE2_0 = new RE2("|");
      rE2_0.findAllSubmatch("|", (-2450));
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      rE2_0.replaceAll("", "");
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      RE2 rE2_0 = new RE2("Hangul");
      rE2_0.match("Hangul", 2344, (-1102), (-1102), (int[]) null, (-1102));
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      byte[] byteArray0 = new byte[0];
      rE2_0.findUTF8Index(byteArray0);
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("282Je!xlgL#Y0t^");
      rE2_0.find("282Je!xlgL#Y0t^");
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      RE2 rE2_0 = RE2.compile("");
      rE2_0.findSubmatch("");
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      RE2 rE2_0 = new RE2("$");
      rE2_0.replaceAll("$", "$");
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("^");
      rE2_0.replaceAll("^", "^");
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      RE2 rE2_0 = RE2.compilePOSIX("");
      byte[] byteArray0 = new byte[1];
      rE2_0.findAllUTF8Submatch(byteArray0, 66639);
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      RE2 rE2_0 = RE2.compileImpl("", 0, false);
      rE2_0.replaceFirst("", "");
      rE2_0.findAllIndex("", 0);
      rE2_0.match("", 0, 0, 0, (int[]) null, 1038);
      RE2.compileImpl("", 1038, false);
  }
}
