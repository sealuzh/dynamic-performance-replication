/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 08:32:21 GMT 2019
 */

package wheel.asm;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedInputStream;
import java.io.InputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.AnnotationVisitor;
import wheel.asm.Attribute;
import wheel.asm.ByteVector;
import wheel.asm.ClassWriter;
import wheel.asm.FieldWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FieldWriter_ESTest extends FieldWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "wheel.asm.ClassReader", "wheel.asm.ClassReader", "", "wheel.asm.FieldWriter");
      AnnotationVisitor annotationVisitor0 = fieldWriter0.visitAnnotation("", false);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-754));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "V2AL~?zM{l", "V2AL~?zM{l", "V2AL~?zM{l", "V2AL~?zM{l");
      // Undeclared exception!
      try { 
        fieldWriter0.visitAttribute((Attribute) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.FieldWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-994), "T6AbU1Bqk+j/{klP84", "T6AbU1Bqk+j/{klP84", ")/", "T6AbU1Bqk+j/{klP84");
      Attribute attribute0 = new Attribute(")/");
      fieldWriter0.visitAttribute(attribute0);
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2);
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      FieldWriter fieldWriter0 = null;
      try {
        fieldWriter0 = new FieldWriter(classWriter0, (-661), "wheel.asm.FieldWriter", (String) null, "wheel.asm.FieldWriter", bufferedInputStream0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(197);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1115), "$~", "q\"Pt''7", "$~", "$~");
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.visitAnnotation("q\"Pt''7", true);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-148));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131072, "wheel.asm.FieldWriter", "RuntimeVisibleAnnotations", (String) null, (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-994), "T6AbU1Bqk+j/{klP84", "T6AbU1Bqk+j/{klP84", ")/", "T6AbU1Bqk+j/{klP84");
      classWriter0.version = (-994);
      ByteVector byteVector0 = classWriter0.pool;
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 6, "*^bjKFf|FM'KFFA", "HHB<h3x6;CQ", "", (Object) null);
      ByteVector byteVector0 = new ByteVector();
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-754));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 1, "V2AL~?zM{l", "V2AL~?zM{l", "V2AL~?zM{l", "V2AL~?zM{l");
      Attribute attribute0 = new Attribute("=^l5%5$|BtM*5\"Mr\"|");
      fieldWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        fieldWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(6);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 6, "*^bjKFf|FM'KFFA", "HHB<h3x6;CQ", "", (Object) null);
      fieldWriter0.visitAnnotation("HHB<h3x6;CQ", false);
      int int0 = fieldWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-148));
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 131072, "wheel.asm.FieldWriter", "RuntimeVisibleAnnotations", (String) null, (Object) null);
      int int0 = fieldWriter0.getSize();
      assertEquals(14, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(197);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1115), "$~", "q\"Pt''7", "$~", "$~");
      int int0 = fieldWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(197);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-1115), "$~", "q\"Pt''7", "$~", "$~");
      fieldWriter0.visitAnnotation("q\"Pt''7", true);
      int int0 = fieldWriter0.getSize();
      assertEquals(48, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(19);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 2, "wheel.asm.ClassReader", "wheel.asm.ClassReader", "", "wheel.asm.FieldWriter");
      fieldWriter0.visitAnnotation("wheel.asm.ByteVector", false);
      ByteVector byteVector0 = new ByteVector(1);
      fieldWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(8);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, 0, "org.apache.commons.io.filefilter.CanWriteFileFilter", "org.apache.commons.io.filefilter.CanWriteFileFilter", "", "org.apache.commons.io.filefilter.CanWriteFileFilter");
      FieldWriter fieldWriter1 = null;
      try {
        fieldWriter1 = new FieldWriter(classWriter0, 0, "|`?on", "", "", classWriter0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // value wheel.asm.ClassWriter@5
         //
         verifyException("wheel.asm.ClassWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-994), "T6AbU1Bqk+j/{klP84", "T6AbU1Bqk+j/{klP84", ")/", "T6AbU1Bqk+j/{klP84");
      fieldWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(0);
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-994), "T6AbU1Bqk+j/{klP84", "T6AbU1Bqk+j/{klP84", ")/", "T6AbU1Bqk+j/{klP84");
      Attribute attribute0 = new Attribute(")/");
      fieldWriter0.visitAttribute(attribute0);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        fieldWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("wheel.asm.Attribute", e);
      }
  }
}
