/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 16:49:39 GMT 2018
 */

package org.apache.bcel.verifier.structurals;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.DataOutputStream;
import java.io.ObjectStreamConstants;
import java.io.PrintStream;
import org.apache.bcel.Constants;
import org.apache.bcel.classfile.Constant;
import org.apache.bcel.classfile.ConstantDouble;
import org.apache.bcel.classfile.ConstantFieldref;
import org.apache.bcel.classfile.ConstantPool;
import org.apache.bcel.classfile.ConstantString;
import org.apache.bcel.generic.AALOAD;
import org.apache.bcel.generic.ACONST_NULL;
import org.apache.bcel.generic.ALOAD;
import org.apache.bcel.generic.ANEWARRAY;
import org.apache.bcel.generic.ARETURN;
import org.apache.bcel.generic.ARRAYLENGTH;
import org.apache.bcel.generic.ASTORE;
import org.apache.bcel.generic.ATHROW;
import org.apache.bcel.generic.BALOAD;
import org.apache.bcel.generic.BASTORE;
import org.apache.bcel.generic.BIPUSH;
import org.apache.bcel.generic.BREAKPOINT;
import org.apache.bcel.generic.BasicType;
import org.apache.bcel.generic.CALOAD;
import org.apache.bcel.generic.CHECKCAST;
import org.apache.bcel.generic.CompoundInstruction;
import org.apache.bcel.generic.ConstantPoolGen;
import org.apache.bcel.generic.D2F;
import org.apache.bcel.generic.D2I;
import org.apache.bcel.generic.D2L;
import org.apache.bcel.generic.DADD;
import org.apache.bcel.generic.DCMPG;
import org.apache.bcel.generic.DCMPL;
import org.apache.bcel.generic.DCONST;
import org.apache.bcel.generic.DDIV;
import org.apache.bcel.generic.DLOAD;
import org.apache.bcel.generic.DMUL;
import org.apache.bcel.generic.DNEG;
import org.apache.bcel.generic.DREM;
import org.apache.bcel.generic.DRETURN;
import org.apache.bcel.generic.DSTORE;
import org.apache.bcel.generic.DSUB;
import org.apache.bcel.generic.DUP;
import org.apache.bcel.generic.DUP2;
import org.apache.bcel.generic.DUP2_X1;
import org.apache.bcel.generic.DUP2_X2;
import org.apache.bcel.generic.DUP_X1;
import org.apache.bcel.generic.DUP_X2;
import org.apache.bcel.generic.F2D;
import org.apache.bcel.generic.F2I;
import org.apache.bcel.generic.F2L;
import org.apache.bcel.generic.FADD;
import org.apache.bcel.generic.FALOAD;
import org.apache.bcel.generic.FASTORE;
import org.apache.bcel.generic.FCMPG;
import org.apache.bcel.generic.FCMPL;
import org.apache.bcel.generic.FCONST;
import org.apache.bcel.generic.FDIV;
import org.apache.bcel.generic.FLOAD;
import org.apache.bcel.generic.FMUL;
import org.apache.bcel.generic.FNEG;
import org.apache.bcel.generic.FREM;
import org.apache.bcel.generic.FRETURN;
import org.apache.bcel.generic.FSTORE;
import org.apache.bcel.generic.FSUB;
import org.apache.bcel.generic.GETFIELD;
import org.apache.bcel.generic.GETSTATIC;
import org.apache.bcel.generic.GOTO;
import org.apache.bcel.generic.GOTO_W;
import org.apache.bcel.generic.I2B;
import org.apache.bcel.generic.I2C;
import org.apache.bcel.generic.I2D;
import org.apache.bcel.generic.I2F;
import org.apache.bcel.generic.I2L;
import org.apache.bcel.generic.I2S;
import org.apache.bcel.generic.IAND;
import org.apache.bcel.generic.IASTORE;
import org.apache.bcel.generic.ICONST;
import org.apache.bcel.generic.IDIV;
import org.apache.bcel.generic.IFGE;
import org.apache.bcel.generic.IFGT;
import org.apache.bcel.generic.IFLE;
import org.apache.bcel.generic.IFLT;
import org.apache.bcel.generic.IFNULL;
import org.apache.bcel.generic.IF_ACMPNE;
import org.apache.bcel.generic.IF_ICMPGT;
import org.apache.bcel.generic.IF_ICMPLT;
import org.apache.bcel.generic.IF_ICMPNE;
import org.apache.bcel.generic.IINC;
import org.apache.bcel.generic.ILOAD;
import org.apache.bcel.generic.IMPDEP1;
import org.apache.bcel.generic.IMPDEP2;
import org.apache.bcel.generic.IMUL;
import org.apache.bcel.generic.INEG;
import org.apache.bcel.generic.INSTANCEOF;
import org.apache.bcel.generic.INVOKEDYNAMIC;
import org.apache.bcel.generic.INVOKEINTERFACE;
import org.apache.bcel.generic.INVOKESTATIC;
import org.apache.bcel.generic.INVOKEVIRTUAL;
import org.apache.bcel.generic.IOR;
import org.apache.bcel.generic.IREM;
import org.apache.bcel.generic.IRETURN;
import org.apache.bcel.generic.ISHL;
import org.apache.bcel.generic.ISHR;
import org.apache.bcel.generic.ISTORE;
import org.apache.bcel.generic.ISUB;
import org.apache.bcel.generic.IUSHR;
import org.apache.bcel.generic.IXOR;
import org.apache.bcel.generic.InstructionConstants;
import org.apache.bcel.generic.InstructionHandle;
import org.apache.bcel.generic.InstructionList;
import org.apache.bcel.generic.JSR;
import org.apache.bcel.generic.JSR_W;
import org.apache.bcel.generic.L2D;
import org.apache.bcel.generic.L2F;
import org.apache.bcel.generic.L2I;
import org.apache.bcel.generic.LADD;
import org.apache.bcel.generic.LALOAD;
import org.apache.bcel.generic.LAND;
import org.apache.bcel.generic.LASTORE;
import org.apache.bcel.generic.LCMP;
import org.apache.bcel.generic.LCONST;
import org.apache.bcel.generic.LDC;
import org.apache.bcel.generic.LDC2_W;
import org.apache.bcel.generic.LDC_W;
import org.apache.bcel.generic.LDIV;
import org.apache.bcel.generic.LLOAD;
import org.apache.bcel.generic.LMUL;
import org.apache.bcel.generic.LNEG;
import org.apache.bcel.generic.LOOKUPSWITCH;
import org.apache.bcel.generic.LOR;
import org.apache.bcel.generic.LREM;
import org.apache.bcel.generic.LRETURN;
import org.apache.bcel.generic.LSHL;
import org.apache.bcel.generic.LSHR;
import org.apache.bcel.generic.LSTORE;
import org.apache.bcel.generic.LSUB;
import org.apache.bcel.generic.LUSHR;
import org.apache.bcel.generic.LXOR;
import org.apache.bcel.generic.LocalVariableInstruction;
import org.apache.bcel.generic.MONITORENTER;
import org.apache.bcel.generic.MONITOREXIT;
import org.apache.bcel.generic.MULTIANEWARRAY;
import org.apache.bcel.generic.MethodGen;
import org.apache.bcel.generic.NEWARRAY;
import org.apache.bcel.generic.NOP;
import org.apache.bcel.generic.ObjectType;
import org.apache.bcel.generic.POP;
import org.apache.bcel.generic.POP2;
import org.apache.bcel.generic.PUSH;
import org.apache.bcel.generic.PUTFIELD;
import org.apache.bcel.generic.RET;
import org.apache.bcel.generic.RETURN;
import org.apache.bcel.generic.SALOAD;
import org.apache.bcel.generic.SASTORE;
import org.apache.bcel.generic.SIPUSH;
import org.apache.bcel.generic.SWAP;
import org.apache.bcel.generic.TABLESWITCH;
import org.apache.bcel.generic.Type;
import org.apache.bcel.util.ByteSequence;
import org.apache.bcel.verifier.structurals.Frame;
import org.apache.bcel.verifier.structurals.InstConstraintVisitor;
import org.apache.bcel.verifier.structurals.LocalVariables;
import org.apache.bcel.verifier.structurals.OperandStack;
import org.apache.bcel.verifier.structurals.UninitializedObjectType;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InstConstraintVisitor_ESTest extends InstConstraintVisitor_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ISTORE iSTORE0 = new ISTORE(2);
      instConstraintVisitor0.visitISTORE(iSTORE0);
      assertEquals((short)54, iSTORE0.getCanonicalTag());
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      FSTORE fSTORE0 = new FSTORE(2526);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitFSTORE(fSTORE0);
      assertEquals((short)56, fSTORE0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FLOAD fLOAD0 = new FLOAD(0);
      instConstraintVisitor0.visitFLOAD(fLOAD0);
      assertEquals((short)34, fLOAD0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      IMPDEP2 iMPDEP2_0 = new IMPDEP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMPDEP2(iMPDEP2_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as IMPDEP2.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FCMPL fCMPL0 = new FCMPL();
      ARETURN aRETURN0 = new ARETURN();
      aRETURN0.copy();
      INVOKEDYNAMIC iNVOKEDYNAMIC0 = new INVOKEDYNAMIC(0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEDYNAMIC(iNVOKEDYNAMIC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INVOKEDYNAMIC instruction is not supported at this time
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ILOAD iLOAD0 = new ILOAD(780);
      instConstraintVisitor0.visitILOAD(iLOAD0);
      LCMP lCMP0 = new LCMP();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLCMP(lCMP0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LNEG lNEG0 = new LNEG();
      instConstraintVisitor0.visitJSR_W((JSR_W) null);
      instConstraintVisitor0.visitLLOAD((LLOAD) null);
      FDIV fDIV0 = new FDIV();
      assertEquals((short)110, fDIV0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      CALOAD cALOAD0 = new CALOAD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCALOAD(cALOAD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BREAKPOINT bREAKPOINT0 = new BREAKPOINT();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitBREAKPOINT(bREAKPOINT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as BREAKPOINT.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      NOP nOP0 = new NOP();
      instConstraintVisitor0.visitNOP(nOP0);
      assertEquals("nop", nOP0.getName());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ACONST_NULL aCONST_NULL0 = new ACONST_NULL();
      instConstraintVisitor0.visitACONST_NULL(aCONST_NULL0);
      IDIV iDIV0 = new IDIV();
      assertEquals((short)108, iDIV0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      BIPUSH bIPUSH0 = new BIPUSH((byte)79);
      instConstraintVisitor0.visitBIPUSH(bIPUSH0);
      assertEquals(2, bIPUSH0.getLength());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ISTORE iSTORE0 = new ISTORE(2);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMPDEP1((IMPDEP1) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: In this JustIce verification pass there should not occur an illegal instruction such as IMPDEP1.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitDCONST((DCONST) null);
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      SIPUSH sIPUSH0 = new SIPUSH((short)78);
      instConstraintVisitor0.visitSIPUSH(sIPUSH0);
      assertEquals("sipush", sIPUSH0.getName());
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(0, 3);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKEINTERFACE(iNVOKEINTERFACE0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DSTORE dSTORE0 = new DSTORE((byte)79);
      DLOAD dLOAD0 = new DLOAD((byte)79);
      instConstraintVisitor0.visitDLOAD(dLOAD0);
      assertEquals(79, dLOAD0.getIndex());
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      DUP2 dUP2_0 = new DUP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStackInstruction(dUP2_0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      GOTO gOTO0 = new GOTO((InstructionHandle) null);
      instConstraintVisitor0.visitGOTO(gOTO0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDSUB((DSUB) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKEVIRTUAL iNVOKEVIRTUAL0 = new INVOKEVIRTUAL(1387);
      instConstraintVisitor0.visitInvokeInstruction(iNVOKEVIRTUAL0);
      assertEquals((short)182, iNVOKEVIRTUAL0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ICONST iCONST0 = new ICONST(2);
      instConstraintVisitor0.visitICONST(iCONST0);
      assertEquals(1, iCONST0.getLength());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      constantPoolGen0.addLong(1940L);
      instConstraintVisitor0.setConstantPoolGen(constantPoolGen0);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, (byte[]) null);
      LDC_W lDC_W0 = new LDC_W(1);
      lDC_W0.toString(false);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLDC_W(lDC_W0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LDC_W constraint violated: Referenced constant should be a CONSTANT_Integer, a CONSTANT_Float, a CONSTANT_String or a CONSTANT_Class, but is 'CONSTANT_Long[5](bytes = 1940)'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      INVOKESTATIC iNVOKESTATIC0 = new INVOKESTATIC(1387);
      Frame frame0 = new Frame(1387, 2032);
      instConstraintVisitor0.setFrame(frame0);
      Boolean boolean0 = new Boolean("N6VaYCB1UK@");
      FSTORE fSTORE0 = new FSTORE(4577);
      LSTORE lSTORE0 = new LSTORE(1);
      instConstraintVisitor0.visitLSTORE(lSTORE0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStoreInstruction(fSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FSTORE constraint violated: Cannot STORE: Stack to read from is empty.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      FSTORE fSTORE0 = new FSTORE(1);
      ASTORE aSTORE0 = new ASTORE(1);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(1);
      INEG iNEG0 = new INEG();
      FCONST fCONST0 = new FCONST(1);
      instConstraintVisitor0.visitFCONST(fCONST0);
      assertEquals("fconst_1", fCONST0.getName());
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitLCONST((LCONST) null);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      AALOAD aALOAD0 = new AALOAD();
      AALOAD aALOAD1 = new AALOAD();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitGOTO_W((GOTO_W) null);
      aALOAD0.getType(constantPoolGen0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitAALOAD(aALOAD1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/mnt/gaiagpfs/users/homedirs/apanichella/Evosuite_performance/Dataset/gordon_script_sum/projects/1_bcel/K&e4aFj+");
      GETSTATIC gETSTATIC0 = new GETSTATIC(1);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.visitGETSTATIC(gETSTATIC0);
      byte[] byteArray0 = new byte[11];
      byteArray0[0] = (byte)1;
      boolean boolean0 = FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      instConstraintVisitor0.setConstantPoolGen(constantPoolGen0);
      LDC_W lDC_W0 = new LDC_W(0);
      instConstraintVisitor0.visitCPInstruction(lDC_W0);
      Boolean boolean0 = new Boolean(false);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      instConstraintVisitor0.setConstantPoolGen(constantPoolGen0);
      LDC_W lDC_W0 = new LDC_W(258);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCPInstruction(lDC_W0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: Huh?! Constant pool index of instruction 'ldc_w[19](3) 258' illegal? Pass 3a should have checked this!
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Frame frame0 = new Frame(2263, 2263);
      Frame frame1 = frame0.getClone();
      frame1.getClone();
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      Boolean boolean0 = new Boolean("<clinit>");
      FSTORE fSTORE0 = new FSTORE(1);
      // Undeclared exception!
      try { 
        fSTORE0.accept(instConstraintVisitor0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FSTORE constraint violated: Cannot consume 1 stack slots: only 0 slot(s) left on stack!
         // Stack:
         // Slots used: 0 MaxStack: 2263.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitTABLESWITCH((TABLESWITCH) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ANEWARRAY aNEWARRAY0 = new ANEWARRAY(1681);
      LocalVariables localVariables0 = new LocalVariables(1681);
      LocalVariables localVariables1 = localVariables0.getClone();
      int int0 = 2357;
      ObjectType objectType0 = new ObjectType("~Y^pt=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2357, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFADD((FADD) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      LocalVariables localVariables1 = new LocalVariables(792);
      ObjectType objectType0 = ObjectType.getInstance("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      LocalVariables localVariables2 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables2, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      localVariables2.getClone();
      IINC iINC0 = new IINC(2888, 478);
      LADD lADD0 = new LADD();
      localVariables2.set(11, objectType0);
      boolean boolean0 = new Boolean("~Y^ptJ=m5vV&y5");
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      IFGT iFGT0 = new IFGT((InstructionHandle) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFGT(iFGT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFGT constraint violated: The value at the stack top is not of type 'int', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LALOAD lALOAD0 = new LALOAD();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      FileSystemHandling.shouldAllThrowIOExceptions();
      lALOAD0.produceStack((ConstantPoolGen) null);
      instConstraintVisitor0.visitJSR((JSR) null);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLALOAD(lALOAD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(764);
      ObjectType objectType0 = ObjectType.getInstance("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(764, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Class<F2L> class0 = F2L.class;
      Type.getType(class0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen1 = new ConstantPoolGen();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FDIV fDIV0 = new FDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFDIV(fDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FDIV constraint violated: The value at the stack top is not of type 'float', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(764);
      ObjectType objectType0 = ObjectType.getInstance("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(764, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Class<F2L> class0 = F2L.class;
      Type.getType(class0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantPoolGen constantPoolGen1 = new ConstantPoolGen();
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      IDIV iDIV0 = new IDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIDIV(iDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IDIV constraint violated: The value at the stack top is not of type 'int', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType(",f<U{\"gX=aZ?K<");
      OperandStack operandStack0 = new OperandStack(792, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      I2D i2D0 = new I2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2D(i2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L,f<U{\"gX=aZ?K<;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(764);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Class<F2L> class0 = F2L.class;
      Type.getType(class0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LADD lADD0 = new LADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLADD(lADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LADD constraint violated: The value at the stack top is not of type 'long', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(796);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      int int0 = 2888;
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantDouble constantDouble0 = new ConstantDouble(2357);
      ISTORE iSTORE0 = new ISTORE(796);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLocalVariableInstruction(iSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISTORE constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      LocalVariables localVariables1 = localVariables0.getClone();
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      localVariables0.getClone();
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.toString();
      operandStack0.toString();
      localVariables0.getClone();
      LADD lADD0 = new LADD();
      frame0.equals(localVariables1);
      DNEG dNEG0 = new DNEG();
      DNEG dNEG1 = new DNEG();
      DNEG dNEG2 = new DNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDNEG(dNEG2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DNEG constraint violated: The value at the stack top is not of type 'double', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(792, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Character character0 = new Character('V');
      FCMPG fCMPG0 = new FCMPG();
      DUP_X1 dUP_X1_0 = new DUP_X1();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP_X1(dUP_X1_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(796);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(796, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ISHR iSHR0 = new ISHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISHR(iSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISHR constraint violated: The value at the stack top is not of type 'int', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2921, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Character character0 = new Character('V');
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LREM lREM0 = new LREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLREM(lREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LREM constraint violated: The value at the stack top is not of type 'long', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(792, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.toString();
      localVariables0.clone();
      L2D l2D0 = new L2D();
      operandStack0.equals(l2D0);
      frame0.toString();
      instConstraintVisitor0.setFrame(frame0);
      DSUB dSUB0 = new DSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDSUB(dSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DSUB constraint violated: The value at the stack top is not of type 'double', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ConstantPoolGen constantPoolGen1 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(92);
      ObjectType objectType0 = new ObjectType("");
      constantPoolGen1.toString();
      OperandStack operandStack0 = new OperandStack(4295, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      F2L f2L0 = new F2L();
      F2L f2L1 = new F2L();
      F2L f2L2 = new F2L();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2L(f2L2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2L constraint violated: The value at the stack top is not of type 'float', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("F9r0#4O_;1.>Bf");
      OperandStack operandStack0 = new OperandStack(64, objectType0);
      OperandStack operandStack1 = new OperandStack(792);
      localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Character character0 = new Character('J');
      Character character1 = new Character('J');
      PUSH pUSH0 = new PUSH(constantPoolGen0, character1);
      ConstantPoolGen constantPoolGen1 = new ConstantPoolGen();
      LLOAD lLOAD0 = new LLOAD(792);
      I2D i2D0 = new I2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLUSHR((LUSHR) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(472);
      LocalVariables localVariables1 = new LocalVariables(472);
      ObjectType objectType0 = ObjectType.getInstance("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2911, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      LocalVariables localVariables2 = localVariables1.getClone();
      localVariables0.clone();
      localVariables1.merge(localVariables2);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      ConstantDouble constantDouble0 = new ConstantDouble(472);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      L2D l2D0 = new L2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2D(l2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction L2D constraint violated: The value at the stack top is not of type 'long', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(691);
      ObjectType objectType0 = new ObjectType("bcel.statistics");
      int int0 = 2888;
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Character.valueOf('{');
      Character character0 = Character.valueOf('.');
      PUSH pUSH0 = new PUSH(constantPoolGen0, character0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLOOKUPSWITCH((LOOKUPSWITCH) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("F9r0#4O_;1.>Bf");
      OperandStack operandStack0 = new OperandStack(792, objectType0);
      operandStack0.merge(operandStack0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Boolean boolean0 = new Boolean("F9r0#4O_;1.>Bf");
      FSTORE fSTORE0 = new FSTORE(792);
      int int0 = Character.MIN_CODE_POINT;
      fSTORE0.produceStack(constantPoolGen0);
      fSTORE0.produceStack(constantPoolGen0);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitStoreInstruction(fSTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FSTORE constraint violated: Stack top type and STOREing Instruction type mismatch: Stack top: 'F9r0#4O_'; Instruction type: 'float'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      LocalVariables localVariables1 = new LocalVariables(2888);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Character character0 = new Character('V');
      PUSH pUSH0 = new PUSH(constantPoolGen0, character0);
      pUSH0.getInstructionList();
      DCMPG dCMPG0 = new DCMPG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDCMPG(dCMPG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DCMPG constraint violated: The value at the stack top is not of type 'double', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(792, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Character character0 = new Character('V');
      FCMPG fCMPG0 = new FCMPG();
      DUP_X1 dUP_X1_0 = new DUP_X1();
      byte[] byteArray0 = new byte[3];
      byteArray0[0] = (byte) (-116);
      byteArray0[1] = (byte)5;
      byteArray0[2] = (byte) (-11);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FNEG fNEG0 = new FNEG();
      fNEG0.toString(true);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFNEG(fNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FNEG constraint violated: The value at the stack top is not of type 'float', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ObjectType objectType0 = ObjectType.getInstance("Expecting  class type ObjectType) to work on. Found: '");
      OperandStack operandStack0 = new OperandStack(792, objectType0);
      LocalVariables localVariables0 = new LocalVariables(792);
      LocalVariables localVariables1 = new LocalVariables(792);
      ObjectType objectType1 = new ObjectType("");
      OperandStack operandStack1 = new OperandStack(252, objectType1);
      LocalVariables localVariables2 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables2, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantDouble constantDouble0 = new ConstantDouble(2075.18709151242);
      localVariables2.getClone();
      INVOKEINTERFACE iNVOKEINTERFACE0 = new INVOKEINTERFACE(221, 1179);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2F((D2F) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(761);
      OperandStack operandStack0 = new OperandStack(761);
      operandStack0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      IINC iINC0 = new IINC(761, 476);
      LADD lADD0 = new LADD();
      LocalVariables localVariables1 = new LocalVariables(761);
      LocalVariables localVariables2 = new LocalVariables(761);
      localVariables1.getClone();
      LocalVariables localVariables3 = new LocalVariables(582);
      Boolean boolean0 = new Boolean("");
      IINC iINC1 = new IINC(37, 1909);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIINC(iINC1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IINC constraint violated: The 'index' is not of type int but of type <unknown object>.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(465);
      LocalVariables localVariables1 = new LocalVariables(465);
      ObjectType objectType0 = ObjectType.getInstance("'. which threw ");
      ObjectType objectType1 = new ObjectType("F9r0#4O_;1.>Bf");
      OperandStack operandStack0 = new OperandStack(1812, objectType1);
      OperandStack operandStack1 = new OperandStack(465, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack1);
      FileSystemHandling.shouldAllThrowIOExceptions();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      localVariables0.clone();
      Frame frame2 = frame1.getClone();
      instConstraintVisitor0.setFrame(frame2);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Character character0 = new Character('V');
      LocalVariables localVariables2 = new LocalVariables(465);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Boolean boolean0 = new Boolean((String) null);
      IINC iINC0 = new IINC(1812, 1812);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIINC(iINC0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IINC constraint violated: The 'index' is not a valid index into the local variable array.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      int int0 = 792;
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      LocalVariables localVariables0 = new LocalVariables(792);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      IINC iINC0 = new IINC(90, 792);
      ISUB iSUB0 = new ISUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISUB(iSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISUB constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(792, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Character character0 = new Character('V');
      Character character1 = new Character('V');
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      byteArray0[0] = (byte) (-55);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FNEG fNEG0 = new FNEG();
      D2F d2F0 = new D2F();
      ARETURN aRETURN0 = new ARETURN();
      instConstraintVisitor0.visitARETURN(aRETURN0);
      INVOKESTATIC iNVOKESTATIC0 = new INVOKESTATIC(792);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINVOKESTATIC(iNVOKESTATIC0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ConstantPoolGen constantPoolGen1 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(691);
      ObjectType objectType0 = new ObjectType("bcel.statistics");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables1.merge(localVariables0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantDouble constantDouble0 = new ConstantDouble(0.0);
      InstConstraintVisitor instConstraintVisitor1 = new InstConstraintVisitor();
      frame0.getClone();
      instConstraintVisitor1.setFrame(frame0);
      instConstraintVisitor1.visitIFNULL((IFNULL) null);
      assertFalse(instConstraintVisitor1.equals((Object)instConstraintVisitor0));
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ConstantPoolGen constantPoolGen1 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(691);
      ObjectType objectType0 = new ObjectType("bcel.statistics");
      OperandStack operandStack0 = new OperandStack(691, objectType0);
      localVariables0.getClone();
      localVariables0.toString();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      ConstantDouble constantDouble0 = new ConstantDouble(0.0);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      IRETURN iRETURN0 = new IRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIRETURN(iRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IRETURN constraint violated: The value at the stack top is not of type 'int', but of type 'bcel.statistics'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Character character0 = new Character('V');
      FMUL fMUL0 = new FMUL();
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-30);
      byteArray0[1] = (byte) (-10);
      byteArray0[2] = (byte) (-10);
      byteArray0[3] = (byte)2;
      ByteSequence byteSequence0 = new ByteSequence(byteArray0);
      InstructionList instructionList0 = new InstructionList();
      instructionList0.getStart();
      F2D f2D0 = new F2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2D(f2D0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2D constraint violated: The value at the stack top is not of type 'float', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ConstantPoolGen constantPoolGen1 = new ConstantPoolGen();
      instConstraintVisitor0.setConstantPoolGen(constantPoolGen0);
      int int0 = 11;
      LDC_W lDC_W0 = new LDC_W(11);
      PUSH pUSH0 = new PUSH(constantPoolGen1, 11);
      LDC2_W lDC2_W0 = new LDC2_W(11);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLDC2_W(lDC2_W0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LDC2_W constraint violated: Referenced constant should be a CONSTANT_Integer, a CONSTANT_Float or a CONSTANT_String, but is 'null'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(460);
      ObjectType objectType0 = new ObjectType("'. which threw ");
      OperandStack operandStack0 = new OperandStack(460, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      ConstantDouble constantDouble0 = new ConstantDouble(1812);
      Character.valueOf('_');
      I2S i2S0 = new I2S();
      LRETURN lRETURN0 = new LRETURN();
      IMUL iMUL0 = new IMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFLE((IFLE) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(151);
      String string0 = Constants.ILLEGAL_TYPE;
      ObjectType objectType0 = new ObjectType("<illegal type>");
      OperandStack operandStack0 = new OperandStack(151, objectType0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<illegal type>");
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack1 = new OperandStack(818, objectType0);
      operandStack1.clone();
      Frame frame1 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      Character character0 = new Character('g');
      DUP2_X2 dUP2_X2_0 = new DUP2_X2();
      DUP2_X2 dUP2_X2_1 = new DUP2_X2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2_X2((DUP2_X2) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      localVariables0.clone();
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2893, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables1.merge(localVariables0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      localVariables1.getClone();
      IINC iINC0 = new IINC(2893, 478);
      LADD lADD0 = new LADD();
      FALOAD fALOAD0 = new FALOAD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFALOAD(fALOAD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FALOAD constraint violated: The 'index' is not of type int but of type ~Y^ptJ=m5vV&y5.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("F9r0#4O_;1.QBf");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F9r0#4O_;1.QBf");
      int int0 = 64;
      OperandStack operandStack0 = new OperandStack(64, objectType0);
      localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      String string0 = Constants.ILLEGAL_TYPE;
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LDC_W lDC_W0 = new LDC_W(1229);
      PUSH pUSH0 = new PUSH(constantPoolGen0, 64);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitCHECKCAST((CHECKCAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType(",f<U{\"gX=aZ?K<");
      OperandStack operandStack0 = new OperandStack(792, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      POP2 pOP2_0 = new POP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitPOP2(pOP2_0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: L,f<U{\"gX=aZ?K<;
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2921, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Character character0 = new Character('V');
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LREM lREM0 = new LREM();
      IMUL iMUL0 = new IMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIMUL(iMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IMUL constraint violated: The value at the stack top is not of type 'int', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ObjectType objectType0 = new ObjectType("");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      OperandStack operandStack0 = new OperandStack(792, objectType0);
      LocalVariables localVariables0 = new LocalVariables(792);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      objectType0.toString();
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack0.merge(operandStack1);
      IINC iINC0 = new IINC(90, 792);
      localVariables0.getClone();
      LADD lADD0 = new LADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2I((L2I) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.shouldAllThrowIOExceptions();
      ObjectType objectType0 = new ObjectType("");
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      OperandStack operandStack0 = new OperandStack(792, objectType0);
      LocalVariables localVariables0 = new LocalVariables(792);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      localVariables0.clone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      OperandStack operandStack1 = new OperandStack(792, objectType0);
      objectType0.toString();
      ISHL iSHL0 = new ISHL();
      iSHL0.toString(false);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitISHL(iSHL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ISHL constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ObjectType objectType0 = new ObjectType("F9r0#4O_;1.>Bf");
      int int0 = 97;
      OperandStack operandStack0 = new OperandStack(97, objectType0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      operandStack0.merge(operandStack0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      operandStack0.push(objectType0);
      LocalVariables localVariables0 = new LocalVariables(792);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = new Frame(97, 792);
      instConstraintVisitor0.setFrame(frame0);
      frame0.clone();
      FCONST fCONST0 = new FCONST(0.0F);
      SASTORE sASTORE0 = new SASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitSASTORE(sASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction SASTORE constraint violated: The value at the stack top is not of type 'int', but of type 'F9r0#4O_'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("F9r0#4O_;1.>Bf");
      OperandStack operandStack0 = new OperandStack(64, objectType0);
      LocalVariables localVariables1 = new LocalVariables(792);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.getClone();
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      Boolean boolean0 = new Boolean("F9r0#4O_;1.>Bf");
      FSTORE fSTORE0 = new FSTORE(64);
      ConstantDouble constantDouble0 = new ConstantDouble(64);
      Character.valueOf('k');
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)19;
      byteArray0[1] = (byte) (-22);
      byteArray0[2] = (byte) (-22);
      byteArray0[3] = (byte) (-22);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      MONITOREXIT mONITOREXIT0 = new MONITOREXIT();
      instConstraintVisitor0.visitMONITOREXIT(mONITOREXIT0);
      assertEquals("monitorexit", mONITOREXIT0.getName());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(1);
      ObjectType objectType0 = new ObjectType("bcel.statistics");
      OperandStack operandStack0 = new OperandStack(1, objectType0);
      LocalVariables localVariables1 = new LocalVariables(1);
      localVariables1.merge(localVariables0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      Frame.getThis();
      Frame.setThis((UninitializedObjectType) null);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      ConstantDouble constantDouble0 = new ConstantDouble(0.0);
      L2D l2D0 = new L2D();
      DUP2_X1 dUP2_X1_0 = new DUP2_X1();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2_X1(dUP2_X1_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      localVariables1.merge(localVariables0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~Y^ptJ=m5vV&y5");
      instConstraintVisitor0.setFrame(frame0);
      GETFIELD gETFIELD0 = new GETFIELD(9);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitGETFIELD(gETFIELD0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.generic.FieldOrMethod", e);
      }
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = ObjectType.getInstance("F9r0#4O_;1.>Bf");
      OperandStack operandStack0 = new OperandStack(64, objectType0);
      LocalVariables localVariables1 = new LocalVariables(792);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.getClone();
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      FSTORE fSTORE0 = new FSTORE(64);
      ConstantDouble constantDouble0 = new ConstantDouble(64);
      Character.valueOf('k');
      DADD dADD0 = new DADD();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDADD(dADD0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DADD constraint violated: The value at the stack top is not of type 'double', but of type 'F9r0#4O_'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Character character0 = new Character('V');
      FMUL fMUL0 = new FMUL();
      FASTORE fASTORE0 = new FASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFASTORE(fASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FASTORE constraint violated: The value at the stack top is not of type 'float', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ConstantPoolGen constantPoolGen1 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(92);
      ObjectType objectType0 = new ObjectType("");
      constantPoolGen1.toString();
      OperandStack operandStack0 = new OperandStack(4295, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables2 = localVariables1.getClone();
      localVariables1.merge(localVariables2);
      FNEG fNEG0 = new FNEG();
      D2F d2F0 = new D2F();
      d2F0.consumeStack(constantPoolGen1);
      ISHL iSHL0 = new ISHL();
      byte[] byteArray0 = new byte[1];
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      FNEG fNEG1 = new FNEG();
      DDIV dDIV0 = new DDIV();
      ARRAYLENGTH aRRAYLENGTH0 = new ARRAYLENGTH();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitARRAYLENGTH(aRRAYLENGTH0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction ARRAYLENGTH constraint violated: The 'arrayref' does not refer to an array but is of type .
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2921, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Character.valueOf('V');
      FADD fADD0 = new FADD();
      Character character0 = new Character('V');
      IAND iAND0 = new IAND();
      iAND0.copy();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIAND(iAND0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IAND constraint violated: The value at the stack top is not of type 'int', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ObjectType objectType0 = new ObjectType("~^ptJ=mvV&y5");
      OperandStack operandStack0 = new OperandStack(2862, objectType0);
      LocalVariables localVariables0 = new LocalVariables(1984);
      ObjectType objectType1 = new ObjectType("~^ptJ=mvV&y5");
      LocalVariables localVariables1 = new LocalVariables(1984);
      localVariables1.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      POP2 pOP2_0 = new POP2();
      LOR lOR0 = new LOR();
      LOR lOR1 = new LOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLOR(lOR1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LOR constraint violated: The value at the stack top is not of type 'long', but of type '~^ptJ=mvV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(792, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Character character0 = new Character('V');
      FCMPG fCMPG0 = new FCMPG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFCMPG(fCMPG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FCMPG constraint violated: The value at the stack top is not of type 'float', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2921, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Character character0 = new Character('V');
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LREM lREM0 = new LREM();
      MULTIANEWARRAY mULTIANEWARRAY0 = new MULTIANEWARRAY(0, (short)3026);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitMULTIANEWARRAY(mULTIANEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction MULTIANEWARRAY constraint violated: The '3026' upper stack types should be 'int' but aren't.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(793);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~Y^ptJ=m5vV&y5");
      instConstraintVisitor0.setFrame(frame0);
      ASTORE aSTORE0 = new ASTORE(2888);
      aSTORE0.copy();
      instConstraintVisitor0.visitASTORE(aSTORE0);
      DCMPL dCMPL0 = new DCMPL();
      LXOR lXOR0 = new LXOR();
      LSHL lSHL0 = new LSHL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHL(lSHL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSHL constraint violated: The value at the stack top is not of type 'int', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "");
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      int int0 = 792;
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      frame0.clone();
      instConstraintVisitor0.setFrame(frame1);
      IASTORE iASTORE0 = new IASTORE();
      IASTORE iASTORE1 = new IASTORE();
      iASTORE1.toString();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIASTORE(iASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IASTORE constraint violated: The value at the stack top is not of type 'int', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("F9r0#4O_;1.>Bf");
      OperandStack operandStack0 = new OperandStack(4295, objectType0);
      operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.merge(localVariables0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)5;
      byteArray0[1] = (byte)99;
      byteArray0[2] = (byte) (-76);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      ASTORE aSTORE0 = new ASTORE(4295);
      DUP dUP0 = new DUP();
      DUP dUP1 = new DUP();
      instConstraintVisitor0.visitDUP(dUP1);
      I2B i2B0 = new I2B();
      i2B0.copy();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2B(i2B0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2B constraint violated: The value at the stack top is not of type 'int', but of type 'F9r0#4O_'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = ObjectType.getInstance("F9r0#4O_;1.>Bf");
      OperandStack operandStack0 = new OperandStack(64, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.getClone();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      FSTORE fSTORE0 = new FSTORE(64);
      ConstantDouble constantDouble0 = new ConstantDouble(64);
      Character.valueOf('k');
      I2S i2S0 = new I2S();
      I2B i2B0 = new I2B();
      LASTORE lASTORE0 = new LASTORE();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLASTORE(lASTORE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LASTORE constraint violated: The value at the stack top is not of type 'long', but of type 'F9r0#4O_'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      int int0 = 472;
      LocalVariables localVariables0 = new LocalVariables(472);
      LocalVariables localVariables1 = new LocalVariables(472);
      ObjectType objectType0 = ObjectType.getInstance("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2911, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      localVariables1.getClone();
      localVariables0.clone();
      Frame frame1 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      ConstantDouble constantDouble0 = new ConstantDouble(472);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      F2L f2L0 = new F2L();
      LSHR lSHR0 = new LSHR();
      LSHR lSHR1 = new LSHR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSHR(lSHR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSHR constraint violated: The value at the stack top is not of type 'int', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(92);
      localVariables0.clone();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(92, objectType0);
      localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      Boolean boolean0 = Boolean.TRUE;
      FSTORE fSTORE0 = new FSTORE(256);
      ConstantDouble constantDouble0 = new ConstantDouble(780);
      Character character0 = new Character('+');
      LDIV lDIV0 = new LDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLDIV(lDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LDIV constraint violated: The value at the stack top is not of type 'long', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setMethodGen((MethodGen) null);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2921, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LREM lREM0 = new LREM();
      LXOR lXOR0 = new LXOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLXOR(lXOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LXOR constraint violated: The value at the stack top is not of type 'long', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      LocalVariables localVariables1 = new LocalVariables(792);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      localVariables1.getClone();
      IINC iINC0 = new IINC(90, 792);
      LADD lADD0 = new LADD();
      FileSystemHandling.shouldAllThrowIOExceptions();
      localVariables1.set(12, objectType0);
      LDC_W lDC_W0 = new LDC_W(2888);
      // Undeclared exception!
      try { 
        lDC_W0.accept(instConstraintVisitor0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      LocalVariables localVariables1 = new LocalVariables(792);
      ObjectType objectType0 = ObjectType.getInstance("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      IINC iINC0 = new IINC(2888, 792);
      D2I d2I0 = new D2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2I(d2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction D2I constraint violated: The value at the stack top is not of type 'double', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = ObjectType.getInstance("F9r0#4O_;1.>Bf");
      OperandStack operandStack0 = new OperandStack(64, objectType0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "F9r0#4O_;1.>Bf");
      LocalVariables localVariables1 = new LocalVariables(792);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.getClone();
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      FSTORE fSTORE0 = new FSTORE(64);
      ConstantDouble constantDouble0 = new ConstantDouble(64);
      Character.valueOf('k');
      ATHROW aTHROW0 = new ATHROW();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitATHROW(aTHROW0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // INTERNAL ERROR: Missing class: java.lang.ClassNotFoundException: Exception while looking for class F9r0#4O_;1.>Bf: org.evosuite.runtime.mock.java.lang.MockThrowable: Couldn't find: F9r0#4O_;1/>Bf.class
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = ObjectType.getInstance("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2921, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack1 = new OperandStack(792);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      Frame frame2 = frame0.getClone();
      frame0.equals(localVariables0);
      localVariables0.getClone();
      Boolean boolean0 = new Boolean(false);
      Frame frame3 = frame2.getClone();
      instConstraintVisitor0.setFrame(frame3);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ConstantPoolGen constantPoolGen1 = new ConstantPoolGen();
      instConstraintVisitor0.setConstantPoolGen(constantPoolGen0);
      DSTORE dSTORE0 = new DSTORE(904);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      instConstraintVisitor0.visitDSTORE(dSTORE0);
      NEWARRAY nEWARRAY0 = new NEWARRAY(objectType0.VOID);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitNEWARRAY(nEWARRAY0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction NEWARRAY constraint violated: The value at the stack top is not of type 'int', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ConstantPoolGen constantPoolGen1 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(92);
      localVariables0.clone();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(92, objectType0);
      localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.clone();
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      Boolean boolean0 = new Boolean("");
      ObjectType.getInstance("");
      OperandStack operandStack1 = new OperandStack(792, objectType0);
      LNEG lNEG0 = new LNEG();
      LNEG lNEG1 = new LNEG();
      LNEG lNEG2 = new LNEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLNEG(lNEG2);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LNEG constraint violated: The value at the stack top is not of type 'long', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(792, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      LocalVariables localVariables1 = new LocalVariables(792);
      LocalVariables localVariables2 = localVariables1.getClone();
      localVariables1.clone();
      localVariables2.merge(localVariables0);
      LocalVariables localVariables3 = new LocalVariables(2817);
      Frame frame1 = new Frame(localVariables3, operandStack0);
      instConstraintVisitor0.setFrame(frame1);
      ConstantDouble constantDouble0 = new ConstantDouble(792);
      ConstantPoolGen constantPoolGen1 = new ConstantPoolGen();
      F2L f2L0 = new F2L();
      LSHR lSHR0 = new LSHR();
      FREM fREM0 = new FREM();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFREM(fREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FREM constraint violated: The value at the stack top is not of type 'float', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = ObjectType.getInstance("");
      OperandStack operandStack0 = new OperandStack(792, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      FileSystemHandling.shouldAllThrowIOExceptions();
      IINC iINC0 = new IINC(90, 792);
      localVariables0.getClone();
      LADD lADD0 = new LADD();
      localVariables0.set(12, objectType0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      LocalVariables localVariables1 = new LocalVariables(792);
      I2C i2C0 = new I2C();
      i2C0.toString(false);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2C(i2C0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2C constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      LocalVariables localVariables1 = new LocalVariables(792);
      ObjectType objectType0 = ObjectType.getInstance("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      IINC iINC0 = new IINC(2888, 476);
      LADD lADD0 = new LADD();
      LocalVariables localVariables2 = new LocalVariables(2888);
      LocalVariables localVariables3 = localVariables2.getClone();
      localVariables3.set(150, objectType0);
      Boolean boolean0 = new Boolean("");
      INVOKESTATIC iNVOKESTATIC0 = new INVOKESTATIC(46);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitD2L((D2L) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Character character0 = new Character('V');
      Character character1 = new Character('V');
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2F((I2F) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = ObjectType.getInstance("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(792, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack1 = new OperandStack(792);
      Frame frame1 = new Frame(localVariables0, operandStack1);
      Frame frame2 = frame0.getClone();
      LocalVariables localVariables1 = new LocalVariables(792);
      localVariables1.getClone();
      Frame frame3 = frame2.getClone();
      instConstraintVisitor0.setFrame(frame3);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      DSTORE dSTORE0 = new DSTORE(904);
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      instConstraintVisitor0.visitDSTORE(dSTORE0);
      L2I l2I0 = new L2I();
      INSTANCEOF iNSTANCEOF0 = new INSTANCEOF(904);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINSTANCEOF(iNSTANCEOF0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(151);
      String string0 = Constants.ILLEGAL_TYPE;
      ObjectType objectType0 = new ObjectType("<illegal type>");
      OperandStack operandStack0 = new OperandStack(151, objectType0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "<illegal type>");
      Frame frame0 = new Frame(localVariables0, operandStack0);
      OperandStack operandStack1 = new OperandStack(818, objectType0);
      operandStack1.clone();
      Frame frame1 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      Character character0 = new Character('g');
      PUSH pUSH0 = new PUSH(constantPoolGen0, 49);
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      IFLE iFLE0 = new IFLE((InstructionHandle) null);
      DDIV dDIV0 = new DDIV();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDDIV(dDIV0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid signature: `illegal type>;'
         //
         verifyException("org.apache.bcel.classfile.Utility", e);
      }
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(465);
      LocalVariables localVariables1 = new LocalVariables(465);
      ObjectType objectType0 = new ObjectType("IzPVB_\";");
      OperandStack operandStack0 = new OperandStack(465, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "'j{3[5n");
      F2L f2L0 = new F2L();
      LSUB lSUB0 = new LSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLSUB(lSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LSUB constraint violated: The value at the stack top is not of type 'long', but of type 'IzPVB_\"'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "Vgxh`xd6]ck#");
      ConstantPoolGen constantPoolGen1 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(92);
      localVariables0.clone();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(92, objectType0);
      localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      frame0.clone();
      frame0.getClone();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      instConstraintVisitor0.setFrame(frame0);
      LDC2_W lDC2_W0 = new LDC2_W(46);
      short short0 = Constants.GETSTATIC_QUICK;
      PUSH pUSH0 = new PUSH(constantPoolGen1, (Number) (short)210);
      InstructionList instructionList0 = pUSH0.getInstructionList();
      InstructionHandle instructionHandle0 = instructionList0.insert((CompoundInstruction) pUSH0);
      IFGE iFGE0 = new IFGE(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFGE(iFGE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFGE constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      LocalVariables localVariables0 = new LocalVariables(792);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Boolean boolean0 = new Boolean("");
      IINC iINC0 = new IINC(90, 792);
      LocalVariables localVariables1 = new LocalVariables(792);
      LADD lADD0 = new LADD();
      Frame frame1 = new Frame(localVariables1, operandStack0);
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      uninitializedObjectType0.isCastableTo((Type) null);
      Frame.setThis(uninitializedObjectType0);
      DMUL dMUL0 = new DMUL();
      I2L i2L0 = new I2L();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      i2L0.getType(constantPoolGen0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2L(i2L0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2L constraint violated: The value at the stack top is not of type 'int', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      LocalVariables localVariables1 = new LocalVariables(2888);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      boolean boolean0 = true;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Character character0 = new Character('V');
      PUSH pUSH0 = new PUSH(constantPoolGen0, character0);
      pUSH0.getInstructionList();
      DCMPG dCMPG0 = new DCMPG();
      InstructionList instructionList0 = new InstructionList(dCMPG0);
      InstructionHandle instructionHandle0 = instructionList0.getStart();
      IF_ICMPNE iF_ICMPNE0 = new IF_ICMPNE(instructionHandle0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIF_ICMPNE(iF_ICMPNE0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IF_ICMPNE constraint violated: The value at the stack top is not of type 'int', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ConstantPoolGen constantPoolGen1 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(92);
      ObjectType objectType0 = new ObjectType("");
      constantPoolGen1.toString();
      OperandStack operandStack0 = new OperandStack(4295, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables2 = localVariables1.getClone();
      localVariables1.merge(localVariables2);
      LADD lADD0 = new LADD();
      DMUL dMUL0 = new DMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDMUL(dMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DMUL constraint violated: The value at the stack top is not of type 'double', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      LocalVariables localVariables1 = new LocalVariables(2888);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LMUL lMUL0 = new LMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLMUL(lMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LMUL constraint violated: The value at the stack top is not of type 'long', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = ObjectType.getInstance("F9r0#4O_;1.>Bf");
      OperandStack operandStack0 = new OperandStack(64, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.getClone();
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      FSTORE fSTORE0 = new FSTORE(64);
      ConstantDouble constantDouble0 = new ConstantDouble(64);
      Character.valueOf('k');
      I2S i2S0 = new I2S();
      D2F d2F0 = new D2F();
      LRETURN lRETURN0 = new LRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLRETURN(lRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LRETURN constraint violated: The value at the stack top is not of type 'long', but of type 'F9r0#4O_'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ObjectType objectType0 = ObjectType.getInstance("Expecting a class type (ObjectType) to work on. Found: '");
      OperandStack operandStack0 = new OperandStack(792, objectType0);
      LocalVariables localVariables0 = new LocalVariables(792);
      localVariables0.clone();
      ObjectType objectType1 = new ObjectType("");
      OperandStack operandStack1 = new OperandStack(252, objectType1);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.getClone();
      instConstraintVisitor0.setFrame(frame0);
      localVariables1.toString();
      ConstantDouble constantDouble0 = new ConstantDouble(2075.18709151242);
      localVariables1.getClone();
      LCMP lCMP0 = new LCMP();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLCMP(lCMP0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LCMP constraint violated: The value at the stack top is not of type 'long', but of type 'Expecting a class type (ObjectType) to work on. Found: ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(839);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(44, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.getClone();
      LocalVariables localVariables1 = (LocalVariables)localVariables0.clone();
      OperandStack operandStack1 = operandStack0.getClone();
      operandStack0.merge(operandStack1);
      Frame frame1 = new Frame(localVariables1, operandStack0);
      frame1.toString();
      instConstraintVisitor0.setFrame(frame1);
      ConstantDouble constantDouble0 = new ConstantDouble(839);
      FileSystemHandling fileSystemHandling1 = new FileSystemHandling();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDREM((DREM) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      LocalVariables localVariables1 = new LocalVariables(792);
      ObjectType objectType0 = ObjectType.getInstance("]v~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(792, objectType0);
      operandStack0.toString();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables2 = new LocalVariables(792);
      IINC iINC0 = new IINC(792, 476);
      LADD lADD0 = new LADD();
      LocalVariables localVariables3 = new LocalVariables(792);
      localVariables3.set(37, objectType0);
      LocalVariables localVariables4 = localVariables3.getClone();
      localVariables4.set(146, objectType0);
      INVOKESTATIC iNVOKESTATIC0 = new INVOKESTATIC(92);
      LSTORE lSTORE0 = new LSTORE(88);
      I2S i2S0 = new I2S();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitI2S(i2S0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction I2S constraint violated: The value at the stack top is not of type 'int', but of type ']v~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ConstantPoolGen constantPoolGen1 = new ConstantPoolGen();
      instConstraintVisitor0.setConstantPoolGen(constantPoolGen0);
      int int0 = 1;
      LocalVariables localVariables0 = new LocalVariables(1);
      ObjectType objectType0 = new ObjectType("");
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "");
      OperandStack operandStack0 = new OperandStack(1, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables1.getClone();
      LocalVariables localVariables2 = localVariables1.getClone();
      Frame frame1 = new Frame(localVariables2, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      localVariables2.getClone();
      Type[] typeArray0 = new Type[6];
      typeArray0[3] = (Type) objectType0;
      typeArray0[1] = (Type) objectType0;
      typeArray0[2] = (Type) objectType0;
      typeArray0[3] = (Type) objectType0;
      LDC_W lDC_W0 = new LDC_W(1);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLDC(lDC_W0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction LDC_W constraint violated: Referenced constant should be a CONSTANT_Integer, a CONSTANT_Float, a CONSTANT_String or a CONSTANT_Class, but is 'null'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(472);
      ObjectType objectType0 = ObjectType.getInstance("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2889, objectType0);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      LocalVariables localVariables1 = localVariables0.getClone();
      localVariables0.merge(localVariables1);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      ConstantDouble constantDouble0 = new ConstantDouble(472);
      LADD lADD0 = new LADD();
      DMUL dMUL0 = new DMUL();
      F2I f2I0 = (F2I)InstructionConstants.F2I;
      InstructionList instructionList0 = new InstructionList();
      InstructionList instructionList1 = new InstructionList(f2I0);
      InstructionHandle instructionHandle0 = instructionList0.insert(instructionList1);
      IF_ICMPLT iF_ICMPLT0 = new IF_ICMPLT(instructionHandle0);
      ALOAD aLOAD0 = new ALOAD(2889);
      instConstraintVisitor0.visitALOAD(aLOAD0);
      FCMPG fCMPG0 = new FCMPG();
      instConstraintVisitor0.visitMONITORENTER((MONITORENTER) null);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("D%naEa3HNix&[q#({?w");
      OperandStack operandStack0 = new OperandStack(792, objectType0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      LocalVariables localVariables1 = localVariables0.getClone();
      boolean boolean0 = new Boolean("D%naEa3HNix&[q#({?w");
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2F((L2F) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = ObjectType.getInstance("F9r0#4O_;1.>Bf");
      OperandStack operandStack0 = new OperandStack(64, objectType0);
      LocalVariables localVariables1 = new LocalVariables(792);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.getClone();
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      localVariables1.getClone();
      frame0.clone();
      instConstraintVisitor0.setFrame(frame0);
      FSTORE fSTORE0 = new FSTORE(64);
      ConstantDouble constantDouble0 = new ConstantDouble(64);
      char char0 = 'k';
      FSUB fSUB0 = new FSUB();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFSUB(fSUB0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FSUB constraint violated: The value at the stack top is not of type 'float', but of type 'F9r0#4O_'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~Y^ptJ=m5vV&y5");
      instConstraintVisitor0.setFrame(frame0);
      ASTORE aSTORE0 = new ASTORE(588);
      aSTORE0.copy();
      instConstraintVisitor0.visitASTORE(aSTORE0);
      DCMPL dCMPL0 = new DCMPL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDCMPL(dCMPL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DCMPL constraint violated: The value at the stack top is not of type 'double', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      LocalVariables localVariables1 = new LocalVariables(792);
      ObjectType.getInstance("~Y^ptJ=m5vV&y5");
      ObjectType.getInstance("#$+!");
      OperandStack operandStack0 = new OperandStack(229);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      localVariables0.merge(localVariables1);
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      IINC iINC0 = new IINC(229, 476);
      LocalVariables localVariables2 = new LocalVariables(191);
      localVariables1.getClone();
      LocalVariables localVariables3 = new LocalVariables(921);
      localVariables3.set(790, (Type) null);
      Boolean boolean0 = new Boolean((String) null);
      LNEG lNEG0 = new LNEG();
      I2C i2C0 = new I2C();
      ISTORE iSTORE0 = new ISTORE(191);
      instConstraintVisitor0.visitLocalVariableInstruction(iSTORE0);
      L2D l2D0 = new L2D();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitL2D(l2D0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      LocalVariables localVariables0 = new LocalVariables(792);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      Boolean boolean0 = new Boolean("");
      IINC iINC0 = new IINC(90, 792);
      LocalVariables localVariables1 = new LocalVariables(792);
      LADD lADD0 = new LADD();
      frame0.getClone();
      UninitializedObjectType uninitializedObjectType0 = new UninitializedObjectType(objectType0);
      uninitializedObjectType0.isCastableTo((Type) null);
      Frame.setThis(uninitializedObjectType0);
      DUP2 dUP2_0 = new DUP2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP2(dUP2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(465);
      LocalVariables localVariables1 = new LocalVariables(465);
      ObjectType objectType0 = ObjectType.getInstance("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2911, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      LocalVariables localVariables2 = localVariables1.getClone();
      localVariables2.getClone();
      localVariables1.merge(localVariables2);
      Frame frame1 = frame0.getClone();
      instConstraintVisitor0.setFrame(frame1);
      ConstantDouble constantDouble0 = new ConstantDouble(465);
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      frame0.equals(localVariables0);
      InstructionHandle instructionHandle0 = null;
      IFLE iFLE0 = new IFLE((InstructionHandle) null);
      Type.getMethodSignature(objectType0, objectType0.NO_ARGS);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitANEWARRAY((ANEWARRAY) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(465);
      LocalVariables localVariables1 = new LocalVariables(465);
      ObjectType.getInstance("F9r0#4O_;1.>Bf");
      ObjectType objectType0 = new ObjectType("F9r0#4O_;1.>Bf");
      OperandStack operandStack0 = new OperandStack(1812, objectType0);
      localVariables1.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Frame frame1 = frame0.getClone();
      frame1.equals((Object) null);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      frame1.clone();
      instConstraintVisitor0.setFrame(frame0);
      FSTORE fSTORE0 = new FSTORE(3);
      I2S i2S0 = new I2S();
      FRETURN fRETURN0 = new FRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFRETURN(fRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FRETURN constraint violated: The value at the stack top is not of type 'float', but of type 'F9r0#4O_'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = ObjectType.getInstance("F9r0#4O_;1.>Bf");
      OperandStack operandStack0 = new OperandStack(64, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      localVariables0.getClone();
      OperandStack operandStack1 = new OperandStack(3, objectType0);
      instConstraintVisitor0.setFrame(frame0);
      IOR iOR0 = new IOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIOR(iOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IOR constraint violated: The value at the stack top is not of type 'int', but of type 'F9r0#4O_'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(793);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      Frame frame0 = new Frame(localVariables1, operandStack0);
      localVariables1.clone();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "~Y^ptJ=m5vV&y5");
      instConstraintVisitor0.setFrame(frame0);
      ASTORE aSTORE0 = new ASTORE(588);
      aSTORE0.copy();
      instConstraintVisitor0.visitASTORE(aSTORE0);
      DCMPL dCMPL0 = new DCMPL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitLAND((LAND) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      FRETURN fRETURN0 = new FRETURN();
      F2I f2I0 = new F2I();
      FileSystemHandling.shouldAllThrowIOExceptions();
      Character character0 = new Character('Z');
      LocalVariables localVariables0 = new LocalVariables(2);
      LocalVariables localVariables1 = new LocalVariables(2);
      ObjectType objectType0 = new ObjectType("efGs7zpPw#9/|z#ws");
      localVariables1.toString();
      OperandStack operandStack0 = new OperandStack(2, objectType0);
      OperandStack operandStack1 = operandStack0.getClone();
      Frame frame0 = new Frame(localVariables0, operandStack1);
      DADD dADD0 = new DADD();
      frame0.equals(dADD0);
      Frame.getThis();
      frame0.getClone();
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      instConstraintVisitor0.setFrame(frame0);
      DUP dUP0 = new DUP();
      instConstraintVisitor0.visitDUP(dUP0);
      ConstantDouble constantDouble0 = new ConstantDouble(0.0);
      ConstantDouble constantDouble1 = new ConstantDouble('Z');
      LADD lADD0 = new LADD();
      DMUL dMUL0 = new DMUL();
      Constant[] constantArray0 = new Constant[1];
      constantArray0[0] = (Constant) constantDouble1;
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen(constantArray0);
      IREM iREM0 = new IREM();
      iREM0.getType(constantPoolGen0);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIREM(iREM0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IREM constraint violated: The value at the stack top is not of type 'int', but of type 'efGs7zpPw#9.|z#ws'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      LocalVariables localVariables1 = new LocalVariables(792);
      ObjectType objectType0 = new ObjectType("~Y^ptJ=m5vV&y5");
      localVariables1.clone();
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      BIPUSH bIPUSH0 = new BIPUSH((byte)79);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIUSHR((IUSHR) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(445);
      ObjectType objectType0 = ObjectType.getInstance("'. which threw  ");
      OperandStack operandStack0 = new OperandStack(445, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      Boolean boolean0 = new Boolean("'. which threw  ");
      FileSystemHandling.setPermissions((EvoSuiteFile) null, (boolean) boolean0, false, (boolean) boolean0);
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      instConstraintVisitor0.setFrame(frame0);
      FSTORE fSTORE0 = new FSTORE(445);
      ConstantDouble constantDouble0 = new ConstantDouble(1814);
      Character character0 = new Character('_');
      I2S i2S0 = new I2S();
      D2F d2F0 = new D2F();
      LRETURN lRETURN0 = new LRETURN();
      IMUL iMUL0 = new IMUL();
      I2L i2L0 = new I2L();
      POP pOP0 = new POP();
      instConstraintVisitor0.visitPOP(pOP0);
      LRETURN lRETURN1 = new LRETURN();
      F2I f2I0 = new F2I();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitF2I(f2I0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction F2I constraint violated: The value at the stack top is not of type 'float', but of type ''. which threw  '.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(792);
      ObjectType objectType0 = ObjectType.getInstance(";jHYBwU6H;OQ");
      OperandStack operandStack0 = new OperandStack(64, objectType0);
      LocalVariables localVariables1 = localVariables0.getClone();
      BasicType basicType0 = Type.INT;
      objectType0.isCastableTo(basicType0);
      LocalVariables localVariables2 = localVariables1.getClone();
      Frame frame0 = new Frame(localVariables2, operandStack0);
      Frame frame1 = new Frame(64, 64);
      localVariables1.set(64, basicType0);
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, ";jHYBwU6H;OQ");
      String string0 = Constants.STATIC_INITIALIZER_NAME;
      Frame frame2 = new Frame(localVariables2, operandStack0);
      instConstraintVisitor0.setFrame(frame2);
      ConstantDouble constantDouble0 = new ConstantDouble(956.0);
      MockPrintStream mockPrintStream0 = new MockPrintStream("UHoGny");
      PrintStream printStream0 = mockPrintStream0.printf("MgDLq;v&(EZ", (Object[]) objectType0.NO_ARGS);
      DataOutputStream dataOutputStream0 = new DataOutputStream(printStream0);
      RET rET0 = new RET(215);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitRET(rET0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction RET constraint violated: Expecting a ReturnaddressType in local variable 215.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(151);
      String string0 = "8=TL2";
      ObjectType objectType0 = ObjectType.getInstance("8=TL2");
      OperandStack operandStack0 = new OperandStack(147, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      LocalVariables localVariables1 = localVariables0.getClone();
      OperandStack operandStack1 = new OperandStack(89, objectType0);
      operandStack1.getClone();
      Frame frame1 = new Frame(localVariables1, operandStack1);
      instConstraintVisitor0.setFrame(frame0);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      Character character0 = new Character('c');
      DCMPG dCMPG0 = new DCMPG();
      dCMPG0.toString();
      IRETURN iRETURN0 = (IRETURN)InstructionConstants.IRETURN;
      InstructionList instructionList0 = new InstructionList(dCMPG0);
      FMUL fMUL0 = new FMUL();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitFMUL(fMUL0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction FMUL constraint violated: The value at the stack top is not of type 'float', but of type '8=TL2'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      LocalVariables localVariables1 = new LocalVariables(792);
      ObjectType objectType0 = ObjectType.getInstance("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      frame0.toString();
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      IINC iINC0 = new IINC(2888, 476);
      LADD lADD0 = new LADD();
      LocalVariables localVariables2 = new LocalVariables(2888);
      Frame frame1 = new Frame(476, 792);
      localVariables2.set(476, objectType0);
      INVOKESTATIC iNVOKESTATIC0 = new INVOKESTATIC(2888);
      INEG iNEG0 = new INEG();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitINEG(iNEG0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction INEG constraint violated: The value at the stack top is not of type 'int', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ConstantPoolGen constantPoolGen0 = new ConstantPoolGen();
      ConstantPoolGen constantPoolGen1 = new ConstantPoolGen();
      LocalVariables localVariables0 = new LocalVariables(92);
      ObjectType objectType0 = new ObjectType("");
      constantPoolGen1.toString();
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      IINC iINC0 = new IINC(2888, (-608));
      LADD lADD0 = new LADD();
      LocalVariables localVariables1 = new LocalVariables(2888);
      int int0 = 146;
      localVariables1.set(146, objectType0);
      Boolean boolean0 = new Boolean("");
      INVOKESTATIC iNVOKESTATIC0 = new INVOKESTATIC(92);
      SASTORE sASTORE0 = new SASTORE();
      EvoSuiteFile evoSuiteFile0 = null;
      DRETURN dRETURN0 = new DRETURN();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDRETURN(dRETURN0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction DRETURN constraint violated: The value at the stack top is not of type 'double', but of type ''.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      ObjectType objectType0 = new ObjectType("");
      OperandStack operandStack0 = new OperandStack(2888, objectType0);
      LocalVariables localVariables0 = new LocalVariables(792);
      Frame frame0 = new Frame(localVariables0, operandStack0);
      instConstraintVisitor0.setFrame(frame0);
      IINC iINC0 = new IINC(90, 792);
      Frame frame1 = new Frame(localVariables0, operandStack0);
      frame1.equals(objectType0);
      frame1.getClone();
      Frame frame2 = new Frame(localVariables0, operandStack0);
      frame2.equals((Object) null);
      Boolean boolean0 = Boolean.FALSE;
      Character.getName(2888);
      FSTORE fSTORE0 = new FSTORE(90);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      I2S i2S0 = new I2S();
      DUP_X2 dUP_X2_0 = new DUP_X2();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitDUP_X2(dUP_X2_0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      LocalVariables localVariables1 = new LocalVariables(792);
      ObjectType objectType0 = ObjectType.getInstance("~Y^ptJ=m5vV&y5");
      ObjectType.getInstance("#$,[L");
      OperandStack operandStack0 = new OperandStack(225, objectType0);
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "OBdt{d]H");
      Frame frame0 = new Frame(localVariables1, operandStack0);
      localVariables0.merge(localVariables1);
      instConstraintVisitor0.setFrame(frame0);
      LocalVariables localVariables2 = localVariables0.getClone();
      IINC iINC0 = new IINC(225, 476);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LocalVariables localVariables3 = localVariables2.getClone();
      localVariables1.getClone();
      frame0.getClone();
      Frame frame1 = new Frame(localVariables2, operandStack0);
      Frame frame2 = new Frame(localVariables3, operandStack0);
      frame2.equals((Object) null);
      IINC iINC1 = new IINC(2, 24);
      localVariables0.getClone();
      SWAP sWAP0 = new SWAP();
      IXOR iXOR0 = new IXOR();
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIXOR(iXOR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IXOR constraint violated: The value at the stack top is not of type 'int', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      InstConstraintVisitor instConstraintVisitor0 = new InstConstraintVisitor();
      LocalVariables localVariables0 = new LocalVariables(792);
      LocalVariables localVariables1 = localVariables0.getClone();
      ObjectType objectType0 = ObjectType.getInstance("~Y^ptJ=m5vV&y5");
      OperandStack operandStack0 = new OperandStack(792, objectType0);
      Frame frame0 = new Frame(localVariables1, operandStack0);
      localVariables0.merge(localVariables1);
      instConstraintVisitor0.setFrame(frame0);
      localVariables0.getClone();
      IINC iINC0 = new IINC(792, 476);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      LocalVariables localVariables2 = new LocalVariables(191);
      localVariables1.getClone();
      localVariables0.set(790, (Type) null);
      LNEG lNEG0 = new LNEG();
      IASTORE iASTORE0 = new IASTORE();
      ALOAD aLOAD0 = new ALOAD(476);
      instConstraintVisitor0.visitALOAD(aLOAD0);
      InstructionHandle instructionHandle0 = null;
      IFLT iFLT0 = new IFLT((InstructionHandle) null);
      iFLT0.toString(true);
      // Undeclared exception!
      try { 
        instConstraintVisitor0.visitIFLT(iFLT0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Instruction IFLT constraint violated: The value at the stack top is not of type 'int', but of type '~Y^ptJ=m5vV&y5'.
         //
         verifyException("org.apache.bcel.verifier.structurals.InstConstraintVisitor", e);
      }
  }
}
