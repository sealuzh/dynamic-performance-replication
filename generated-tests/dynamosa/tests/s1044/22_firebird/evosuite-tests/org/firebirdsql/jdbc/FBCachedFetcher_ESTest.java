/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 05 23:44:10 GMT 2019
 */

package org.firebirdsql.jdbc;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Collection;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.TimeUnit;
import java.util.function.Predicate;
import javax.management.remote.JMXPrincipal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.firebirdsql.gds.XSQLDA;
import org.firebirdsql.gds.XSQLVAR;
import org.firebirdsql.gds.impl.AbstractIscStmtHandle;
import org.firebirdsql.gds.impl.GDSHelper;
import org.firebirdsql.gds.impl.wire.isc_stmt_handle_impl;
import org.firebirdsql.jdbc.FBCachedFetcher;
import org.firebirdsql.jdbc.FBObjectListener;
import org.firebirdsql.jdbc.FBResultSet;
import org.firebirdsql.jdbc.FBSQLException;
import org.firebirdsql.jdbc.field.TypeConversionException;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class FBCachedFetcher_ESTest extends FBCachedFetcher_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isAfterLast());
      assertFalse(fBCachedFetcher0.isBeforeFirst());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(linkedBlockingDeque0);
      Predicate<byte[][]> predicate0 = Predicate.isEqual((Object) linkedBlockingDeque0);
      Integer integer0 = new Integer(491);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate2 = predicate1.negate();
      predicate0.or(predicate2);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.relative(0);
      fBCachedFetcher0.beforeFirst();
      boolean boolean1 = fBCachedFetcher0.isBeforeFirst();
      assertTrue(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      boolean boolean0 = fBCachedFetcher0.isAfterLast();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(linkedBlockingDeque0);
      byte[][] byteArrayArray0 = null;
      linkedList0.add((byte[][]) null);
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      linkedBlockingDeque0.pollLast((long) 496, timeUnit0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      linkedList0.add((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.setFetchSize(1149);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      fBCachedFetcher0.isLast();
      fBCachedFetcher0.getFetchSize();
      fBCachedFetcher0.first();
      boolean boolean0 = fBCachedFetcher0.previous();
      assertEquals(1149, fBCachedFetcher0.getFetchSize());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[4][9];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-112);
      byteArray1[1] = (byte)22;
      linkedList0.push(byteArray0);
      fBCachedFetcher0.absolute(79);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      FBCachedFetcher fBCachedFetcher1 = null;
      try {
        fBCachedFetcher1 = new FBCachedFetcher((GDSHelper) null, 400, 79, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[14][0];
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.absolute(7);
      fBCachedFetcher0.insertRow(byteArray0);
      fBCachedFetcher0.previous();
      boolean boolean0 = fBCachedFetcher0.next();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(linkedBlockingDeque0);
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      Predicate.isEqual((Object) linkedBlockingDeque0);
      int int0 = 496;
      Integer integer0 = new Integer(496);
      byte[][] byteArray0 = new byte[0][0];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute(33554432);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.close();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow((byte[][]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[4][4];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-44);
      byteArray1[1] = (byte) (-48);
      byteArray1[2] = (byte) (-114);
      byteArray1[3] = (byte) (-73);
      byteArray1[4] = (byte) (-89);
      byteArray1[5] = (byte) (-44);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte) (-73);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte) (-89);
      byteArray3[1] = (byte)63;
      byteArray3[2] = (byte) (-48);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[18];
      byteArray4[0] = (byte) (-48);
      byteArray4[1] = (byte) (-73);
      byteArray0[3] = byteArray4;
      linkedList0.add(byteArray0);
      Predicate.isEqual((Object) linkedBlockingDeque0);
      Integer integer0 = new Integer(491);
      Integer integer1 = new Integer(491);
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.afterLast();
      assertFalse(fBCachedFetcher0.isLast());
      
      boolean boolean0 = fBCachedFetcher0.previous();
      assertTrue(fBCachedFetcher0.isLast());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(linkedBlockingDeque0);
      Predicate<byte[][]> predicate0 = Predicate.isEqual((Object) linkedBlockingDeque0);
      Integer integer0 = new Integer(491);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate2 = predicate1.and(predicate1);
      predicate0.or(predicate2);
      linkedList0.removeIf(predicate0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.relative(0);
      assertFalse(boolean0);
      
      fBCachedFetcher0.beforeFirst();
      fBCachedFetcher0.setFetchSize(0);
      assertEquals(0, fBCachedFetcher0.getFetchSize());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[0][3];
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[4][9];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-112);
      linkedList0.listIterator();
      byteArray1[1] = (byte)22;
      byteArray1[2] = (byte)94;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte) (-112);
      byteArray2[1] = (byte)22;
      fBCachedFetcher0.afterLast();
      byteArray2[2] = (byte)78;
      byteArray2[3] = (byte)22;
      byteArray2[4] = (byte)94;
      byteArray2[5] = (byte) (-112);
      byteArray2[6] = (byte)0;
      byteArray0[1] = byteArray2;
      linkedList0.push(byteArray0);
      fBCachedFetcher0.absolute((byte)22);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.next();
      fBCachedFetcher0.close();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][8];
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.absolute(7);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.next();
      fBCachedFetcher0.insertRow((byte[][]) null);
      int int0 = fBCachedFetcher0.getRowNum();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(linkedBlockingDeque0);
      Integer integer0 = new Integer(496);
      byte[][] byteArray0 = new byte[1][0];
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.previous();
      boolean boolean0 = fBCachedFetcher0.next();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertTrue(boolean0);
      
      fBCachedFetcher0.last();
      fBCachedFetcher0.updateRow(byteArray0);
      boolean boolean1 = fBCachedFetcher0.absolute(496);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertFalse(boolean1);
      
      boolean boolean2 = fBCachedFetcher0.isLast();
      assertEquals(2, fBCachedFetcher0.getRowNum());
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA(4);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[2];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      xSQLVARArray0[1] = xSQLVAR1;
      xSQLDA0.sqlvar = xSQLVARArray0;
      xSQLDA0.blr = null;
      xSQLDA0.blr = null;
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 3096, 4, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(linkedBlockingDeque0);
      Predicate<byte[][]> predicate0 = Predicate.isEqual((Object) linkedBlockingDeque0);
      Integer integer0 = new Integer(491);
      Predicate<Object> predicate1 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate2 = predicate1.negate();
      Predicate<Object> predicate3 = predicate2.and(predicate1);
      predicate0.or(predicate3);
      linkedList0.removeIf(predicate0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.relative(0);
      fBCachedFetcher0.beforeFirst();
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.relative((-1687));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      linkedList0.add((byte[][]) null);
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      fBCachedFetcher0.previous();
      linkedBlockingDeque0.pollLast((-1049L), timeUnit0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.first();
      fBCachedFetcher1.updateRow((byte[][]) null);
      fBCachedFetcher1.isBeforeFirst();
      // Undeclared exception!
      try { 
        fBCachedFetcher1.absolute((-242));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[0][1];
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.absolute(1);
      fBCachedFetcher0.setFetchSize(1);
      byte[][] byteArray0 = new byte[7][0];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-49);
      byteArray1[1] = (byte)0;
      byteArray1[2] = (byte) (-1);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte) (-1);
      byteArray2[1] = (byte) (-49);
      byteArray2[2] = (byte) (-1);
      byteArray2[3] = (byte) (-1);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[0];
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[4];
      byteArray4[0] = (byte) (-49);
      byteArray4[1] = (byte) (-49);
      byteArray4[2] = (byte) (-49);
      byteArray4[3] = (byte)0;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[5];
      byteArray5[0] = (byte) (-49);
      byteArray5[1] = (byte)0;
      byteArray5[2] = (byte)0;
      byteArray5[3] = (byte) (-1);
      byteArray5[4] = (byte)0;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[7];
      byteArray6[0] = (byte) (-49);
      byteArray6[1] = (byte) (-49);
      byteArray6[2] = (byte) (-49);
      byteArray6[3] = (byte) (-1);
      byteArray6[4] = (byte) (-49);
      byteArray6[5] = (byte) (-49);
      byteArray6[6] = (byte) (-49);
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[3];
      byteArray7[0] = (byte) (-49);
      byteArray7[1] = (byte)0;
      byteArray7[2] = (byte)0;
      byteArray0[6] = byteArray7;
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[4][9];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-112);
      byteArray1[1] = (byte)22;
      byteArray1[2] = (byte)22;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte) (-112);
      byteArray2[1] = (byte)22;
      byteArray2[2] = (byte)78;
      byteArray2[3] = (byte)22;
      byteArray2[4] = (byte)22;
      byteArray2[5] = (byte) (-112);
      byteArray2[6] = (byte)0;
      Predicate<Object> predicate0 = Predicate.isEqual((Object) byteArray1);
      Predicate<Object> predicate1 = predicate0.negate();
      Predicate<Object> predicate2 = predicate0.or(predicate1);
      predicate2.and(predicate1);
      JMXPrincipal jMXPrincipal0 = new JMXPrincipal("Result set is TYPE_FORWARD_ONLY");
      Predicate<byte[][]> predicate3 = Predicate.isEqual((Object) jMXPrincipal0);
      Predicate<byte[][]> predicate4 = predicate3.and(predicate1);
      predicate4.or(predicate3);
      linkedList0.removeIf(predicate0);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher1.relative(2623);
      fBCachedFetcher1.beforeFirst();
      boolean boolean0 = fBCachedFetcher1.absolute((-2836));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Integer integer0 = new Integer(496);
      byte[][] byteArray0 = new byte[1][0];
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.first();
      fBCachedFetcher0.isBeforeFirst();
      byte[][] byteArray1 = new byte[2][1];
      linkedList0.add(byteArray1);
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte)37;
      byteArray1[0] = byteArray2;
      byte[] byteArray3 = new byte[0];
      byteArray1[1] = byteArray3;
      fBCachedFetcher0.updateRow(byteArray1);
      assertTrue(fBCachedFetcher0.isLast());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.beforeFirst();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.add((byte[][]) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.absolute(2004);
      fBCachedFetcher0.previous();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      
      fBCachedFetcher0.beforeFirst();
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      linkedList0.add((byte[][]) null);
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher1.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(linkedBlockingDeque0);
      Predicate.isEqual((Object) linkedBlockingDeque0);
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-37);
      byteArray1[1] = (byte) (-90);
      byteArray1[2] = (byte) (-37);
      byteArray1[3] = (byte) (-37);
      byteArray1[4] = (byte) (-37);
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      linkedList0.add((byte[][]) null);
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      assertTrue(fBCachedFetcher0.isLast());
      
      fBCachedFetcher0.isEmpty();
      fBCachedFetcher0.getFetchSize();
      boolean boolean0 = fBCachedFetcher0.relative(0);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      Integer integer0 = new Integer(496);
      byte[][] byteArray0 = new byte[0][0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollFirst();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isEmpty();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getRowNum();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA();
      XSQLDA xSQLDA1 = new XSQLDA(0);
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA1);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 1, 0, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.last();
      fBCachedFetcher0.previous();
      fBCachedFetcher0.last();
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.setFetchSize((-1362));
      fBCachedFetcher0.first();
      fBCachedFetcher0.beforeFirst();
      fBCachedFetcher0.getFetchSize();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.last();
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      boolean boolean0 = fBCachedFetcher0.first();
      assertEquals(1, fBCachedFetcher0.getRowNum());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA(46);
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 0, 1, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      Integer integer0 = new Integer(496);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.next();
      assertFalse(boolean0);
      
      fBCachedFetcher0.insertRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isAfterLast());
      assertFalse(fBCachedFetcher0.isBeforeFirst());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[4][9];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-112);
      byteArray1[1] = (byte)22;
      byteArray1[2] = (byte)94;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte) (-112);
      byteArray2[1] = (byte)22;
      byteArray2[2] = (byte)78;
      byteArray2[3] = (byte)22;
      byteArray2[4] = (byte)94;
      byteArray2[5] = (byte) (-112);
      byteArray2[6] = (byte)0;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte) (-37);
      byteArray3[1] = (byte) (-90);
      byteArray3[2] = (byte) (-112);
      byteArray3[3] = (byte)94;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[1];
      byteArray4[0] = (byte)78;
      byteArray0[3] = byteArray4;
      linkedList0.add(byteArray0);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      assertFalse(fBCachedFetcher0.isLast());
      
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isLast());
      
      boolean boolean0 = fBCachedFetcher0.last();
      assertFalse(fBCachedFetcher0.isLast());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][0];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(linkedBlockingDeque0);
      byte[][] byteArray0 = new byte[1][0];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.first();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[4][9];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-112);
      byteArray1[1] = (byte)22;
      byteArray1[2] = (byte)94;
      byteArray0[0] = byteArray1;
      fBCachedFetcher0.next();
      FBResultSet fBResultSet0 = null;
      try {
        fBResultSet0 = new FBResultSet((XSQLVAR[]) null, linkedList0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.AbstractResultSet", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isLast();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[14][0];
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.absolute(7);
      fBCachedFetcher0.previous();
      boolean boolean0 = fBCachedFetcher0.next();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[9][7];
      byte[] byteArray1 = new byte[7];
      byteArray1[0] = (byte) (-80);
      byteArray1[1] = (byte)73;
      byteArray1[2] = (byte) (-12);
      byteArray1[3] = (byte)92;
      byteArray1[4] = (byte) (-116);
      byteArray1[5] = (byte) (-112);
      byteArray1[6] = (byte)25;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[9];
      byteArray2[0] = (byte) (-112);
      byteArray2[1] = (byte) (-112);
      byteArray2[2] = (byte)73;
      byteArray2[3] = (byte)73;
      byteArray2[4] = (byte) (-116);
      byteArray2[5] = (byte)73;
      byteArray2[6] = (byte)25;
      byteArray2[7] = (byte) (-80);
      byteArray2[8] = (byte)73;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[6];
      byteArray3[0] = (byte) (-80);
      byteArray3[1] = (byte) (-80);
      byteArray3[2] = (byte) (-12);
      byteArray3[3] = (byte) (-80);
      byteArray3[4] = (byte) (-116);
      byteArray3[5] = (byte)92;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[8];
      byteArray4[0] = (byte) (-80);
      byteArray4[1] = (byte)25;
      byteArray4[2] = (byte) (-116);
      byteArray4[3] = (byte)25;
      byteArray4[4] = (byte) (-12);
      byteArray4[5] = (byte)92;
      byteArray4[6] = (byte)73;
      byteArray4[7] = (byte)73;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[6];
      byteArray5[0] = (byte)12;
      byteArray5[1] = (byte)45;
      byteArray5[2] = (byte) (-12);
      byteArray5[3] = (byte) (-12);
      byteArray5[4] = (byte) (-112);
      byteArray5[5] = (byte) (-12);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[8];
      byteArray6[0] = (byte) (-112);
      byteArray6[1] = (byte)25;
      byteArray6[2] = (byte) (-116);
      byteArray6[3] = (byte) (-80);
      byteArray6[4] = (byte)26;
      byteArray6[5] = (byte) (-116);
      byteArray6[6] = (byte)25;
      byteArray6[7] = (byte)45;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[4];
      byteArray7[0] = (byte)92;
      byteArray7[1] = (byte) (-12);
      byteArray7[2] = (byte)73;
      byteArray7[3] = (byte)73;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[8];
      byteArray8[0] = (byte)73;
      byteArray8[1] = (byte)45;
      byteArray8[2] = (byte) (-80);
      byteArray8[3] = (byte)45;
      byteArray8[4] = (byte) (-80);
      byteArray8[5] = (byte) (-12);
      byteArray8[6] = (byte) (-12);
      byteArray8[7] = (byte) (-112);
      byteArray0[7] = byteArray8;
      byte[] byteArray9 = new byte[2];
      byteArray9[0] = (byte)12;
      byteArray9[1] = (byte)12;
      byteArray0[8] = byteArray9;
      linkedList0.add(byteArray0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[8][1];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte)60;
      byteArray1[1] = (byte) (-20);
      byteArray1[2] = (byte) (-48);
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[5];
      byteArray2[0] = (byte)60;
      byteArray2[1] = (byte) (-20);
      byteArray2[2] = (byte)60;
      byteArray2[3] = (byte) (-9);
      byteArray2[4] = (byte)60;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[0];
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[0];
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[2];
      byteArray5[0] = (byte) (-9);
      byteArray5[1] = (byte) (-20);
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[0];
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[5];
      byteArray7[0] = (byte) (-9);
      byteArray7[1] = (byte)60;
      byteArray7[2] = (byte) (-48);
      byteArray7[3] = (byte)60;
      byteArray7[4] = (byte)60;
      byteArray0[6] = byteArray7;
      byte[] byteArray8 = new byte[9];
      byteArray8[0] = (byte) (-48);
      byteArray8[1] = (byte) (-9);
      byteArray8[2] = (byte) (-1);
      byteArray8[3] = (byte)60;
      byteArray8[4] = (byte) (-48);
      byteArray8[5] = (byte)60;
      byteArray8[6] = (byte)60;
      byteArray8[7] = (byte)60;
      byteArray8[8] = (byte)60;
      byteArray0[7] = byteArray8;
      linkedList0.add(byteArray0);
      fBCachedFetcher0.absolute(1);
      fBCachedFetcher0.setFetchSize(1);
      assertEquals(1, fBCachedFetcher0.getFetchSize());
      
      byte[] byteArray9 = new byte[3];
      byteArray9[0] = (byte) (-49);
      byteArray9[1] = (byte)0;
      byteArray9[2] = (byte) (-1);
      byte[] byteArray10 = new byte[4];
      byteArray10[0] = (byte) (-1);
      byteArray10[1] = (byte) (-49);
      byteArray10[2] = (byte) (-1);
      byteArray10[3] = (byte) (-49);
      byte[] byteArray11 = new byte[0];
      byte[] byteArray12 = new byte[4];
      byteArray12[0] = (byte) (-49);
      byteArray12[1] = (byte) (-49);
      byteArray12[2] = (byte)0;
      byteArray12[3] = (byte)0;
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher1.isLast();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[1][0];
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.next();
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      Integer integer0 = new Integer(496);
      byte[][] byteArray0 = new byte[0][0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.pollFirst();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA();
      XSQLDA xSQLDA1 = new XSQLDA(0);
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA1);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 0, 1, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[4][9];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-112);
      byteArray1[1] = (byte)22;
      byteArray1[2] = (byte)94;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[17];
      byteArray2[0] = (byte) (-112);
      byteArray2[1] = (byte)22;
      byteArray2[2] = (byte)78;
      byteArray2[3] = (byte)22;
      linkedList0.add(byteArray0);
      byteArray2[4] = (byte)94;
      byteArray2[5] = (byte) (-112);
      byteArray2[6] = (byte)0;
      byteArray0[1] = byteArray2;
      fBCachedFetcher0.last();
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][7];
      linkedList0.addFirst(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative((-1687));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[4][9];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-112);
      byteArray1[1] = (byte)22;
      byteArray1[2] = (byte)94;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte) (-112);
      byteArray2[1] = (byte)22;
      byteArray2[2] = (byte)78;
      byteArray2[3] = (byte)22;
      byteArray2[4] = (byte)94;
      byteArray2[5] = (byte) (-112);
      byteArray2[6] = (byte)0;
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[4];
      byteArray3[0] = (byte) (-37);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.addFirst((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.absolute(2004);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.beforeFirst();
      assertFalse(fBCachedFetcher0.isLast());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(linkedBlockingDeque0);
      Integer integer0 = new Integer(496);
      byte[][] byteArray0 = new byte[1][0];
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      boolean boolean0 = fBCachedFetcher0.relative(496);
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isEmpty();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.last();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Integer integer0 = new Integer(496);
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      linkedBlockingDeque0.pollLast((long) (-95), timeUnit0);
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.first();
      byte[][] byteArray0 = new byte[0][4];
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow(byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.previous();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[4][9];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-112);
      linkedList0.listIterator();
      byteArray1[1] = (byte)22;
      byteArray1[2] = (byte)94;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte) (-112);
      byteArray2[1] = (byte)22;
      fBCachedFetcher0.afterLast();
      byteArray2[2] = (byte)78;
      byteArray2[3] = (byte)22;
      fBCachedFetcher0.relative((byte)22);
      byteArray2[4] = (byte)94;
      byteArray2[5] = (byte) (-112);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isLast();
      fBCachedFetcher1.relative((-1515));
      boolean boolean1 = fBCachedFetcher1.first();
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.afterLast();
      assertTrue(fBCachedFetcher0.isLast());
      
      fBCachedFetcher0.beforeFirst();
      boolean boolean0 = fBCachedFetcher0.relative(1);
      fBCachedFetcher0.beforeFirst();
      boolean boolean1 = fBCachedFetcher0.isFirst();
      assertTrue(boolean1 == boolean0);
      
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][8];
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.absolute(7);
      boolean boolean0 = fBCachedFetcher0.isAfterLast();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.close();
      fBCachedFetcher0.afterLast();
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte[][] byteArray0 = new byte[4][9];
      byte[] byteArray1 = new byte[3];
      byteArray1[0] = (byte) (-112);
      byteArray1[1] = (byte)22;
      byteArray1[2] = (byte)94;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[7];
      byteArray2[0] = (byte) (-112);
      byteArray2[1] = (byte)22;
      fBCachedFetcher0.afterLast();
      fBCachedFetcher0.relative(22);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList1, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isLast();
      fBCachedFetcher1.relative((byte)94);
      boolean boolean1 = fBCachedFetcher0.first();
      assertFalse(boolean1);
      
      boolean boolean2 = fBCachedFetcher0.isFirst();
      assertFalse(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.next();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((List<byte[][]>) null, (FBObjectListener.FetcherListener) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA(4);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[2];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      xSQLVARArray0[1] = xSQLVAR1;
      xSQLDA0.sqlvar = xSQLVARArray0;
      xSQLDA0.sqlvar = xSQLVARArray0;
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 4, 0, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[2];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLDA0.sqlvar = xSQLVARArray0;
      xSQLVARArray0[0] = xSQLVAR0;
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 0, 1, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(linkedBlockingDeque0);
      Predicate.isEqual((Object) linkedBlockingDeque0);
      byte[][] byteArray0 = new byte[1][4];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte) (-37);
      byteArray1[1] = (byte) (-90);
      byteArray1[2] = (byte) (-37);
      byteArray1[3] = (byte) (-37);
      byteArray1[4] = (byte) (-37);
      byteArray0[0] = byteArray1;
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][7];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.afterLast();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLDA xSQLDA1 = new XSQLDA(0);
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA1);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 0, 2004, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(linkedBlockingDeque0);
      linkedBlockingDeque0.removeAll(linkedList0);
      Integer integer0 = new Integer(496);
      byte[][] byteArray0 = new byte[7][6];
      byte[] byteArray1 = new byte[5];
      byteArray1[0] = (byte)1;
      byteArray1[1] = (byte)100;
      byteArray1[2] = (byte) (-78);
      byteArray1[3] = (byte)42;
      byteArray1[4] = (byte)19;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[4];
      byteArray2[0] = (byte)100;
      byteArray2[1] = (byte) (-78);
      byteArray2[2] = (byte)85;
      byteArray2[3] = (byte) (-78);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[6];
      byteArray3[0] = (byte)85;
      byteArray3[1] = (byte)100;
      byteArray3[2] = (byte)100;
      byteArray3[3] = (byte)19;
      byteArray3[4] = (byte)1;
      byteArray3[5] = (byte)1;
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[6];
      byteArray4[0] = (byte)42;
      byteArray4[1] = (byte)100;
      byteArray4[2] = (byte) (-78);
      byteArray4[3] = (byte)42;
      byteArray4[4] = (byte)85;
      byteArray4[5] = (byte)100;
      byteArray0[3] = byteArray4;
      byte[] byteArray5 = new byte[4];
      byteArray5[0] = (byte)43;
      byteArray5[1] = (byte)100;
      byteArray5[2] = (byte)42;
      byteArray5[3] = (byte)42;
      byteArray0[4] = byteArray5;
      byte[] byteArray6 = new byte[8];
      byteArray6[0] = (byte)19;
      byteArray6[1] = (byte)1;
      byteArray6[2] = (byte)100;
      byteArray6[3] = (byte)19;
      byteArray6[4] = (byte)100;
      byteArray6[5] = (byte)19;
      byteArray6[6] = (byte)19;
      byteArray6[7] = (byte)19;
      byteArray0[5] = byteArray6;
      byte[] byteArray7 = new byte[1];
      byteArray7[0] = (byte)43;
      byteArray0[6] = byteArray7;
      linkedBlockingDeque0.add(byteArray0);
      linkedBlockingDeque0.drainTo((Collection<? super byte[][]>) linkedList0);
      byte[][] byteArray8 = new byte[1][0];
      linkedList0.add(byteArray8);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.absolute(1);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.next();
      boolean boolean0 = fBCachedFetcher0.isAfterLast();
      assertFalse(fBCachedFetcher0.isBeforeFirst());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      try { 
        fBCachedFetcher0.absolute(0);
        fail("Expecting exception: FBSQLException");
      
      } catch(FBSQLException e) {
         //
         // You cannot position to the row 0 with absolute() method.
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      XSQLDA xSQLDA0 = new XSQLDA(4);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[2];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLDA0.sqlvar = xSQLVARArray0;
      isc_stmt_handle_impl0.ensureCapacity(0);
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLVARArray0[1] = xSQLVAR0;
      xSQLDA0.sqld = 675;
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 4, 675, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBObjectListener.FetcherListener fBObjectListener_FetcherListener0 = null;
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.updateRow((byte[][]) null);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      isc_stmt_handle_impl0.setAllRowsFetched(true);
      XSQLDA xSQLDA0 = new XSQLDA(4);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[2];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLDA0.sqlvar = xSQLVARArray0;
      xSQLVARArray0[0] = xSQLVAR0;
      xSQLVARArray0[1] = xSQLVAR0;
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 0, 1, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.setFetchSize((-334));
      assertEquals((-334), fBCachedFetcher0.getFetchSize());
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      assertTrue(fBCachedFetcher0.isBeforeFirst());
      
      fBCachedFetcher0.updateRow((byte[][]) null);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(linkedBlockingDeque0);
      byte[][] byteArray0 = new byte[4][4];
      byte[] byteArray1 = new byte[6];
      byteArray1[0] = (byte) (-44);
      byteArray1[1] = (byte) (-48);
      byteArray1[2] = (byte) (-114);
      byteArray1[3] = (byte) (-73);
      byteArray1[4] = (byte) (-89);
      byteArray1[5] = (byte)63;
      byteArray0[0] = byteArray1;
      byte[] byteArray2 = new byte[1];
      byteArray2[0] = (byte) (-73);
      byteArray0[1] = byteArray2;
      byte[] byteArray3 = new byte[3];
      byteArray3[0] = (byte) (-89);
      byteArray3[1] = (byte)63;
      byteArray3[2] = (byte) (-48);
      byteArray0[2] = byteArray3;
      byte[] byteArray4 = new byte[2];
      byteArray4[0] = (byte) (-48);
      byteArray4[1] = (byte) (-73);
      byteArray0[3] = byteArray4;
      linkedList0.add(byteArray0);
      Predicate<byte[][]> predicate0 = Predicate.isEqual((Object) linkedBlockingDeque0);
      Integer integer0 = new Integer(491);
      Integer integer1 = new Integer(491);
      Predicate<byte[][]> predicate1 = Predicate.isEqual((Object) integer1);
      predicate0.and(predicate1);
      Predicate<Object> predicate2 = Predicate.isEqual((Object) integer0);
      Predicate<Object> predicate3 = predicate2.negate();
      Predicate<Object> predicate4 = predicate3.and(predicate2);
      predicate0.or(predicate4);
      linkedList0.removeIf(predicate0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.relative(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher1.isLast();
      boolean boolean1 = fBCachedFetcher0.first();
      assertFalse(boolean1);
      
      boolean boolean2 = fBCachedFetcher1.next();
      assertFalse(boolean2 == boolean0);
      
      int int0 = fBCachedFetcher1.getRowNum();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(linkedBlockingDeque0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow((byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.deleteRow();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.absolute((-18));
      assertFalse(boolean0);
      assertFalse(fBCachedFetcher0.isFirst());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA(4);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[2];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      xSQLVARArray0[0] = xSQLVAR0;
      XSQLVAR xSQLVAR1 = new XSQLVAR();
      xSQLVARArray0[1] = xSQLVAR1;
      xSQLDA0.sqlvar = xSQLVARArray0;
      xSQLDA0.sqlvar = xSQLVARArray0;
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 0, 1972, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(linkedBlockingDeque0);
      Integer integer0 = new Integer(496);
      byte[][] byteArray0 = new byte[1][0];
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.relative((-617));
      fBCachedFetcher0.setFetchSize(496);
      fBCachedFetcher0.previous();
      boolean boolean0 = fBCachedFetcher0.next();
      assertEquals(496, fBCachedFetcher0.getFetchSize());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[1];
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLVAR xSQLVAR1 = xSQLVAR0.deepCopy();
      xSQLVARArray0[0] = xSQLVAR1;
      FBResultSet fBResultSet0 = null;
      try {
        fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
        fail("Expecting exception: TypeConversionException");
      
      } catch(Throwable e) {
         //
         // SQL type for this field is not yet supported.
         //
         verifyException("org.firebirdsql.jdbc.field.FBField", e);
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, (-2986), (-2986), (AbstractIscStmtHandle) null, (FBObjectListener.FetcherListener) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(linkedBlockingDeque0);
      Integer integer0 = new Integer(496);
      byte[][] byteArray0 = new byte[1][0];
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.last();
      boolean boolean0 = fBCachedFetcher0.isFirst();
      assertEquals(0, fBResultSet0.getRow());
      assertEquals(1, fBCachedFetcher0.getRowNum());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(linkedBlockingDeque0);
      Predicate.isEqual((Object) linkedBlockingDeque0);
      Integer integer0 = new Integer(496);
      byte[][] byteArray0 = new byte[0][0];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      byte byte0 = (byte) (-37);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow(byteArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      byte[][] byteArray0 = new byte[0][6];
      linkedList0.add(byteArray0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.beforeFirst();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(linkedBlockingDeque0);
      linkedBlockingDeque0.removeAll(linkedList0);
      Integer integer0 = new Integer(496);
      linkedBlockingDeque0.drainTo((Collection<? super byte[][]>) linkedList0);
      byte[][] byteArray0 = new byte[1][0];
      linkedList0.add(byteArray0);
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.previous();
      fBCachedFetcher0.next();
      boolean boolean0 = fBCachedFetcher0.isAfterLast();
      assertEquals(1, fBCachedFetcher0.getRowNum());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA();
      XSQLVAR xSQLVAR0 = new XSQLVAR();
      XSQLDA xSQLDA1 = new XSQLDA(0);
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA1);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, 0, 0, isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      XSQLVAR[] xSQLVARArray0 = new XSQLVAR[0];
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBResultSet fBResultSet0 = new FBResultSet(xSQLVARArray0, linkedList0);
      linkedList0.add((byte[][]) null);
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, fBResultSet0);
      fBCachedFetcher0.insertRow((byte[][]) null);
      fBCachedFetcher0.deleteRow();
      assertTrue(fBCachedFetcher0.isLast());
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      int int0 = fBCachedFetcher0.getFetchSize();
      assertEquals(0, int0);
      assertFalse(fBCachedFetcher0.isAfterLast());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      isc_stmt_handle_impl isc_stmt_handle_impl0 = new isc_stmt_handle_impl();
      XSQLDA xSQLDA0 = new XSQLDA(18);
      xSQLDA0.blr = null;
      isc_stmt_handle_impl0.setOutSqlda(xSQLDA0);
      FBCachedFetcher fBCachedFetcher0 = null;
      try {
        fBCachedFetcher0 = new FBCachedFetcher((GDSHelper) null, (-321), (-321), isc_stmt_handle_impl0, (FBObjectListener.FetcherListener) null, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      boolean boolean0 = fBCachedFetcher0.isBeforeFirst();
      assertFalse(boolean0);
      assertEquals(0, fBCachedFetcher0.getRowNum());
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      LinkedBlockingDeque<byte[][]> linkedBlockingDeque0 = new LinkedBlockingDeque<byte[][]>();
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>(linkedBlockingDeque0);
      Predicate.isEqual((Object) linkedBlockingDeque0);
      LinkedList<byte[][]> linkedList1 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher0.absolute((byte) (-37));
      fBCachedFetcher0.setFetchSize((-1730));
      LinkedList<byte[][]> linkedList2 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher1 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      fBCachedFetcher1.isLast();
      boolean boolean0 = fBCachedFetcher0.first();
      assertEquals((-1730), fBCachedFetcher0.getFetchSize());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      LinkedList<byte[][]> linkedList0 = new LinkedList<byte[][]>();
      FBCachedFetcher fBCachedFetcher0 = new FBCachedFetcher(linkedList0, (FBObjectListener.FetcherListener) null);
      // Undeclared exception!
      try { 
        fBCachedFetcher0.insertRow((byte[][]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.firebirdsql.jdbc.FBCachedFetcher", e);
      }
  }
}
