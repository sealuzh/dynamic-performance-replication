/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 05:33:55 GMT 2018
 */

package com.werken.saxpath;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.werken.saxpath.Token;
import com.werken.saxpath.XPathLexer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class XPathLexer_ESTest extends XPathLexer_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.mod();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.equals();
      Token token0 = xPathLexer0.relationalOperator();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OXQIc<.N");
      xPathLexer0.div();
      xPathLexer0.hasMoreChars();
      xPathLexer0.consume();
      assertEquals("OXQIc<.N", xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
      
      boolean boolean0 = xPathLexer0.isIdentifierChar('1');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.identifier();
      xPathLexer0.consume();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.equals();
      xPathLexer0.whitespace();
      xPathLexer0.consume((-1187));
      xPathLexer0.doubleColon();
      // Undeclared exception!
      try { 
        xPathLexer0.identifierOrOperatorName();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.dots();
      xPathLexer1.and();
      xPathLexer1.consume();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.number();
      Token token1 = xPathLexer0.identifierOrOperatorName();
      assertNull(token1);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q%axVL:g(?u+cEQ");
      Token token0 = xPathLexer0.minus();
      assertEquals(6, token0.getTokenType());
      assertEquals("Q", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer("MOL `yS>hS");
      xPathLexer1.mod();
      Token token1 = xPathLexer1.rightParen();
      assertEquals("M", token1.getTokenText());
      
      Token token2 = xPathLexer1.nextToken();
      assertEquals(15, token2.getTokenType());
      assertEquals("OL", token2.getTokenText());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals(2, token3.getTokenType());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("j");
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.getPreviousToken();
      assertEquals("j", token0.getTokenText());
      assertEquals(15, token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("K}3");
      xPathLexer0.literal();
      xPathLexer0.whitespace();
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-2619));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/=C(OYKX%f!On[");
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-439));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7|.FJ aJub0");
      xPathLexer0.equals();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.consume();
      Token token1 = xPathLexer0.comma();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      token1.toString();
      token0.toString();
      Token token2 = xPathLexer1.equals();
      // Undeclared exception!
      try { 
        token2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.doubleColon();
      xPathLexer0.plus();
      XPathLexer xPathLexer1 = new XPathLexer("bQN`BdfVR)9c]m\"");
      xPathLexer1.star();
      xPathLexer1.equals();
      xPathLexer1.nextToken();
      xPathLexer1.slashes();
      xPathLexer1.dollar();
      xPathLexer0.setXPath("bQN`BdfVR)9c]m\"");
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("-A4~k^1");
      Token token0 = xPathLexer0.identifier();
      token0.toString();
      String string0 = token0.toString();
      assertEquals("[ (15) (-A4)", string0);
      
      xPathLexer0.setPreviousToken(token0);
      Token token1 = xPathLexer0.rightParen();
      assertEquals(2, token1.getTokenType());
      assertEquals("~", token1.getTokenText());
      
      Token token2 = xPathLexer0.not();
      assertEquals("k", token2.getTokenText());
      assertEquals(23, token2.getTokenType());
      
      xPathLexer0.operatorName();
      Token token3 = xPathLexer0.notEquals();
      assertEquals(22, token3.getTokenType());
      assertEquals("^1", token3.getTokenText());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("8)@_gL:vn)1<@9}IrYi");
      xPathLexer0.and();
      xPathLexer1.slashes();
      xPathLexer0.hasMoreChars();
      xPathLexer0.or();
      xPathLexer1.nextToken();
      xPathLexer1.at();
      xPathLexer0.currentPosition();
      // Undeclared exception!
      try { 
        xPathLexer0.LA(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7|.FJ aJub0");
      xPathLexer0.consume();
      Token token0 = xPathLexer0.leftParen();
      assertEquals(1, token0.getTokenType());
      assertEquals("|", token0.getTokenText());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      Token token1 = xPathLexer0.number();
      assertEquals(31, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("bpNBdfz)c_Cm_");
      xPathLexer0.doubleColon();
      xPathLexer0.at();
      Token token0 = xPathLexer0.leftParen();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.pipe();
      xPathLexer0.div();
      xPathLexer0.star();
      token0.toString();
      int int0 = xPathLexer0.currentPosition();
      assertEquals(5, int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.rightBracket();
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.minus();
      xPathLexer0.whitespace();
      xPathLexer0.getPreviousToken();
      xPathLexer0.mod();
      xPathLexer0.setXPath(") (");
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.star();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-10));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.minus();
      xPathLexer0.rightBracket();
      xPathLexer0.getXPath();
      xPathLexer0.div();
      xPathLexer0.setXPath("@WC%.$evEK -Kfe");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      String string0 = "d_CYts5N;K";
      XPathLexer xPathLexer0 = new XPathLexer("d_CYts5N;K");
      XPathLexer xPathLexer1 = new XPathLexer("#mA]'VAD,");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setXPath("#mA]'VAD,");
      xPathLexer0.isIdentifierChar('L');
      xPathLexer1.rightBracket();
      xPathLexer0.endPosition();
      xPathLexer1.relationalOperator();
      xPathLexer2.identifierOrOperatorName();
      xPathLexer0.number();
      xPathLexer0.endPosition();
      xPathLexer1.mod();
      xPathLexer2.and();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@@6*g%B");
      xPathLexer0.div();
      Token token0 = xPathLexer0.whitespace();
      assertEquals("", token0.getTokenText());
      assertEquals((-2), token0.getTokenType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("@3foL9'");
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.minus();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.equals();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      assertNull(xPathLexer1.getXPath());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">Cq_^K{g\\>$G\"zos7");
      Token token0 = xPathLexer0.at();
      assertEquals(">", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals("Cq_", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer0.not();
      assertEquals(23, token2.getTokenType());
      assertEquals("^", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Peg>_:;d52");
      xPathLexer0.nextToken();
      xPathLexer0.endPosition();
      xPathLexer0.literal();
      xPathLexer0.pipe();
      // Undeclared exception!
      try { 
        xPathLexer0.LA((-776));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = "d_CYts5N;K";
      XPathLexer xPathLexer0 = new XPathLexer("d_CYts5N;K");
      XPathLexer xPathLexer1 = new XPathLexer("#mA]'VAD,");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setXPath("#mA]'VAD,");
      xPathLexer0.isIdentifierChar('L');
      xPathLexer2.nextToken();
      xPathLexer1.and();
      xPathLexer1.comma();
      // Undeclared exception!
      try { 
        xPathLexer2.LA((-858));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9/MCW;kQ]wD17K 2/");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.operatorName();
      Token token0 = xPathLexer2.rightParen();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("u?jO1Ae{$tJ>nW");
      xPathLexer0.equals();
      String string0 = "o},(IO\\H";
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.whitespace();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer1.whitespace();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" (");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.and();
      Token token0 = xPathLexer2.rightParen();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8,:y/k[HfJ");
      Token token0 = xPathLexer0.equals();
      assertEquals("8", token0.getTokenText());
      assertEquals(21, token0.getTokenType());
      
      xPathLexer0.dollar();
      xPathLexer0.identifierOrOperatorName();
      Token token1 = xPathLexer0.comma();
      assertEquals(32, token1.getTokenType());
      assertEquals(":", token1.getTokenText());
      
      Token token2 = xPathLexer0.dollar();
      assertEquals("y", token2.getTokenText());
      assertEquals(26, token2.getTokenType());
      
      xPathLexer0.getPreviousToken();
      Token token3 = xPathLexer0.dots();
      assertEquals(13, token3.getTokenType());
      assertEquals("/", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertEquals(15, token4.getTokenType());
      assertEquals("k", token4.getTokenText());
      
      Token token5 = xPathLexer0.colon();
      assertEquals(18, token5.getTokenType());
      assertEquals("[", token5.getTokenText());
      
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.getXPath();
      Token token6 = xPathLexer0.minus();
      assertEquals("f", token6.getTokenText());
      
      xPathLexer0.consume(671);
      Token token7 = xPathLexer0.minus();
      assertEquals(6, token7.getTokenType());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.and();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.doubleColon();
      xPathLexer1.getPreviousToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.and();
      xPathLexer0.setXPath("y");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer3 = new XPathLexer();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d_CYts5N;K");
      XPathLexer xPathLexer1 = new XPathLexer("#mA]'VAD,");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.setXPath("#mA]'VAD,");
      xPathLexer0.isIdentifierChar('L');
      xPathLexer2.nextToken();
      Token token0 = xPathLexer0.plus();
      assertEquals(5, token0.getTokenType());
      assertEquals("d", token0.getTokenText());
      
      XPathLexer xPathLexer3 = new XPathLexer("?\u0006[}(KS");
      Token token1 = xPathLexer3.leftParen();
      assertEquals("?", token1.getTokenText());
      
      Token token2 = xPathLexer2.star();
      assertEquals("#", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.leftBracket();
      assertEquals(3, token3.getTokenType());
      assertEquals("_", token3.getTokenText());
      
      xPathLexer3.getPreviousToken();
      xPathLexer1.consume(31);
      xPathLexer2.operatorName();
      boolean boolean0 = xPathLexer3.hasMoreChars();
      assertTrue(boolean0);
      
      XPathLexer xPathLexer4 = new XPathLexer("#mA]'VAD,");
      Token token4 = xPathLexer4.nextToken();
      assertEquals("#mA]'VAD,", token4.getTokenText());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("[ (");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.and();
      Token token0 = xPathLexer2.rightParen();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.slashes();
      xPathLexer0.getXPath();
      xPathLexer0.setXPath("epgYV+qE3`7G[>+D");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" B:bqpz_Y;a.'-N>");
      xPathLexer0.equals();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.not();
      xPathLexer1.dollar();
      xPathLexer0.nextToken();
      xPathLexer0.slashes();
      xPathLexer0.getXPath();
      xPathLexer1.getPreviousToken();
      Token token0 = xPathLexer1.mod();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("OM/P}v?#E_ZN");
      xPathLexer0.dots();
      xPathLexer0.slashes();
      xPathLexer0.consume((-1085));
      // Undeclared exception!
      try { 
        xPathLexer0.mod();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      String string0 = "u?jO1Ae{$>nW";
      XPathLexer xPathLexer0 = new XPathLexer("u?jO1Ae{$>nW");
      xPathLexer0.notEquals();
      xPathLexer0.equals();
      xPathLexer0.rightParen();
      xPathLexer0.nextToken();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.getXPath();
      Token token0 = xPathLexer0.slashes();
      assertEquals(11, token0.getTokenType());
      
      xPathLexer0.setXPath("/=C(OYKX%f!On[");
      XPathLexer xPathLexer1 = new XPathLexer("HR1Icv>/,boS$t])}");
      xPathLexer1.operatorName();
      Token token1 = xPathLexer1.nextToken();
      assertEquals("HR1Icv", token1.getTokenText());
      assertEquals(15, token1.getTokenType());
      
      Token token2 = xPathLexer1.slashes();
      assertEquals(12, token2.getTokenType());
      assertEquals(">/", token2.getTokenText());
      
      Token token3 = xPathLexer1.dollar();
      assertEquals(",", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.and();
      xPathLexer0.or();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.leftBracket();
      assertEquals(3, token4.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("r):% |sOF|l$(7");
      XPathLexer xPathLexer1 = new XPathLexer("xrT9p");
      xPathLexer1.whitespace();
      xPathLexer1.notEquals();
      xPathLexer1.nextToken();
      xPathLexer0.nextToken();
      xPathLexer1.getXPath();
      xPathLexer1.slashes();
      xPathLexer0.and();
      String string0 = null;
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("#mA]'VAD,");
      xPathLexer1.star();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer1.at();
      assertEquals("m", token0.getTokenText());
      assertEquals(16, token0.getTokenType());
      
      Token token1 = xPathLexer1.nextToken();
      assertEquals(15, token1.getTokenType());
      assertEquals("A", token1.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer1.star();
      assertEquals("]", token2.getTokenText());
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer2.comma();
      assertEquals(32, token3.getTokenType());
      
      Token token4 = xPathLexer1.minus();
      assertEquals(6, token4.getTokenType());
      assertEquals("'", token4.getTokenText());
      
      xPathLexer1.identifierOrOperatorName();
      xPathLexer1.endPosition();
      Token token5 = xPathLexer1.pipe();
      assertEquals("V", token5.getTokenText());
      assertEquals(17, token5.getTokenType());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("]Y$O");
      xPathLexer1.whitespace();
      xPathLexer0.equals();
      xPathLexer1.nextToken();
      xPathLexer0.consume();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.nextToken();
      XPathLexer xPathLexer2 = new XPathLexer("]Y$O");
      xPathLexer2.consume();
      xPathLexer0.star();
      xPathLexer0.mod();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.identifier();
      xPathLexer0.setXPath("u?jOA{^$>nW");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      String string0 = ">Cq4^K{g\\\\>$G\"zos7";
      xPathLexer0.setXPath(">Cq4^K{g\\>$G\"zos7");
      Token token1 = xPathLexer0.equals();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      xPathLexer0.comma();
      token1.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.dollar();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":Z`-p/G-)up");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(":", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.hasMoreChars();
      Token token2 = xPathLexer0.slashes();
      assertEquals(11, token2.getTokenType());
      assertEquals("`", token2.getTokenText());
      
      xPathLexer0.identifierOrOperatorName();
      Token token3 = xPathLexer0.dollar();
      assertEquals("-", token3.getTokenText());
      assertEquals(26, token3.getTokenType());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("{WPG!'d'W5|");
      xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      xPathLexer0.or();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      xPathLexer0.pipe();
      xPathLexer0.hasMoreChars();
      xPathLexer1.mod();
      xPathLexer0.div();
      xPathLexer0.or();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.equals();
      xPathLexer1.setXPath("{WPG!'d'W5|");
      assertFalse(xPathLexer1.equals((Object)xPathLexer0));
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Peg>_:;d52");
      Token token0 = xPathLexer0.star();
      xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken(token0);
      Token token1 = xPathLexer0.rightParen();
      xPathLexer0.whitespace();
      xPathLexer0.notEquals();
      xPathLexer1.identifierOrOperatorName();
      token1.toString();
      xPathLexer1.consume();
      xPathLexer1.nextToken();
      Token token2 = xPathLexer1.rightParen();
      // Undeclared exception!
      try { 
        token2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!:B*.9!<3");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.not();
      Token token1 = xPathLexer0.nextToken();
      assertEquals("B*.9!<3", token1.getTokenText());
      
      Token token2 = xPathLexer0.doubleColon();
      assertEquals(19, token2.getTokenType());
      assertEquals("B*", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.getPreviousToken();
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals(".", token3.getTokenText());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      xPathLexer1.getPreviousToken();
      String string0 = token0.toString();
      assertEquals("[ (23) (!)", string0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("c(]{ND");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(15, token0.getTokenType());
      assertEquals("c", token0.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.dots();
      xPathLexer1.dots();
      xPathLexer1.nextToken();
      xPathLexer0.and();
      xPathLexer1.or();
      xPathLexer0.consume();
      xPathLexer0.getXPath();
      Token token1 = xPathLexer0.dots();
      assertEquals(13, token1.getTokenType());
      assertEquals("{", token1.getTokenText());
      
      xPathLexer1.setXPath("d_CYMt)5N;");
      Token token2 = xPathLexer1.getPreviousToken();
      assertEquals((-1), token2.getTokenType());
      
      Token token3 = xPathLexer1.star();
      assertEquals("d", token3.getTokenText());
      assertEquals(20, token3.getTokenType());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.colon();
      XPathLexer xPathLexer1 = new XPathLexer("I}=% r4");
      xPathLexer1.or();
      xPathLexer1.nextToken();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.colon();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("");
      xPathLexer1.operatorName();
      xPathLexer0.getXPath();
      xPathLexer1.setXPath("2+xR[k7{2;jjL76Eh");
      xPathLexer1.nextToken();
      XPathLexer xPathLexer2 = null;
      try {
        xPathLexer2 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      xPathLexer0.or();
      Token token0 = xPathLexer0.whitespace();
      assertEquals((-2), token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("n+p]e,#}lH55z@B%");
      Token token1 = xPathLexer2.comma();
      assertEquals("n", token1.getTokenText());
      assertEquals(32, token1.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token2 = xPathLexer2.nextToken();
      assertEquals(5, token2.getTokenType());
      assertEquals("+", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d_CYts5N;K");
      xPathLexer0.slashes();
      xPathLexer0.whitespace();
      xPathLexer0.equals();
      xPathLexer0.dollar();
      xPathLexer0.leftParen();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = new XPathLexer();
      token0.toString();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.whitespace();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("/=C(OYKX%f!On[");
      xPathLexer0.consume();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer("!!d<3");
      Token token0 = xPathLexer2.nextToken();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.identifierOrOperatorName();
      xPathLexer1.leftBracket();
      xPathLexer0.endPosition();
      int int0 = xPathLexer1.currentPosition();
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.equals();
      xPathLexer0.getXPath();
      xPathLexer0.slashes();
      xPathLexer0.setXPath("/C(OYKX%rf!On[");
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.leftParen();
      token1.toString();
      token1.toString();
      xPathLexer0.notEquals();
      token1.toString();
      xPathLexer0.dollar();
      xPathLexer0.consume();
      XPathLexer xPathLexer1 = new XPathLexer("[ (1) (C)");
      xPathLexer1.rightBracket();
      xPathLexer1.hasMoreChars();
      xPathLexer1.consume(57);
      xPathLexer0.nextToken();
      xPathLexer0.hasMoreChars();
      xPathLexer0.not();
      xPathLexer0.comma();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("8,:y/k[HfJ");
      Token token0 = xPathLexer0.equals();
      assertEquals("8", token0.getTokenText());
      
      xPathLexer0.equals();
      Token token1 = xPathLexer0.dollar();
      assertEquals(":", token1.getTokenText());
      assertEquals(26, token1.getTokenType());
      
      xPathLexer0.comma();
      xPathLexer0.relationalOperator();
      Token token2 = xPathLexer0.equals();
      assertEquals(21, token2.getTokenType());
      
      Token token3 = xPathLexer0.pipe();
      assertEquals(17, token3.getTokenType());
      assertEquals("k", token3.getTokenText());
      
      xPathLexer0.setXPath("8,:y/k[HfJ");
      Token token4 = xPathLexer0.rightBracket();
      assertEquals("8", token4.getTokenText());
      assertEquals(4, token4.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer("8,:y/k[HfJ");
      xPathLexer1.isIdentifierChar('7');
      Token token5 = xPathLexer0.nextToken();
      assertEquals(",", token5.getTokenText());
      
      xPathLexer1.and();
      xPathLexer1.consume();
      xPathLexer1.getXPath();
      Token token6 = xPathLexer0.dots();
      assertEquals(13, token6.getTokenType());
      assertEquals(":", token6.getTokenText());
      
      XPathLexer xPathLexer2 = new XPathLexer("");
      XPathLexer xPathLexer3 = new XPathLexer("8,:y/k[HfJ");
      xPathLexer3.getPreviousToken();
      xPathLexer3.consume(1);
      xPathLexer1.operatorName();
      xPathLexer0.hasMoreChars();
      Token token7 = xPathLexer0.nextToken();
      assertEquals(15, token7.getTokenType());
      assertEquals("y", token7.getTokenText());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("<8x$AcG fo");
      Token token0 = xPathLexer0.relationalOperator();
      token0.toString();
      Token token1 = xPathLexer0.doubleColon();
      token1.toString();
      Token token2 = xPathLexer0.nextToken();
      token2.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.dots();
      token2.toString();
      xPathLexer0.number();
      xPathLexer1.pipe();
      xPathLexer1.div();
      Token token3 = new Token((-1987), "[ (7) (<)", 103, (-1987));
      // Undeclared exception!
      try { 
        token3.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("#mA]'VAD,");
      xPathLexer0.star();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer("_Ct5N;K");
      xPathLexer1.leftParen();
      xPathLexer0.comma();
      xPathLexer1.minus();
      xPathLexer0.whitespace();
      Token token0 = xPathLexer0.identifierOrOperatorName();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">Cq_^K{g\\>$G\"zos7");
      xPathLexer0.relationalOperator();
      xPathLexer0.number();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.relationalOperator();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("d_CYts5N;K");
      xPathLexer0.whitespace();
      xPathLexer0.equals();
      xPathLexer0.dollar();
      xPathLexer0.leftParen();
      xPathLexer0.notEquals();
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.getXPath();
      XPathLexer xPathLexer1 = new XPathLexer();
      token0.toString();
      xPathLexer1.colon();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token1 = xPathLexer2.whitespace();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("");
      Token token0 = xPathLexer0.slashes();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.whitespace();
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9/MCW;kQ]wD17K 2/");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token0 = xPathLexer2.rightParen();
      xPathLexer2.whitespace();
      xPathLexer0.notEquals();
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.colon();
      xPathLexer0.and();
      xPathLexer0.setXPath(">Cq4^K{g\\>$G\"zos7");
      xPathLexer0.nextToken();
      xPathLexer0.star();
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.comma();
      xPathLexer0.colon();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("7|.FJ aJub0");
      xPathLexer1.consume();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.getXPath();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer1.dots();
      xPathLexer0.operatorName();
      xPathLexer2.pipe();
      XPathLexer xPathLexer4 = null;
      try {
        xPathLexer4 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]z :;qK|UAtVmh");
      xPathLexer0.doubleColon();
      xPathLexer0.slashes();
      xPathLexer0.slashes();
      xPathLexer0.plus();
      xPathLexer0.at();
      xPathLexer0.at();
      xPathLexer0.whitespace();
      xPathLexer0.or();
      xPathLexer0.leftParen();
      xPathLexer0.whitespace();
      xPathLexer0.star();
      xPathLexer0.rightParen();
      xPathLexer0.whitespace();
      xPathLexer0.mod();
      xPathLexer0.nextToken();
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.identifier();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      token0.toString();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.getXPath();
      xPathLexer0.consume();
      assertEquals("]z :;qK|UAtVmh", xPathLexer0.getXPath());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      String string0 = "@3foL9'";
      XPathLexer xPathLexer0 = new XPathLexer("@3foL9'");
      xPathLexer0.nextToken();
      xPathLexer0.equals();
      xPathLexer0.dollar();
      xPathLexer0.not();
      xPathLexer0.leftParen();
      xPathLexer0.notEquals();
      xPathLexer0.isIdentifierChar('P');
      xPathLexer0.nextToken();
      xPathLexer0.nextToken();
      xPathLexer0.div();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      xPathLexer0.comma();
      Token token0 = xPathLexer0.rightParen();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      String string0 = "7|.FJ aJub0";
      XPathLexer xPathLexer0 = new XPathLexer("7|.FJ aJub0");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.identifier();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q%axUV:g(?u+cAQ");
      xPathLexer0.equals();
      Token token0 = xPathLexer0.nextToken();
      Token token1 = xPathLexer0.colon();
      Token token2 = xPathLexer0.nextToken();
      token1.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      token0.toString();
      Token token3 = xPathLexer1.whitespace();
      token2.toString();
      // Undeclared exception!
      try { 
        token3.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(">Cq4^K{g\\>$G\"zos7");
      xPathLexer0.doubleColon();
      xPathLexer0.leftParen();
      xPathLexer0.consume();
      xPathLexer0.rightParen();
      XPathLexer xPathLexer1 = new XPathLexer("G{urcD]B3E,,f9kc");
      Token token0 = xPathLexer1.nextToken();
      xPathLexer1.hasMoreChars();
      XPathLexer xPathLexer2 = new XPathLexer();
      XPathLexer xPathLexer3 = new XPathLexer(">Cq4^K{g\\>$G\"zos7");
      xPathLexer0.currentPosition();
      xPathLexer2.consume(5);
      xPathLexer3.setPreviousToken(token0);
      Token token1 = xPathLexer2.div();
      assertNull(token1);
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(":Z`-p/G-)up");
      Token token0 = xPathLexer0.rightParen();
      assertEquals(":", token0.getTokenText());
      assertEquals(2, token0.getTokenType());
      
      Token token1 = xPathLexer0.at();
      assertEquals(16, token1.getTokenType());
      assertEquals("Z", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("`-p/G-)up", token2.getTokenText());
      
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("`", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
      
      xPathLexer0.identifierOrOperatorName();
      Token token4 = xPathLexer0.dollar();
      assertEquals("-", token4.getTokenText());
      assertEquals(26, token4.getTokenType());
      
      Token token5 = xPathLexer0.whitespace();
      assertEquals((-2), token5.getTokenType());
      
      Token token6 = xPathLexer0.notEquals();
      assertEquals("/G", token6.getTokenText());
      assertEquals(22, token6.getTokenType());
      
      int int0 = xPathLexer0.endPosition();
      assertEquals(11, int0);
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      Token token0 = xPathLexer1.nextToken();
      xPathLexer1.consume();
      Token token1 = xPathLexer1.dollar();
      xPathLexer1.setPreviousToken(token1);
      xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer(">Cq_^K{g\\>$G\"zos7");
      xPathLexer0.whitespace();
      xPathLexer1.plus();
      xPathLexer1.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("9/MCW;kQ]wD17K 2/");
      xPathLexer0.nextToken();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      xPathLexer0.consume();
      // Undeclared exception!
      try { 
        xPathLexer0.setXPath((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.dots();
      xPathLexer0.nextToken();
      Token token0 = xPathLexer0.doubleColon();
      xPathLexer0.setPreviousToken(token0);
      xPathLexer0.mod();
      xPathLexer0.setXPath("@3foL9'");
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.nextToken();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer("@3foL9'");
      XPathLexer xPathLexer4 = new XPathLexer();
      xPathLexer3.star();
      xPathLexer1.operatorName();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer("wiyTSE0v?X");
      xPathLexer1.doubleColon();
      xPathLexer0.at();
      xPathLexer1.at();
      Token token0 = xPathLexer0.whitespace();
      XPathLexer xPathLexer2 = new XPathLexer("/=C(OYKX%f!On[");
      xPathLexer2.or();
      XPathLexer xPathLexer3 = new XPathLexer("");
      xPathLexer1.consume();
      xPathLexer1.nextToken();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.setXPath("@3foL9'");
      xPathLexer0.colon();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume();
      XPathLexer xPathLexer2 = new XPathLexer("t~J{_ #O+;1Ziz:");
      xPathLexer2.number();
      xPathLexer0.rightParen();
      xPathLexer0.leftParen();
      xPathLexer2.hasMoreChars();
      xPathLexer0.nextToken();
      xPathLexer1.or();
      xPathLexer1.div();
      Token token0 = xPathLexer0.div();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.rightParen();
      assertEquals(2, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer(":Z`-p/G-)up");
      xPathLexer1.and();
      Token token1 = xPathLexer1.at();
      assertEquals(":", token1.getTokenText());
      assertEquals(16, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer("[ (");
      Token token2 = xPathLexer2.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7|.FJ aJub0");
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("7", token0.getTokenText());
      
      Token token1 = xPathLexer0.doubleColon();
      assertEquals(19, token1.getTokenType());
      assertEquals("|.", token1.getTokenText());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals("FJ aJub0", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer1.at();
      assertEquals(16, token3.getTokenType());
      
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token4 = xPathLexer3.notEquals();
      assertEquals(22, token4.getTokenType());
      
      Token token5 = xPathLexer3.colon();
      assertEquals(18, token5.getTokenType());
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.rightParen();
      xPathLexer0.leftParen();
      XPathLexer xPathLexer1 = new XPathLexer("!ni! Ik");
      xPathLexer0.slashes();
      XPathLexer xPathLexer2 = new XPathLexer("^frx$lDiGe>,,F-7:");
      xPathLexer0.getPreviousToken();
      xPathLexer0.comma();
      xPathLexer2.nextToken();
      xPathLexer0.star();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      String string0 = "EVG2";
      XPathLexer xPathLexer0 = new XPathLexer("EVG2");
      XPathLexer xPathLexer1 = new XPathLexer("EVG2");
      xPathLexer1.nextToken();
      Token token0 = xPathLexer1.slashes();
      xPathLexer0.number();
      xPathLexer1.leftParen();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("]z :;qK|UAtVmh");
      xPathLexer0.not();
      xPathLexer0.or();
      xPathLexer0.dollar();
      xPathLexer0.relationalOperator();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.notEquals();
      xPathLexer1.pipe();
      xPathLexer0.setXPath("]z :;qK|UAtVmh");
      xPathLexer1.rightBracket();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.isIdentifierChar('.');
      xPathLexer2.equals();
      xPathLexer0.and();
      xPathLexer0.consume();
      xPathLexer0.getXPath();
      Token token0 = xPathLexer2.plus();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(") (");
      xPathLexer0.number();
      xPathLexer0.minus();
      xPathLexer0.star();
      xPathLexer0.getPreviousToken();
      xPathLexer0.and();
      xPathLexer0.relationalOperator();
      xPathLexer0.nextToken();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer(") (");
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.div();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token0 = xPathLexer2.comma();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("74Rnme~_m`m2qFBR");
      xPathLexer0.mod();
      Token token0 = xPathLexer0.nextToken();
      assertEquals(30, token0.getTokenType());
      assertEquals("74", token0.getTokenText());
      
      Token token1 = xPathLexer0.leftBracket();
      assertEquals(3, token1.getTokenType());
      assertEquals("R", token1.getTokenText());
      
      Token token2 = xPathLexer0.whitespace();
      assertEquals((-2), token2.getTokenType());
      assertEquals("", token2.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      XPathLexer xPathLexer2 = new XPathLexer();
      boolean boolean0 = xPathLexer2.hasMoreChars();
      assertFalse(boolean0);
      
      Token token3 = xPathLexer0.slashes();
      assertEquals("m", token3.getTokenText());
      assertEquals(11, token3.getTokenType());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7|.FJ aJub0");
      xPathLexer0.consume();
      boolean boolean0 = xPathLexer0.hasMoreChars();
      assertTrue(boolean0);
      
      Token token0 = xPathLexer0.nextToken();
      assertEquals("|", token0.getTokenText());
      assertEquals(17, token0.getTokenType());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.or();
      Token token1 = xPathLexer0.number();
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token2 = xPathLexer2.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      String string0 = token1.toString();
      assertEquals("[ (31) (.)", string0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.operatorName();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token2 = xPathLexer1.doubleColon();
      assertEquals(19, token2.getTokenType());
      
      xPathLexer1.setPreviousToken(token1);
      assertEquals(17, token1.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token3 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token3.getTokenType());
      
      xPathLexer1.consume();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token4 = xPathLexer6.notEquals();
      assertEquals(22, token4.getTokenType());
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("7|.FJ aJub0");
      Token token0 = xPathLexer0.doubleColon();
      assertEquals("7|", token0.getTokenText());
      assertEquals(19, token0.getTokenType());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(13, token1.getTokenType());
      assertEquals(".", token1.getTokenText());
      
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token2 = xPathLexer1.at();
      assertEquals(16, token2.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.notEquals();
      assertEquals(22, token3.getTokenType());
      
      Token token4 = xPathLexer2.colon();
      assertEquals(18, token4.getTokenType());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.nextToken();
      assertEquals((-1), token0.getTokenType());
      
      xPathLexer0.setXPath("@3foL9'");
      Token token1 = xPathLexer0.colon();
      assertEquals(18, token1.getTokenType());
      assertEquals("@", token1.getTokenText());
      
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.consume();
      XPathLexer xPathLexer2 = new XPathLexer("t~J{_ #O+;1Ziz:");
      Token token2 = xPathLexer2.number();
      assertEquals(30, token2.getTokenType());
      
      Token token3 = xPathLexer0.rightParen();
      assertEquals("3", token3.getTokenText());
      assertEquals(2, token3.getTokenType());
      
      Token token4 = xPathLexer0.leftParen();
      assertEquals("f", token4.getTokenText());
      assertEquals(1, token4.getTokenType());
      
      xPathLexer0.setXPath("&o!9Vv%Zo@SqB$3j[(");
      xPathLexer2.hasMoreChars();
      Token token5 = xPathLexer0.nextToken();
      assertEquals("&o!9Vv%Zo@SqB$3j[(", token5.getTokenText());
      
      xPathLexer1.or();
      xPathLexer1.div();
      xPathLexer0.div();
      Token token6 = xPathLexer1.not();
      assertEquals(23, token6.getTokenType());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.minus();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken(token0);
      Token token1 = xPathLexer0.rightParen();
      xPathLexer0.whitespace();
      xPathLexer1.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("0pl");
      xPathLexer0.operatorName();
      Token token0 = xPathLexer0.doubleColon();
      assertEquals(19, token0.getTokenType());
      assertEquals("0p", token0.getTokenText());
      
      Token token1 = xPathLexer0.nextToken();
      assertEquals(15, token1.getTokenType());
      
      xPathLexer0.div();
      Token token2 = xPathLexer0.star();
      assertEquals(20, token2.getTokenType());
      
      Token token3 = xPathLexer0.dollar();
      assertEquals(26, token3.getTokenType());
      
      Token token4 = xPathLexer0.rightBracket();
      assertEquals(4, token4.getTokenType());
      
      int int0 = xPathLexer0.currentPosition();
      assertEquals(7, int0);
      
      boolean boolean0 = xPathLexer0.isIdentifierStartChar('[');
      assertFalse(boolean0);
      
      boolean boolean1 = xPathLexer0.isIdentifierStartChar('L');
      assertTrue(boolean1);
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("R#C:~--lPK&Rjl:AxP");
      xPathLexer0.equals();
      Token token0 = xPathLexer0.plus();
      token0.toString();
      Token token1 = xPathLexer0.whitespace();
      XPathLexer xPathLexer1 = new XPathLexer("HT$:@r");
      xPathLexer1.whitespace();
      Token token2 = xPathLexer0.rightParen();
      xPathLexer1.setPreviousToken(token2);
      xPathLexer1.mod();
      xPathLexer1.nextToken();
      xPathLexer0.leftParen();
      token1.toString();
      xPathLexer0.relationalOperator();
      String string0 = "";
      XPathLexer xPathLexer2 = new XPathLexer();
      Token token3 = xPathLexer2.identifierOrOperatorName();
      token1.toString();
      token2.toString();
      // Undeclared exception!
      try { 
        token3.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      String string0 = "Q%axUV:g(?u+cAQ";
      XPathLexer xPathLexer0 = new XPathLexer("Q%axUV:g(?u+cAQ");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.pipe();
      XPathLexer xPathLexer2 = new XPathLexer();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.number();
      assertEquals(30, token0.getTokenType());
      
      Token token1 = xPathLexer0.pipe();
      assertEquals(17, token1.getTokenType());
      
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer2.operatorName();
      Token token2 = xPathLexer2.plus();
      XPathLexer xPathLexer3 = new XPathLexer();
      Token token3 = xPathLexer1.doubleColon();
      assertEquals(19, token3.getTokenType());
      
      xPathLexer1.setPreviousToken(token2);
      assertEquals(5, token2.getTokenType());
      
      XPathLexer xPathLexer4 = new XPathLexer("Sp@'(XSq)R");
      Token token4 = xPathLexer3.minus();
      assertEquals(6, token4.getTokenType());
      
      Token token5 = xPathLexer1.identifierOrOperatorName();
      assertEquals(15, token5.getTokenType());
      
      xPathLexer1.consume();
      XPathLexer xPathLexer5 = new XPathLexer();
      XPathLexer xPathLexer6 = new XPathLexer();
      Token token6 = xPathLexer6.notEquals();
      assertEquals(22, token6.getTokenType());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.getXPath();
      xPathLexer0.star();
      xPathLexer0.setXPath("0;");
      xPathLexer0.nextToken();
      XPathLexer xPathLexer1 = null;
      try {
        xPathLexer1 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      String string0 = "<8x$Aco fo";
      XPathLexer xPathLexer0 = new XPathLexer("<8x$Aco fo");
      xPathLexer0.or();
      xPathLexer0.hasMoreChars();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.whitespace();
      xPathLexer0.nextToken();
      xPathLexer1.leftBracket();
      xPathLexer1.or();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      XPathLexer xPathLexer1 = new XPathLexer("7|.FJ aJub0");
      xPathLexer1.consume();
      XPathLexer xPathLexer2 = new XPathLexer("%,");
      xPathLexer0.number();
      xPathLexer1.relationalOperator();
      XPathLexer xPathLexer3 = new XPathLexer();
      xPathLexer3.leftParen();
      XPathLexer xPathLexer4 = new XPathLexer("w");
      xPathLexer1.hasMoreChars();
      xPathLexer4.nextToken();
      xPathLexer2.or();
      Token token0 = xPathLexer1.div();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer();
      Token token0 = xPathLexer0.minus();
      Token token1 = xPathLexer0.dollar();
      XPathLexer xPathLexer1 = new XPathLexer();
      xPathLexer1.setPreviousToken(token0);
      xPathLexer0.rightParen();
      xPathLexer0.whitespace();
      XPathLexer xPathLexer2 = new XPathLexer("MD4-Zipf3(S;~FiF");
      xPathLexer2.consume();
      Token token2 = xPathLexer2.nextToken();
      token2.toString();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer(") (");
      xPathLexer3.nextToken();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer(" is");
      xPathLexer0.LA(115);
      xPathLexer0.leftParen();
      xPathLexer0.nextToken();
      xPathLexer0.and();
      xPathLexer0.doubleColon();
      xPathLexer0.rightBracket();
      xPathLexer0.number();
      xPathLexer0.div();
      xPathLexer0.consume(115);
      xPathLexer0.equals();
      xPathLexer0.notEquals();
      xPathLexer0.identifier();
      xPathLexer0.star();
      xPathLexer0.rightParen();
      xPathLexer0.isIdentifierChar('>');
      xPathLexer0.not();
      xPathLexer0.at();
      xPathLexer0.and();
      xPathLexer0.minus();
      xPathLexer0.colon();
      xPathLexer0.or();
      xPathLexer0.not();
      xPathLexer0.minus();
      Token token0 = xPathLexer0.literal();
      assertNull(token0);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("lb#4f--:}X)G6c9y\"");
      xPathLexer0.doubleColon();
      Token token0 = xPathLexer0.nextToken();
      token0.toString();
      token0.toString();
      xPathLexer0.pipe();
      XPathLexer xPathLexer1 = new XPathLexer("t6`#)AIDE1oG:h");
      xPathLexer0.nextToken();
      xPathLexer1.at();
      xPathLexer1.rightParen();
      xPathLexer1.and();
      XPathLexer xPathLexer2 = new XPathLexer();
      xPathLexer1.whitespace();
      xPathLexer2.pipe();
      xPathLexer0.leftBracket();
      XPathLexer xPathLexer3 = new XPathLexer();
      XPathLexer xPathLexer4 = new XPathLexer();
      XPathLexer xPathLexer5 = new XPathLexer("[ (");
      xPathLexer5.doubleColon();
      xPathLexer5.at();
      xPathLexer5.minus();
      XPathLexer xPathLexer6 = null;
      try {
        xPathLexer6 = new XPathLexer((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("Q%vxUV:g(?u+c6Q");
      Token token0 = xPathLexer0.number();
      assertEquals(30, token0.getTokenType());
      
      xPathLexer0.mod();
      Token token1 = xPathLexer0.rightBracket();
      assertEquals("Q", token1.getTokenText());
      assertEquals(4, token1.getTokenType());
      
      Token token2 = xPathLexer0.nextToken();
      assertEquals((-1), token2.getTokenType());
      assertEquals("%vxUV:g(?u+c6Q", token2.getTokenText());
      
      Token token3 = xPathLexer0.colon();
      assertEquals(18, token3.getTokenType());
      assertEquals("%", token3.getTokenText());
      
      Token token4 = xPathLexer0.nextToken();
      assertNotSame(token4, token2);
      
      Token token5 = xPathLexer0.dollar();
      assertEquals("v", token5.getTokenText());
      assertEquals(26, token5.getTokenType());
      
      Token token6 = xPathLexer0.dots();
      assertEquals("x", token6.getTokenText());
      assertEquals(13, token6.getTokenType());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      String string0 = "!9!<3";
      XPathLexer xPathLexer0 = new XPathLexer("!9!<3");
      xPathLexer0.plus();
      xPathLexer0.consume();
      xPathLexer0.plus();
      xPathLexer0.identifierOrOperatorName();
      xPathLexer0.nextToken();
      xPathLexer0.hasMoreChars();
      xPathLexer0.identifierOrOperatorName();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token0 = xPathLexer1.at();
      xPathLexer0.or();
      // Undeclared exception!
      try { 
        token0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!*.9!<3");
      Token token0 = xPathLexer0.nextToken();
      xPathLexer0.pipe();
      xPathLexer0.nextToken();
      token0.toString();
      XPathLexer xPathLexer1 = new XPathLexer();
      Token token1 = xPathLexer1.nextToken();
      // Undeclared exception!
      try { 
        token1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test98()  throws Throwable  {
      XPathLexer xPathLexer0 = new XPathLexer("!*.9!<3");
      xPathLexer0.colon();
      Token token0 = xPathLexer0.pipe();
      xPathLexer0.nextToken();
      Token token1 = xPathLexer0.doubleColon();
      XPathLexer xPathLexer1 = new XPathLexer("!*.9!<3");
      xPathLexer0.or();
      token0.toString();
      XPathLexer xPathLexer2 = new XPathLexer();
      token1.toString();
      XPathLexer xPathLexer3 = new XPathLexer("0CZ/");
      XPathLexer xPathLexer4 = new XPathLexer();
      Token token2 = xPathLexer4.doubleColon();
      xPathLexer4.getXPath();
      xPathLexer0.operatorName();
      xPathLexer3.plus();
      xPathLexer0.identifierOrOperatorName();
      // Undeclared exception!
      try { 
        token2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
