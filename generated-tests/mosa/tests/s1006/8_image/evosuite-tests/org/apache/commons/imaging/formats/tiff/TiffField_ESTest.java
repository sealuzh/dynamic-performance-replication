/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 06 21:04:57 GMT 2018
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.nio.ByteOrder;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-50), (-50), fieldTypeDouble0, (-50), (-50), byteArray0, byteOrder0, (-50));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals((-50), tiffField0.getOffset());
      assertEquals("-50 (0xffffffce: Unknown Tag): ", string0);
      assertEquals((-50), tiffField0.getSortHint());
      assertEquals((-400), tiffField0.getBytesLength());
      assertEquals((-50), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(21, 21, fieldTypeDouble0, 21, 21, byteArray0, (ByteOrder) null, 21);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(168, tiffField0.getBytesLength());
      assertEquals(21, tiffField0.getOffset());
      assertEquals(21, tiffField0.getDirectoryType());
      assertEquals(21, tiffField0.getTag());
      assertEquals(21, tiffField0.getSortHint());
      assertEquals(21L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(37, 37, fieldTypeDouble0, 37, 37, byteArray0, byteOrder0, 37);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [D cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[0];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2950), (-2950), fieldTypeAscii0, (-2950), (-2950), byteArray0, byteOrder0, (-2950));
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals((-2950), tiffField0.getDirectoryType());
      assertEquals((-2950), tiffField0.getOffset());
      assertEquals((-2950), tiffField0.getTag());
      assertEquals((-2950), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[144];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1341, 1341, fieldTypeLong0, 1341, 1341, byteArray0, (ByteOrder) null, 1341);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals(1341, tiffField0.getSortHint());
      assertEquals(1341, tiffField0.getDirectoryType());
      assertEquals(1341, tiffField0.getTag());
      assertEquals(1341L, tiffElement0.offset);
      assertNotNull(tiffElement0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[105];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1326, 1326, fieldTypeShort0, 1326, 1326, byteArray0, byteOrder0, 1326);
      tiffField0.dump();
      assertEquals(1326, tiffField0.getSortHint());
      assertEquals(1326, tiffField0.getDirectoryType());
      assertEquals(2652, tiffField0.getBytesLength());
      assertEquals(1326, tiffField0.getTag());
      assertEquals(1326, tiffField0.getOffset());
      assertEquals(1326L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(37, 37, fieldTypeDouble0, 37, 37, byteArray0, byteOrder0, 37);
      String string0 = tiffField0.toString();
      assertEquals(37, tiffField0.getOffset());
      assertEquals(296, tiffField0.getBytesLength());
      assertEquals(37, tiffField0.getDirectoryType());
      assertEquals("37 (0x25: Unknown Tag): 0.0 (37 Double)", string0);
      assertEquals(37, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[231];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(422, 422, fieldTypeByte0, 422, 422, byteArray0, (ByteOrder) null, 422);
      String string0 = tiffField0.getValueDescription();
      assertEquals(422, tiffField0.getSortHint());
      assertEquals(422, tiffField0.getDirectoryType());
      assertEquals(422, tiffField0.getTag());
      assertEquals(422, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(422, tiffField0.getOffset());
      assertEquals(422L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      TiffField tiffField0 = new TiffField(422, 422, fieldTypeByte0, 422, 422, byteArray0, (ByteOrder) null, 422);
      String string0 = tiffField0.getValueDescription();
      assertEquals(422, tiffField0.getDirectoryType());
      assertEquals(422, tiffField0.getTag());
      assertEquals(422, tiffField0.getOffset());
      assertEquals(422, tiffField0.getBytesLength());
      assertEquals(422, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(422L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      byte[] byteArray0 = new byte[96];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(412, 412, fieldTypeLong0.FLOAT, 412, 412, byteArray0, (ByteOrder) null, 412);
      int int0 = tiffField0.getSortHint();
      assertEquals(412, tiffField0.getDirectoryType());
      assertEquals(412, int0);
      assertEquals(412, tiffField0.getTag());
      assertEquals(412, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      byte[] byteArray0 = new byte[3];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)36, (byte)36, fieldTypeDouble0, (byte)36, (byte)36, byteArray0, byteOrder0, (byte)36);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(36, tiffField0.getTag());
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getOffset());
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(1, 1, fieldTypeDouble0, 1, 1, byteArray0, (ByteOrder) null, 1);
      tiffField0.getIntArrayValue();
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): 0.0
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      byte[] byteArray0 = new byte[131];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1341, 1341, fieldTypeLong0, 1341, 1341, byteArray0, (ByteOrder) null, 1341);
      String string0 = tiffField0.getTagName();
      assertEquals(1341, tiffField0.getSortHint());
      assertEquals(1341, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x53d)", string0);
      assertEquals(1341, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[107];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(427, 427, fieldTypeLong0.FLOAT, 427, 427, byteArray0, (ByteOrder) null, 427);
      tiffField0.getDoubleArrayValue();
      assertEquals(427L, tiffField0.getCount());
      assertEquals(1708, tiffField0.getBytesLength());
      assertEquals(427, tiffField0.getDirectoryType());
      assertEquals(427, tiffField0.getTag());
      assertEquals(427, tiffField0.getSortHint());
      assertEquals(427, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[231];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1935, 1935, fieldTypeDouble0, 1935, 1935, byteArray0, byteOrder0, 1935);
      tiffField0.getDoubleArrayValue();
      assertEquals(1935, tiffField0.getSortHint());
      assertEquals(1935, tiffField0.getTag());
      assertEquals(1935, tiffField0.getOffset());
      assertEquals(1935L, tiffField0.getCount());
      assertEquals(15480, tiffField0.getBytesLength());
      assertEquals(1935, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      byte[] byteArray0 = new byte[22];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(36, 36, fieldTypeDouble0, 36, 36, byteArray0, (ByteOrder) null, 36);
      tiffField0.getFieldTypeName();
      assertEquals(36, tiffField0.getTag());
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      byte[] byteArray0 = new byte[96];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1316, 1316, fieldTypeLong0, 1316, 1316, byteArray0, (ByteOrder) null, 1316);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1316, tiffField0.getDirectoryType());
      assertEquals(1316, tiffField0.getTag());
      assertEquals(1316, tiffField0.getOffset());
      assertEquals(1316, tiffField0.getSortHint());
      assertEquals(5264, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(1316L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[160];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(504, 504, fieldTypeDouble0, 504, 504, byteArray0, (ByteOrder) null, 504);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [D@1562fd54 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((byte)36, (byte)36, fieldTypeRational0, (byte)36, (byte)36, byteArray0, byteOrder0, (byte)36);
      tiffField0.getIntArrayValue();
      assertEquals(288, tiffField0.getBytesLength());
      assertEquals(36L, tiffField0.getCount());
      assertEquals(36, tiffField0.getTag());
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[16];
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, (byte)0);
      tiffField0.getIntArrayValue();
      String string0 = tiffField0.getValueDescription();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[16];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)36, (byte)36, fieldTypeShort0.ASCII, (byte)0, (byte)36, byteArray0, byteOrder0, (byte)36);
      String string0 = tiffField0.getValueDescription();
      assertEquals(36, tiffField0.getTag());
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[96];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1316, 1316, fieldTypeShort0, 1316, 1316, byteArray0, byteOrder0, 1316);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(1316, tiffField0.getOffset());
      assertEquals(2632, tiffField0.getBytesLength());
      assertEquals(1316, tiffField0.getDirectoryType());
      assertEquals(1316, tiffField0.getTag());
      assertEquals(1316, tiffField0.getSortHint());
      assertEquals(1316L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(50715, 50715, fieldTypeDouble0, 50715, 50715, byteArray0, byteOrder0, 50715);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "ProfileName");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[135];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1355, 1355, fieldTypeLong0, 1355, 1355, byteArray0, (ByteOrder) null, 1355);
      tiffField0.getIntArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[104];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(380, 380, fieldTypeLong0.FLOAT, 380, 380, byteArray0, (ByteOrder) null, 380);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement(380, 380);
      String string1 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals(380L, tiffField0.getCount());
      assertEquals(380, tiffField0.getOffset());
      assertEquals(1520, tiffField0.getBytesLength());
      assertNull(string1);
      assertEquals(380, tiffField0.getSortHint());
      assertEquals(380, tiffField0.getTag());
      assertEquals(380, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = new byte[135];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1355, 1355, fieldTypeLong0, 1355, 1355, byteArray0, (ByteOrder) null, 1355);
      tiffField0.getDoubleArrayValue();
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((byte)36, "o]2)VXght=");
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)36, (byte)36, fieldTypeFloat0, (byte)36, (byte)36, byteArray0, byteOrder0, (byte)36);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)36, (byte)36);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertEquals(36, tiffField0.getTag());
      assertEquals(36, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(36, tiffField0.getSortHint());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: o]2)VXght=", string0);
      assertEquals(36, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[91];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(427, 427, fieldTypeLong0.FLOAT, 427, 427, byteArray0, (ByteOrder) null, 427);
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@1f26bdb3 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      TiffField tiffField0 = new TiffField(37, (-2147327817), fieldTypeShort0, (-2147327817), 37, byteArray0, byteOrder0, (-2147327817));
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(37, tiffField0.getTag());
      assertEquals((-2147327817), tiffField0.getSortHint());
      assertEquals(311662, tiffField0.getBytesLength());
      assertEquals(0, int0);
      assertEquals((-2147327817L), tiffField0.getCount());
      assertEquals(37, tiffField0.getOffset());
      assertEquals((-2147327817), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)22, (byte)22, fieldTypeRational0, (byte)22, (byte)22, byteArray0, byteOrder0, (byte)22);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(22, tiffField0.getOffset());
      assertEquals(22, tiffField0.getSortHint());
      assertEquals(22, tiffField0.getTag());
      assertEquals(22L, tiffField0.getCount());
      assertEquals(22, tiffField0.getDirectoryType());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeByte0, 360L, 360L, byteArray0, byteOrder0, 606);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@24d8bd22 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      byte[] byteArray0 = new byte[96];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(33, 33, fieldTypeLong0, 1L, 33, byteArray0, (ByteOrder) null, 33);
      tiffField0.getIntValueOrArraySum();
      assertEquals(33, tiffField0.getTag());
      assertEquals(33, tiffField0.getSortHint());
      assertEquals(33, tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(33, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      byte[] byteArray0 = new byte[16];
      byteArray0[0] = (byte)36;
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField((byte)36, (byte)36, fieldTypeShort0, (byte)36, 9L, byteArray0, byteOrder0, (byte)36);
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(36, tiffField0.getTag());
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36L, tiffField0.getCount());
      assertEquals(9, tiffField0.getOffset());
      assertEquals(36, tiffField0.getDirectoryType());
      assertArrayEquals(new int[] {9216, 0, 0, 0, 0, 0, 0, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      byte[] byteArray0 = new byte[126];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      TiffField tiffField0 = new TiffField(34024, 34024, fieldTypeDouble0, 34024, 34024, byteArray0, (ByteOrder) null, 34024);
      String string0 = tiffField0.getTagName();
      assertEquals(34024, tiffField0.getTag());
      assertEquals("BackgroundColorIndicator", string0);
      assertEquals(34024, tiffField0.getOffset());
      assertEquals(34024, tiffField0.getSortHint());
      assertEquals(34024, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField(446, 446, fieldTypeLong0, 446, 446, byteArray0, (ByteOrder) null, 446);
      tiffField0.getIntValueOrArraySum();
      assertEquals(446, tiffField0.getTag());
      assertEquals(446, tiffField0.getDirectoryType());
      assertEquals(446L, tiffField0.getCount());
      assertEquals(446, tiffField0.getOffset());
      assertEquals(446, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat((byte)36, "o]2)VXght=");
      byte[] byteArray0 = new byte[10];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte)36, (byte)36, fieldTypeFloat0.ASCII, (byte)36, (byte)36, byteArray0, byteOrder0, (byte)36);
      String string0 = tiffField0.getValueDescription();
      assertEquals(36, tiffField0.getOffset());
      assertEquals(36, tiffField0.getSortHint());
      assertEquals(36, tiffField0.getDirectoryType());
      assertEquals(36, tiffField0.getTag());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      byte[] byteArray0 = new byte[107];
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      TiffField tiffField0 = new TiffField(50711, 50711, fieldTypeRational0, 1512L, 50711, byteArray0, byteOrder0, 50711);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[10];
      byteArray0[2] = (byte)0;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, (byte)36, fieldTypeRational0, (byte)36, (byte)36, byteArray0, byteOrder0, 2);
      tiffField0.getValueDescription();
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField((byte)55, (byte)55, fieldTypeRational0, (byte)55, (byte)55, byteArray0, byteOrder0, (byte)55);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertArrayEquals(new double[] {Double.NaN}, doubleArray0, 0.01);
      assertEquals(55, tiffField0.getOffset());
      assertEquals(55, tiffField0.getTag());
      assertEquals(55, tiffField0.getSortHint());
      assertEquals(55, tiffField0.getDirectoryType());
      assertEquals(55L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      byte[] byteArray0 = new byte[113];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder.nativeOrder();
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(1935, 1935, fieldTypeDouble0, 1L, 1L, byteArray0, byteOrder0, 1935);
      tiffField0.toString();
      boolean boolean0 = tiffField0.isLocalValue();
      assertFalse(boolean0);
      
      tiffField0.getDoubleArrayValue();
      assertEquals(1935, tiffField0.getTag());
      assertEquals(1935, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1935, tiffField0.getDirectoryType());
      assertEquals(1L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(144, 144, fieldTypeAscii0, 144, 144, byteArray0, (ByteOrder) null, 410);
      String string0 = tiffField0.getStringValue();
      assertEquals(144, tiffField0.getTag());
      assertNotNull(string0);
      assertEquals(410, tiffField0.getSortHint());
      assertEquals(144, tiffField0.getOffset());
      assertEquals(144, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = new byte[135];
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      TiffField tiffField0 = new TiffField(3460, 34024, fieldTypeAscii0, 556L, 34024, byteArray0, (ByteOrder) null, 34024);
      String string0 = tiffField0.getValueDescription();
      assertEquals(34024, tiffField0.getDirectoryType());
      assertEquals(34024, tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals(556, tiffField0.getBytesLength());
      assertEquals(3460, tiffField0.getTag());
      assertEquals(34024, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      byte[] byteArray0 = new byte[214];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      TiffField tiffField0 = new TiffField(3328, 3328, fieldTypeLong0, 3328, 3328, byteArray0, (ByteOrder) null, 3328);
      String string0 = tiffField0.getValueDescription();
      assertEquals(3328, tiffField0.getDirectoryType());
      assertEquals(3328L, tiffField0.getCount());
      assertEquals(3328, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(3328, tiffField0.getTag());
      assertEquals(3328, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[231];
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      TiffField tiffField0 = new TiffField(102, (-3676), fieldTypeFloat0, 427, 427, byteArray0, (ByteOrder) null, 427);
      String string0 = tiffField0.toString();
      assertEquals(427, tiffField0.getOffset());
      assertEquals((-3676), tiffField0.getDirectoryType());
      assertEquals("102 (0x66: Unknown Tag): 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0... (57) (427 Float)", string0);
      assertEquals(427, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      byte[] byteArray0 = new byte[416];
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1060, 1060, fieldTypeDouble0, 1060, 1060, byteArray0, byteOrder0, 1060);
      String string0 = tiffField0.getValueDescription();
      assertEquals(1060, tiffField0.getOffset());
      assertEquals(1060L, tiffField0.getCount());
      assertEquals(1060, tiffField0.getTag());
      assertEquals(1060, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(1060, tiffField0.getSortHint());
  }
}
