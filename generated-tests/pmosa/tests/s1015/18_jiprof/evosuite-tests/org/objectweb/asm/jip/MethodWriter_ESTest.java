/*
 * This file was automatically generated by EvoSuite
 * Wed Jul 18 05:58:49 GMT 2018
 */

package org.objectweb.asm.jip;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.asm.jip.AnnotationVisitor;
import org.objectweb.asm.jip.Attribute;
import org.objectweb.asm.jip.ByteVector;
import org.objectweb.asm.jip.ClassReader;
import org.objectweb.asm.jip.ClassWriter;
import org.objectweb.asm.jip.Edge;
import org.objectweb.asm.jip.FieldWriter;
import org.objectweb.asm.jip.Frame;
import org.objectweb.asm.jip.Label;
import org.objectweb.asm.jip.MethodWriter;
import org.objectweb.asm.jip.Type;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MethodWriter_ESTest extends MethodWriter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)3;
      byteArray0[1] = (byte) (-128);
      byteArray0[2] = (byte)0;
      byteArray0[3] = (byte)67;
      byteArray0[4] = (byte) (-128);
      int int0 = 704;
      // Undeclared exception!
      try { 
        MethodWriter.readShort(byteArray0, 704);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 704
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-634));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ",y]'v()zTOOHE$I]}UM", ",y]'v()zTOOHE$I]}UM", ",y]'v()zTOOHE$I]}UM", stringArray0, false, false);
      methodWriter0.visitMethodInsn(2, ",y]'v()zTOOHE$I]}UM", ",y]'v()zTOOHE$I]}UM", ",y]'v()zTOOHE$I]}UM");
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      int int0 = (-3345);
      ClassWriter classWriter0 = new ClassWriter((-3345));
      String[] stringArray0 = new String[6];
      stringArray0[0] = "";
      stringArray0[1] = "ZfK8o=(^*2[";
      stringArray0[2] = "";
      stringArray0[3] = "Class not found";
      stringArray0[4] = "";
      stringArray0[5] = "Class not found";
      MethodWriter methodWriter0 = null;
      try {
        methodWriter0 = new MethodWriter(classWriter0, 7, "", "Class not found", "", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      Label label0 = new Label();
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      Integer.getInteger("S0)tackMap", (Integer) 2);
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      assertArrayEquals(new int[] {2, 0}, intArray0);
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1319));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", stringArray0, false, false);
      methodWriter0.getSize();
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, 0, "", "<init>", "=5^<I$>`l=&Rd2$", stringArray0, true, true);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-645));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ",y]'v()zTOOHE$I]}UM", ",y]'v()zTOOHE$I]}UM", ",y]'v()zTOOHE$I]}UM", stringArray0, true, true);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotation(",y]'v()zTOOHE$I]}UM", true);
      assertNotNull(annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      int int0 = (-1319);
      ClassWriter classWriter0 = new ClassWriter((-1319));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "j9&*$ryCdElP;P\"", "j9&*$ryCdElP;P\"", "j9&*$ryCdElP;P\"", stringArray0, false, false);
      methodWriter0.getSize();
      methodWriter0.visitAnnotation("<init>", false);
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader("<init>");
        fail("Expecting exception: IOException");
      
      } catch(Throwable e) {
         //
         // Class not found
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "jW|^eLI";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", stringArray0, false, false);
      Label label0 = new Label();
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = 1;
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte)103;
      byteArray0[1] = (byte)90;
      byteArray0[2] = (byte)62;
      byteArray0[3] = (byte)51;
      // Undeclared exception!
      try { 
        MethodWriter.readInt(byteArray0, (byte)90);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 90
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(1);
      String[] stringArray0 = new String[1];
      String string0 = "jW|^eLI";
      stringArray0[0] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", stringArray0, false, false);
      Label label0 = new Label();
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = 1;
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      int int0 = Frame.DOUBLE;
      // Undeclared exception!
      try { 
        methodWriter0.put((ByteVector) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-648));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "0^<;i|R=Rv))", "0^<;i|R=Rv))", "0^<;i|R=Rv))", (String[]) null, true, true);
      methodWriter0.visitMultiANewArrayInsn("0^<;i|R=Rv))", (-648));
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1319));
      String[] stringArray0 = new String[0];
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)44;
      byteArray0[1] = (byte)17;
      byteArray0[2] = (byte)70;
      byteArray0[3] = (byte)63;
      byteArray0[4] = (byte) (-87);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", stringArray0, false, false);
      methodWriter0.visitMethodInsn((-1319), "j9&N$ryCdElP;P\"", "AnnotationDefault", "j9&N$ryCdElP;P\"");
      methodWriter0.getSize();
      byte[] byteArray1 = new byte[0];
      // Undeclared exception!
      try { 
        MethodWriter.readUnsignedShort(byteArray1, (-169));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -169
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-626));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "06<;i/R=R)5", "06<;i/R=R)5", "06<;i/R=R)5", (String[]) null, true, true);
      methodWriter0.visitIntInsn(1, 2);
      int int0 = methodWriter0.getSize();
      assertEquals(36, int0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2468));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2468), "06<;i/R=R)5", "06<;i/R=R)5", "06<;i/R=R)5", (String[]) null, true, true);
      int int0 = methodWriter0.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-645));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ",y]'v()zTOFOHE$I]}UM", ",y]'v()zTOFOHE$I]}UM", ",y]'v()zTOFOHE$I]}UM", stringArray0, false, false);
      methodWriter0.visitVarInsn((-645), 1);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, ",y]'v()zTOFOHE$I]}UM", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 20
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-624));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "ay]'v()zTOFOHE$]lsUM", "ay]'v()zTOFOHE$]lsUM", "ay]'v()zTOFOHE$]lsUM", stringArray0, false, false);
      methodWriter0.visitVarInsn((-624), 187);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-626));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "06<;i/R=R)5", "06<;i/R=R)5", "06<;i/R=R)5", (String[]) null, true, true);
      methodWriter0.getSize();
      methodWriter0.visitLdcInsn("06<;i/R=R)5");
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      boolean boolean0 = false;
      boolean boolean1 = false;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", stringArray0, false, false);
      methodWriter0.getSize();
      String string0 = "";
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(191, "ztnH.!/_", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 15
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "LocalVariableTable");
      ClassWriter classWriter0 = new ClassWriter(134);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "LocalVariableTable", "LocalVariableTable", "LocalVariableTable", (String[]) null, false, false);
      methodWriter0.visitFrame(2, (-1746), (Object[]) null, (-1746), (Object[]) null);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-645));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ",y]'v()zTOOHE$I]}UM", ",y]'v()zTOOHE$I]}UM", ",y]'v()zTOOHE$I]}UM", stringArray0, false, false);
      methodWriter0.visitVarInsn(90, 1);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1319));
      ClassWriter classWriter1 = new ClassWriter(66);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "java/lang/Throwable";
      stringArray0[1] = "6R-:DnUh|U-";
      stringArray0[2] = "[]";
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 2, "java/lang/Throwable", "[]", (String) null, stringArray0, false, false);
      methodWriter0.getSize();
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1207, "6R-:DnUh|U-", "java/lang/Throwable", "StackMapTable", stringArray0, false, false);
      methodWriter0.visitVarInsn(285212683, 9);
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", stringArray0, false, false);
      methodWriter0.getSize();
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 16, "", "StackMapTable", "*RfAg)au+,@H", stringArray0, false, false);
      methodWriter1.visitMultiANewArrayInsn("G UH(", 189);
      methodWriter1.visitMultiANewArrayInsn("StackMapTable", 1);
      Integer integer0 = new Integer(2204);
      methodWriter1.visitLdcInsn(integer0);
      methodWriter0.visitFrame(2, 2204, stringArray0, 2204, stringArray0);
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", stringArray0, false, false);
      methodWriter0.getSize();
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 16, "", "StackMapTable", "*RfAg)au+,@H", stringArray0, false, false);
      methodWriter1.visitMultiANewArrayInsn("G UH(", 189);
      methodWriter1.visitMultiANewArrayInsn("StackMapTable", 1);
      methodWriter1.visitEnd();
      methodWriter1.visitVarInsn((-2154), 2440);
      Integer integer0 = new Integer(1652);
      Integer integer1 = new Integer((-1296));
      Integer.getInteger("&a6_.^k.q'U<", integer1);
      methodWriter1.visitLdcInsn(integer0);
      methodWriter0.visitFrame(1276, 26, stringArray0, 1652, stringArray0);
      methodWriter0.visitVarInsn(189, (-1114));
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(9);
      String[] stringArray0 = new String[3];
      stringArray0[0] = "java/lang/Throwable";
      stringArray0[1] = "3PVG^!C.";
      stringArray0[2] = "6R-:DnUh|U-";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "6R-:DnUh|U-", "3PVG^!C.", "java/lang/Throwable", stringArray0, false, false);
      methodWriter0.getSize();
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "StackMapTable", "org.objectweb.asm.jip.Type", "3PVG^!C.", stringArray0, false, false);
      methodWriter0.visitVarInsn((-1546), 16);
      methodWriter0.visitVarInsn(9, 0);
      AnnotationVisitor annotationVisitor0 = methodWriter0.visitAnnotationDefault();
      AnnotationVisitor annotationVisitor1 = methodWriter1.visitAnnotationDefault();
      assertNotSame(annotationVisitor1, annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1319));
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, (String) null);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "j9&N$ryCdElP;P\"", "ksu143+4L{u_zP(&", "ZAcmnY_xVg&A1&", stringArray0, false, false);
      methodWriter0.visitIincInsn((-2220), 1);
      methodWriter0.getSize();
      MethodWriter methodWriter1 = null;
      try {
        methodWriter1 = new MethodWriter(classWriter0, (-2243), "J2{aHeAW\"HB%2kIo", "j9&N$ryCdElP;P\"", (String) null, stringArray0, true, false);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-602));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "ay]'v()zTOFOHE$J]sUM", "ay]'v()zTOFOHE$J]sUM", "ay]'v()zTOFOHE$J]sUM", stringArray0, true, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitIincInsn((-1623547316), 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1623547316
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "jW|^eLI";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", stringArray0, false, false);
      Label label0 = new Label();
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = 1;
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      byte[] byteArray0 = new byte[4];
      Attribute attribute0 = new Attribute("x3/KR=");
      methodWriter0.visitAttribute(attribute0);
      byteArray0[0] = (byte)103;
      byteArray0[1] = (byte)90;
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-637));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "06<;i/R=R)5", "06<;i/R=R)5", "06<;i/R=R)5", (String[]) null, false, false);
      Attribute attribute0 = new Attribute("java/lang/dyn/Dynamic");
      methodWriter0.visitAttribute(attribute0);
      // Undeclared exception!
      try { 
        methodWriter0.getSize();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Attribute", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-645));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ",y]'v()zTOOHE$I]}UM", ",y]'v()zTOOHE$I]}UM", ",y]'v()zTOOHE$I]}UM", stringArray0, true, true);
      ByteVector byteVector0 = new ByteVector();
      methodWriter0.put(byteVector0);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, ",y]'v()zTOOHE$I]}UM", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 19
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "j9&N$ryCdElP;P\"", ".cQass", ".cQass", stringArray0, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.exceptionCount = 89;
      Integer integer0 = Integer.getInteger("StackMap", (Integer) 2);
      methodWriter0.visitLdcInsn(integer0);
      methodWriter0.visitFrame((-1296), (-415), stringArray0, (-415), stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "jW|^eLI";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", stringArray0, false, false);
      Label label0 = new Label();
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = 1;
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 2;
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-2172), "pgUeUXrqAJO!tx4", "pgUeUXrqAJO!tx4", "", stringArray0, false, false);
      AnnotationVisitor annotationVisitor0 = methodWriter1.visitAnnotationDefault();
      methodWriter1.getSize();
      methodWriter0.put(byteVector0);
      AnnotationVisitor annotationVisitor1 = methodWriter0.visitAnnotationDefault();
      assertNotSame(annotationVisitor1, annotationVisitor0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-622));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "06<;i/R=R)5", "06<;i/R=R)5", "06<;i/R=R)5", (String[]) null, false, false);
      methodWriter0.visitMethodInsn(2, "06<;i/R=R)5", "06<;i/R=R)5", "06<;i/R=R)5");
      Label label0 = new Label();
      methodWriter0.visitLineNumber(2, label0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "jW|^eLI";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 162, "Ym;P'9)", "", "RuntimeInvisibleAnnotations", stringArray0, false, false);
      methodWriter0.getSize();
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitMultiANewArrayInsn("N-c213m", 559);
      Integer integer0 = new Integer(3);
      methodWriter0.visitFrame(33554432, 33554432, stringArray0, 33554432, stringArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      methodWriter1.visitFieldInsn(3, "G~!*O7Ba-h", "*'_$Xbw%l", "Exceptions");
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-622));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "06<;i/R=R)5", "06<;i/R=R)5", "06<;i/R=R)5", (String[]) null, true, true);
      methodWriter0.visitFieldInsn(1, "06<;i/R=R)5", "06<;i/R=R)5", "06<;i/R=R)5");
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", stringArray0, false, false);
      methodWriter0.getSize();
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 16, "", "StackMapTable", "*RfAg)au+,@H", stringArray0, false, false);
      methodWriter1.visitInsn(1);
      methodWriter1.visitMultiANewArrayInsn("G UH(", 189);
      methodWriter1.visitMultiANewArrayInsn("StackMapTable", 1);
      classWriter0.threshold = 189;
      methodWriter1.visitEnd();
      MethodWriter methodWriter2 = new MethodWriter(classWriter0, 2, "StackMapTable", "StackMapTable", "j9&N$ryCdElP;P\"", stringArray0, false, false);
      methodWriter2.visitMethodInsn((-2706), "StackMapTable", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEDDEEDDEE", "java/lang/dyn/Dynamic");
      methodWriter0.getSize();
      int int0 = Type.SHORT;
      methodWriter1.visitEnd();
      assertNotSame(methodWriter1, methodWriter2);
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-622));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "06<;i/R=R)5", "06<;i/R=R)5", "06<;i/R=R)5", (String[]) null, true, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitInsn(2147483645);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", stringArray0, false, false);
      methodWriter0.getSize();
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 16, "", "StackMapTable", "*RfAg)au+,@H", stringArray0, false, false);
      methodWriter1.visitMultiANewArrayInsn("G UH(", 189);
      methodWriter1.visitMultiANewArrayInsn("StackMapTable", 1);
      methodWriter1.visitAnnotationDefault();
      methodWriter0.getSize();
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter2.put(byteVector0);
      methodWriter1.visitAnnotationDefault();
      methodWriter2.visitIincInsn((-376), 16777219);
      assertSame(methodWriter2, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1319));
      String[] stringArray0 = new String[0];
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-128);
      byteArray0[1] = (byte) (-1);
      byteArray0[2] = (byte) (-88);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte) (-120);
      byteArray0[5] = (byte) (-9);
      byteArray0[6] = (byte)1;
      byteArray0[7] = (byte)22;
      byteArray0[8] = (byte) (-31);
      FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);
      classWriter0.newClass("j9&N$ryCdElP;P\"");
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", stringArray0, false, false);
      methodWriter0.getSize();
      methodWriter0.visitFrame(66, 2, stringArray0, 3, stringArray0);
      methodWriter0.visitEnd();
      Label label0 = new Label();
      methodWriter0.visitJumpInsn((byte) (-1), label0);
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-622));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "06<;i/R=R)5", "06<;i/R=R)5", "06<;i/R=R)5", (String[]) null, false, false);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 2, (Object[]) null, 21, (Object[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1319));
      ClassWriter classWriter1 = new ClassWriter(66);
      String[] stringArray0 = new String[3];
      classWriter1.newInteger((-1319));
      stringArray0[0] = "java/lang/Throwable";
      stringArray0[1] = "6R-:DnUh|U-";
      stringArray0[2] = "[]";
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 2, "java/lang/Throwable", "[]", (String) null, stringArray0, false, false);
      methodWriter0.getSize();
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1207, "6R-:DnUh|U-", "java/lang/Throwable", "StackMapTable", stringArray0, false, false);
      Label label0 = new Label();
      Label[] labelArray0 = new Label[0];
      methodWriter1.visitTableSwitchInsn(66, 1, label0, labelArray0);
      assertNotSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-622));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "06<;i/R=R)5", "06<;i/R=R)5", "06<;i/R=R)5", (String[]) null, false, false);
      methodWriter0.getSize();
      Label label0 = new Label();
      Label[] labelArray0 = new Label[4];
      labelArray0[0] = label0;
      Label label1 = label0.getFirst();
      labelArray0[1] = label1;
      labelArray0[2] = label0;
      labelArray0[3] = label0;
      methodWriter0.visitTableSwitchInsn(6837, (-622), label0, labelArray0);
      assertSame(label0, label1);
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-648));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "0^<;i|R=Rv))", "0^<;i|R=Rv))", "0^<;i|R=Rv))", (String[]) null, true, true);
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "0^<;i|R=Rv))");
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "jW|^eLI";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "f", "", stringArray0, false, false);
      Label label0 = new Label();
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      ByteVector byteVector0 = classWriter0.pool;
      byteVector0.length = 2;
      Integer.getInteger("StackMap", (Integer) 2);
      methodWriter0.visitLdcInsn("f");
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(0, 2440, stringArray0, 1276, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1302));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1302), "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", stringArray0, false, false);
      methodWriter0.visitEnd();
      int int0 = Type.BYTE;
      methodWriter0.visitVarInsn(2, 97);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((byte)0, 167, stringArray0, 3403, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      int int0 = Frame.UNINITIALIZED;
      ClassWriter classWriter0 = new ClassWriter(503);
      int int1 = Type.SHORT;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "ztnH.!/_", "du", (String) null, (String[]) null, false, false);
      methodWriter0.visitAnnotationDefault();
      Label label0 = new Label();
      label0.outputStackMax = 12;
      methodWriter0.visitLocalVariable("Ts0yH5", "Ts0yH5", "EFFFFFFFFGGFFFGGFFFEEFGFGFEEEEEEEEEEEEEEEEEEEEDEDEDDDDDCDCDEEEEEEEEEEEEEEEEEEEEBABABBBDCFFFGGGEDCDCDCDCDCDCDCDCDCDCEEEEDDDDDDDCDCDCEFEFDDEEFFDEDEEEBDDBBDDDDDDCCCCCCCCEFEDDDCDCDEEEEEEEEEEFEEEEEDDEEDDEE", label0, label0, 4);
      ByteVector byteVector0 = new ByteVector(12);
      ByteVector byteVector1 = byteVector0.putShort(1);
      ByteVector byteVector2 = byteVector1.put11(503, 1837);
      methodWriter0.put(byteVector2);
      assertSame(byteVector0, byteVector2);
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      ClassWriter classWriter1 = new ClassWriter((-1));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "IZ;uGB/!odHv(#;fS.J", "jW|^eLI", "jW|^eLI", (String[]) null, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.getSize();
      classWriter1.thisName = "tVe)XO)-)";
      methodWriter0.visitFrame(185, 0, (Object[]) null, 2439, (Object[]) null);
      methodWriter0.visitFieldInsn(1, "jW|^eLI", "W<gHn%NrKM*#&c#", "Ts0yH5");
      methodWriter0.visitIntInsn((-1861), 4);
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-622));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "06<;i/R=R)5", "06<;i/R=R)5", "06<;i/R=R)5", (String[]) null, false, false);
      methodWriter0.visitIntInsn(1, 2);
      methodWriter0.visitMethodInsn(2, "06<;i/R=R)5", "06<;i/R=R)5", "06<;i/R=R)5");
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1319));
      String[] stringArray0 = new String[9];
      stringArray0[0] = "u$Rm]";
      stringArray0[1] = "Xk{wzJj&ui93r";
      stringArray0[2] = "u$Rm]";
      stringArray0[3] = "u$Rm]";
      stringArray0[4] = "F D1Mns4WOy=\"VIV,S";
      stringArray0[5] = "F D1Mns4WOy=\"VIV,S";
      stringArray0[6] = "jW|^eLI";
      stringArray0[7] = "u$Rm]";
      stringArray0[8] = "jW|^eLI";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "u$Rm]", "jW|^eLI", "F D1Mns4WOy=\"VIV,S", stringArray0, false, false);
      Label label0 = new Label();
      ByteVector byteVector0 = classWriter0.pool;
      Integer integer0 = new Integer((-1403));
      Integer.getInteger("u$Rm]", integer0);
      methodWriter0.visitLdcInsn("Xk{wzJj&ui93r");
      methodWriter0.visitFrame(416, (-1403), stringArray0, (-2172), stringArray0);
      methodWriter0.put(byteVector0);
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-622));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "06<;i/R=R)5", "06<;i/R=R)5", "06<;i/R=R)5", (String[]) null, true, true);
      methodWriter0.getSize();
      methodWriter0.visitTypeInsn(2, "06<;i/R=R)5");
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", stringArray0, false, false);
      methodWriter0.getSize();
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 16, "", "StackMapTable", "StackMapTable", stringArray0, false, false);
      methodWriter1.visitInsn(4);
      methodWriter1.visitMultiANewArrayInsn("G UH(", 189);
      methodWriter1.visitAnnotationDefault();
      methodWriter0.getSize();
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter2.put(byteVector0);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitTypeInsn(16, "WKI#GW~");
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      int int0 = (-1);
      ClassWriter classWriter0 = new ClassWriter((-1));
      String string0 = "";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "jW|^eLI";
      boolean boolean0 = false;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", stringArray0, false, false);
      methodWriter0.visitLdcInsn("");
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), (-1), stringArray0, 2, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      String string0 = "";
      String[] stringArray0 = new String[1];
      stringArray0[0] = "jW|^eLI";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", stringArray0, false, false);
      Label label0 = new Label();
      ByteVector byteVector0 = classWriter0.pool;
      Integer.getInteger("jW|^eLI", (Integer) 2);
      methodWriter0.visitLdcInsn("");
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), (-1), stringArray0, 2, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "jW|^eLI";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", stringArray0, false, false);
      Label label0 = new Label();
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = 1;
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-1), "jW|^eLI", "qxU", "1EySQ", stringArray0, false, false);
      methodWriter1.visitAnnotationDefault();
      Label label1 = new Label();
      Label label2 = label0.next;
      // Undeclared exception!
      try { 
        methodWriter1.visitLocalVariable("{ hcA8B.N\"", "du", (String) null, (Label) null, (Label) null, 2145);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", stringArray0, false, false);
      Label label0 = new Label();
      methodWriter0.visitIincInsn(285212676, 131072);
      methodWriter0.visitMultiANewArrayInsn("MU/a\"w+6Zf'/'", 4096);
      methodWriter0.visitMultiANewArrayInsn("StackMap", 10);
      Integer integer0 = new Integer(1);
      Integer integer1 = new Integer((-534));
      methodWriter0.visitLdcInsn(integer1);
      methodWriter0.visitFrame(5061, 10, stringArray0, 1120, stringArray0);
      methodWriter0.visitEnd();
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", stringArray0, false, false);
      int int0 = Frame.UNINITIALIZED_THIS;
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 16777222, "", "StackMapTable", "StackMapTable", stringArray0, false, false);
      methodWriter1.visitMaxs((-1296), (-3555));
      methodWriter1.visitMultiANewArrayInsn("G 5UH", 189);
      methodWriter1.visitMultiANewArrayInsn("StackMapTable", 1);
      methodWriter0.visitFrame(2, 2204, stringArray0, 2204, stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitLineNumber(189, (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-626));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "06<;i/R=R)5", "06<;i/R=R)5", "06<;i/R=R)5", (String[]) null, true, true);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs(2, 2);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 12
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "jW|^eLI";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", stringArray0, false, false);
      classWriter0.newMethod("{,rNJ8<GI", "KfR|ezb9; EiL7hWM", "{,rNJ8<GI", false);
      Label label0 = new Label();
      ByteVector byteVector0 = classWriter0.pool;
      Integer.getInteger("jW|^eLI", (Integer) 2);
      methodWriter0.visitLdcInsn("");
      methodWriter0.visitMultiANewArrayInsn("", 17);
      methodWriter0.visitMultiANewArrayInsn("", (-1));
      Integer integer0 = new Integer(1);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) integer0;
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) methodWriter0;
      objectArray0[3] = (Object) methodWriter0;
      objectArray0[4] = (Object) byteVector0;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 430, objectArray0, 17, objectArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.objectweb.asm.jip.MethodWriter cannot be cast to org.objectweb.asm.jip.Label
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "jW|^eLI";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", stringArray0, false, false);
      methodWriter0.visitIincInsn(2, (-1546));
      methodWriter0.visitMultiANewArrayInsn("", (-1));
      methodWriter0.visitMultiANewArrayInsn("", 1);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "jW|^eLI");
      // Undeclared exception!
      try { 
        methodWriter1.visitFrame((-1), 2049, stringArray0, (-1546), stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "jW|^eLI";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", stringArray0, false, false);
      classWriter0.newMethod("{,rNJ8<GI", "KfR|ezb9; EiL7hWM", "{,rNJ8<GI", false);
      Label label0 = new Label();
      ByteVector byteVector0 = classWriter0.pool;
      Integer.getInteger("jW|^eLI", (Integer) 2);
      methodWriter0.visitLdcInsn("");
      methodWriter0.visitMultiANewArrayInsn("", 17);
      Integer integer0 = new Integer(1);
      Object[] objectArray0 = new Object[5];
      objectArray0[0] = (Object) integer0;
      objectArray0[1] = (Object) "";
      objectArray0[2] = (Object) methodWriter0;
      objectArray0[3] = (Object) methodWriter0;
      objectArray0[4] = (Object) byteVector0;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame((-1), 430, objectArray0, 17, objectArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.objectweb.asm.jip.MethodWriter cannot be cast to org.objectweb.asm.jip.Label
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1302));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1302), "j9&N$ryCSdElP;P\"", "j9&N$ryCSdElP;P\"", "j9&N$ryCSdElP;P\"", stringArray0, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.visitLdcInsn(1);
      methodWriter0.visitFrame((-1302), 2, stringArray0, 2, stringArray0);
      methodWriter0.put(byteVector0);
      methodWriter0.getSize();
      methodWriter0.visitIincInsn(56, 2);
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", stringArray0, false, false);
      int int0 = Frame.UNINITIALIZED_THIS;
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitMaxs((-1296), (-3555));
      MethodWriter methodWriter2 = new MethodWriter(classWriter0, 167, "double", "j9&N$ryCdElP;P\"", "Label offset position has not been resolved yet", stringArray0, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.getSize();
      Object[] objectArray0 = new Object[0];
      methodWriter1.visitFrame(1, (-455), stringArray0, 1989, objectArray0);
      MethodWriter methodWriter3 = methodWriter1.next;
      MethodWriter methodWriter4 = methodWriter3.next;
      methodWriter0.visitFieldInsn(437, "eZw?ZA,B[9Ox~%p", "StackMapTable", "");
      methodWriter0.visitIntInsn((-1759), (-1296));
      int int1 = methodWriter0.getSize();
      assertEquals(50, int1);
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(503);
      int int0 = Type.SHORT;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "ztnH.!/_", "du", (String) null, (String[]) null, false, false);
      methodWriter0.visitAnnotationDefault();
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      int int1 = methodWriter0.getSize();
      assertEquals(14, int1);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "jW|^eLI";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", stringArray0, false, false);
      methodWriter0.visitIincInsn(2, (-1546));
      methodWriter0.visitMultiANewArrayInsn("", (-1));
      methodWriter0.visitMultiANewArrayInsn("", 1);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "jW|^eLI");
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter2.visitFrame(8388607, 2, stringArray0, 1, stringArray0);
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "!/oh\"\"");
      Label label1 = new Label();
      methodWriter0.visitLabel(label1);
      int int0 = methodWriter1.getSize();
      assertEquals(82, int0);
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "jW|^eLI";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", stringArray0, false, false);
      methodWriter0.visitIincInsn(2, (-1546));
      methodWriter0.visitMultiANewArrayInsn("", (-1));
      methodWriter0.visitMultiANewArrayInsn("", 1);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      FieldWriter fieldWriter0 = new FieldWriter(classWriter0, (-2414), "vG Lve", "HTEryjaj%^Ee", "jW|^eLI", (Object) null);
      classWriter0.firstField = fieldWriter0;
      Edge edge0 = new Edge();
      Label label0 = edge0.successor;
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "jW|^eLI");
      methodWriter1.visitFrame(6, 6, stringArray0, 58, stringArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(66, 6, stringArray0, 2, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1302));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1302), "j9&N$ryCSdElP;P\"", "j9&N$ryCSdElP;P\"", "j9&N$ryCSdElP;P\"", stringArray0, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.visitLdcInsn(1);
      methodWriter0.visitFrame((-1302), 2, stringArray0, 2, stringArray0);
      methodWriter0.put(byteVector0);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, (-65), (Object[]) null, 10, stringArray0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1));
      String[] stringArray0 = new String[1];
      stringArray0[0] = "jW|^eLI";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "", "", "", stringArray0, false, false);
      Label label0 = new Label();
      ByteVector byteVector0 = classWriter0.pool;
      Integer.getInteger("jW|^eLI", (Integer) 2);
      methodWriter0.visitLdcInsn("");
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = (-1);
      label0.position = 2;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 2;
      intArray0[5] = 1;
      intArray0[6] = 2;
      intArray0[7] = 2;
      intArray0[8] = 2;
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      MethodWriter.getNewOffset(intArray0, intArray0, label0);
      byte[] byteArray0 = new byte[0];
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, (-1), 1);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", stringArray0, false, false);
      int int0 = Type.SHORT;
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 4, "", "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", stringArray0, false, false);
      methodWriter1.visitInsn((-17));
      Edge edge0 = new Edge();
      Edge edge1 = edge0.next;
      methodWriter1.visitFrame(1, (-2249), stringArray0, 127, stringArray0);
      methodWriter0.visitEnd();
      Label label0 = new Label();
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)90;
      byteArray0[1] = (byte)49;
      byteArray0[2] = (byte)27;
      byteArray0[3] = (byte)7;
      byteArray0[4] = (byte) (-8);
      byteArray0[5] = (byte) (-61);
      byteArray0[6] = (byte)0;
      byteArray0[7] = (byte)58;
      byteArray0[8] = (byte)9;
      label0.resolve(methodWriter1, 1, byteArray0);
      methodWriter0.visitJumpInsn(3694, label0);
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      int int0 = Frame.KIND;
      Label label0 = new Label();
      ClassWriter classWriter0 = new ClassWriter(251658240);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-359), "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", "RuntimeInvisibleAnnotations", stringArray0, false, false);
      methodWriter0.visitFieldInsn((-359), "RuntimeInvisibleAnnotations", "79IN$rydElP;P\"", "LineNumberTable");
      Edge edge0 = new Edge();
      Label label1 = edge0.successor;
      methodWriter0.visitTryCatchBlock((Label) null, label0, label0, "org.objectweb.asm.jip.MethodWriter");
      methodWriter0.visitFrame(66, (-2244), (Object[]) null, (-359), stringArray0);
      Label label2 = edge0.successor;
      methodWriter0.getSize();
      methodWriter0.visitCode();
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, ")[n$k&OA%");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(4, "LineNumberTable", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 27
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "StackMapTable", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      methodWriter0.visitFrame((-1296), 1, stringArray0, (-1152), stringArray0);
      methodWriter1.visitFieldInsn((-2042), "ar dJL3slN[5E", "RuntimeInvisibleAnnotations", "Yn>Q7");
      methodWriter1.visitIntInsn((-1296), 101);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putInt(16777220);
      ByteVector byteVector1 = byteVector0.putInt(3109);
      methodWriter0.put(byteVector1);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(2460);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "06<R_=RN)K5", "06<R_=RN)K5", "06<R_=RN)K5", (String[]) null, true, false);
      methodWriter0.visitInsn(1);
      methodWriter0.visitFieldInsn(1, "M'ct:", "M'ct:", "06<R_=RN)K5");
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimVisibleParameterAnnotations", "06R_=RN)5", "RuntimVisibleParameterAnnotations", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitFieldInsn(1, "06R_=RN)5", "RuntimVisibleParameterAnnotations", "RuntimVisibleParameterAnnotations");
      methodWriter0.visitIntInsn(170, 2);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-1296), "hqHwC8NiH*U3U>M6e", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      String[] stringArray0 = new String[0];
      Label label0 = new Label();
      ClassWriter classWriter0 = new ClassWriter((-2538));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 3334, "j9&N$ryCdElP;P\"", "yD),yjRj", "Class not found", stringArray0, true, true);
      methodWriter0.getSize();
      int[] intArray0 = new int[2];
      intArray0[0] = 2;
      intArray0[1] = 16;
      int[] intArray1 = new int[4];
      intArray1[0] = 1;
      intArray1[1] = 2;
      intArray1[2] = (-2538);
      intArray1[3] = 3334;
      MethodWriter.getNewOffset(intArray0, intArray1, 1082, 3334);
      // Undeclared exception!
      try { 
        methodWriter0.visitMaxs((-2538), 543);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-622));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "06<;i/R=R)5", "06<;i/R=R)5", "06<;i/R=R)5", (String[]) null, true, true);
      methodWriter0.visitVarInsn(1, 1);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "StackMapTable", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      methodWriter0.visitFrame((-1296), 1, stringArray0, (-1152), stringArray0);
      methodWriter1.visitFieldInsn((-2042), "ar dJL3slN[5E", "RuntimeInvisibleAnnotations", "Yn>Q7");
      methodWriter1.visitIntInsn((-1296), 101);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putInt(16777220);
      byteVector0.putInt(3109);
      methodWriter0.visitVarInsn(192, (-1296));
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-622));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "06</R=R)5", "06</R=R)5", "06</R=R)5", (String[]) null, true, false);
      methodWriter0.visitMaxs(172, 2);
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1288));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2888), "06R_=RN)5", "06R_=RN)5", "06R_=RN)5", stringArray0, true, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "RuntimeVisibleParameterAnnotations");
      int int0 = Type.OBJECT;
      methodWriter0.visitIntInsn((-1288), 55);
      ByteVector byteVector0 = classWriter0.pool;
      // Undeclared exception!
      try { 
        methodWriter0.put(byteVector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "StackMapTable", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      methodWriter0.visitFrame((-1296), 1, stringArray0, (-1152), stringArray0);
      methodWriter1.visitFieldInsn((-2042), "ar dJL3slN[5E", "RuntimeInvisibleAnnotations", "Yn>Q7");
      methodWriter0.visitFrame(2, 2, stringArray0, (-3114), stringArray0);
      methodWriter1.visitEnd();
      Label label0 = new Label();
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "J;lJA");
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "StackMapTable", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      methodWriter0.visitFrame((-1296), 1, stringArray0, (-1152), stringArray0);
      int[] intArray0 = new int[9];
      intArray0[0] = 2;
      intArray0[1] = 1082;
      intArray0[2] = (-2042);
      intArray0[3] = (-1152);
      intArray0[4] = 28;
      intArray0[5] = (-1152);
      intArray0[6] = (-1296);
      methodWriter0.exceptions = intArray0;
      intArray0[7] = 28;
      methodWriter1.visitTypeInsn(28, "StackMapTable");
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-1013), "RuntimeVisibleParameterAnnotations", false);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1288));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1288), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "RuntimeVisibleParameterAnnotations", stringArray0, true, false);
      methodWriter0.visitMaxs(807, 168);
      methodWriter0.visitTypeInsn(807, "LocalVariableTable");
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-73));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "", "j9&N$ryCdElP;P\"", "*RfAg)au+,@H", stringArray0, false, false);
      methodWriter1.visitMultiANewArrayInsn("j9&N$ryCdElP;P\"", 1);
      methodWriter1.visitVarInsn((-2154), 2);
      Integer integer0 = new Integer(1);
      MethodWriter methodWriter2 = new MethodWriter(classWriter0, 2, "j9&N$ryCdElP;P\"", "*RfAg)au+,@H", "", stringArray0, false, true);
      methodWriter2.visitAnnotationDefault();
      Label label0 = new Label();
      methodWriter2.visitLocalVariable("j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "c", label0, label0, 20);
      methodWriter0.visitTypeInsn((-2154), "*RfAg)au+,@H");
      methodWriter2.visitLineNumber(1, label0);
      methodWriter0.visitFieldInsn(78, "c", "*RfAg)au+,@H", "y8*o[^}.");
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "StackMapTable", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      methodWriter0.visitFrame((-1296), 1, stringArray0, (-1152), stringArray0);
      int[] intArray0 = new int[9];
      intArray0[1] = 1082;
      intArray0[2] = (-2042);
      intArray0[3] = (-1152);
      intArray0[4] = 28;
      intArray0[5] = (-1152);
      intArray0[7] = 28;
      intArray0[8] = 1082;
      MethodWriter.getNewOffset(intArray0, intArray0, (-2151), 3374);
      methodWriter1.visitMaxs((-2042), 951);
      methodWriter1.visitInsn(128);
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte) (-119);
      byteArray0[1] = (byte) (-108);
      byteArray0[2] = (byte) (-113);
      byteArray0[3] = (byte)52;
      byteArray0[4] = (byte) (-125);
      byteArray0[5] = (byte) (-92);
      byteArray0[6] = (byte) (-87);
      byteArray0[7] = (byte)58;
      byteArray0[8] = (byte) (-5);
      // Undeclared exception!
      try { 
        MethodWriter.writeShort(byteArray0, 16711680, 1382);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 16711680
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-645));
      String[] stringArray0 = new String[0];
      classWriter0.newDouble(1302.244);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ",y]'v()zTOOHE$I]}UM", ",y]'v()zTOOHE$I]}UM", ",y]'v()zTOOHE$I]}UM", stringArray0, true, true);
      methodWriter0.visitInsn(5);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(1, ",y]'v()zTOOHE$I]}UM", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 19
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1288));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1288), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "RuntimeVisibleParameterAnnotations", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(179, label0);
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-648));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "0^<;i|R=Rv))", "0^<;i|R=Rv))", "0^<;i|R=Rv))", (String[]) null, true, true);
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn(2324, label0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Frame", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(521);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "LocalVariableTable";
      stringArray0[1] = "Ym;EP'9)";
      stringArray0[2] = "Ym;EP'9)";
      stringArray0[3] = "Ym;EP'9)";
      stringArray0[4] = "~)12a0s";
      stringArray0[5] = "Ym;EP'9)";
      stringArray0[6] = "~)12a0s";
      stringArray0[7] = "~)12a0s";
      stringArray0[8] = "~)12a0s";
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 521, "LocalVariableTable", "~)12a0s", "LocalVariableTable", stringArray0, true, false);
      methodWriter0.visitFrame(0, (-2073681233), stringArray0, 1, stringArray0);
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "StackMapTable", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      methodWriter0.visitFrame((-1296), 1, stringArray0, (-1152), stringArray0);
      methodWriter1.visitMultiANewArrayInsn("2g@m(w`=W,kKZ#", 1);
      methodWriter0.visitVarInsn(5, 7);
      Integer integer0 = new Integer(189);
      Integer.getInteger("", integer0);
      // Undeclared exception!
      try { 
        methodWriter1.visitVarInsn((-1296), (-1152));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -1296
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "StackMapTable", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      methodWriter0.visitFrame((-1296), 1, stringArray0, (-1152), stringArray0);
      methodWriter1.visitIincInsn(3575, 2);
      methodWriter1.visitFieldInsn((-2042), "ar dJL3slN[5E", "RuntimeInvisibleAnnotations", "Yn>Q7");
      methodWriter1.visitIntInsn((-1296), 101);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putInt(16777220);
      byteVector0.putInt(3109);
      methodWriter0.visitVarInsn(192, (-1296));
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "StackMapTable", stringArray0, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Edge edge0 = new Edge();
      Edge edge1 = edge0.next;
      methodWriter0.visitEnd();
      Label label0 = new Label();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte) (-61);
      byteArray0[2] = (byte) (-61);
      byteArray0[3] = (byte) (-106);
      byteArray0[4] = (byte) (-61);
      byteArray0[5] = (byte)27;
      byteArray0[6] = (byte)27;
      label0.resolve(methodWriter1, 493, byteArray0);
      methodWriter1.visitJumpInsn((byte)0, label0);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-645));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, ",y]'v()zTOOHE$I]}UM", ",y]'v()zTOOHE$I]}UM", ",y]'v()zTOOHE$I]}UM", stringArray0, true, true);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(2, label0);
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(172);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "06<R_=RN)K5", "06<R_=RN)K5", "06<R_=RN)K5", (String[]) null, true, true);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.visitIincInsn(1, 2);
      Label label0 = new Label();
      Label label1 = new Label();
      methodWriter0.visitLabel(label1);
      assertNotSame(label1, label0);
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-73));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", stringArray0, false, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 1, "", "j9&N$ryCdElP;P\"", "*RfAg)au+,@H", stringArray0, false, false);
      methodWriter1.visitMultiANewArrayInsn("j9&N$ryCdElP;P\"", 1);
      methodWriter1.visitVarInsn((-2154), 2);
      Integer integer0 = new Integer(1);
      MethodWriter methodWriter2 = new MethodWriter(classWriter0, 2, "j9&N$ryCdElP;P\"", "*RfAg)au+,@H", "", stringArray0, false, true);
      methodWriter2.visitAnnotationDefault();
      Label label0 = new Label();
      methodWriter2.visitLocalVariable("j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "c", label0, label0, (-105));
      methodWriter0.visitTypeInsn((-2154), "*RfAg)au+,@H");
      methodWriter2.visitLineNumber(1, label0);
      methodWriter0.visitFieldInsn(78, "c", "*RfAg)au+,@H", "y8*o[^}.");
      assertNotSame(methodWriter0, methodWriter2);
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "StackMapTable", stringArray0, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Edge edge0 = new Edge();
      Edge edge1 = edge0.next;
      methodWriter0.visitEnd();
      Label label0 = new Label();
      classWriter0.invalidFrames = true;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      classWriter0.addUninitializedType("JSR/RET are not supported with computeFrames option", (-1296));
      methodWriter0.visitIntInsn((byte)0, 26);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putInt(101);
      byteVector0.putInt(101);
      methodWriter1.visitVarInsn(54, (byte)0);
      methodWriter0.visitTryCatchBlock(label0, label0, label0, "79IN$rydElP;P\"");
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(172);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "06<R_=RN)K5", "06<R_=RN)K5", "06<R_=RN)K5", (String[]) null, true, true);
      boolean boolean0 = ClassReader.SIGNATURES;
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter1.visitIincInsn(1, 2);
      Label label0 = new Label();
      methodWriter0.visitVarInsn(172, 2);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", stringArray0, false, false);
      int int0 = Type.SHORT;
      methodWriter0.visitInsn((-17));
      Edge edge0 = new Edge();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "j9&N$ryCdElP;P\"");
      Edge edge1 = edge0.next;
      methodWriter0.visitEnd();
      Label label0 = new Label();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)0;
      byteArray0[0] = (byte)27;
      byteArray0[2] = (byte)7;
      byteArray0[5] = (byte) (-61);
      label0.resolve(methodWriter0, (-32768), byteArray0);
      methodWriter0.visitJumpInsn(923, label0);
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "StackMapTable", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitFrame(453, (-549), stringArray0, 83, stringArray0);
      methodWriter0.visitIincInsn(2, 83);
      methodWriter0.visitFieldInsn(83, "ar dJL3slN[5E", "org.objectweb.asm.jip.MethodWriter", "g'f.27Z");
      methodWriter0.visitIntInsn(6, 101);
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putInt(3575);
      methodWriter0.visitVarInsn(6, 101);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "StackMapTable", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      methodWriter0.visitFrame((-1296), 1, stringArray0, (-1152), stringArray0);
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter2.visitFieldInsn(2, "Yn>Q7", "06R_=RN)5", "RuntimeVisibleParameterAnnotations");
      methodWriter0.visitIntInsn((-1916), (-3));
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putInt((-1296));
      byteVector0.putInt(1);
      Label label0 = new Label();
      label0.resolve(methodWriter0, (-2416), (byte[]) null);
      MethodWriter methodWriter3 = classWriter0.lastMethod;
      methodWriter3.visitJumpInsn(172, label0);
      assertSame(methodWriter3, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-622));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "06</R=R)5", "06</R=R)5", "06</R=R)5", (String[]) null, true, false);
      methodWriter0.visitVarInsn(21, 1);
      methodWriter0.visitLdcInsn("06</R=R)5");
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "StackMapTable", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      methodWriter0.visitFrame((-1296), 1, stringArray0, (-1152), stringArray0);
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter2.visitFieldInsn(2, "Yn>Q7", "06R_=RN)5", "RuntimeVisibleParameterAnnotations");
      methodWriter0.visitIntInsn((-1916), (-3));
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putInt((-1296));
      byteVector0.putInt(1);
      Label label0 = new Label();
      methodWriter0.visitTypeInsn((-1152), "XB$oY");
      methodWriter1.visitFieldInsn(1048575, ";L7;&qdXb", "@I^-jm']zX9D{P", "E");
      methodWriter0.visitLdcInsn("XB$oY");
      methodWriter0.visitMultiANewArrayInsn("StackMapTable", (-1296));
      assertSame(methodWriter0, methodWriter2);
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "StackMapTable", stringArray0, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter0.visitEnd();
      Label label0 = new Label();
      classWriter0.addUninitializedType("StackMapTable", (-1296));
      ByteVector byteVector0 = new ByteVector();
      ByteVector byteVector1 = byteVector0.putInt((-1938988892));
      byteVector1.putInt(262144);
      methodWriter0.visitVarInsn(24, (-1938988892));
      MethodWriter methodWriter2 = new MethodWriter(classWriter0, (-1938988892), "06R_=RN)5", "7k>+Gq", "gP;_w{>m", stringArray0, false, false);
      methodWriter2.visitTryCatchBlock(label0, label0, label0, "06R_=RN)5");
      assertNotSame(methodWriter2, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      int int0 = 503;
      ClassWriter classWriter0 = new ClassWriter(503);
      ClassWriter classWriter1 = new ClassWriter(1);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "LocalVariableTable";
      stringArray0[1] = "Ym;EP'9)";
      stringArray0[2] = "Ljava/lang/Synthetic;";
      stringArray0[3] = "Ym;EP'9)";
      stringArray0[4] = "~)12a0s";
      stringArray0[5] = "LocalVariableTable";
      stringArray0[6] = "Ym;EP'9)";
      stringArray0[7] = "~)12a0s";
      stringArray0[8] = "~)12a0s";
      MethodWriter methodWriter0 = new MethodWriter(classWriter1, 1336, "LocalVariableTable", "~)12a0s", "LocalVariableTable", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int1 = 0;
      int int2 = (-2073681264);
      int int3 = 2970;
      // Undeclared exception!
      try { 
        methodWriter0.visitMethodInsn((-999), "~)12a0s", "~)12a0s", "LocalVariableTable");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-2468));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "06<;i/R=R)5", "06<;i/R=R)5", "06<;i/R=R)5", (String[]) null, true, false);
      methodWriter0.visitMethodInsn(2, "06<;i/R=R)5", "06<;i/R=R)5", "06<;i/R=R)5");
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-648));
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "06<;i/R=R)5", "06<;i/R=R)5", "06<;i/R=R)5", (String[]) null, true, true);
      methodWriter0.visitMethodInsn(2, "06<;i/R=R)5", "06<;i/R=R)5", "06<;i/R=R)5");
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "RuntimeVisibleParameterAnnotations", stringArray0, true, false);
      methodWriter0.visitFrame((-1296), 1, stringArray0, 2, stringArray0);
      methodWriter0.visitInsn(187);
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.visitVarInsn(2, 2);
      assertSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "StackMapTable", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      methodWriter0.visitFrame((-1296), 1, stringArray0, (-1152), stringArray0);
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter2.visitFieldInsn(2, "Yn>Q7", "06R_=RN)5", "RuntimeVisibleParameterAnnotations");
      methodWriter0.visitIntInsn((-1916), (-3));
      ByteVector byteVector0 = new ByteVector();
      byteVector0.putInt((-1296));
      ByteVector byteVector1 = byteVector0.putInt(1);
      Label label0 = new Label();
      methodWriter0.visitTypeInsn((-1152), "XB$oY");
      byteVector0.putShort(511);
      methodWriter0.visitTryCatchBlock(label0, label0, label0, (String) null);
      byteVector1.putLong(1L);
      methodWriter0.put(byteVector0);
      methodWriter1.visitTryCatchBlock(label0, label0, label0, "06R_=RN)5");
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-73));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("j9&N$ryCdElP;P\"", 1);
      methodWriter0.visitVarInsn((-2154), 2);
      Integer integer0 = new Integer(1);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2, "j9&N$ryCdElP;P\"", "*RfAg)au+,@H", "", stringArray0, false, true);
      methodWriter1.visitAnnotationDefault();
      Label label0 = new Label();
      methodWriter1.visitLocalVariable("j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "c", label0, label0, 20);
      methodWriter0.visitTypeInsn((-2154), "*RfAg)au+,@H");
      methodWriter1.visitTypeInsn((-2154), "y8*o[^}.");
      methodWriter0.visitFieldInsn(78, "c", "*RfAg)au+,@H", "y8*o[^}.");
      methodWriter1.visitLdcInsn("*RfAg)au+,@H");
      methodWriter0.visitJumpInsn(63, label0);
      methodWriter0.visitAnnotation("y8*o[^}.", true);
      // Undeclared exception!
      try { 
        methodWriter1.visitLocalVariable("ny3P#B=}z2]p]UV`", "AAAAAAAAAAAAAAAABCKLLDDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAADDDDDEEEEEEEEEEEEEEEEEEEEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAIIIIIIIIIIIIIIIIDNOAAAAAAGGGGGGGHHFBFAAFFAAQPIIJJIIIIIIIIIIIIIIIIII", "<init>", label0, (Label) null, (-2));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      int int0 = (-1296);
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimVisibleParameterAnnotations", "06R_=RN)5", "RuntimVisibleParameterAnnotations", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitInsn(28);
      ByteVector byteVector0 = classWriter0.pool;
      Integer.getInteger("RuntimeVisible6amameterAnnotations", (Integer) 2);
      Integer integer0 = new Integer(16777226);
      methodWriter0.visitLdcInsn(integer0);
      methodWriter0.visitFrame(28, 1, stringArray0, 1, stringArray0);
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      Label label0 = new Label();
      int[] intArray0 = new int[5];
      intArray0[0] = 2;
      intArray0[1] = 16777226;
      intArray0[2] = (-773);
      intArray0[3] = 28;
      intArray0[4] = 1;
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter0.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-773), "RuntimeVisible6amameterAnnotations", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimVisibleParameterAnnotations", "06R_=RN)5", "RuntimVisibleParameterAnnotations", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitInsn(28);
      methodWriter0.visitVarInsn(169, 1);
      Integer integer0 = new Integer((-871));
      methodWriter0.visitVarInsn((-1296), 1006);
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-73));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 1, "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", stringArray0, false, false);
      methodWriter0.visitMultiANewArrayInsn("j9&N$ryCdElP;P\"", 1);
      methodWriter0.visitVarInsn((-2154), 2);
      Integer integer0 = new Integer(1);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2, "j9&N$ryCdElP;P\"", "*RfAg)au+,@H", "", stringArray0, false, true);
      methodWriter1.visitAnnotationDefault();
      Label label0 = new Label();
      methodWriter1.visitLocalVariable("j9&N$ryCdElP;P\"", "j9&N$ryCdElP;P\"", "c", label0, label0, 20);
      methodWriter0.visitTypeInsn((-2154), "*RfAg)au+,@H");
      methodWriter1.visitLineNumber(1, label0);
      label0.resolve(methodWriter1, (-2488), (byte[]) null);
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter1.visitJumpInsn(172, label0);
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter1.visitTableSwitchInsn(2837, 224, label0, labelArray0);
      assertSame(methodWriter1, methodWriter2);
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ClassWriter classWriter0 = new ClassWriter(2475);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 2, "06<R_=RN)K5", "06<R_=RN)K5", "06<R_=RN)K5", (String[]) null, true, true);
      Label label0 = new Label();
      methodWriter0.visitLocalVariable("06<R_=RN)K5", "K=%", "06R_=RN)", label0, label0, 2475);
      methodWriter0.visitEnd();
      Label[] labelArray0 = new Label[2];
      labelArray0[0] = label0;
      labelArray0[1] = label0;
      methodWriter0.visitTableSwitchInsn(2, 2475, label0, labelArray0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "RuntimeVisibleParameterAnnotations", stringArray0, true, false);
      methodWriter0.visitFrame((-1296), 1, stringArray0, 2, stringArray0);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(128, label0);
      methodWriter0.visitMaxs((-1296), 128);
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06</R_=RN)5", "06</R_=RN)5", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, Integer.MAX_VALUE, "06</R_=RN)5", "06</R_=RN)5", "org.objectweb.asm.jip.ClassWriter", stringArray0, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitMethodInsn((-2228), "'X7+U>hYQM", "java/lang/Throwable", "06</R_=RN)5");
      methodWriter0.visitMaxs((-2228), 164);
      assertNotSame(methodWriter0, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "StackMapTable", stringArray0, true, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Label label0 = new Label();
      methodWriter0.visitLabel(label0);
      methodWriter1.getSize();
      methodWriter0.visitFrame((-1296), 1, stringArray0, 28, stringArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      int[] intArray0 = new int[9];
      intArray0[0] = 1;
      intArray0[1] = 1;
      intArray0[2] = 2;
      intArray0[3] = 1;
      intArray0[4] = 1;
      intArray0[5] = (-1296);
      intArray0[6] = 2;
      intArray0[7] = 2;
      intArray0[8] = (-1296);
      Label[] labelArray0 = new Label[1];
      labelArray0[0] = label0;
      methodWriter1.visitLookupSwitchInsn(label0, intArray0, labelArray0);
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      int[] intArray1 = new int[2];
      intArray1[0] = (-1296);
      intArray1[1] = (-1296);
      MethodWriter.getNewOffset(intArray1, intArray1, 3374, 28);
      classWriter0.newClassItem("x{uK-");
      methodWriter1.classReaderOffset = 1521;
      methodWriter1.visitMaxs((-1296), (-1328));
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "StackMapTable", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "WCZ0XKoh'By");
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      methodWriter1.getSize();
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter2.visitFieldInsn(2, "Yn>Q7", "06R_=RN)5", "RuntimeVisibleParameterAnnotations");
      methodWriter1.visitInsn(197);
      methodWriter0.visitIntInsn((-1916), (-3));
      int[] intArray0 = new int[1];
      intArray0[0] = 28;
      methodWriter2.visitMaxs(197, 28);
      int int0 = methodWriter2.getSize();
      assertEquals(60, int0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1288));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-2888), "06R_=RN)5", "06R_=RN)5", "06R_=RN)5", stringArray0, true, false);
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "(RQUq*eS$x");
      methodWriter2.visitMaxs(1, 1);
      int int0 = methodWriter2.getSize();
      assertEquals(28, int0);
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimVisibleParameterAnnotations", "06R_=RN)5", "RuntimVisibleParameterAnnotations", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitInsn(28);
      methodWriter0.visitFieldInsn(64, "RuntimeVisible6amameterAnnotations", "06R_=RN)5", "RuntimVisibleParameterAnnotations");
      methodWriter0.visitIntInsn(169, 169);
      ByteVector byteVector0 = new ByteVector();
      Object[] objectArray0 = new Object[2];
      objectArray0[0] = (Object) byteVector0;
      objectArray0[1] = (Object) "06R_=RN)5";
      methodWriter0.visitFrame(3, (-1289), stringArray0, 169, objectArray0);
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation((-1296), "@8l%8`", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "06R_=RN)5", stringArray0, true, false);
      Integer integer0 = new Integer(453);
      Label label0 = new Label();
      methodWriter0.signature = "StackMapabe";
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.visitLocalVariable("06R_=RN)5", "S?7S?L", "RuntimeVisibleParameterAnnotations", label0, label0, 1);
      methodWriter1.visitTypeInsn(167, "java/lag/Throwale");
      methodWriter0.visitLocalVariable("java/lag/Throwale", "StackMapabe", "06R_=RN)5", label0, label0, (-511));
      methodWriter1.visitEnd();
      // Undeclared exception!
      try { 
        methodWriter0.visitFieldInsn((-1296), (String) null, "9FCq", "java/lag/Throwale");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.Item", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      classWriter0.version = 92;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "Yn>Q7", stringArray0, true, false);
      boolean boolean0 = classWriter0.invalidFrames;
      int int0 = methodWriter0.getSize();
      assertEquals(22, int0);
      
      methodWriter0.visitFrame((-1296), 1, stringArray0, (-1152), stringArray0);
      Label label0 = new Label();
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter2.visitFieldInsn(1, "06R_=RN)5", "org.objectweb.asm.jip.ClassWriter", "x6:s<Fjr5.$q0");
      classWriter0.newNameTypeItem("Ljava/lang/Synthetic;", "LineNumberTable");
      methodWriter0.visitInsn(187);
      methodWriter2.visitIntInsn(2559, 4593);
      methodWriter2.visitMaxs(187, 197);
      int int1 = methodWriter2.getSize();
      assertEquals(54, int1);
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimVisibleParameterAnnotations", "06R_=RN)5", "RuntimVisibleParameterAnnotations", stringArray0, true, false);
      methodWriter0.visitInsn(179);
      Label label0 = new Label();
      methodWriter0.visitMethodInsn((-1296), "06R_=RN)5", "RuntimVisibleParameterAnnotations", "06R_=RN)5");
      methodWriter0.visitFieldInsn(180, ".jar", "06R_=RN)5", "~ap<;YdrWZ@f/_H}qy_");
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "Yn>Q7", stringArray0, true, false);
      boolean boolean0 = classWriter0.invalidFrames;
      methodWriter0.getSize();
      methodWriter0.visitFrame((-1296), 1, stringArray0, (-1152), stringArray0);
      Label label0 = new Label();
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter2.visitFieldInsn(1, "06R_=RN)5", "org.objectweb.asm.jip.ClassWriter", "x6:s<Fjr5.$q0");
      methodWriter0.visitInsn(187);
      MethodWriter methodWriter3 = classWriter0.firstMethod;
      methodWriter3.visitFieldInsn(180, "Signature", "R??P{C%. 6u4K~U<>iX", "L");
      Object object0 = label0.info;
      int int0 = methodWriter3.getSize();
      assertEquals(61, int0);
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimVisibleParameterAnnotations", "06R_=RN)5", "RuntimVisibleParameterAnnotations", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitVarInsn(55, 2);
      Integer integer0 = new Integer(63);
      Integer integer1 = new Integer(248);
      // Undeclared exception!
      try { 
        methodWriter0.visitVarInsn((-2153), 92);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2153
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(521);
      ClassWriter classWriter1 = new ClassWriter(1);
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 13, "~)12a0s", "~)12a0s", "~)12a0s", stringArray0, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitMethodInsn(2, "Ym;EP'9)", "t{o", "");
      methodWriter0.visitMaxs(521, 2);
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimVisibleParameterAnnotations", "06R_=RN)5", "RuntimVisibleParameterAnnotations", stringArray0, true, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 25165824, "RuntimVisibleParameterAnnotations", "06R_=RN)5", "06R_=RN)5", stringArray0, true, false);
      methodWriter1.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "~tudH");
      int int0 = Type.SHORT;
      methodWriter0.visitFieldInsn(179, "WCZ0XKoh'By", "EnclosingMethod", "LS");
      MethodWriter methodWriter2 = methodWriter1.next;
      // Undeclared exception!
      try { 
        methodWriter0.visitParameterAnnotation(3045, "VF}!Uv", true);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 10
         //
         verifyException("org.objectweb.asm.jip.Type", e);
      }
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimVisibleParameterAnnotations", "06R_=Ri(N)5", "RuntimVisibleParameterAnnotations", stringArray0, true, false);
      methodWriter0.visitFieldInsn(179, "WCZ0XKoh'By", "RuntimVisibleParameterAnnotations", "06R_=Ri(N)5");
      MethodWriter methodWriter1 = classWriter0.lastMethod;
      Label label0 = new Label();
      methodWriter1.visitJumpInsn(4, label0);
      assertSame(methodWriter1, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(521);
      ClassWriter classWriter1 = new ClassWriter(1);
      int int0 = 13;
      String[] stringArray0 = new String[0];
      boolean boolean0 = true;
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 13, "~)12a0s", "~)12a0s", "~)12a0s", stringArray0, true, true);
      String string0 = "";
      Label label0 = new Label();
      int int1 = 255;
      label0.status = 2;
      methodWriter0.visitLocalVariable("", "LineNumberTable", "", label0, label0, 255);
      methodWriter0.visitLineNumber(2, label0);
      Label label1 = label0.successor;
      // Undeclared exception!
      try { 
        methodWriter0.visitLineNumber((-171), (Label) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1280));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1280), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "StackMapTable", stringArray0, true, false);
      int int0 = Type.SHORT;
      methodWriter0.visitFieldInsn((-154), "06R_=RN)5", "RuntimeVisibleParameterAnnotations", "EnclosingMethod");
      int int1 = (-78);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(4, (-78), stringArray0, 1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1280));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1280), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "RuntimeVisibleParameterAnnotations", stringArray0, true, false);
      int int0 = Type.SHORT;
      methodWriter0.visitFieldInsn(1, "06R_=RN)5", "RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations");
      int int1 = (-78);
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(4, (-78), stringArray0, 1, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1280));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1280), "RuntimeVisibleParameterAnnotations", "06R_=t)5", "StackMapTable", stringArray0, true, false);
      boolean boolean0 = ClassReader.FRAMES;
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "RuntimeVisibleParameterAnnotations");
      int int0 = Frame.TOP_IF_LONG_OR_DOUBLE;
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter0.visitInsn(197);
      methodWriter0.visitIntInsn(1763, 1);
      methodWriter1.visitMaxs(197, 8388608);
      Object[] objectArray0 = new Object[1];
      objectArray0[0] = (Object) methodWriter1;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 4096, objectArray0, (-1848106890), stringArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.objectweb.asm.jip.MethodWriter cannot be cast to org.objectweb.asm.jip.Label
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test126()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1302));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1302), "j9&N$ryCSdElP;P\"", "j9&N$ryCSdElP;P\"", "j9&N$ryCSdElP;P\"", stringArray0, false, false);
      ByteVector byteVector0 = classWriter0.pool;
      methodWriter0.visitLdcInsn(1);
      Object[] objectArray0 = new Object[7];
      Object object0 = new Object();
      objectArray0[0] = object0;
      objectArray0[1] = (Object) byteVector0;
      objectArray0[2] = (Object) methodWriter0;
      objectArray0[3] = (Object) classWriter0;
      objectArray0[4] = (Object) methodWriter0;
      objectArray0[5] = (Object) classWriter0;
      objectArray0[6] = (Object) methodWriter0;
      // Undeclared exception!
      try { 
        methodWriter0.visitFrame(1, 1, objectArray0, 2, stringArray0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to org.objectweb.asm.jip.Label
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test127()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1288));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1288), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "RuntimeVisibleParameterAnnotations", stringArray0, true, false);
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(168, label0);
      methodWriter0.visitMaxs(2, 168);
  }

  @Test(timeout = 4000)
  public void test128()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "RuntimeVisibleParameterAnnotations", stringArray0, true, false);
      boolean boolean0 = ClassReader.SIGNATURES;
      methodWriter0.getSize();
      methodWriter0.visitFrame((-1296), 1, stringArray0, (-1152), stringArray0);
      Label label0 = new Label();
      MethodWriter methodWriter1 = classWriter0.firstMethod;
      methodWriter1.signature = "ue8*";
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter2.visitInsn(177);
      MethodWriter methodWriter3 = classWriter0.firstMethod;
      methodWriter1.visitFieldInsn(16777219, "Uub", "2QXDMawdKZN$#>m]", "LocalVariableTypeTable");
      assertSame(methodWriter1, methodWriter3);
  }

  @Test(timeout = 4000)
  public void test129()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(33);
      String[] stringArray0 = new String[0];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 33, "RuntimVisibleParameterAnnotations", "06R_=RN)5", "RuntimVisibleParameterAnnotations", stringArray0, true, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitFieldInsn(5, "L|` C^iO.5", "06<R_=RN)K5", "Deprecated");
      ByteVector byteVector0 = new ByteVector(2);
      methodWriter0.visitVarInsn(5, 33);
  }

  @Test(timeout = 4000)
  public void test130()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter(521);
      ClassWriter classWriter1 = new ClassWriter(1);
      String string0 = "~)12a0s";
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, 13, "~)12a0s", "~)12a0s", "~)12a0s", stringArray0, true, true);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldAllThrowIOExceptions();
      String string1 = "t{o";
      methodWriter0.visitMaxs(521, 2);
      String string2 = "JSR/RET are not supported with computeFrames option";
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte) (-25);
      byteArray0[0] = (byte) (-25);
      byteArray0[1] = (byte)54;
      byteArray0[2] = (byte) (-29);
      byteArray0[3] = (byte)0;
      ClassReader classReader0 = null;
      try {
        classReader0 = new ClassReader(byteArray0, 13, (byte) (-25));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 21
         //
         verifyException("org.objectweb.asm.jip.ClassReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test131()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1305));
      String[] stringArray0 = new String[0];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1305), "RuntimVisibleParameterAnnotations", "06RRN)5", "RuntimVisibleParameterAnnotations", stringArray0, true, false);
      methodWriter0.visitIntInsn((-1305), 2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitInsn(22);
      methodWriter0.visitTypeInsn(187, "int");
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      Label label2 = new Label();
      methodWriter0.visitJumpInsn(187, label1);
      assertSame(label0, label1);
  }

  @Test(timeout = 4000)
  public void test132()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1288));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1288), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "RuntimeVisibleParameterAnnotations", stringArray0, true, false);
      methodWriter0.visitFieldInsn(1, "06R_=RN)5", "RuntimeVisibleParameterAnnotations", ";-gXoT;sNFtHr~p");
      Label label0 = new Label();
      methodWriter0.visitJumpInsn(168, label0);
      methodWriter0.visitMaxs(172, 168);
  }

  @Test(timeout = 4000)
  public void test133()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "RuntimeVisibleParameterAnnotations", stringArray0, true, false);
      methodWriter0.visitFieldInsn(178, "06R_=RN)5", "RuntimeVisibleParameterAnnotations", "RuntimeVisibleParameterAnnotations");
      Label label0 = new Label();
      // Undeclared exception!
      try { 
        methodWriter0.visitJumpInsn((-897), label0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -897
         //
         verifyException("org.objectweb.asm.jip.MethodWriter", e);
      }
  }

  @Test(timeout = 4000)
  public void test134()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "RuntimeVisibleParameterAnnotations", stringArray0, true, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, 2, "Om.mj/SK%qCgDvM>", "Signature", "\"b]Gte\") (DN", stringArray0, false, false);
      methodWriter1.visitIntInsn(742, 703);
      MethodWriter methodWriter2 = classWriter0.firstMethod;
      methodWriter1.visitFieldInsn(1, "x6:s<Fjr5.$q0", "&rg.objectweb.asm.jip.ClassWriter", "\"b]Gte\") (DN");
      methodWriter2.visitFieldInsn(178, "RuntimeInvisibleAnnotations", "-vU!O'", "x6:s<Fjr5.$q0");
      methodWriter1.visitIntInsn(742, 2048);
      methodWriter2.visitFieldInsn((-3683), ",y]'v()zTOOHE$I]}UM", "06R_=RNS))5", "WpiX)8");
      methodWriter2.visitCode();
      assertNotSame(methodWriter2, methodWriter1);
  }

  @Test(timeout = 4000)
  public void test135()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1296));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1296), "RuntimeVisibleParameterAnnotations", "06R_=RN)5", "RuntimeVisibleParameterAnnotations", stringArray0, true, false);
      MethodWriter methodWriter1 = new MethodWriter(classWriter0, (-570), "Signature", "\"b]Gte\") (DN", "\"b]Gte\") (DN", stringArray0, false, true);
      MethodWriter methodWriter2 = classWriter0.lastMethod;
      methodWriter0.visitTryCatchBlock((Label) null, (Label) null, (Label) null, "1XVOk");
      int int0 = Type.OBJECT;
      methodWriter2.visitIntInsn(2, (-2274));
      MethodWriter methodWriter3 = new MethodWriter(classWriter0, (-2301), "06R_=RN)5", "_)V", "_)V", stringArray0, false, true);
      methodWriter3.visitMaxs((-2274), 4540);
      assertNotSame(methodWriter3, methodWriter0);
  }

  @Test(timeout = 4000)
  public void test136()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-1305));
      String[] stringArray0 = new String[0];
      FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-1305), "RuntimVisibleParameterAnnotations", "06RRN)5", "RuntimVisibleParameterAnnotations", stringArray0, true, false);
      methodWriter0.visitIntInsn((-1305), 2);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      methodWriter0.visitAnnotationDefault();
      methodWriter0.visitInsn(170);
      methodWriter0.visitTypeInsn(187, "int");
      Label label0 = new Label();
      Label label1 = label0.getFirst();
      label1.outputStackMax = (-3587);
      Label label2 = new Label();
      methodWriter0.visitJumpInsn(187, label1);
      assertNotSame(label1, label2);
  }

  @Test(timeout = 4000)
  public void test137()  throws Throwable  {
      ClassWriter classWriter0 = new ClassWriter((-624));
      String[] stringArray0 = new String[0];
      MethodWriter methodWriter0 = new MethodWriter(classWriter0, (-624), "_)V", "_)V", "_)V", stringArray0, true, true);
      methodWriter0.visitMaxs((-882), 67);
      methodWriter0.visitMaxs(2, (-3673));
      int int0 = methodWriter0.getSize();
      assertEquals(28, int0);
  }
}
