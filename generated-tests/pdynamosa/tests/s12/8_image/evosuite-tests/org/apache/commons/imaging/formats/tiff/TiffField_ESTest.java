/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 22:05:16 GMT 2019
 */

package org.apache.commons.imaging.formats.tiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayOutputStream;
import java.io.PrintWriter;
import java.net.URI;
import java.nio.ByteOrder;
import java.nio.CharBuffer;
import org.apache.commons.imaging.formats.tiff.TiffElement;
import org.apache.commons.imaging.formats.tiff.TiffField;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldType;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeAscii;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeByte;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeDouble;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeFloat;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeLong;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeRational;
import org.apache.commons.imaging.formats.tiff.fieldtypes.FieldTypeShort;
import org.apache.commons.imaging.formats.tiff.taginfos.TagInfo;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.evosuite.runtime.mock.java.net.MockURI;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TiffField_ESTest extends TiffField_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[26];
      byteArray0[1] = (byte) (-57);
      byteArray0[5] = (byte)7;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 50, (-6147L), byteArray0, byteOrder0, (byte)7);
      // Undeclared exception!
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(1205, (-452), fieldTypeLong0, 1, 1, byteArray0, byteOrder0, 2147258190);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(2147258190, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals(1205, tiffField0.getTag());
      assertEquals((-452), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2136582715, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2136582715, 2136582715, fieldTypeDouble0, 167940L, 2147483647L, byteArray0, byteOrder0, 3334);
      String string0 = tiffField0.getValueDescription();
      assertEquals(2136582715, tiffField0.getTag());
      assertEquals(2136582715, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals(3334, tiffField0.getSortHint());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
      assertEquals(1343520, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[9];
      FieldTypeFloat fieldTypeFloat0 = new FieldTypeFloat(112, "");
      TiffField tiffField0 = new TiffField(400, (-3213), fieldTypeFloat0, (byte)71, 5144L, byteArray0, byteOrder0, 50215);
      TagInfo tagInfo0 = tiffField0.getTagInfo();
      assertEquals((-3213), tiffField0.getDirectoryType());
      assertEquals(5144, tiffField0.getOffset());
      assertEquals(50215, tiffField0.getSortHint());
      assertEquals(1, tagInfo0.length);
      assertEquals(400, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2318), "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 336, fieldTypeShort0.DOUBLE, 6, 0L, (byte[]) null, byteOrder0, (-129));
      int int0 = tiffField0.getTag();
      assertEquals(336, tiffField0.getDirectoryType());
      assertEquals((-129), tiffField0.getSortHint());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(50, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(70, "EGFEU[j");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[6];
      TiffField tiffField0 = new TiffField((-4058), 0, fieldTypeRational0, 1180L, 1L, byteArray0, byteOrder0, (byte)39);
      int int0 = tiffField0.getTag();
      assertEquals(39, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-4058), int0);
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[8];
      byteArray0[0] = (byte)1;
      byteArray0[1] = (byte) (-4);
      byteArray0[2] = (byte) (-96);
      byteArray0[3] = (byte) (-74);
      byteArray0[4] = (byte)26;
      byteArray0[5] = (byte) (-99);
      byteArray0[6] = (byte) (-97);
      char[] charArray0 = new char[0];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(830, 830, fieldTypeAscii0, 3742L, 102L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getStringValue();
      assertEquals(102, tiffField0.getOffset());
      assertEquals(3742, tiffField0.getBytesLength());
      assertEquals(830, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(830, tiffField0.getDirectoryType());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1135, (byte)0, fieldTypeByte0, (-4636L), 652L, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getSortHint();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, int0);
      assertEquals(652, tiffField0.getOffset());
      assertEquals(1135, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((byte) (-8), 2126834766, fieldTypeDouble0, (-2147483648L), 3213L, byteArray0, byteOrder0, 1525);
      int int0 = tiffField0.getSortHint();
      assertEquals(3213, tiffField0.getOffset());
      assertEquals(1525, int0);
      assertEquals((-8), tiffField0.getTag());
      assertEquals(2126834766, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-864), 482, fieldTypeByte0, (byte)1, (byte)1, byteArray0, byteOrder0, 482);
      int int0 = tiffField0.getOffset();
      assertEquals(482, tiffField0.getSortHint());
      assertEquals(1, int0);
      assertEquals((-864), tiffField0.getTag());
      assertEquals(482, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(6, 6, fieldTypeByte0.DOUBLE, 6, (-1824), (byte[]) null, byteOrder0, (-1824));
      int int0 = tiffField0.getOffset();
      assertEquals(6, tiffField0.getDirectoryType());
      assertEquals((-1824), int0);
      assertEquals(6, tiffField0.getTag());
      assertEquals((-1824), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte)66;
      TiffField tiffField0 = new TiffField(853, (-3579), fieldTypeFloat0, 1L, (byte) (-11), byteArray0, byteOrder0, (byte)7);
      tiffField0.getIntValueOrArraySum();
      assertEquals((-3579), tiffField0.getDirectoryType());
      assertEquals(853, tiffField0.getTag());
      assertEquals(7, tiffField0.getSortHint());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals((-11), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[4];
      byteArray0[0] = (byte) (-67);
      TiffField tiffField0 = new TiffField(2055, (-3085), fieldTypeByte0.SSHORT, 3237L, (byte)0, byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals((-3085), tiffField0.getDirectoryType());
      assertEquals(6474, tiffField0.getBytesLength());
      assertEquals(2055, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-17152), int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-2199), (-2199), fieldTypeShort0, 1L, 1L, byteArray0, byteOrder0, (-5));
      tiffField0.getIntValue();
      assertEquals((-5), tiffField0.getSortHint());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-2199), tiffField0.getTag());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-2199), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)50;
      TiffField tiffField0 = new TiffField(27, (byte)50, fieldTypeRational0.SSHORT, 1L, 3002, byteArray0, (ByteOrder) null, (byte)50);
      tiffField0.getIntValue();
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(3002, tiffField0.getOffset());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getSortHint());
      assertEquals(27, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-30);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-864), 482, fieldTypeByte0, (byte)1, (byte)1, byteArray0, byteOrder0, 482);
      tiffField0.getIntValue();
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-864), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(482, tiffField0.getSortHint());
      assertEquals(482, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3264, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(34908, 766, fieldTypeRational0, 0, 32L, byteArray0, byteOrder0, 4177);
      tiffField0.getFieldTypeName();
      assertEquals(766, tiffField0.getDirectoryType());
      assertEquals(34908, tiffField0.getTag());
      assertEquals(4177, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(2136582715, "");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2136582715, 2136582715, fieldTypeDouble0, 167940L, 2147483647L, byteArray0, byteOrder0, 3334);
      tiffField0.getFieldTypeName();
      assertEquals(3334, tiffField0.getSortHint());
      assertEquals(2136582715, tiffField0.getDirectoryType());
      assertEquals(2136582715, tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(402, 853, (FieldType) null, 3090L, (-110L), (byte[]) null, byteOrder0, 949);
      tiffField0.getFieldType();
      assertEquals(949, tiffField0.getSortHint());
      assertEquals(853, tiffField0.getDirectoryType());
      assertEquals((-110), tiffField0.getOffset());
      assertEquals(402, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "EGFEU[j");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, (-1L), 6, (byte[]) null, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2318), "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField((-667), 0, fieldTypeShort0, 1387L, 476L, byteArray0, byteOrder0, (-3273));
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(476, tiffField0.getOffset());
      assertEquals((-667), tiffField0.getTag());
      assertEquals((-3273), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[1] = (byte)39;
      TiffField tiffField0 = new TiffField((byte)0, (byte)0, fieldTypeRational0.LONG, 1, (byte)0, byteArray0, byteOrder0, 409);
      tiffField0.getDoubleValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals(4, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(409, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte) (-24);
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-864), 482, fieldTypeByte0, (byte)1, (byte)1, byteArray0, byteOrder0, 482);
      tiffField0.getDoubleValue();
      assertEquals(482, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
      assertEquals((-864), tiffField0.getTag());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(482, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(179, "ImageColorValue");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, (-1L), byteArray0, byteOrder0, (-395));
      int int0 = tiffField0.getDirectoryType();
      assertEquals(0, tiffField0.getTag());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, int0);
      assertEquals((-395), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField(1, (byte) (-126), fieldTypeByte0, (byte) (-1), (-2233L), byteArray0, byteOrder0, (-2768));
      int int0 = tiffField0.getDirectoryType();
      assertEquals((-2233), tiffField0.getOffset());
      assertEquals((-126), int0);
      assertEquals((-2768), tiffField0.getSortHint());
      assertEquals(1, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(179, "ImageColorValue");
      byte[] byteArray0 = new byte[4];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 0, (-1L), byteArray0, byteOrder0, (-395));
      tiffField0.getCount();
      assertEquals((-395), tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = new FieldTypeByte((-254), ")a");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((-254), (-254), fieldTypeByte0, (-254), 306L, byteArray0, byteOrder0, 65535);
      tiffField0.getCount();
      assertEquals((-254), tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getSortHint());
      assertEquals(306, tiffField0.getOffset());
      assertEquals((-254), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, 347);
      int int0 = tiffField0.getBytesLength();
      assertEquals(347, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "EGFEU[j");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 685, fieldTypeRational0, (-1L), (-2453L), byteArray0, byteOrder0, (byte)0);
      int int0 = tiffField0.getBytesLength();
      assertEquals((-8), int0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(685, tiffField0.getDirectoryType());
      assertEquals(50, tiffField0.getTag());
      assertEquals((-2453), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.RATIONAL;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(23, (-2688), fieldTypeRational0, 65535, 3174, byteArray0, (ByteOrder) null, (-2423));
      tiffField0.getByteOrder();
      assertEquals((-2423), tiffField0.getSortHint());
      assertEquals(3174, tiffField0.getOffset());
      assertEquals((-2688), tiffField0.getDirectoryType());
      assertEquals(23, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3264, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(34908, 766, fieldTypeRational0, 0, 32L, byteArray0, byteOrder0, 4177);
      byte[] byteArray1 = tiffField0.getByteArrayValue();
      assertEquals(0, byteArray1.length);
      assertEquals(4177, tiffField0.getSortHint());
      assertEquals(32, tiffField0.getOffset());
      assertEquals(766, tiffField0.getDirectoryType());
      assertEquals(34908, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, 347);
      URI uRI0 = MockURI.aFileURI;
      MockFile mockFile0 = new MockFile(uRI0);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(mockFile0);
      tiffField0.dump((PrintWriter) mockPrintWriter0);
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getTag());
      assertEquals(28L, mockFile0.length());
      assertEquals(347, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(402, 853, (FieldType) null, 3090L, (-110L), (byte[]) null, byteOrder0, 949);
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.taginfos.TagInfo", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[6];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-1086), 2008, fieldTypeByte0, (-1086), 2008, byteArray0, byteOrder0, (-1086));
      // Undeclared exception!
      try { 
        tiffField0.getValueDescription();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      char[] charArray0 = new char[3];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      TiffField tiffField0 = new TiffField((-2768), (-2768), fieldTypeByte0, (-2768), (-2768), byteArray0, byteOrder0, 0);
      // Undeclared exception!
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(2147480451, 2147480451, fieldTypeLong0, 2147480451, (-2144454751), byteArray0, byteOrder0, 2147480451);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2146909300, 15, fieldTypeRational0.LONG, (-368L), 64L, byteArray0, byteOrder0, 49);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-466), (-466), fieldTypeLong0, (-466), (-466), byteArray0, (ByteOrder) null, 3593);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 347, 347, byteArray0, byteOrder0, 347);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [B cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "EGFEU[j");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(50, 685, fieldTypeRational0, (-1L), (-2453L), byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField(0, (-3290), (FieldType) null, 0L, 2036L, byteArray0, byteOrder0, 2073432487);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2318), "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(2147280844, (byte)1, fieldTypeShort0, (-1L), (-1L), byteArray0, byteOrder0, 2147280844);
      // Undeclared exception!
      try { 
        tiffField0.dump();
        fail("Expecting exception: NegativeArraySizeException");
      
      } catch(NegativeArraySizeException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.common.BinaryFunctions", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(2629, 1797, fieldTypeShort0, 32L, 2147483647L, byteArray0, byteOrder0, 2033);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter(byteArrayOutputStream0);
      tiffField0.dump((PrintWriter) mockPrintWriter0, (String) null);
      assertEquals("2629 (0xa45: Unknown Tag):  (32 Short)\n", byteArrayOutputStream0.toString());
      assertEquals(2033, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      TiffField tiffField0 = new TiffField((byte)0, (-2144454751), fieldTypeLong0, 167951L, (-1L), byteArray0, byteOrder0, 1);
      boolean boolean0 = tiffField0.isLocalValue();
      assertEquals((-2144454751), tiffField0.getDirectoryType());
      assertFalse(boolean0);
      assertEquals(1, tiffField0.getSortHint());
      assertEquals((-1), tiffField0.getOffset());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3264, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(34908, 766, fieldTypeRational0, 0, 32L, byteArray0, byteOrder0, 4177);
      tiffField0.getByteOrder();
      assertEquals(32, tiffField0.getOffset());
      assertEquals(34908, tiffField0.getTag());
      assertEquals(766, tiffField0.getDirectoryType());
      assertEquals(4177, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(2567, 2147372935, fieldTypeLong0, 671952L, 0L, byteArray0, (ByteOrder) null, 2147372935);
      tiffField0.getByteArrayValue();
      assertEquals(2147372935, tiffField0.getSortHint());
      assertEquals(2687808, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(2147372935, tiffField0.getDirectoryType());
      assertEquals(2567, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "EGFEU[j");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0.DOUBLE, (-1L), 6, (byte[]) null, byteOrder0, 0);
      tiffField0.getFieldType();
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(6, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational((-2318), " (0x");
      TiffField tiffField0 = new TiffField((byte)1, (byte)1, fieldTypeRational0, 1276L, 3096L, byteArray0, byteOrder0, (byte)1);
      int int0 = tiffField0.getDirectoryType();
      assertEquals(1, int0);
      assertEquals(3096, tiffField0.getOffset());
      assertEquals(1, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(853, (-3089), fieldTypeFloat0, 1250L, 1845L, byteArray0, byteOrder0, 50714);
      // Undeclared exception!
      try { 
        tiffField0.dump((PrintWriter) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      FieldTypeAscii fieldTypeAscii0 = FieldType.ASCII;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(2842, 2842, fieldTypeAscii0, 2842, 2842, byteArray0, byteOrder0, (byte) (-114));
      tiffField0.getValue();
      assertEquals(2842, tiffField0.getBytesLength());
      assertEquals(2842, tiffField0.getDirectoryType());
      assertEquals(2842, tiffField0.getTag());
      assertEquals(2842, tiffField0.getOffset());
      assertEquals((-114), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-2949), (-2949), fieldTypeByte0, 1249L, (-704L), byteArray0, byteOrder0, (byte)19);
      tiffField0.getTagInfo();
      assertEquals((-2949), tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals((-2949), tiffField0.getTag());
      assertEquals((-704), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, " @Tll");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, (byte[]) null, byteOrder0, 6);
      int int0 = tiffField0.getTag();
      assertEquals(0, int0);
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-2949), (-2949), fieldTypeByte0, 1249L, (-704L), byteArray0, byteOrder0, (byte)19);
      tiffField0.getCount();
      assertEquals(19, tiffField0.getSortHint());
      assertEquals((-704), tiffField0.getOffset());
      assertEquals((-2949), tiffField0.getDirectoryType());
      assertEquals((-2949), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[11];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(3079, (byte) (-28), fieldTypeLong0.ASCII, 1L, (byte)26, byteArray0, byteOrder0, (byte)26);
      int int0 = tiffField0.getBytesLength();
      assertEquals(1, int0);
      assertEquals(26, tiffField0.getSortHint());
      assertEquals(3079, tiffField0.getTag());
      assertEquals((-28), tiffField0.getDirectoryType());
      assertEquals(26, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(2289, 612, fieldTypeShort0, 1L, (-915L), byteArray0, byteOrder0, 1);
      tiffField0.getDoubleValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2289, tiffField0.getTag());
      assertEquals((-915), tiffField0.getOffset());
      assertEquals(612, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "EGFEU[j");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-2144454756), fieldTypeRational0.SLONG, 167951L, (-1L), byteArray0, byteOrder0, 1);
      // Undeclared exception!
      try { 
        tiffField0.getIntValue();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [I cannot be cast to java.lang.Number
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(2567, 2147372935, fieldTypeLong0, 671952L, 0L, byteArray0, (ByteOrder) null, 2147372935);
      tiffField0.getIntValueOrArraySum();
      assertEquals(2147372935, tiffField0.getSortHint());
      assertEquals(2567, tiffField0.getTag());
      assertEquals(2687808, tiffField0.getBytesLength());
      assertEquals(2147372935, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[9];
      byteArray0[4] = (byte) (-67);
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 50, (-6168L), byteArray0, byteOrder0, 1717986918);
      int int0 = tiffField0.getIntValueOrArraySum();
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals((-6168), tiffField0.getOffset());
      assertEquals(50, tiffField0.getTag());
      assertEquals(0, int0);
      assertEquals(1717986918, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2147236156, (byte)75, fieldTypeFloat0, (byte)50, (byte) (-67), byteArray0, byteOrder0, (-4479));
      try { 
        tiffField0.getIntValueOrArraySum();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [F@2a92c47c for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, "");
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, byteArray0, byteOrder0, 347);
      tiffField0.getDoubleArrayValue();
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(347, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals(0, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 1, fieldTypeByte0, 50, 1L, byteArray0, byteOrder0, 1);
      try { 
        tiffField0.getDoubleArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@70831c1b for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(2567, 2147372935, fieldTypeLong0, 671952L, 0L, byteArray0, (ByteOrder) null, 2147372935);
      tiffField0.getDoubleArrayValue();
      assertEquals(2567, tiffField0.getTag());
      assertEquals(2147372935, tiffField0.getDirectoryType());
      assertEquals(2147372935, tiffField0.getSortHint());
      assertEquals(2687808, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2318), "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(4655, 50, fieldTypeShort0, 255L, 4655, byteArray0, byteOrder0, (-139));
      tiffField0.getDoubleArrayValue();
      assertEquals(4655, tiffField0.getOffset());
      assertEquals((-139), tiffField0.getSortHint());
      assertEquals(4655, tiffField0.getTag());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(510, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50, 50, fieldTypeRational0, 50, (-6147L), byteArray0, byteOrder0, (byte)7);
      double[] doubleArray0 = tiffField0.getDoubleArrayValue();
      assertEquals(50, tiffField0.getTag());
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(50, tiffField0.getDirectoryType());
      assertEquals(7, tiffField0.getSortHint());
      assertArrayEquals(new double[] {Double.NaN, Double.NaN, Double.NaN}, doubleArray0, 0.01);
      assertEquals((-6147), tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(2289, 612, fieldTypeShort0, 1L, (-915L), byteArray0, byteOrder0, 1);
      tiffField0.getDoubleArrayValue();
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals((-915), tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(2289, tiffField0.getTag());
      assertEquals(612, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[9];
      TiffField tiffField0 = new TiffField(2147236156, (byte)75, fieldTypeFloat0, (byte)50, (byte) (-67), byteArray0, byteOrder0, (-4479));
      tiffField0.getDoubleArrayValue();
      assertEquals(75, tiffField0.getDirectoryType());
      assertEquals((-67), tiffField0.getOffset());
      assertEquals(2147236156, tiffField0.getTag());
      assertEquals(200, tiffField0.getBytesLength());
      assertEquals((-4479), tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, 0, (-1075L), byteArray0, byteOrder0, 50);
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unknown value: [B@5af57d68 for: -1 (0xffffffff: Unknown Tag): 
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test67()  throws Throwable  {
      FieldTypeShort fieldTypeShort0 = new FieldTypeShort((-2318), "");
      byte[] byteArray0 = new byte[5];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(553, (byte) (-38), fieldTypeShort0, (byte)51, 0, byteArray0, byteOrder0, (-1683));
      int[] intArray0 = tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getOffset());
      assertEquals((-38), tiffField0.getDirectoryType());
      assertEquals((-1683), tiffField0.getSortHint());
      assertArrayEquals(new int[] {0, 0}, intArray0);
      assertEquals(553, tiffField0.getTag());
      assertEquals(102, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test68()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(1126, 0, fieldTypeLong0, (byte)45, (byte)45, byteArray0, byteOrder0, (byte) (-13));
      tiffField0.getIntArrayValue();
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals((-13), tiffField0.getSortHint());
      assertEquals(45, tiffField0.getOffset());
      assertEquals(1126, tiffField0.getTag());
      assertEquals(180, tiffField0.getBytesLength());
  }

  @Test(timeout = 4000)
  public void test69()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "MeteringMode");
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[8];
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeRational0, 1249L, 0, byteArray0, byteOrder0, (byte)0);
      // Undeclared exception!
      try { 
        tiffField0.getIntArrayValue();
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("org.apache.commons.imaging.common.RationalNumber", e);
      }
  }

  @Test(timeout = 4000)
  public void test70()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(3264, (String) null);
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      byte[] byteArray0 = new byte[1];
      TiffField tiffField0 = new TiffField(34908, 766, fieldTypeRational0, 0, 32L, byteArray0, byteOrder0, 4177);
      tiffField0.getIntArrayValue();
      assertEquals(34908, tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(766, tiffField0.getDirectoryType());
      assertEquals(32, tiffField0.getOffset());
      assertEquals(4177, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test71()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(50714, 219, fieldTypeLong0.SBYTE, 1L, 2147483647L, byteArray0, byteOrder0, (-2147464385));
      assertEquals(1L, tiffField0.getCount());
      
      tiffField0.getIntArrayValue();
      assertEquals((-2147464385), tiffField0.getSortHint());
      assertEquals(219, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getBytesLength());
      assertEquals(50714, tiffField0.getTag());
      assertEquals(Integer.MAX_VALUE, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test72()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[1];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(42037, 42037, fieldTypeByte0.ASCII, 9545L, 9545L, byteArray0, byteOrder0, 1);
      String string0 = tiffField0.getStringValue();
      assertEquals(9545, tiffField0.getBytesLength());
      assertNotNull(string0);
      assertEquals(42037, tiffField0.getDirectoryType());
      assertEquals(9545, tiffField0.getOffset());
      assertEquals(1, tiffField0.getSortHint());
      assertEquals(42037, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test73()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[2];
      TiffField tiffField0 = new TiffField(127, (byte)0, fieldTypeShort0, (byte)0, 631L, byteArray0, byteOrder0, 61);
      try { 
        tiffField0.getStringValue();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Expected String value(-1 (0xffffffff: Unknown Tag): ): [S@5e962c0d
         //
         verifyException("org.apache.commons.imaging.formats.tiff.TiffField", e);
      }
  }

  @Test(timeout = 4000)
  public void test74()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, " @Tll");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, (byte[]) null, byteOrder0, 6);
      String string0 = tiffField0.getTagName();
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
      assertEquals("Unknown Tag (0x0)", string0);
  }

  @Test(timeout = 4000)
  public void test75()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(48323, 2126834766, fieldTypeLong0.SRATIONAL, 48323, 541L, byteArray0, byteOrder0, 48323);
      String string0 = tiffField0.getTagName();
      assertEquals(48323, tiffField0.getSortHint());
      assertEquals("AlphaByteCount", string0);
      assertEquals(48323, tiffField0.getTag());
      assertEquals(541, tiffField0.getOffset());
      assertEquals(2126834766, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test76()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = FieldType.SRATIONAL;
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-761), (-2129437567), fieldTypeRational0.FLOAT, 4L, 2020L, byteArray0, byteOrder0, (-2147033912));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2147033912), tiffField0.getSortHint());
      assertEquals(2020, tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals((-761), tiffField0.getTag());
      assertEquals((-2129437567), tiffField0.getDirectoryType());
      assertEquals(4L, tiffField0.getCount());
      assertEquals("0.0, 0.0, 0.0, 0.0", string0);
  }

  @Test(timeout = 4000)
  public void test77()  throws Throwable  {
      byte[] byteArray0 = new byte[58];
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      TiffField tiffField0 = new TiffField(1183, 381, fieldTypeShort0.BYTE, 189L, 381, byteArray0, byteOrder0, 381);
      String string0 = tiffField0.toString();
      assertEquals(189, tiffField0.getBytesLength());
      assertEquals(381, tiffField0.getSortHint());
      assertEquals(381, tiffField0.getDirectoryType());
      assertEquals(381, tiffField0.getOffset());
      assertEquals("1183 (0x49f: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (58) (189 Byte)", string0);
  }

  @Test(timeout = 4000)
  public void test78()  throws Throwable  {
      byte[] byteArray0 = new byte[26];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(65535, "Invalid value: ");
      TiffField tiffField0 = new TiffField((byte)50, 7, fieldTypeAscii0.DOUBLE, (byte)50, 781L, byteArray0, byteOrder0, 2147480451);
      String string0 = tiffField0.getValueDescription();
      assertEquals(50, tiffField0.getTag());
      assertEquals(50L, tiffField0.getCount());
      assertEquals(2147480451, tiffField0.getSortHint());
      assertEquals(400, tiffField0.getBytesLength());
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals(781, tiffField0.getOffset());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test79()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.SLONG;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-3284), (-790), fieldTypeLong0, 50714, 1250L, byteArray0, byteOrder0, 219);
      String string0 = tiffField0.getValueDescription();
      assertNotNull(string0);
      assertEquals(202856, tiffField0.getBytesLength());
      assertEquals(50714L, tiffField0.getCount());
      assertEquals((-790), tiffField0.getDirectoryType());
      assertEquals((-3284), tiffField0.getTag());
      assertEquals(219, tiffField0.getSortHint());
      assertEquals(1250, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test80()  throws Throwable  {
      byte[] byteArray0 = new byte[209];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      FieldTypeLong fieldTypeLong0 = FieldType.IFD;
      TiffField tiffField0 = new TiffField(54, 54, fieldTypeLong0, 54, 54, byteArray0, byteOrder0, 54);
      String string0 = tiffField0.getValueDescription();
      assertEquals(54L, tiffField0.getCount());
      assertEquals(54, tiffField0.getDirectoryType());
      assertEquals(54, tiffField0.getTag());
      assertEquals(54, tiffField0.getOffset());
      assertEquals("0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (52)", string0);
      assertEquals(54, tiffField0.getSortHint());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test81()  throws Throwable  {
      byte[] byteArray0 = new byte[110];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(1, 7, fieldTypeShort0, 65535, 2147483638L, byteArray0, byteOrder0, 5);
      String string0 = tiffField0.toString();
      assertEquals(2147483638, tiffField0.getOffset());
      assertEquals(131070, tiffField0.getBytesLength());
      assertEquals(5, tiffField0.getSortHint());
      assertEquals(7, tiffField0.getDirectoryType());
      assertEquals("1 (0x1: Unknown Tag): 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0... (55) (65535 Short)", string0);
  }

  @Test(timeout = 4000)
  public void test82()  throws Throwable  {
      byte[] byteArray0 = new byte[57];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(6034, "");
      TiffField tiffField0 = new TiffField(50723, (-3302), fieldTypeAscii0, 506L, (-14212L), byteArray0, byteOrder0, (-1197));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-1197), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-14212), tiffField0.getOffset());
      assertEquals((-3302), tiffField0.getDirectoryType());
      assertEquals(506, tiffField0.getBytesLength());
      assertEquals(50723, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test83()  throws Throwable  {
      byte[] byteArray0 = new byte[44];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii(6034, "Q*~)");
      TiffField tiffField0 = new TiffField(6034, 6123, fieldTypeAscii0, 6123, (-3302), byteArray0, byteOrder0, (-3302));
      String string0 = tiffField0.getValueDescription();
      assertEquals((-3302), tiffField0.getSortHint());
      assertNotNull(string0);
      assertEquals((-3302), tiffField0.getOffset());
      assertEquals(6123, tiffField0.getBytesLength());
      assertEquals(6123, tiffField0.getDirectoryType());
      assertEquals(6034, tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test84()  throws Throwable  {
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-3033), (String) null);
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-60);
      byteArray0[1] = (byte)60;
      byteArray0[2] = (byte) (-60);
      byteArray0[3] = (byte)60;
      TiffField tiffField0 = new TiffField((-3033), (byte)60, fieldTypeAscii0, (byte)60, (byte) (-60), byteArray0, byteOrder0, (-3033));
      String string0 = tiffField0.getValueDescription();
      assertEquals(60, tiffField0.getDirectoryType());
      assertNotNull(string0);
      assertEquals((-60), tiffField0.getOffset());
      assertEquals(60, tiffField0.getBytesLength());
      assertEquals((-3033), tiffField0.getSortHint());
      assertEquals((-3033), tiffField0.getTag());
  }

  @Test(timeout = 4000)
  public void test85()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      FieldTypeShort fieldTypeShort0 = FieldType.SHORT;
      TiffField tiffField0 = new TiffField(2289, 612, fieldTypeShort0, 1L, (-915L), byteArray0, byteOrder0, 1);
      MockPrintWriter mockPrintWriter0 = new MockPrintWriter("Unknown Tag");
      tiffField0.dump((PrintWriter) mockPrintWriter0, "P :H0v?Xa8([");
      assertEquals(612, tiffField0.getDirectoryType());
      assertEquals((-915), tiffField0.getOffset());
      assertEquals(1L, tiffField0.getCount());
      assertEquals(2, tiffField0.getBytesLength());
      assertEquals(2289, tiffField0.getTag());
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test86()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.SBYTE;
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeByte0, (-704L), 0, byteArray0, byteOrder0, 0);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertNull(tiffElement0);
      assertEquals(0, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getOffset());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test87()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-2949), (-2949), fieldTypeByte0, 1249L, (-704L), byteArray0, byteOrder0, (byte)19);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((-2144454756), (byte)15);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(false);
      assertNotNull(string0);
      assertEquals((-2949), tiffField0.getTag());
      assertEquals("OversizeValueElement, tag: Unknown Tag, fieldType: Undefined", string0);
      assertEquals((-704), tiffField0.getOffset());
      assertEquals((-2949), tiffField0.getDirectoryType());
      assertEquals(19, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test88()  throws Throwable  {
      char[] charArray0 = new char[2];
      CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
      ByteOrder byteOrder0 = charBuffer0.order();
      FieldTypeShort fieldTypeShort0 = FieldType.SSHORT;
      byte[] byteArray0 = new byte[13];
      TiffField tiffField0 = new TiffField(127, (byte)0, fieldTypeShort0, (byte)0, (byte)0, byteArray0, byteOrder0, 61);
      boolean boolean0 = tiffField0.isLocalValue();
      assertTrue(boolean0);
      assertEquals(127, tiffField0.getTag());
      assertEquals(61, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test89()  throws Throwable  {
      FieldTypeRational fieldTypeRational0 = new FieldTypeRational(0, "EGFEU[j");
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField((byte)0, (-2144454756), fieldTypeRational0.LONG, 167951L, (-1L), byteArray0, byteOrder0, 1);
      TiffElement tiffElement0 = tiffField0.getOversizeValueElement();
      assertEquals((-2144454756), tiffField0.getDirectoryType());
      assertEquals((-1L), tiffElement0.offset);
      assertEquals(0, tiffField0.getTag());
      assertNotNull(tiffElement0);
      assertEquals(1, tiffField0.getSortHint());
  }

  @Test(timeout = 4000)
  public void test90()  throws Throwable  {
      FieldTypeLong fieldTypeLong0 = FieldType.LONG;
      byte[] byteArray0 = new byte[2];
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 1, fieldTypeLong0, 0, 1, byteArray0, byteOrder0, 65109);
      tiffField0.getFieldTypeName();
      assertEquals(0, tiffField0.getTag());
      assertEquals(65109, tiffField0.getSortHint());
      assertEquals(1, tiffField0.getDirectoryType());
      assertEquals(1, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test91()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = new FieldTypeDouble(0, " @Tll");
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(0, 0, fieldTypeDouble0, 0, 0, (byte[]) null, byteOrder0, 6);
      tiffField0.getOffset();
      assertEquals(6, tiffField0.getSortHint());
      assertEquals(0, tiffField0.getTag());
      assertEquals(0, tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test92()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteOrder byteOrder0 = ByteOrder.LITTLE_ENDIAN;
      FieldTypeAscii fieldTypeAscii0 = new FieldTypeAscii((-1145), "O&'X`{*+E/lz67u2 %$");
      TiffField tiffField0 = new TiffField(28, (-2144454756), fieldTypeAscii0, (-1145), 28, byteArray0, byteOrder0, (-2144454756));
      String string0 = tiffField0.toString();
      assertEquals(28, tiffField0.getTag());
      assertEquals("28 (0x1c: GPSAreaInformation): Invalid value: GPS text field not encoded as bytes. (-1145 O&'X`{*+E/lz67u2 %$)", string0);
      assertEquals(28, tiffField0.getOffset());
      assertEquals((-2144454756), tiffField0.getSortHint());
      assertEquals((-2144454756), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test93()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeDouble0, 1L, 65535, (byte[]) null, byteOrder0, (-1488));
      int int0 = tiffField0.getSortHint();
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getTag());
      assertEquals(65535, tiffField0.getOffset());
      assertEquals((-1488), int0);
  }

  @Test(timeout = 4000)
  public void test94()  throws Throwable  {
      FieldTypeDouble fieldTypeDouble0 = FieldType.DOUBLE;
      ByteOrder byteOrder0 = ByteOrder.BIG_ENDIAN;
      TiffField tiffField0 = new TiffField(65535, 65535, fieldTypeDouble0, 1L, 65535, (byte[]) null, byteOrder0, (-1488));
      String string0 = tiffField0.getDescriptionWithoutValue();
      assertEquals("65535 (0xffff: Unknown Tag): ", string0);
      assertEquals((-1488), tiffField0.getSortHint());
      assertEquals(65535, tiffField0.getDirectoryType());
      assertEquals(65535, tiffField0.getOffset());
  }

  @Test(timeout = 4000)
  public void test95()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.UNDEFINED;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      byte[] byteArray0 = new byte[0];
      TiffField tiffField0 = new TiffField((-2949), (-2949), fieldTypeByte0, 1249L, (-704L), byteArray0, byteOrder0, (byte)19);
      tiffField0.dump();
      assertEquals((-2949), tiffField0.getTag());
      assertEquals((-704), tiffField0.getOffset());
      assertEquals(1249, tiffField0.getBytesLength());
      assertEquals(1249L, tiffField0.getCount());
      assertEquals(19, tiffField0.getSortHint());
      assertEquals((-2949), tiffField0.getDirectoryType());
  }

  @Test(timeout = 4000)
  public void test96()  throws Throwable  {
      byte[] byteArray0 = new byte[209];
      FieldTypeFloat fieldTypeFloat0 = FieldType.FLOAT;
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField(40076, 40076, fieldTypeFloat0, 40076, (-2596L), byteArray0, byteOrder0, 40076);
      String string0 = tiffField0.getValueDescription();
      assertEquals((-2596), tiffField0.getOffset());
      assertNotNull(string0);
      assertEquals(40076, tiffField0.getSortHint());
      assertEquals(40076, tiffField0.getTag());
      assertEquals(40076, tiffField0.getDirectoryType());
      assertEquals(160304, tiffField0.getBytesLength());
      assertEquals(40076L, tiffField0.getCount());
  }

  @Test(timeout = 4000)
  public void test97()  throws Throwable  {
      FieldTypeByte fieldTypeByte0 = FieldType.BYTE;
      byte[] byteArray0 = new byte[8];
      ByteOrder byteOrder0 = ByteOrder.nativeOrder();
      TiffField tiffField0 = new TiffField((-2768), (-628), fieldTypeByte0, 0L, (-628), byteArray0, byteOrder0, (byte)0);
      TiffField.OversizeValueElement tiffField_OversizeValueElement0 = tiffField0.new OversizeValueElement((byte)15, 1031);
      String string0 = tiffField_OversizeValueElement0.getElementDescription(true);
      assertEquals((-628), tiffField0.getOffset());
      assertNull(string0);
      assertEquals((-628), tiffField0.getDirectoryType());
      assertEquals((-2768), tiffField0.getTag());
      assertEquals(0, tiffField0.getBytesLength());
      assertEquals(0, tiffField0.getSortHint());
  }
}
