/*
 * This file was automatically generated by EvoSuite
 * Sun Mar 24 13:39:31 GMT 2019
 */

package org.apache.commons.math3.ode.nonstiff;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math3.analysis.UnivariateFunction;
import org.apache.commons.math3.analysis.function.Exp;
import org.apache.commons.math3.analysis.solvers.BisectionSolver;
import org.apache.commons.math3.analysis.solvers.RiddersSolver;
import org.apache.commons.math3.analysis.solvers.SecantSolver;
import org.apache.commons.math3.analysis.solvers.UnivariateSolver;
import org.apache.commons.math3.ode.ExpandableStatefulODE;
import org.apache.commons.math3.ode.FirstOrderConverter;
import org.apache.commons.math3.ode.SecondOrderDifferentialEquations;
import org.apache.commons.math3.ode.events.EventFilter;
import org.apache.commons.math3.ode.events.EventHandler;
import org.apache.commons.math3.ode.events.FilterType;
import org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator;
import org.apache.commons.math3.ode.sampling.DummyStepHandler;
import org.apache.commons.math3.ode.sampling.FixedStepHandler;
import org.apache.commons.math3.ode.sampling.StepNormalizer;
import org.apache.commons.math3.ode.sampling.StepNormalizerBounds;
import org.apache.commons.math3.ode.sampling.StepNormalizerMode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GraggBulirschStoerIntegrator_ESTest extends GraggBulirschStoerIntegrator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-21.462646), (-21.462646), (-1283.1428), (-881.475551503394));
      graggBulirschStoerIntegrator0.setControlFactors((-3336.1495565316895), 26, 26, (-21.462646));
      graggBulirschStoerIntegrator0.setInitialStepSize((-785.189580203));
      graggBulirschStoerIntegrator0.setOrderControl(26, 3326.4, (-881.475551503394));
      graggBulirschStoerIntegrator0.setControlFactors(1306.0404514753, 3326.4, (-138.58159101), (-2264.005273041));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(26).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime((-21.462646));
      graggBulirschStoerIntegrator0.setOrderControl(26, (-2286.33290288312), 1.0);
      graggBulirschStoerIntegrator0.setOrderControl(26, (-2251.60775285541), (-503.0640424499542));
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 746.26213);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-21.462646), (-21.462646), (-1283.1428), (-881.475551503394));
      graggBulirschStoerIntegrator0.setControlFactors((-3336.1495565316895), 26, 26, (-21.462646));
      graggBulirschStoerIntegrator0.setInitialStepSize((-785.189580203));
      graggBulirschStoerIntegrator0.setOrderControl(26, 3326.4, (-881.475551503394));
      graggBulirschStoerIntegrator0.setControlFactors(1306.0404514753, 3326.4, (-138.58159101), (-2264.005273041));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime((-21.462646));
      graggBulirschStoerIntegrator0.setOrderControl(26, (-2286.33290288312), 1.0);
      graggBulirschStoerIntegrator0.setOrderControl(26, (-2251.60775285541), (-503.0640424499542));
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 746.26213);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.5855598449707031, (-3748.99623), doubleArray0, doubleArray0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-1.12867));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.GraggBulirschStoerIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      double[] doubleArray0 = new double[5];
      doubleArray0[0] = 318.456394881;
      doubleArray0[1] = 318.456394881;
      doubleArray0[2] = 318.456394881;
      doubleArray0[3] = 318.456394881;
      doubleArray0[4] = (-1598.01093162);
      double[] doubleArray1 = new double[7];
      doubleArray1[0] = (-1598.01093162);
      doubleArray1[1] = (-1598.01093162);
      doubleArray1[2] = (-1598.01093162);
      doubleArray1[3] = 318.456394881;
      doubleArray1[4] = 318.456394881;
      doubleArray1[5] = (-1598.01093162);
      doubleArray1[6] = 318.456394881;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(318.456394881, 318.456394881, doubleArray0, doubleArray1);
      graggBulirschStoerIntegrator0.setOrderControl(2090, (-1598.01093162), 549.575617);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      double[] doubleArray0 = new double[0];
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-3064.766691820269), (-3064.766691820269), doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.scalRelativeTolerance = (-3064.766691820269);
      graggBulirschStoerIntegrator0.setStepSizeControl(0.02, 0.02, doubleArray0, doubleArray0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 1485);
      int int0 = 191;
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 191);
      FirstOrderConverter firstOrderConverter0 = null;
      try {
        firstOrderConverter0 = new FirstOrderConverter((SecondOrderDifferentialEquations) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.commons.math3.ode.FirstOrderConverter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double[] doubleArray0 = new double[9];
      doubleArray0[0] = 0.0;
      doubleArray0[1] = (-1.0);
      doubleArray0[2] = (-1.0);
      doubleArray0[3] = (-1.0);
      doubleArray0[4] = (-1.0);
      doubleArray0[5] = (-1.0);
      doubleArray0[6] = (-1.0);
      doubleArray0[7] = 0.0;
      doubleArray0[8] = (-1.0);
      double[] doubleArray1 = new double[6];
      doubleArray1[0] = 0.0;
      doubleArray1[1] = (-1.0);
      doubleArray1[2] = 0.0;
      doubleArray1[3] = 0.0;
      doubleArray1[4] = 0.0;
      doubleArray1[5] = (-1.0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.0, (-1.0), doubleArray0, doubleArray1);
      graggBulirschStoerIntegrator0.setOrderControl((-435), 0.0, 1.0E-4);
      assertEquals(0, graggBulirschStoerIntegrator0.getEvaluations());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      double[] doubleArray0 = new double[6];
      doubleArray0[0] = 938.44203777;
      doubleArray0[1] = 938.44203777;
      doubleArray0[2] = (-1657.514897);
      doubleArray0[3] = (-1657.514897);
      doubleArray0[4] = 938.44203777;
      doubleArray0[5] = 938.44203777;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1657.514897), 938.44203777, doubleArray0, doubleArray0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      SecantSolver secantSolver0 = new SecantSolver();
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 0.0, 938.44203777, (-2677), (UnivariateSolver) secantSolver0);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      StepNormalizerBounds stepNormalizerBounds0 = StepNormalizerBounds.NEITHER;
      StepNormalizer stepNormalizer0 = new StepNormalizer(0.0, fixedStepHandler0, stepNormalizerBounds0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      assertEquals(1247.1895034736349, graggBulirschStoerIntegrator0.getCurrentSignedStepsize(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1379.44, 0.94, 0.94, 1379.44);
      FilterType filterType0 = FilterType.TRIGGER_ONLY_DECREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter((EventHandler) null, filterType0);
      RiddersSolver riddersSolver0 = new RiddersSolver(0.94, 0.65);
      graggBulirschStoerIntegrator0.addEventHandler((EventHandler) eventFilter0, 1379.44, 0.94, (-2146550527), (UnivariateSolver) riddersSolver0);
      assertEquals(0.94, graggBulirschStoerIntegrator0.getMaxStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      double double0 = 2666.788680989;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2666.788680989, 2666.788680989, 2666.788680989, 2666.788680989);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      EventFilter eventFilter0 = new EventFilter(eventHandler0, filterType0);
      double double1 = (-2733.0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = 2666.788680989;
      doubleArray0[1] = (-2520.2839);
      doubleArray0[2] = 723.62;
      doubleArray0[3] = 0.0;
      double[] doubleArray1 = new double[8];
      doubleArray1[0] = 2233.1318;
      doubleArray1[1] = 723.62;
      doubleArray1[2] = (-2520.2839);
      doubleArray1[3] = 723.62;
      doubleArray1[4] = 2666.788680989;
      doubleArray1[5] = (-2520.2839);
      doubleArray1[6] = 723.62;
      doubleArray1[7] = 2666.788680989;
      graggBulirschStoerIntegrator0.setStepSizeControl((-2520.2839), 2666.788680989, doubleArray0, doubleArray1);
      int int0 = (-1159);
      BisectionSolver bisectionSolver0 = new BisectionSolver();
      Exp exp0 = new Exp();
      try { 
        bisectionSolver0.solve(1326, (UnivariateFunction) exp0, (-1.2631909085915044E114), 723.62);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // illegal state: maximal count (1,326) exceeded: evaluations
         //
         verifyException("org.apache.commons.math3.analysis.solvers.BaseAbstractUnivariateSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1847.6359374), 329.00094, 0.01, (-306.4209873635222));
      graggBulirschStoerIntegrator0.getStepHandlers();
      graggBulirschStoerIntegrator0.setControlFactors((-1.0), 0.01, 329.00094, (-306.4209873635222));
      graggBulirschStoerIntegrator0.resetInternalState();
      graggBulirschStoerIntegrator0.setControlFactors((-1.0), 0.0, 0.0, (-2299.4));
      graggBulirschStoerIntegrator0.setControlFactors((-1.0), 0.0, 0.01, (-816.63584929607));
      assertEquals(1847.6359374, graggBulirschStoerIntegrator0.getMinStep(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1272.0), (-2196.74), 1.0001, 1919.3285647);
      assertEquals("Gragg-Bulirsch-Stoer", graggBulirschStoerIntegrator0.getName());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1.0E-4, 1.0E-4, 1.0E-4, (-628.6639855));
      graggBulirschStoerIntegrator0.setControlFactors((-628.6639855), 1.0001, 1.0001, 1.0E-4);
      graggBulirschStoerIntegrator0.clearStepHandlers();
      graggBulirschStoerIntegrator0.setStabilityCheck(true, (-1502), (-893), (-893));
      graggBulirschStoerIntegrator0.setControlFactors(1.0E-4, 0.65, (-893), 329.00094);
      graggBulirschStoerIntegrator0.setOrderControl(258, 1.0E-4, 0.0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(4009).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      expandableStatefulODE0.setTime((-1502));
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 63.688891878);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = (-519.0);
      double[] doubleArray0 = new double[4];
      doubleArray0[0] = (-519.0);
      doubleArray0[1] = (-519.0);
      doubleArray0[2] = (-519.0);
      doubleArray0[3] = (-519.0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-519.0), (-519.0), doubleArray0, doubleArray0);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-240.8941662825281));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 4
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(2343.9986159186865, 2343.9986159186865, 1.0E-10, 2343.9986159186865);
      DummyStepHandler dummyStepHandler0 = DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      DummyStepHandler.getInstance();
      graggBulirschStoerIntegrator0.addStepHandler(dummyStepHandler0);
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 2);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(2).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 1.1794393062591553);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      double double0 = (-1.0);
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator((-1.0), (-1.0), 497.8938393025, (-2564.113009572679));
      graggBulirschStoerIntegrator0.setOrderControl(1466, (-3705.2497176742), (-2564.113009572679));
      graggBulirschStoerIntegrator0.setInterpolationControl(false, 6);
      double double1 = (-3337.831237754);
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 6, 6, (-3337.831237754));
      graggBulirschStoerIntegrator0.setStabilityCheck(false, 1466, 6, 391.0);
      double double2 = 0.6;
      graggBulirschStoerIntegrator0.setControlFactors(5033.4173, 0.6, (-2564.113009572679), 5033.4173);
      graggBulirschStoerIntegrator0.setOrderControl((-3092), (-924.98400426), (-3574.548924905));
      double double3 = 2151.4108860090055;
      graggBulirschStoerIntegrator0.setOrderControl(1187, 2151.4108860090055, (-3705.2497176742));
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (-3705.2497176742));
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(0.6, (-177.0), 0.01, 0.01);
      FixedStepHandler fixedStepHandler0 = mock(FixedStepHandler.class, new ViolatedAssumptionAnswer());
      double[] doubleArray0 = new double[3];
      doubleArray0[0] = (-177.0);
      doubleArray0[1] = 0.6;
      doubleArray0[2] = 796.9066887975;
      graggBulirschStoerIntegrator0.setStepSizeControl(0.6, 796.9066887975, doubleArray0, doubleArray0);
      StepNormalizerMode stepNormalizerMode0 = StepNormalizerMode.MULTIPLES;
      StepNormalizer stepNormalizer0 = new StepNormalizer(1.0E-4, fixedStepHandler0, stepNormalizerMode0);
      graggBulirschStoerIntegrator0.addStepHandler(stepNormalizer0);
      graggBulirschStoerIntegrator0.setStabilityCheck(true, 1, (-1938), 0.6);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      try { 
        graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, (double) 1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // 0 != 3
         //
         verifyException("org.apache.commons.math3.ode.nonstiff.AdaptiveStepsizeIntegrator", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      double double0 = 2.0;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(8.5029538631631E-93, 1273.66468865652, 8.5029538631631E-93, 2.0);
      EventHandler eventHandler0 = mock(EventHandler.class, new ViolatedAssumptionAnswer());
      FilterType filterType0 = FilterType.TRIGGER_ONLY_INCREASING_EVENTS;
      double[] doubleArray0 = new double[8];
      doubleArray0[0] = 2.0;
      doubleArray0[1] = 2.0;
      doubleArray0[2] = 2.0;
      doubleArray0[3] = 1273.66468865652;
      doubleArray0[4] = 2.0;
      doubleArray0[5] = 2.0;
      doubleArray0[6] = 8.5029538631631E-93;
      doubleArray0[7] = 1273.66468865652;
      // Undeclared exception!
      try { 
        graggBulirschStoerIntegrator0.initializeStep(false, 971, doubleArray0, 1.0001, doubleArray0, doubleArray0, doubleArray0, doubleArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      double double0 = 1653.93983;
      double double1 = 2228.87201238868;
      GraggBulirschStoerIntegrator graggBulirschStoerIntegrator0 = new GraggBulirschStoerIntegrator(1653.93983, 2228.87201238868, 1653.93983, 1653.93983);
      SecondOrderDifferentialEquations secondOrderDifferentialEquations0 = mock(SecondOrderDifferentialEquations.class, new ViolatedAssumptionAnswer());
      doReturn(0).when(secondOrderDifferentialEquations0).getDimension();
      FirstOrderConverter firstOrderConverter0 = new FirstOrderConverter(secondOrderDifferentialEquations0);
      ExpandableStatefulODE expandableStatefulODE0 = new ExpandableStatefulODE(firstOrderConverter0);
      boolean boolean0 = true;
      int int0 = (-306);
      graggBulirschStoerIntegrator0.setInterpolationControl(true, (-306));
      // Undeclared exception!
      graggBulirschStoerIntegrator0.integrate(expandableStatefulODE0, 2228.87201238868);
  }
}
