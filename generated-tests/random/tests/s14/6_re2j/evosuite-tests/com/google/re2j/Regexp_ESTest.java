/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 22 22:43:32 GMT 2019
 */

package com.google.re2j;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.re2j.Regexp;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Regexp_ESTest extends Regexp_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp_Op0);
      regexp1.equals(regexp_Op0);
      regexp0.cap = 16;
      Regexp regexp2 = new Regexp(regexp1);
      regexp0.equals(regexp2);
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        regexp2.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[2];
      regexp1.reinit();
      regexp0.flags = (-3);
      intArray0[0] = (-3);
      intArray0[1] = 66461;
      regexp1.flags = 13;
      regexp1.runes = intArray0;
      regexp1.flags = 66461;
      regexp1.equals(regexp0);
      String string0 = "VL9zc";
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("VL9zc");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.VL9zc
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals((Object) null);
      regexp0.flags = 6153;
      int[] intArray0 = new int[1];
      intArray0[0] = 4;
      regexp0.runes = intArray0;
      regexp0.toString();
      regexp0.equals(regexp_Op0);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("(?i:x04)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.(?i:x04)
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[8];
      intArray0[0] = 1;
      intArray0[1] = 1035;
      intArray0[2] = 256;
      intArray0[3] = 3004;
      intArray0[4] = (-12);
      intArray0[5] = 228;
      intArray0[6] = (-331);
      intArray0[7] = (-3021);
      regexp0.runes = intArray0;
      String string0 = regexp0.toString();
      assertEquals("[\\x01-\u040B\u0100-\\x{bbc}\\xfffffff4-\u00E4\\xfffffeb5-\\xfffff433]", string0);
      
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.name = "[x01-\u040B\u0100-x{bbc}xfffffff4-\u00E4xfffffeb5-xfffff433]";
      regexp1.flags = 2883;
      regexp1.min = 2883;
      boolean boolean0 = regexp0.equals(regexp1);
      Regexp.Op.values();
      Object object0 = new Object();
      boolean boolean1 = regexp1.equals(object0);
      assertFalse(boolean1 == boolean0);
      
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[7];
      intArray0[0] = (-2985);
      intArray0[1] = 19;
      intArray0[2] = (-2985);
      intArray0[3] = (-2985);
      intArray0[4] = (-2985);
      intArray0[5] = (-2985);
      intArray0[6] = (-2985);
      regexp0.runes = intArray0;
      int[] intArray1 = new int[0];
      regexp0.runes = intArray1;
      regexp0.flags = (-2985);
      regexp0.max = (-758);
      regexp0.toString();
      regexp0.toString();
      regexp0.toString();
      regexp0.toString();
      Regexp.Op.values();
      regexp0.maxCap();
      regexp0.toString();
      Regexp.Op.values();
      regexp_Op0.isPseudo();
      regexp0.toString();
      regexp0.maxCap();
      regexp0.maxCap();
      regexp0.equals("[^x00-x{10FFFF}]");
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Inscriptional_Parthian");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Inscriptional_Parthian
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[9];
      intArray0[0] = (-2037);
      intArray0[1] = 93;
      intArray0[2] = 256;
      intArray0[3] = 12;
      intArray0[4] = 16;
      intArray0[5] = 120146;
      intArray0[6] = 832;
      intArray0[7] = (-1590);
      intArray0[8] = 3462;
      regexp0.runes = intArray0;
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("^6_P\"V");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.^6_P\"V
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      regexp1.name = "B";
      Regexp[] regexpArray0 = new Regexp[6];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp1;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp1;
      regexp1.subs = regexpArray0;
      regexp0.toString();
      regexp1.equals(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_TEXT;
      regexpArray0[2].op = regexp_Op1;
      regexp1.max = 2756;
      regexp1.toString();
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("P");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.P
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.op = regexp_Op0;
      regexp1.toString();
      regexp0.flags = 8;
      regexp1.equals(regexp0);
      regexp0.subs = null;
      regexp1.name = "\b";
      Object object0 = new Object();
      regexp1.equals(object0);
      regexp1.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("L~5SF_l:z@<_");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.L~5SF_l:z@<_
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.name = "";
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp regexp2 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[3];
      intArray0[0] = 0;
      intArray0[1] = 2460;
      intArray0[2] = 41;
      regexp0.runes = intArray0;
      regexp2.min = (-3021);
      regexp1.equals(regexp2);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.cap = 44;
      Object object0 = new Object();
      Regexp.Op regexp_Op1 = Regexp.Op.PLUS;
      regexp0.op = regexp_Op1;
      Regexp[] regexpArray0 = new Regexp[3];
      Regexp.Op regexp_Op2 = Regexp.Op.NO_MATCH;
      Regexp regexp2 = new Regexp(regexp_Op2);
      regexpArray0[0] = regexp2;
      regexpArray0[1] = regexp1;
      regexp1.equals(regexp_Op1);
      regexpArray0[0].name = "VERTICAL_BAR";
      regexpArray0[2] = regexp1;
      regexp2.op = regexp0.op;
      regexpArray0[0].cap = 1760;
      regexp1.subs = regexpArray0;
      regexp1.equals(object0);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 11;
      regexp0.max = 414;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.name = "W]\"<";
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = (-1356);
      regexp0.max = (-1356);
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[5];
      intArray0[0] = 256;
      intArray0[1] = 3257;
      regexp0.equals(regexp_Op0);
      intArray0[2] = (-2320);
      intArray0[3] = 4628;
      intArray0[4] = 42;
      regexp0.runes = intArray0;
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.flags = 1946;
      regexp1.max = 256;
      regexp1.subs = null;
      regexp1.op = regexp_Op0;
      regexp1.toString();
      regexp1.toString();
      Regexp.Op.values();
      regexp1.toString();
      regexp1.max = 256;
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("\u0100\u0CB9xfffff6f0\u1214*");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.\u0100\u0CB9xfffff6f0\u1214*
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.op = regexp_Op0;
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.cap = (-2672);
      regexp1.name = "";
      Regexp[] regexpArray0 = new Regexp[8];
      regexpArray0[0] = regexp1;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexp1.min = 11;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp1;
      regexpArray0[6] = regexp0;
      regexpArray0[7] = regexp1;
      regexp0.subs = regexpArray0;
      regexp0.equals(regexp1);
      regexp_Op0.isPseudo();
      regexp0.max = 42509;
      regexp_Op0.isPseudo();
      regexp1.equals(regexp0);
      int[] intArray0 = new int[3];
      intArray0[0] = 42509;
      intArray0[1] = (-2672);
      intArray0[2] = (-2672);
      regexp1.reinit();
      regexp1.runes = intArray0;
      regexp0.cap = (-2672);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("}(L$wv");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.}(L$wv
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.equals(regexp_Op0);
      Object object0 = new Object();
      regexp1.equals(object0);
      regexp1.toString();
      regexp0.flags = 120379;
      regexp1.toString();
      Object object1 = new Object();
      boolean boolean0 = regexp0.equals(object1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.NO_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.max = 17;
      regexp1.maxCap();
      regexp0.reinit();
      Regexp[] regexpArray0 = new Regexp[4];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexpArray0[2] = regexp0;
      regexpArray0[3] = regexp0;
      regexp1.subs = regexpArray0;
      boolean boolean0 = regexp0.equals("p");
      boolean boolean1 = regexp0.equals(regexp0);
      assertTrue(boolean1);
      
      regexpArray0[2].max = (-2564);
      regexpArray0[1].name = "D^2HpuP";
      regexp1.equals("C");
      int int0 = regexp1.maxCap();
      assertEquals(0, int0);
      
      regexp0.maxCap();
      boolean boolean2 = regexp_Op0.isPseudo();
      assertTrue(boolean2 == boolean0);
      assertFalse(boolean2);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.QUEST;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.name = "";
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.toString();
      regexp0.name = "xFJga";
      regexp0.max = (-2934);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.toString();
      Regexp regexp2 = new Regexp(regexp1);
      regexp0.equals(regexp2);
      regexp1.equals(regexp_Op0);
      regexp0.name = "xFJga";
      regexp1.flags = 139;
      regexp1.equals(regexp0);
      Regexp[] regexpArray0 = new Regexp[7];
      Regexp regexp3 = new Regexp(regexp_Op0);
      regexpArray0[0] = regexp3;
      regexpArray0[1] = regexp1;
      regexpArray0[2] = regexp1;
      regexpArray0[3] = regexp0;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp1;
      regexpArray0[6] = regexp1;
      regexp0.subs = regexpArray0;
      regexp1.maxCap();
      Regexp.Op[] regexp_OpArray0 = Regexp.Op.values();
      regexp1.cap = 0;
      regexp1.toString();
      regexp1.min = 3675;
      regexp0.cap = 2137;
      regexp0.toString();
      regexp1.toString();
      regexp1.equals("$");
      Regexp.Op[] regexp_OpArray1 = Regexp.Op.values();
      assertNotSame(regexp_OpArray1, regexp_OpArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.flags = 12771;
      regexp0.max = 12771;
      regexp0.max = (-3467);
      regexp0.equals(regexp_Op0);
      String string0 = regexp0.toString();
      regexp0.maxCap();
      int[] intArray0 = new int[9];
      intArray0[0] = 1418;
      intArray0[1] = (-3467);
      intArray0[2] = (-3467);
      intArray0[3] = (-3467);
      intArray0[4] = (-3467);
      intArray0[5] = 0;
      intArray0[6] = 0;
      intArray0[7] = 0;
      intArray0[8] = (-3467);
      regexp0.runes = intArray0;
      regexp_Op0.isPseudo();
      String string1 = regexp0.toString();
      assertTrue(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      String string0 = "";
      regexp1.name = "";
      Regexp[] regexpArray0 = new Regexp[1];
      regexpArray0[0] = regexp1;
      regexp1.subs = regexpArray0;
      regexp0.max = 12;
      regexp0.equals((Object) null);
      regexp1.name = "Z";
      regexp1.equals("LEFT_PAREN");
      regexp1.equals(regexp0);
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("0e8Cs`; aUnD:D");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.0e8Cs`; aUnD:D
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_LINE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 32;
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("$");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.$
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.max = 369;
      Regexp[] regexpArray0 = new Regexp[0];
      regexp0.subs = regexpArray0;
      regexp0.toString();
      regexp0.max = (-3386);
      regexp_Op0.isPseudo();
      regexp0.reinit();
      regexp0.maxCap();
      regexp0.op = regexp_Op0;
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.op = regexp_Op0;
      Regexp regexp1 = new Regexp(regexp0);
      int int0 = 128000;
      Regexp[] regexpArray0 = new Regexp[7];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp1;
      Regexp regexp2 = new Regexp(regexp1);
      regexpArray0[2] = regexp2;
      regexpArray0[3] = regexp1;
      regexpArray0[4] = regexp0;
      regexpArray0[5] = regexp1;
      regexpArray0[6] = regexp0;
      regexp1.subs = regexpArray0;
      regexp0.name = ")gxlSO%";
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.NO_MATCH;
      regexp0.op = regexp_Op1;
      regexp0.maxCap();
      regexp0.min = 4054;
      regexp0.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("[^x00-x{10FFFF}]");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.[^x00-x{10FFFF}]
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[6];
      intArray0[0] = (-1214);
      intArray0[1] = 9;
      intArray0[2] = 615;
      intArray0[3] = 6;
      Regexp.Op regexp_Op1 = Regexp.Op.QUEST;
      regexp1.op = regexp_Op1;
      regexp1.name = "}UO&n";
      intArray0[4] = 917760;
      int int0 = 8336;
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Object object0 = new Object();
      regexp0.equals(object0);
      regexp0.equals(regexp_Op0);
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.REPEAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int int0 = 5;
      regexp0.min = 5;
      regexp0.flags = 5;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.STAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[1];
      regexp0.flags = (-2385);
      intArray0[0] = (-2385);
      regexp0.runes = intArray0;
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.runes = regexp0.runes;
      regexp0.runes = regexp1.runes;
      // Undeclared exception!
      try { 
        regexp1.equals(regexp0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.reinit();
      regexp0.cap = 9;
      regexp0.min = 1888;
      regexp0.name = "A";
      regexp0.max = (-2435);
      regexp0.name = "cS {T5jG1K6@%U";
      Regexp.Op regexp_Op1 = Regexp.Op.PLUS;
      regexp0.op = regexp_Op1;
      regexp0.maxCap();
      regexp0.maxCap();
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.cap = 11;
      regexp0.max = 1247;
      String string0 = "Syloti_Nagri";
      regexp0.flags = 42624;
      regexp0.name = "Syloti_Nagri";
      regexp0.maxCap();
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      regexp_Op0.isPseudo();
      String string0 = "0s";
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("0s");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.0s
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int int0 = 2;
      int int1 = (-590);
      // Undeclared exception!
      try { 
        regexp1.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.EMPTY_MATCH;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[3];
      intArray0[0] = (-147);
      intArray0[1] = 64045;
      intArray0[2] = (-4072);
      regexp0.runes = intArray0;
      String string0 = regexp0.toString();
      assertEquals("(?:)", string0);
      
      regexp0.flags = 15;
      regexp0.max = 16;
      int[] intArray1 = new int[1];
      intArray1[0] = 15;
      regexp0.runes = intArray1;
      Object object0 = new Object();
      regexp0.equals(object0);
      Object object1 = new Object();
      boolean boolean0 = regexp0.equals(object1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CONCAT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.maxCap();
      regexp0.equals(regexp_Op0);
      regexp0.equals(regexp_Op0);
      regexp0.cap = 8;
      Regexp regexp1 = new Regexp(regexp0);
      // Undeclared exception!
      try { 
        regexp0.equals(regexp1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[1];
      regexpArray0[0] = regexp0;
      regexp1.subs = regexpArray0;
      regexp1.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("%D`A$1b=*'P\"A8");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.%D`A$1b=*'P\"A8
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.END_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.cap = 5;
      regexp1.toString();
      regexp1.name = "Gurmukhi";
      regexp1.max = 4257;
      Object object0 = new Object();
      regexp1.equals(object0);
      String string0 = "Uq:}A<~sx\\";
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Uq:}A<~sx");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Uq:}A<~sx
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.CAPTURE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.QUEST;
      regexp1.op = regexp_Op1;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      boolean boolean0 = regexp1.equals(regexp0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.NO_WORD_BOUNDARY;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[3];
      intArray0[0] = (-4175);
      intArray0[1] = 9;
      intArray0[2] = (-1618);
      regexp0.runes = intArray0;
      regexp0.maxCap();
      String string0 = regexp0.toString();
      assertEquals("\\B", string0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int int0 = 12;
      regexp0.toString();
      regexp0.min = 12;
      regexp0.flags = 12;
      regexp0.maxCap();
      Regexp.Op regexp_Op1 = Regexp.Op.CAPTURE;
      regexp0.name = "A";
      regexp0.op = regexp_Op1;
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.PLUS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int[] intArray0 = new int[5];
      regexp0.min = (-1875);
      intArray0[0] = 460;
      intArray0[1] = (-3330);
      intArray0[2] = 44;
      intArray0[3] = (-1382);
      regexp0.min = 44;
      regexp0.max = 159;
      intArray0[4] = 2774;
      regexp0.runes = intArray0;
      regexp0.maxCap();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Oi@|Ef(");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Oi@|Ef(
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.CHAR_CLASS;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = 2773;
      regexp0.max = 2773;
      regexp0.cap = 12549;
      Regexp regexp1 = new Regexp(regexp0);
      regexp0.reinit();
      regexp0.min = 12549;
      Regexp[] regexpArray0 = new Regexp[1];
      regexpArray0[0] = regexp1;
      regexp0.min = 0;
      regexp1.subs = regexpArray0;
      regexp1.reinit();
      regexp1.reinit();
      regexp1.flags = 3385;
      regexp0.cap = 3149;
      regexp1.flags = 2877;
      regexp1.equals(regexp_Op0);
      Object object0 = new Object();
      regexp1.equals(object0);
      Regexp.Op.values();
      Regexp.Op.values();
      regexp1.reinit();
      regexp_Op0.isPseudo();
      // Undeclared exception!
      try { 
        regexp0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.re2j.Regexp", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ANY_CHAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.equals(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      regexp1.name = "#n4'0";
      Object object0 = new Object();
      regexp1.toString();
      regexp1.equals(object0);
      regexp1.equals(regexp0);
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.BEGIN_TEXT;
      Regexp regexp0 = new Regexp(regexp_Op0);
      regexp0.min = (-611);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp[] regexpArray0 = new Regexp[0];
      regexp1.flags = 127744;
      regexp1.subs = regexpArray0;
      regexp0.reinit();
      regexp1.name = "Hvw/Z-uAljom/U ";
      regexp1.min = 0;
      regexp1.toString();
      Regexp.Op.values();
      Regexp.Op.values();
      regexp0.reinit();
      regexp0.name = "Hvw/Z-uAljom/U ";
      regexp1.toString();
      Object object0 = new Object();
      Regexp.Op regexp_Op1 = Regexp.Op.BEGIN_LINE;
      regexp1.op = regexp_Op1;
      regexp0.equals(object0);
      regexp1.equals("Hvw/Z-uAljom/U ");
      regexp_Op0.isPseudo();
      Object object1 = new Object();
      regexp1.equals(object1);
      regexp1.toString();
      regexp1.equals(regexp0);
      Regexp regexp2 = new Regexp(regexp1);
      regexp1.equals(regexp2);
      Regexp.Op.values();
      regexp1.op.isPseudo();
      Regexp.Op.values();
      regexp1.toString();
      Regexp.Op.values();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Hvw/Z-uAljom/U ");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Hvw/Z-uAljom/U 
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.VERTICAL_BAR;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR_NOT_NL;
      regexp0.op = regexp_Op1;
      regexp1.min = 2634;
      regexp1.maxCap();
      regexp0.equals(regexp_Op0);
      regexp0.maxCap();
      Object object0 = new Object();
      regexp1.equals(object0);
      Regexp regexp2 = new Regexp(regexp0);
      regexp0.equals(regexp2);
      regexp1.toString();
      regexp_Op1.isPseudo();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("B");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.B
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Regexp.Op.values();
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp regexp1 = new Regexp(regexp0);
      int[] intArray0 = new int[0];
      regexp1.runes = intArray0;
      regexp1.max = 1667;
      Object object0 = new Object();
      regexp1.equals(object0);
      regexp0.max = 1;
      regexp1.equals(object0);
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR;
      regexp1.op = regexp_Op1;
      regexp1.toString();
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("(?s:.)");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.(?s:.)
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("(?:");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.(?:
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      String string0 = "|";
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("|");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.|
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.ALTERNATE;
      Regexp regexp0 = new Regexp(regexp_Op0);
      Regexp.Op regexp_Op1 = Regexp.Op.ANY_CHAR_NOT_NL;
      Regexp[] regexpArray0 = new Regexp[2];
      regexpArray0[0] = regexp0;
      regexpArray0[1] = regexp0;
      regexp0.subs = regexpArray0;
      regexp0.reinit();
      Regexp regexp1 = new Regexp(regexp_Op1);
      int[] intArray0 = new int[2];
      intArray0[0] = (-2142);
      regexp0.toString();
      intArray0[1] = (-2142);
      regexp0.runes = intArray0;
      regexp0.flags = (-2142);
      regexp0.flags = (-2142);
      regexp0.equals(regexp1);
      regexp1.cap = (-1369);
      regexp0.max = (-2142);
      regexp0.equals(regexp_Op1);
      regexp1.toString();
      regexp0.maxCap();
      regexp_Op1.isPseudo();
      Regexp.Op.values();
      Regexp regexp2 = new Regexp(regexp0);
      regexp2.flags = (-2142);
      regexp0.equals(regexp2);
      regexp0.maxCap();
      String string0 = "";
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Regexp.Op.values();
      String string0 = "Ugaritic";
      // Undeclared exception!
      try { 
        Regexp.Op.valueOf("Ugaritic");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant com.google.re2j.Regexp.Op.Ugaritic
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Regexp.Op regexp_Op0 = Regexp.Op.LITERAL;
      Regexp regexp0 = new Regexp(regexp_Op0);
      int int0 = regexp0.maxCap();
      assertEquals(0, int0);
  }
}
