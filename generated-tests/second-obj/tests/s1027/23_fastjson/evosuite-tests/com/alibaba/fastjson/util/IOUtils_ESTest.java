/*
 * This file was automatically generated by EvoSuite
 * Sat Jul 07 12:42:05 GMT 2018
 */

package com.alibaba.fastjson.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.alibaba.fastjson.util.IOUtils;
import com.alibaba.fastjson.util.UTF8Decoder;
import java.io.ByteArrayOutputStream;
import java.io.CharArrayReader;
import java.io.CharArrayWriter;
import java.io.Closeable;
import java.io.ObjectStreamConstants;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.StringReader;
import java.nio.BufferOverflowException;
import java.nio.ByteBuffer;
import java.nio.CharBuffer;
import java.nio.IntBuffer;
import java.nio.charset.Charset;
import java.nio.charset.CharsetDecoder;
import java.nio.charset.CodingErrorAction;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class IOUtils_ESTest extends IOUtils_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Charset.defaultCharset();
      IOUtils iOUtils0 = new IOUtils();
      int int0 = IOUtils.encodeUTF8(iOUtils0.CA, 21, 21, iOUtils0.specicalFlags_singleQuotes);
      assertEquals(21, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try { 
        IOUtils.getChars(824, 824, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 823
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize(100000L);
      IOUtils.getChars(2093L, 6, iOUtils0.CA);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) (-201), (-201), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -202
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = IOUtils.decodeBase64("qnok");
      assertArrayEquals(new byte[] {(byte) (-86), (byte)122, (byte)36}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("VCg");
      assertArrayEquals(new byte[] {(byte)84, (byte)40}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam((String) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      char[] charArray0 = new char[3];
      byte[] byteArray0 = IOUtils.decodeBase64(charArray0, 0, 0);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 27, 27);
      CodingErrorAction codingErrorAction0 = CodingErrorAction.IGNORE;
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 27, 27, iOUtils0.replaceChars);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 27
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      int int0 = IOUtils.stringSize(27);
      assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("", 0, 0);
      assertArrayEquals(new byte[] {}, byteArray0);
      
      IOUtils iOUtils0 = new IOUtils();
      boolean boolean0 = IOUtils.isIdent('(');
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      IOUtils.isValidJsonpQueryParam("{q0n5I}X#uf");
      IOUtils.loadPropertiesFromFile();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("xhA3un.");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      boolean boolean0 = IOUtils.isValidJsonpQueryParam("Hi^8*B]5}NR.~]CWEP");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.loadPropertiesFromFile();
      int int0 = IOUtils.decodeUTF8(iOUtils0.specicalFlags_singleQuotes, (-2243), (-29), iOUtils0.DIGITS);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      Charset charset0 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("");
      CharBuffer charBuffer0 = uTF8Decoder0.decode(byteBuffer0);
      IOUtils.decode(uTF8Decoder0, byteBuffer0, charBuffer0);
      assertEquals(1.0F, uTF8Decoder0.averageCharsPerByte(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.getChars((-1225), (-1225), (char[]) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 27, 27);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = CodingErrorAction.REPORT;
      iOUtils0.UTF8.encode("fastjson.compatibleWithFieldName");
      IOUtils.getChars(27, 27, iOUtils0.ASCII_CHARS);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_1;
      char[] charArray0 = new char[8];
      IOUtils.isIdent('|');
      IOUtils.getChars(1, 1, charArray0);
      IOUtils.decodeBase64(charArray0, 1, 1);
      assertArrayEquals(new char[] {'1', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.stringSize((int) (byte) (-25));
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.DIGITS, (int) (byte) (-25), (int) (byte) (-25));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -51
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.reset();
      Charset charset0 = uTF8Decoder0.charset();
      ByteBuffer byteBuffer0 = charset0.encode("x99Z$-94");
      CharBuffer charBuffer0 = charset0.decode(byteBuffer0);
      ByteBuffer byteBuffer1 = charset0.encode(charBuffer0);
      // Undeclared exception!
      try { 
        IOUtils.decode(charsetDecoder0, byteBuffer1, charBuffer0);
        fail("Expecting exception: BufferOverflowException");
      
      } catch(BufferOverflowException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CoderResult", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      IOUtils.isValidJsonpQueryParam("");
      IOUtils.loadPropertiesFromFile();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64(")@p}");
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("|D\" x}kUk>4g", (-9), (-9));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      char[] charArray0 = new char[0];
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-1), (int) (byte) (-1), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.getChars((byte)43, (int) (byte)43, iOUtils0.replaceChars);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      boolean boolean0 = IOUtils.firstIdentifier('~');
      assertFalse(boolean0);
      
      byte[] byteArray0 = IOUtils.decodeBase64("Q");
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("Q,w?;ysdK<-`8Iez9", 7, 7);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1), (byte) (-1), (byte) (-1), (byte) (-62)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      byte[] byteArray0 = IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 7, 7);
      assertArrayEquals(new byte[] {(byte) (-17), (byte) (-66), (byte) (-5), (byte) (-17), (byte) (-66)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      FileSystemHandling.shouldAllThrowIOExceptions();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(739);
      IOUtils.close(byteArrayOutputStream0);
      assertEquals(0, byteArrayOutputStream0.size());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      IOUtils iOUtils0 = new IOUtils();
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 2, 99);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 100
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      IOUtils.close((Closeable) null);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("bzdQf._;VK_h", 4, 4);
      assertArrayEquals(new byte[] {}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      IOUtils iOUtils0 = new IOUtils();
      iOUtils0.DEFAULT_PROPERTIES.getProperty("fastjson.properties");
      IOUtils.getChars((byte) (-79), 17, iOUtils0.replaceChars);
      int int0 = IOUtils.stringSize((int) (byte) (-79));
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      char[] charArray0 = new char[9];
      FileSystemHandling.shouldAllThrowIOExceptions();
      byte[] byteArray0 = new byte[9];
      byteArray0[3] = (byte) (-9);
      int int0 = ObjectStreamConstants.baseWireHandle;
      IOUtils.decodeUTF8(byteArray0, 0, (byte)37, charArray0);
      IOUtils.loadPropertiesFromFile();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      char[] charArray0 = new char[9];
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte) (-2);
      byteArray0[2] = (byte) (-2);
      byteArray0[4] = (byte) (-2);
      IOUtils.decodeUTF8(byteArray0, 0, (byte)41, charArray0);
      IOUtils.encodeUTF8(charArray0, (byte) (-102), (byte)0, byteArray0);
      // Undeclared exception!
      try { 
        IOUtils.getChars(18, (int) (byte) (-2), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -3
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      IOUtils.firstIdentifier('~');
      byte[] byteArray0 = IOUtils.decodeBase64("");
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[6];
      charArray0[0] = '~';
      charArray0[1] = '~';
      charArray0[3] = '~';
      charArray0[4] = '~';
      charArray0[5] = '@';
      // Undeclared exception!
      try { 
        IOUtils.encodeUTF8(charArray0, 2, 144, byteArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      IOUtils.firstIdentifier('m');
      int int0 = (-2146933010);
      char[] charArray0 = new char[6];
      charArray0[0] = 'm';
      charArray0[1] = 'm';
      charArray0[2] = 'm';
      // Undeclared exception!
      try { 
        IOUtils.getChars((-2146933010), (-2146933010), charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -2146933011
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[8];
      IOUtils.isIdent('|');
      IOUtils.getChars(2, 2, charArray0);
      StringReader stringReader0 = new StringReader("0wD@&XMXS,N8");
      stringReader0.reset();
      IOUtils.readAll(stringReader0);
      IOUtils.getChars((-1L), 2, charArray0);
      assertArrayEquals(new char[] {'-', '1', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000', '\u0000'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("Dp)c_A&", 4, 63);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("c^(:_cUsS>en@z.r", 8, 8);
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-9), (byte) (-89), (byte) (-1), (byte) (-1), (byte) (-21)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      byte[] byteArray0 = IOUtils.specicalFlags_doubleQuotes;
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[6];
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(byteArray0, 2, 15, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 6
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      IOUtils.stringSize((-1L));
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 1, 1);
      IOUtils.decodeBase64("tpG7iBgDBp", 1, 1);
      Charset.defaultCharset();
      CharArrayWriter charArrayWriter0 = new CharArrayWriter();
      IOUtils.getChars((-1995), 55, iOUtils0.replaceChars);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      // Undeclared exception!
      try { 
        uTF8Decoder0.detectedCharset();
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.charset.CharsetDecoder", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      byte[] byteArray0 = IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
      IOUtils.getStringProperty("KOcV!hMfzG");
      char[] charArray0 = new char[3];
      charArray0[0] = 'B';
      charArray0[1] = 'B';
      charArray0[2] = 'S';
      IOUtils.decodeUTF8(byteArray0, 21, 64, charArray0);
      assertArrayEquals(new char[] {'q', '\u05DF', 'S'}, charArray0);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      char[] charArray0 = new char[9];
      byte[] byteArray0 = new byte[17];
      byteArray0[7] = (byte) (-61);
      FileSystemHandling.createFolder((EvoSuiteFile) null);
      IOUtils.decodeUTF8(byteArray0, 1, (byte)8, charArray0);
      FileSystemHandling.shouldAllThrowIOExceptions();
      Charset.defaultCharset();
      // Undeclared exception!
      try { 
        CharBuffer.wrap(charArray0, (int) (byte) (-61), 1);
        fail("Expecting exception: IndexOutOfBoundsException");
      
      } catch(IndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.CharBuffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      byte[] byteArray0 = IOUtils.specicalFlags_singleQuotes;
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      char[] charArray0 = new char[15];
      charArray0[1] = '\u00CD';
      charArray0[3] = '\u00CD';
      charArray0[1] = '\u00CD';
      int int1 = IOUtils.encodeUTF8(charArray0, 2, 2, byteArray0);
      assertEquals(3, int1);
      
      boolean boolean0 = IOUtils.isIdent('8');
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      char[] charArray0 = new char[1];
      // Undeclared exception!
      try { 
        IOUtils.getChars(2147483643L, 4571, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 4570
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      char[] charArray0 = new char[10];
      byte[] byteArray0 = new byte[17];
      byteArray0[2] = (byte) (-30);
      IOUtils.decodeUTF8(byteArray0, 0, (byte)8, charArray0);
      CodingErrorAction codingErrorAction0 = CodingErrorAction.REPLACE;
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      byte[] byteArray1 = IOUtils.specicalFlags_doubleQuotes;
      assertFalse(byteArray1.equals((Object)byteArray0));
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      IOUtils.stringSize(100000000000L);
      Charset charset0 = Charset.defaultCharset();
      byte[] byteArray0 = IOUtils.specicalFlags_singleQuotes;
      IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZ#bcdefghijjlmnopqrstuvwxyz0123456789+/");
      IOUtils.loadPropertiesFromFile();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      uTF8Decoder0.malformedInputAction();
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      UTF8Decoder uTF8Decoder2 = new UTF8Decoder();
      Charset charset1 = Charset.defaultCharset();
      ByteBuffer byteBuffer0 = charset0.encode("ABCDEFGHIJKLMNOPQRSTUVWXYZ#bcdefghijjlmnopqrstuvwxyz0123456789+/");
      Charset charset2 = Charset.defaultCharset();
      charset1.decode(byteBuffer0);
      UTF8Decoder uTF8Decoder3 = new UTF8Decoder();
      uTF8Decoder2.charset();
      charset1.encode("5=!)+I\"'Pl");
      Charset charset3 = IOUtils.UTF8;
      Charset charset4 = IOUtils.UTF8;
      charset4.aliases();
      charset2.decode(byteBuffer0);
      uTF8Decoder1.reset();
      char[] charArray0 = new char[1];
      char char0 = 'c';
      charArray0[0] = 'c';
      // Undeclared exception!
      try { 
        IOUtils.getChars(100000000000L, 12, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 11
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      char[] charArray0 = new char[9];
      byte[] byteArray0 = new byte[17];
      byteArray0[7] = (byte) (-61);
      IOUtils.decodeUTF8(byteArray0, 0, (byte)8, charArray0);
      IOUtils.isValidJsonpQueryParam("");
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = CodingErrorAction.IGNORE;
      IOUtils iOUtils0 = new IOUtils();
      uTF8Decoder0.onUnmappableCharacter(codingErrorAction0);
      Charset charset0 = uTF8Decoder0.charset();
      // Undeclared exception!
      try { 
        charset0.encode((CharBuffer) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "U7<=&");
      byte[] byteArray0 = IOUtils.decodeBase64("U7<=&");
      assertArrayEquals(new byte[] {(byte) (-1), (byte) (-1)}, byteArray0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      char[] charArray0 = new char[10];
      byte[] byteArray0 = new byte[29];
      byteArray0[5] = (byte) (-63);
      IOUtils.decodeUTF8(byteArray0, 0, (byte)8, charArray0);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      IOUtils.getStringProperty("-U|");
      IOUtils.stringSize(436L);
      IOUtils.getChars((byte) (-63), 3, charArray0);
      // Undeclared exception!
      try { 
        IOUtils.decodeBase64("", (int) (byte)8, (-1));
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      int int0 = 0;
      char[] charArray0 = new char[2];
      byte[] byteArray0 = new byte[17];
      byteArray0[2] = (byte) (-30);
      IOUtils.decodeUTF8(byteArray0, 0, (byte)4, charArray0);
      IOUtils.decodeBase64("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      IOUtils.getStringProperty("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/");
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      UTF8Decoder uTF8Decoder2 = new UTF8Decoder();
      UTF8Decoder uTF8Decoder3 = new UTF8Decoder();
      UTF8Decoder uTF8Decoder4 = new UTF8Decoder();
      IOUtils.loadPropertiesFromFile();
      String string0 = IOUtils.FASTJSON_COMPATIBLEWITHJAVABEAN;
      byte byte0 = (byte) (-128);
      // Undeclared exception!
      try { 
        IOUtils.getChars((byte) (-128), 1306, charArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 1305
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      IOUtils.isIdent('\u0100');
      IOUtils.firstIdentifier('\u0100');
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)4;
      byteArray0[1] = (byte)34;
      byteArray0[3] = (byte)4;
      byteArray0[4] = (byte) (-94);
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = CodingErrorAction.REPORT;
      uTF8Decoder0.onMalformedInput(codingErrorAction0);
      Charset charset0 = Charset.defaultCharset();
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      uTF8Decoder0.malformedInputAction();
      UTF8Decoder uTF8Decoder2 = new UTF8Decoder();
      FileSystemHandling.appendStringToFile((EvoSuiteFile) null, "QEf`#ey}`FNL8J'&7");
      ByteBuffer byteBuffer0 = charset0.encode("encodeUTF8 error");
      IntBuffer intBuffer0 = byteBuffer0.asIntBuffer();
      // Undeclared exception!
      try { 
        UTF8Decoder.updatePositions(intBuffer0, (byte)34, intBuffer0, (byte)34);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.nio.Buffer", e);
      }
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 2, 82);
      FileSystemHandling.shouldAllThrowIOExceptions();
      CharArrayReader charArrayReader0 = new CharArrayReader(iOUtils0.DIGITS);
      IOUtils.readAll(charArrayReader0);
      int int1 = ObjectStreamConstants.baseWireHandle;
      // Undeclared exception!
      try { 
        IOUtils.decodeUTF8(iOUtils0.specicalFlags_singleQuotes, 102, 8257536, iOUtils0.CA);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 161
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      Charset.defaultCharset();
      IOUtils.decodeBase64("j=PVx.}~", 0, 2);
      byte[] byteArray0 = IOUtils.specicalFlags_singleQuotes;
      IOUtils.decodeBase64("j=PVx.}~");
      IOUtils.loadPropertiesFromFile();
      UTF8Decoder uTF8Decoder0 = new UTF8Decoder();
      CodingErrorAction codingErrorAction0 = CodingErrorAction.IGNORE;
      UTF8Decoder uTF8Decoder1 = new UTF8Decoder();
      UTF8Decoder uTF8Decoder2 = new UTF8Decoder();
      CharsetDecoder charsetDecoder0 = uTF8Decoder0.reset();
      assertEquals(1.0F, charsetDecoder0.maxCharsPerByte(), 0.01F);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      int int0 = ObjectStreamConstants.PROTOCOL_VERSION_2;
      IOUtils iOUtils0 = new IOUtils();
      IOUtils.decodeBase64(iOUtils0.ASCII_CHARS, 2, 82);
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      FileSystemHandling.shouldAllThrowIOExceptions();
      FileSystemHandling.appendLineToFile((EvoSuiteFile) null, "fastjson.compatibleWithJavaBean");
      byte[] byteArray0 = new byte[8];
      byteArray0[3] = (byte) (-9);
      byteArray0[4] = (byte) (-9);
      byteArray0[6] = (byte) (-9);
      byteArray0[7] = (byte) (-9);
      IOUtils.decodeUTF8(byteArray0, 2, 2, iOUtils0.replaceChars);
      IOUtils.decodeBase64("fastjson.compatibleWithJavaBean");
      IOUtils.loadPropertiesFromFile();
      FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
      int int1 = (-591);
      // Undeclared exception!
      try { 
        IOUtils.getChars((long) (byte) (-9), (-591), iOUtils0.CA);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // -592
         //
         verifyException("com.alibaba.fastjson.util.IOUtils", e);
      }
  }
}
